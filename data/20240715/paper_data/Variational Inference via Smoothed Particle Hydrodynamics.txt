Variational Inference via Smoothed Particle
Hydrodynamics
Yongchao Huang ∗
May 2024
Abstract
A new variational inference method, SPH-ParVI, based on smoothed
particle hydrodynamics (SPH), is proposed for sampling partially known
densities(e.g. uptoaconstant)orsamplingusinggradients. SPH-ParVI
simulatestheflowofafluidunderexternaleffectsdrivenbythetargetden-
sity;transientorsteadystateofthefluidapproximatesthetargetdensity.
The continuum fluid is modelled as an interacting particle system (IPS)
via SPH, where each particle carries smoothed properties, interacts and
evolves as per the Navier-Stokes equations. This mesh-free, Lagrangian
simulationmethodoffersfast,flexible,scalableanddeterministicsampling
andinferenceforaclassofprobabilisticmodelssuchasthoseencountered
in Bayesian inference and generative modelling.
Keywords—Smoothedparticlehydrodynamics;interactingparticlesystem;sam-
pling; variational inference.
1 Introduction
Particle-based simulations are a type of discretization methods which are used in
modelling fluids [48, 76, 61, 54, 9, 2, 69], solids [10, 34, 4] and their interactions
[55,24]. TheyiterativelytrackparticlemotionsviaNavier-Stokesapproximations,and
offerapproximate,interactivesimulationswithfastspeed,whichprevailsincomputer
graphics [46, 60], computer games [22] and interactive applications [54]. Smoothed-
particle hydrodynamics (SPH), a computational method which employs particles to
simulatefluidflows,fallsunderthiscategory1. Itemergesinrecentyearsasapopular
numericaltechniqueforsimulatingavarietyofproblemsarisinginfluiddynamics(e.g.
modeling incompressible and compressible flows [1]), gas and fire dynamics [45, 75],
astrophysics (e.g. simulating star formation [23, 49] and galaxy collisions [36]), and
engineering (e.g. simulating fluid-structure interactions [24], and modeling breaking
waves [68] and dam breaks [81]). It divides a fluid into a set of discrete, moving
particles;eachparticlecarriesphysicalpropertiessuchasmass,position,velocityand
∗Authoremail: yongchao.huang@abdn.ac.uk
1Theothertypeofdiscretizationmethodsbeingmesh-basedmethods.
1
4202
luJ
21
]IA.sc[
1v68190.7042:viXradensity. These properties are smoothed by a kernel function, which approximately
restores the continuum fluid.
SPH is a Lagrangian scheme 2 for computing smooth field variables such as den-
sity,pressure,velocityandforces[72]. SPHsimulationstartsbydistributingparticles
acrossthefluiddomain. Eachparticleisassignedinitialpropertiesbasedontheinitial
conditions (ICs) of the problem. At a given point, to estimate field quantities, SPH
uses properties of nearby particles, weighted by a smoothing kernel which measures
their influences. Particles flow under forces (accelerations) induced by, e.g. pressure
gradient, viscosity or external forces such as gravity or other body forces, following
Newton mechanics. Under certain conditions, e.g. presence of external and internal
forces such as viscous friction, they may reach an equilibrium state [49]. The com-
putational cost of SPH, as well as the accuracy, primarily depends on the number of
particles used 3.
SPH therefore provides a principled framework for modelling interacting particle
systems (IPS) as Newtonian fluids, which motivates its application for probability
density sampling and inference: if an external pressure or force filed is applied, par-
ticles will move to distribute as per the geometry of this external field. Inspired by
this, we apply the SPH principles and devise a particle-based variational inference
method, SPH-ParVI, which employs a target distribution or its gradient as external
pressure/forcefieldandproducesparticledistributionconformingtothetarget. These
samples, as represented by a transient or converged particle configuration, can then
usedfortaskssuchasinferringstatisticsofthetargetquantityandmakingpredictions
with uncertainties.
2 Related work
SPH SPHfallsintothemesh-free,Lagrangianmethodswhicharedevelopedinlate
1970s and 1980s [46, 60]. Gingold and Monaghan [23] developed the SPH method,
whichisapplicabletoaspaceofanarbitrarynumberofdimensions,andapplieditto
avarietyofpolytropicstellarmodels. Monaghan[50] extended SPHtodealwithfree
surface incompressible flows. Stam and Fiume first applied SPH to simulate gas and
fire phenomena [75]. Desbrun and Cani [10] developed an elastic SPH approach for
deformablesolids. Mu¨lleretal. appliedSPHtosimulatefluidswithfreesurfaces[54],
Keiser et al. [34] applied SPH for animating both solids and fluids. Some variants
of SPH, e.g. the corrective Smoothed-Particle Method (CSPM) [8, 7] and modified
CSPM method [82], have been proposed, particularly to address the issue of particle
inconsistency [41, 83, 12, 40, 70, 84] which impacts SPH accuracy. A kernel gradient
free (KGF) SPH method was proposed by Huang et al. [27, 28]. A comprehensive
introduction of the SPH method can be found in [51]; insightful summaries of its
applications can be found in e.g. [3, 77, 69, 1, 56].
Sampling methods Sampling from a prescribed distribution, either fully or par-
tiallyknown,isnoteasy[17]. Ifweknowthefullpdf,manystatisticalsamplingmeth-
odscanbeusedtogenerate(quasi)samples. Forexample,inversetransformsampling
2SPHdiscretizestheNavier-Stokesequations. Thesmoothingkernelspreadstheproperties
ofeachparticleoveracontinuum,itisthusaninterpolationmethodforparticlesystem[22].
ExistenceanduniquenessofsolutiontotheNavier-Stokesequationscanbefoundine.g. [19].
3Other factors impacting the accuracy and computational intensity include the chosen
smoothingkernel,thediscretizationscheme,stepsize,etc.
2[11], rejection sampling [78], importance sampling [33], Quasi-Monte Carlo methods
(QMC)[58],etc. Approximateinferencemethodsprovideapathwaytoproduce(quasi)
samples, these include Markov chain Monte Carlo (MCMC) and variational inference
(VI) methodologies. MCMC methods such as Metropolis–Hastings (MH) sampling
[47], Gibbs sampling [20], Langevin Monte Carlo (LMC) [66], Hamiltonian Monte
Carlo (HMC) [14], slice sampling [57], etc, are commonly used in sampling complex
geometries. VI methods such as mean-field VI [32], stochastic VI [26], black-box VI
[63], variational autoencoders (VAEs) [35], etc, are widely used in many applications
[32,67]. Particle-basedVI(ParVI)methodssuchasSteinvariationalgradientdescent
(SVGD) [43], Sequential Monte Carlo (SMC) [13], particle-based energetic VI (EVI)
[79], etc, gain popularity due to their efficiency and less suffering from curse of di-
mensionality. Some of these sampling algorithms utilise the original pdf or up to a
constant (i.e. gradient-free), e.g. slice sampling and the MH method, while others,
e.g. HMC,LMCandmostVImethods,utilisethegradientinformationtoguidesam-
pling (i.e. gradient-based). Using only gradients enables sampling and inference from
an un-normalised, intractable densities which are frequently encountered in Bayesian
inference; however, it also increases computational burden.
Conventional particle-based variational inference (ParVI) methods, e.g. SVGD
[43], SMC [13], EVI [79], etc, evolve a set of interactive particles towards forming the
target geometry by explicitly or implicitly minimizing certain discrepancy measure
(e.g. KLdivergence),basedonstatisticalprinciples(e.g. theStein’sidentity). Purely
physical simulation based approaches, e.g. electrostatics-based ParVI (EParVI [30]),
are recently proposed for variational inference. SPH, in particular, has not been ap-
pliedinprobabilisticmachinelearningsuchasBayesianinference. Inthefollowing,we
describethefundamentalprinciplesofSPHanddemonstratehowitcanbeappliedto
statisticalsamplingandinference; experimentstovalidatetheproposedmethodology
will be presented in future work.
3 SPH-based sampling: methodology
The SPH fluid model InSPH,particlesinterpolateacontinuousfunctionf(r),
where r is the position, via a smoothing kernel:
M
f(r)=(cid:88)m
jf(r )K(|r−r |,h) (cc.Eq.19)
ρ j j
j
j=1
where M is the total number of particles used, m and ρ are the mass and density
j j
of the particle j, respectively. The smoothing kernel 4 K(r ,h), as shown in Fig.1,
ij
acceptsthedistancer =|r −r |asinputandcomputestheweightofinfluenceofthe
ij i j
contributingparticlej onparticlei,hisasmoothinglengthparameterwhichroughly
defines the radius of influence, see Appendix.D for some examples. The function
f(r) being smoothed can be physical quantities such as density, pressure, force, etc.
The SPH formulation in cc.Eq.19 will be used to approximate these quantities in the
Navier-Stokes equations governing fluid motion.
4InCFDliterature,thesmoothingkernelisdenotedbyW;hereweuseK tobeconsistent
with covariance function used in statistics literature. Note in general kernels used in SPH
arestationaryandisotropic(orhomogeneous)-itdependsontherelativepositionofitstwo
inputs,andnotontheirabsolutelocations[21].
3Figure 1: Illustration of the smoothing kernel (figures from [56]).
SPH formulation of the Navier-Stokes equations Here we present the
SPHdescriptionoftheinteractiveparticlesystemforweaklycompressiblefluids. More
details, as well as the SPH formulation for incompressible fluids, can be found in Ap-
pendix.C.TheNavier-Stokesequationsforweaklycompressiblefluidscanbeexpressed
in Lagrangian form as [3, 39]:
dρ
=−ρ∇·v
dt
(cc.Eq.24)
dv 1
=− ∇P +fvis+fext
dt ρ
where v is the velocity, ρ the density, P the pressure, fvis the viscous force, and
fext external body forces (e.g. gravitational acceleration 5). ∇ denotes derivative, ∇·
denotes divergence - both with respect to the coordinates (i.e. spatial derivatives).
Thefirstequationincc.Eq.24istermedcontinuity equation whichrepresentscon-
versation of mass, the second is the momentum equation which describes the motion
of a fluid. Intuition behind the continuity equation is the continuous mass flow (a
strong, local representation of the conservation law); the intuition for the second be-
ing,changesinvelocity(i.e. theacceleration)ofafluidelementisinducedbypressure
gradient, internal friction (i.e. the resistance force induced by viscosity), and body
forces. It essentially echoes the Newton’s second law.
cc.Eq.24 give the governing equations for a continuum fluid; with many benefits
6, here we use the SPH method which divides the fluid into particles, and applies the
SPHsmoothingprincipletospatiallysmooth7 thephysicalquantitiessuchasdensity
ρ, pressure P, and forces fvis and fext at any transient time:
5Strictlyspeaking,theRHSitemsareaccelerationsanotforcesf,theyareconnectedvia
a = f/m where m is the mass. a = f when m = 1.0. We use force over unit mass in this
contexttoimplythesourceofaction.
6Of course one is free to use any discretization scheme, e.g. grid-based finite element or
difference methods, to solve these PDEs. SPH, however, features less computational cost,
easy model implementation and parallelization. An incomplete list of SPH benefits can be
foundinSection.5.
7SPH assumes the approximated function is sufficiently smooth between fluid elements
(e.g. particles).
4M
dρ i =(cid:88) m (v −v )T ·∇K +δ (Continuity equation)
dt j i j ij i
j=1
(cc.Eq.28)
M (cid:18) (cid:19)
dv i =−(cid:88) m P i + P j ∇K +fvis+fext (Momentum equation)
dt j ρ2 ρ2 ij i
j=1 i j
where δ is an artificial density diffusion term used to limit spurious density fluctua-
i
tions,seeEq.29inAppendix.C.fvisandfextaretheinternalviscousforceandexternal
i
body forces, respectively. The viscous force fvis can have different formulations, see
i
later Eq.6 and Eq.5. The continuity equation is a scalar-valued equation while the
momentum equation can be vector-valued as v, ∇K, and f can be vectors.
The internal pressure P , induced by change of density during fluid flowing, can
i
be calculated using the equation of state (EoS):
c2ρ ρ
P = 0 0[( i)γ−1] (Equation of State) (cc.Eq.25)
i γ ρ
0
wherec isareferencespeedofsoundinthefluid,ρ thereferencedensity,andγ the
0 0
fluid polytropic index. One observes that, the internal fluid pressure is proportional
to local fluid density variations.
Starting from some initial conditions (ρ0,r0,v0), cc.Eq.28 can be numerically
i i i
solved using a leapfrog (or Runge-Kutta) time integrator which alternatively updates
the position, velocity and density of a particle i within a small time step ∆t:
∆t
v(t+1)/2 =vt+at ,
i i i 2
rt+1 =rt+v(t+1)/2∆t,
i i i
vt+1 =v(t+1)/2+at+1∆t , (cc.Eq.30)
i i i 2
M
ρt+1 =ρt+[(cid:88) m (vt+1−vt+1)T ·∇K +δ ]∆t
i i j i j ij i
j=1
(cid:18) (cid:19)
wherethesuperscripttdenotesthetimestep,a =dv /dt=−(cid:80)M m Pi + Pj ∇K +
i i j=1 j ρ2 ρ2 ij
i j
fvis+fext is the acceleration (the RHS of the momentum equation). Calculation of
i
the density ρ can be simplified as the weighted mass of nearby particles:
M
ρt+1 =(cid:88) m K(|rt+1−rt+1|,h) (1)
i j i j
j=1
which can be erroneous for equally distributed surface particles as they have less
neighbours [3].
SPH for sampling TheaboveSPHproceduresimulatesthefluidflowwithanin-
teractingparticlesystem(IPS)8.Thisideacanbeadaptedtoproduce(quasi)samples
8Notethat,particlesinteractthroughthesmoothingkerneltoensurecontinuumphysical
quantities; they are not real particles in the sense that they do not collide - they might be
overlappedthough.
5fromatargetdensity: theparticlescanbeconceivedassamplesatatransientorsteady
stateachievedunderexternalconditions(e.g. appliedexternalpressureorforcefields,
boundaryconditions,etc). Torealisethis,wecanapplyatargettime-invariant,exter-
nal pressure (scalar) or force (vector) field in the space, i.e. adding Pext(r)∝1/p(r)
or fext(r)∝∇p(r) to the momentum equation 9, and use SPH dynamics to evolve a
setofparticlestowardatransientorequilibriumdistributionwhichapproximatesthe
desired, target distribution p(r). We expect that, the clustering of particles, as mea-
sured by their densities, would distribute proportional to the external field applied.
Physically, starting from any initial configuration, particles, if dominantly driven by
externalpressureorforces,shallmovetowardsthehigh-probabilityregionsofthetar-
getdistributionbydesign10. Assuch,weprovidethetwoformulationsoftheproposed
SPH-ParVI method in the following.
Representing target density as external pressure field The first design
is applying an time-invariant, external scalar-valued pressure field Pext(r) := 1/p(r)
orPext(r):=−logp(r),wherep(r)isourtargetdensity(knownuptoaconstant11),
to the fluid particle system, and set fext =0 (or one can conveniently leave fext=g).
We therefore re-write the momentum equation as:
M (cid:18) (cid:19)
dv i =−(cid:88) m P i + P j ∇K +fvis (2)
dt j ρ2 ρ2 ij i
j=1 i j
where the overall point pressure (scalar-valued, as a function of coordinates) acting
at particle i becomes P = Pint+Pext, which is the sum of the internal point pres-
i i i
sure Pint = c2 0ρ0[(ρi)γ −1] and external point pressure Pext = 1/p(r ) or Pext =
i γ ρ0 i i i
−logp(r ).
i
We are thus simulating a viscous fluid flowing in an unbounded space with free
boundary condition, driven dominantly by an external pressure field equaling the the
reciprocal of the target distribution (possibly partially known). No other external
force presents. Equating the pressure to the inverse (or negative) density is based
on the intuition that, small pressure regions shall attract more particles. This design
is particularly useful for sampling from a partially known density such as intractable
Bayesianposterior. Notethat,theinternalpressure,resultedfromcc.Eq.25,servesas
arepulsiveforcewhichisnecessarywhenmodellingIPS(e.g. formaintainingparticle
diversity and avoiding mode collapse); it also results in higher pressure in higher
particle density regions, and yields bigger repulsive force, which may be undesirable
for inferring the target.
Representing gradient of target density as external force field The
second design is to apply an time-invariant, external vector-valued body force field
fext :=∇ p(r)| orfext :=∇ logp(r)| actingoneachparticle12,whichrevises
i r r=ri i r r=ri
the momentum equation as:
9Theintuitionbehindisintuitive: particlesshallclustermoreinlowerpressureandlarge
forceregions,yieldinghighdensities.
10Convergence, andpotentialuniqueness, ofthesteadystategeometrydemandsmorerig-
orousproofthough.
11This is the case in many Bayesian posterior models, resulting from the intractability of
thenormalisingconstant.
12Thevector-valued∇rlogp(r)istermedscore field.
6M (cid:18) (cid:19)
dv i =−(cid:88) m P i + P j ∇K +fvis+∇ logp(r) (3)
dt j ρ2 ρ2 ij i r i
j=1 i j
wheretheinternalpressureP remainsthesameasincc.Eq.25. Wearethussimulating
i
a viscous fluid subject to external body forces equaling the gradients of the target
density. This formulation is useful when the gradient information of p(r) or logp(r)
areknown,e.g. learnedviascore-matching[31],andisparticularlyrelevantinscenarios
such as diffusion modeling [25, 74, 29].
In both designs, the target density p(r) doesn’t need to be exact; in fact, in most
VI problems, p(r) is partially known (up to a constant or only know gradients). One
canputascalingmultiplierαattachedtothetargetdensityorscoretoproportionally
amplify its magnitudes; the magnitudes of the external pressure or force field have
impact on the clustering of the particles - large magnitudes can accelerate particle
movement, induce oscillations and possibly overlapped particles, while small magni-
tudes lead to slow convergence. Note that, in both cases, to complete the physics,
onecanconvenientlyaddagravitationalaccelerationgtotheRHSofthemomentum
equation.
Aswehavefreeboundarycondition,andthereisnoinfloworoutflow,theparticle
system shall finally achieve equilibrium due to internal friction (i.e. the viscous force
fvis), and the stationary distribution of particles, as well certain transient distribu-
tions, approaches the target distribution 13. The SPH sampling procedure, using the
externalpressureasanexample,isdescribedinAlgorithm.1;thecaseofexternalforce
is devised in Algorithm.2 in Appendix.E.
13Although physically intuitive, this asymptotic behaviour and the invariant distribution
statementneedsomerigorofmathematicalproof.
7Algorithm 1 SPH-based sampling (target density as external pressure field)
• Inputs: a queryable target density p(r) with magnitude amplification con-
stant α, number of particles M, particle (density) dimension d, initial pro-
posaldistributionp0(r),totalnumberofiterationsT,stepsize∆t,smooth-
ing kernel K(r,h) with length-scale h. Particle mass mi,i=1,2,...,M. Ref-
erence density ρ0, reference speed of sound in the fluid c0, fluid polytropic
index γ, dynamic viscosity µ. Density diffusion parameter a .
d
• Outputs: Particles located at positions {ri ∈ Rd}M
i=1
whose empirical dis-
tribution approximates the target density p(r).
1. Initialise particles [O(M)].
Draw M m-dimensional particles r0 = {r0}M from the initial proposal
j j=1
distribution p0(r). Initialise (ρ0,r0,v0) for i=1,2,...,M.
i i i
2. Update particle positions.
For each iteration t=1,2,...,T, repeat until converge:
(1) Compute the density ρt for each particle i=1,2,...,M (Eq.1 or cc.Eq.30)
i
[O(M2)]:
M M
ρt
i
=(cid:88) mjK(|rt i−rt j|,h), orρt
i
=ρt i−1+[(cid:88) mj(v it−v jt)T ·∇Kij+δ it]∆t
j=1 j=1
where δ it=a dhc0(cid:80)M j=1mjψ ρit j tT ·∇Kij and ψ it
j
=2(cid:18) ρ ρt j
t
−1(cid:19) |rt−rr tt i |− 2+rt j 0.1h2.
j i i j
(2) Query p(rt) and compute pressure Pt for each particle i [O(M)]:
i i
Pt=
c2 0ρ0 [(ρt
i)γ−1]+1/[αp(rt)], orPt=
c2 0ρ0 [(ρt
i)γ−1]−αlog[p(rt)+ϵ]
i γ ρ0 i i γ ρ0 i
where ϵ is a small value for preventing division by zero.
(3) Compute the overall force Ft acting on each particle i (Eq.2) [O(M2)]:
i
Ft
i
=−(cid:88)M mj(cid:32) ρP
ti
2t
+
ρP
tj
2t(cid:33)
∇Kij+f ivis,t
j=1 i j
where fvis,t is calculated using Eq.5 or Eq.6.
i
(4) Update (rt,vt) (cc.Eq.30 simplified) [O(M)]:
i i
Ft
vt+1=vt+ i∆t, rt+1=rt+vt+1∆t
i i mi i i i
3. Return thefinalconfigurationofparticles{rT}M andtheirhistogramand/or
j j=1
KDE estimate for each dimension.
8Practical implementation Based on Algo.1, in order to optimise efficiency, at
each iteration t, following procedure can be implemented:
• Step 1: compute and cache distance matrix Rt (symmetric, with entries
M×M
rt = |rt −rt|), kernel value matrix Kt (symmetric, with entries kt =
ij i j M×M ij
K(|rt −rt|,h)), kernel gradient tensor ∇Kt (asymmetric, with entries
i j M×M×d
∇kt =∇K(|rt−rt|,h)).
ij i j
• Step2: computeparticledensities{ρ(rt)=(cid:80)M m K(|rt−rt|,h)}M foreach
i j=1 j i j i=1
particle, and query target value {∇ logp(rt)}M at each particle position.
r i i=1
• Step3: retrievedensitiesandtargetvalues,computeforeachparticletheoverall
pressure{Pt =Pint,t+Pext,t}M , wherePint,t = c2 0ρ0[(ρt i)γ−1]andPext,t =
i i i i=1 i γ ρ0 i
−αlog[p(rt)+ϵ].
i
• Step 4: retrievedensities,pressuresanddistances,computeoverallforceacting
(cid:18) (cid:19)
oneachparticle{Ft =fpre,t+fvis,t}M ,wherefpre,t =−(cid:80)M m Pit + Pjt ∇K ,
i i i i=1 i j=1 j ρt2 ρt2 ij
i j
fvis,t =(cid:80)M µ mjvt∇2K(|rt−rt|,h)orfvis,t =m η (vit−vjt)T·(rt i−rt j) ∇K(|rt−
i j=1 ρt ρt j i j i j ij |rt−rt|2+ϵ·h2 i
j j i j
rt|,h).
j
• Step5: retrieveforces,updatevelocitiesandpositions{vt+1 =vt+Ft i∆t, rt+1 =
i i mi i
rt+vt+1∆t}M .
i i i=1
4 Practical considerations
Viscous force Viscosity is a measure of the fluid’s resistance to deformation or
flow. In simpler terms, it quantifies how ’sticky’ a fluid is. Higher viscosity means
the fluid flows less easily. Viscosity is essential for simulating realistic fluid behavior,
suchassmoothingoutvelocitygradientsandpreventingexcessiveturbulence. Viscous
force represents fluid’s internal friction which results in resistance of relative motion
between particles and slows down particles (so that the simulation can evolve to a
steady state). Artificial viscosity can also be introduced to improve the numerical
stability and to allow for shock phenomena [51, 3].
When a solid or fluid is subject to shear force, the shear stress τ is proportional
to the spatial gradient of velocity 14:
dv
τ ∝
dr
the ratio is the dynamic viscosity or absolute viscosity µ, i.e. τ = µdv. µ negligibly
dr
depends on pressure, but may have different formulations - for liquids it decreases
with temperature, for gases it increases with temperature. For fluids, the kinematic
viscosity or momentum diffusivity is often used:
µ
ν =
ρ
14In this context, we focus on Newtonian fluid whose shear stress is proportional to the
shear strain rate. Other fluids which exhibit non-linear relation between shear stress and
strainrateincludepsedoplasticandplasticfluids.
9Kinematicviscosityisameasureofafluid’sresistancetoflowanddeformationdueto
internalfriction. Again,forgasesitincreaseswithtemperature,forliquidsitdecreases
with temperature. The viscous force fvis can be calculated as:
1 µ 1µ
fvis =ν∇2v+ ν∇(∇·v)= ∇2v+ ∇(∇·v) (4)
3 ρ 3ρ
where ∇2v is the Laplacian of the velocity vector. The term fvis =ν∇2v represents
i
the diffusion of momentum due to viscosity, which smooths out velocity gradients
within the fluid. It is essential for modeling the dissipative effects of viscosity in fluid
flow simulations, ensuring that the simulation accounts for the internal friction that
resists the motion of fluid layers relative to each other. The second term ∇·v is the
divergenceofthevelocityfieldwhichdescribestherateatwhichthefluidisexpanding
orcontracting. Therearealsolinearformoftheviscousforce,seee.g. Eq.6,assuming
the viscosity coefficient ν doesn’t change with temperature. Also, unless for strongly
compressible fluids in which the bulk viscosity term 1µ∇(∇·v) is needed, one can
3ρ
safely ignore the last term 1µ∇(∇·v), which gives fvis =ν∇2v= µ∇2v. Assuming
3ρ ρ
constant ν, and apply the SPH smoothing principle, which gives [22]:
M
fvis =ν∇2v(r
)=ν(cid:88)m
jv ∇2K(|r −r |,h) (5)
i i ρ j i j
j
j=1
or its symmetric variant:
M
fvis
=ν(cid:88)m
j(v −v )∇2K(|r −r |,h) (5b)
i ρ j i i j
j
j=1
Alternatively, [51, 3] used the following linear viscous force:
(cid:40)(cid:80) m η (vi−vj)T·(ri−rj)∇K(|r −r |,h) if vT ·r <0
f ivis = j j ij |ri−rj|2+ϵ·h2 i j ij ij (6)
0 if vT ·r ≥0
ij ij
where v = v −v , with v ·r > 0 being equivalent to ∇·v > 0. The viscous
ij i j ij ij
coefficient η is:
ij
2αhc
η = s
ij ρ +ρ
i j
inwhichtheviscosityconstantαisbetween0.08and0.5asusedin[3]. Thetermϵh2
is introduced to avoid singularities for |r | = 0, with ϵ = 0.01. c denotes the speed
ij s
of sound in the fluid. To be consistent with [39] and [3], the author suggests c =c
s 0
where c is the reference speed of sound in the fluid in Eq.25.
0
Surface tension Surface tension plays an important role in realistic fluid anima-
tions [3], particularly for large curvature geometries (which mapping to our inference
problem refers to complex density shape). The main issue is due to the fact that,
moleculesinafluidexperienceintramolecularattractionforces,andmoleculesinthese
regions have too few neighbours. For internal particles, the attraction forces are bal-
anced, resulting no net acceleration; for particles on the edge, it is unbalanced and
non-negligible. There are several surface tension models to handle surface tension in
SPH[52,3]. Forexample,oneofthese,whichrequirescalculatingthesecondderivative
of a color field, estimates the surface tension force as [22]:
10M
fsur
=σκn=−σ∇(cid:88)m
j∇2K
n
(7)
ρ ij|n|
j
j=1
where σ is the surface tension coefficient. κ is the curvature of the surface. n is the
normal vector to the surface.
Regularisation To prevent mode collapse, i.e. local particles collapsing into a
single mode point, and encourage particle diversity, one can add a density-based reg-
ularization (repulsive) force to the RHS of the momentum equation:
freg
=(cid:88)M
m
∇K(|r i−r j|,h)
(8)
i j ρ +ϵ
i
j=1
where ϵ is a small number to prevent division by zero.
Smoothinglength Thesmoothinglengthhbalanceslocalandglobalsmoothness.
ThepowerofSPHliesinitsadaptiveproperty,i.e. theresolutionofaSPHsimulation
canbeadjustedbasedonlocalconditionssuchasdensity. Wecanassigntime-variant,
particle-bespoke (location adaptive) smoothing lengths, allowing particles to adapt
itself based on local conditions: (1) Time-varying annealing scheme. In a preliminary
experiments, we find that if a constant h is used, however, the overall particle shape
expands and contracts cyclically over time. This oscillating behaviour, which is not
computationally efficient, can be alleviated by using a time-varying h. (2) Spatially-
varying h. In a dense region where particles are close to each other, h can be made
small, which gives high spatial resolution; in low-density regions where particles are
far apart, h can be increased so that particles won’t get trapped. This also optimises
the computational efforts.
Step size of time Choosing an appropriate time step is critical for numerical
stability and convergence [3]. The following step size, derived based on the Courant-
Friedrichs-Lewy(CFL) condition, is suggested [3]:
(cid:18) (cid:19)
h h
∆t=min 0.25· ,0.4· (9)
|fext| c ·(1+0.6α)
min s
wherefext istheminimumexternalforcesamongallparticles,hthesmoothinglength,
min
andαtheviscosityconstant(0.08∼0.5asusedin[3]). c denotesthespeedofsound
s
in the fluid.
Boundary conditions Fortheinferenceproblem,wesimulateparticlemovement
in a free-boundary space, no boundary conditions (BCs) are considered to constrain
particle movements. Realistically, boundaries exert a force on particles colliding with
aboundary;appropriateboundaryconditions,ifdesiredbytheinferenceproblem(e.g.
inferenceoveramanifold),canbeinsertedtoensurethattheparticlesbehavecorrectly
attheedgesofthesimulationdomain. Thesemightinvolvereflectingparticlesatsolid
boundaries or allowing them to interact with boundaries representing inflow/outflow
conditions[51,3]. BCs,aswellasinitialconditions(ICs),canbeaccountedforbye.g.
applying a constant or time-varying external pressure or force field.
11Optimal state Due to the oscillating behaviour, the optimal state, which is ex-
pected to match the target distribution, doesn’t necessarily need to be the steady
state. We need some notion of dispersion measure which helps define the optimal
configuration, ideally we would like particles to cluster around multiple modes, and
the optimal configuration may correspond to the step at which the within-mode dis-
tances are small while between-mode distances are large (which is similar to optimal
clustering criteria). In experiments, one can track the average density (as a simple
measure of particle dispersion), and consider the particle configuration at maximum
average density to give optimal approximation.
Computational complexity As noted in Algo.1 (also Algo.2), the computa-
tional complexity per iteration is O(M2) where M is the number of particles used,
andtotaleffortoverT stepsisO(M2T). Thecomplexityincreaseslinearlywithextra
force terms added (e.g. regularisation). As pairwise distances are used in calculat-
ing the kernel and its gradient values, they can be cached. For example, in each
step, we can pre-compute pairwise distances and the gradient of the kernel once, and
then reuse these values for smoothing densities, pressures, and forces. These efforts,
as described in the practical implementation section following the algorithm, avoid
redundant calculations and improve efficiency.
5 Discussions
As accuracy and efficiency of the SPH-ParVI method relies on the SPH technique,
here we touch some of the topics related to SPH and beyond.
Advantages of SPH-ParVI We identify following advantages of using SPH for
sampling: (1) Advantages of SPH. This mesh-free particle method enjoys some
nice properties of both continuum and fragmentation. Due to its Lagrangian nature,
SPH has many advantages over traditional mesh-dependent Eulerian methods [72].
For example, mesh-based methods may suffer from mesh distortions which affect the
numerical accuracy when simulating large material deformations. Also, advection is
performed exactly and therefore material history information can be tracked free of
numericaldiffusion. Further,themesh-freecharacteristicsignificantlysimplifiesmodel
implementation and its parallelization. (2) Physics-based, flexible and expres-
siveinteractionmodelling. SPH-ParVImodelsaninteractingparticlesystem(IPS)
based on fluid mechanics that preserve mass, momentum and energy. Different types
of interactions can be accounted by flexibly introducing corresponding force/pressure
terms. (3) Computationally efficient. SPH works independently of any grid (e.g.
finite-difference methods), the Lagrangian formulation is more efficient than mesh-
based, Eulerian methods - interactions and derivatives are all evaluated in a coordi-
nate system attached to a moving fluid element (i.e. the particle) [49]. Efficiency is
also improved via evaluating nearby physical quantities through the smoothing ker-
nel: unlike finite element method which solves systems of equations, SPH computes
continuum physics (e.g. density, pressure) from weighted contributions of neighbour-
ing particles. The kernel weighted contrition from each particle saves computational
effort by excluding the relatively minor contributions from distant particles. (4) De-
terministic. SPH-ParVI employs deterministic physical laws to generate samples,
the results are trackable and reproducible. (5) Flexible and adaptive. It is flex-
ible to devise location and time dependent resolution in particle methods. SPH’s
12particle-centricapproachensuresthatcomputationalresourcesareconcentratedinre-
gions where the fluid is present: it automatically adapts the resolution based on the
particle distribution, providing higher resolution in regions with more particles (e.g.
regionsofhigherdensity). Onecanalsodesignanadaptive(e.g. annealing)smoothing
length h to improve sampling quality. Besides, the two formulations of SPH-ParVI
provides the flexibility for sampling from partially known densities or from gradients.
(6)Handling complex geometries. Mesh-freeParVImethods,e.g. SVGD[43,29],
can handle complex (e.g. large curvature, multi-modal) geometries; for physics-based
ParVI methods such as EParVI [30] and SPH-ParVI, this can be enhanced by intro-
ducing boundary conditions. (7) Scalable. SPH method can easily be extended to
dealwithalargevarietyofcomplexphysicalmodels[49]. Unlikemesh-based,Eulerian
methods(e.g. EParVI[30]),thisLagrangianmethodsufferslessfromcurseofdimen-
sionality. The flexibility, computability, speed and expressiveness enable SPH-ParVI
scalable to complex geometries and large data sets.
Disadvantages of SPH-ParVI We identify following disadvantages of using
SPH for sampling: (1) Disadvantages of SPH 15. The vanilla SPH method can
suffer from slow numerical convergence due to loss of particle consistency [72]. Math-
ematically, consistency refers to how well the discretized equations approximate the
exact differential equations. Particle inconsistency 16 [72] arises due to two types
of approximations (discretizations) in standard SPH formulation: kernel approxima-
tion and particle approximation. Corrective strategies and improved SPH schemes
[38, 44, 5, 42, 41, 82, 16, 15, 65] to restore particle consistency, e.g. the corrective
smoothedparticlemethod(CSPM)[8,7],havebeenproposed. Also,settingboundary
conditions(BCs)inSPHismoredifficultthangrid-basedmethods,asnear-boundary
particles change over time [69]. Further, inaccuracies can be induced due to e.g. loss
of symmetry and constant density [22]. (2) Tuing hyper-parameters. Key hyper-
parameters used in SPH-ParVI are the smoothing length h, the target amplification
constant α, and the discretization time step ∆t. h balances local and global smooth-
ness, while α and ∆t can affect convergence speed and accuracy. Both have impact
ontheevolutionbehaviouroftheIPS:inpreliminaryexperiments,wefindthatgroup
of particles can exhibit contraction and expansion and oscillating behaviours accord-
ing to different values of h, α and ∆t. Therefore, one may need a smart design (e.g.
an adaptive annealing scheme) of the hyper-parameters when inferring complex, e.g.
multi-modal, densities to achieve good performance.
Mesh-based vs meshless There are two approaches for specifying a flow field:
LagrangianandEulerian. Bothapproacheshavebeenlongusedincomputergraphics
[3]. Mesh-based approaches such as mass-spring systems, finite element, finite differ-
ence, finite volume methods are most widespread. Mesh-free methods, particularly
particle systems, are increasingly popular for modelling elasto-plastic materials and
fluids [34].
15OtherSPHconcernsincludeitslimitedaccuracyinmulti-dimensionalflowmodellingdue
tonoise,instabilitiesacrosscontactdiscontinuities(e.g. Kelvin-Helmholtzinstabilities),high
artificialviscosity,etc.
16Four sources of particle inconsistency have been identified [64, 84, 71, 72]: (1) Kernel
supporttruncationduetothepresenceofaphysicalboundary; (2)irregulardistributionsof
particles; (3) spatially varying smoothing lengths in adaptive calculations; (4) use of small
numbersofneighborsperparticleinsimulationswithcompactlysupportedkernels.
13Eulerianspecificationfocusesonspecificlocationsinthespacethroughwhichthe
fluidflowsastimepasses. Euleriansimulationsuseafixedmeshandcomputationsare
performed on a stationary grid - each cell must be computed regardless of it contains
significantfluidpropertiesornot,andthecostisthereforelinkedtothetotalnumber
ofcells. Eulerianapproachescanhandleinflowandoutfloweasilybysettingboundary
conditions [3].
TheLagrangianspecificationlooksatfluidmotionbyfollowinganindividualfluid
parcel as it moves through space and time. Lagrangian simulations are in general
mesh-free and focus on simulation nodes that may move following the velocity field.
Lagrangian approaches are more flexible for time-varying simulations and are easy to
implement. They are more efficient than grid-based simulation methods, in terms of
memory and computation time [3]. Also, mesh-free methods can handle topological
changes (e.g. splashes [59]) for fluid-like materials, without the need of re-meshing.
However, mesh-free methods require the definition of an implicit or explicit surface,
and fluid surfaces are smooth due to surface tension. Also, Lagrangian approaches
generally require search for neighbours.
SPHisaparticle-based,mesh-freeLagrangianapproach. InSPH,particlescluster
inregionsofhighfluiddensity,andyieldhighresolutionintheseregions;whileinlow
densityregions,thedistributionofparticlesismoresparse. Itallocatesmoreparticles
tofocusonareasofinterest(i.e. wherethefluidisdenser),whiletheresolutionofgrid-
basedmethodsisuniformacrosstheentiregrid. Further,itisstraightforwardforSPH
to calculate density-related metrics, as each particle directly represents a portion of
thefluidmassanditsdensity;grid-basedapproaches,however,mayrequireadditional
efforts, e.g. interpolation, to estimate the density within a cell, which is less efficient
and accurate, especially in regions with low fluid content.
Compressible vs incompressible fluids Somesubstancessuchasgasandsoft
materials (e.g. elastomers, biological tissues) are compressible or partially compress-
ible. For example, the volume of gas can change under pressure due to the usually
large empty space between gas particles; liquids are generally incompressible as their
molecular structure is compact. Implausible SPH simulations due to compressibility
can be resulted [34, 6, 3]. Enforcing incompressibility for particle methods is a chal-
lengingproblem[3];itcanbeachieved,atthecostofsolvingthePoissonequation,by
projection approaches [61] which are based on pressure correction.
The Navier-Stokes equations for an incompressible fluid (e.g. water) require the
densitytobeconstant, whichforSPHmaintainingaconstantdensityisdifficult[22].
The non-constant density makes the SPH method less accurate in modelling incom-
pressible fluids. While SPH provides speedy and realistic-looking fluid simulation,
the density problem may block it from scenarios which require precision or accuracy
[22]. This,however,canbecompensatedbyusingastrongdensityrestoringforce(i.e.
pressure)[22]orusinganadaptivesmoothinglengthhtoenforceconstantdensity[3].
Alternatively, weakly compressible formulation with very low density fluctuations, as
used in this context, has been developed [3] based on the Tait equation.
Inference by physical simulation ThisSPH-basedinferencemethodfallsinto
aclassofphysics-inspired,approximateinferencemethodswhichusephysicalprocess
to generate samples, e.g. Hamiltonian Monte Carlo (HMC), Langevin dynamics [66],
electrostatics-based ParVI [30], etc. This opens a new door for variational inference
(VI):parametersaretracedthoughaprincipledphysicalsimulationwhoseintermedi-
14ateorterminalstategivesthetargetdistribution. Itisdifferentfromsimulation-based
inference (SBI) in that, inference by simulation (IBS) performs physical simulations
over the inference parameters, while SBI (e.g. ABC) performs statistical simulations
over a quantity given the parameters.
Error sources The are two types of approximation errors in SPH [72]: kernel
approximation error and particle (discretization) approximation error. The former
is independent of particle distribution and replies on the smoothing length h; the
later originates from the discretization procedure and is a function of the number
of neighbours within the kernel support which depends on the actual distribution
of particles. [84] suggests that using small h and large number of neighbors [71,
18, 62] at the same time can reduce the overall error, improve SPH accuracy and
convergence, and achieve full particle consistency in the limit [64], at the cost of
increasing computational burden.
6 Conclusion and future work
Conclusion Thispaperpresentsthetheoreticalframeworkofanewphysics-based
sampling and variational inference method, SPH-ParVI. This method formulates a
sampling problem as a physical simulation process which configures a fluid from an
initialshape(priordistribution)toageometrythatapproximatesthetargetdistribu-
tion. The fluid is discretized as an interacting particle system (IPS) via the powerful
SPH method: particles carry interactive, smoothed properties and their movements
aredominantlydrivenbyexternaleffects. TwoformulationsoftheSPH-ParVImethod
areproposed: incorporatingthetargetdensity(ifdensityispartiallyknown)orgradi-
ent(ifonlygradientinformationareavailable)intotheSPHsimulationasanexternal
pressure or force field. This modified SPH method, with governing physics inheriting
the Navier-Stokes equations, provides fast, flexible, scalable and deterministic sam-
pling and inference for complex (e.g. multi-modal) and high-dimensional densities.
Future work Rather than re-inventing the physics, this preliminary work focuses
onbuildingaframeworkforapplyingtheSPHmethodtothestatisticalregime;experi-
mentalvalidationsaretobeincludedinafutureversion. Convergenceandpotentially
uniqueness of the steady state geometry after introducing external effects demand
rigorous mathematical treatment. Approximation errors, e.g. hypothetical and nu-
merical errors resulted from assumptions (e.g. linear viscosity) and discretization,
require formal analysis. Constrained inference, e.g. inference on a manifold, can be
realised by imposing boundary conditions. Probabilistic move can be inserted as an
Metropolis–Hastings step. Other SPH variants17 can be explored. Efficiency may be
improved by using Koopman operator for approximating the dynamics.
17For example, the corrective smoothed particle method (CSPM), finite particle method
(FPM), modified smoothed particle hydrodynamics (MSPH) have been invented to restore
SPHconsistencyandimproveaccuracyatanincreasedcomputationalcostandlossofnumer-
icalstability[72].
15References
[1] Smoothed particle hydrodynamics (sph) for complex fluid flows: Recent devel-
opments in methodology and applications. Physics of Fluids, 31(1):011301, 1
2019.
[2] M.Antuono,A.Colagrossi,S.Marrone,andD.Molteni. Free-surfaceflowssolved
bymeansofsphschemeswithnumericaldiffusiveterms. ComputerPhysicsCom-
munications, 181:532–549, 2010.
[3] MarkusBeckerandMatthiasTeschner. Weaklycompressiblesphforfreesurface
flows. In D. Metaxas and J. Popovic, editors, Eurographics/ ACM SIGGRAPH
Symposium on Computer Animation, pages 1–8. University of Freiburg, 2007.
[4] N.Bell,Y.Yu,andP.J.Mucha. Particle-basedsimulationofgranularmaterials.
InSCA’05: Proceedingsofthe2005ACMSIGGRAPH/EurographicsSymposium
on Computer Animation, pages 77–86, New York, NY, USA, 2005. ACM Press.
[5] J. Bonet and T.-S.L. Lok. Variational and momentum preservation aspects of
smooth particle hydrodynamic formulations. Computer Methods in Applied Me-
chanics and Engineering, 180:97–115, 1999.
[6] Robert Bridson, Ronald Fedkiw, and Matthias Mu¨ller-Fischer. Fluid simulation:
Siggraph2006coursenotes.InSIGGRAPH’06: ACMSIGGRAPH2006Courses,
pages 1–87, New York, NY, USA, 2006. ACM Press.
[7] J.K. Chen, J.E. Beraun, and C.J. Jih. Completeness of corrective smoothed
particle method for linear elastodynamics. Computational Mechanics, 24:273–
285, 1999.
[8] J.K. Chen, J.E. Beraun, and C.J. Jih. An improvement for tensile instability in
smoothed particle hydrodynamics. Computational Mechanics, 23:279–287, 1999.
[9] Simon Clavet, Philippe Beaudoin, and Pierre Poulin. Particle-based vis-
coelastic fluid simulation. In SCA ’05: Proceedings of the 2005 ACM SIG-
GRAPH/EurographicsSymposiumonComputerAnimation,pages219–228,New
York, NY, USA, 2005. ACM Press.
[10] MathieuDesbrunandMarie-PauleCani.Smoothedparticles: Anewparadigmfor
animatinghighlydeformablebodies. In6thEurographicsWorkshoponComputer
Animation and Simulation ’96, pages 61–76, 1996.
[11] Luc Devroye. Non-Uniform Random Variate Generation. Springer-Verlag, New
York, 1986.
[12] G. Di Blasi, E. Francomano, A. Tortorici, and E. Toscano. On the consistency
restoringinsph. InJ.Vigo-Aguiar,editor,Proceedings of the International Con-
ferenceonComputationalandMathematicalMethodsinScienceandEngineering,
pages 393–404. CMMSE, 2009.
[13] Arnaud Doucet, Nando de Freitas, and Neil Gordon. Sequential Monte Carlo
Methods in Practice. Springer, New York, 2001.
[14] Simon Duane, A. D. Kennedy, B. J. Pendleton, and D. Roweth. Hybrid monte
carlo. Physics Letters B, 195(2):216–222, 1987.
[15] M. Ferrand, D.R. Laurence, B.D. Rogers, D. Violeau, and C. Kassiotis. Unified
semi-analytical wall boundary conditions for inviscid, laminar or turbulent flows
in the meshless sph method. International Journal for Numerical Methods in
Fluids, 71:446–472, 2013.
16[16] M. Ferrand, D. Violeau, B.D. Rogers, and D.R.P. Laurence. Consistent wall
boundarytreatmentforlaminarandturbulentflowsinsph. InProceedingsofthe
6th International SPHERIC SPH Workshop, pages 275–282, 2011.
[17] Joseph J.K. O Ruanaidh; William J. Fitzgerald. Numerical Bayesian Methods
Applied to Signal Processing, page 244. Springer, 1st edition, 1996.
[18] R.Gabbasov,L.DiG.Sigalotti,F.Cruz,J.Klapp,andJ.M.Ram´ırez-Velasquez.
Consistent sph simulations of protostellar collapse and fragmentation. The As-
trophysical Journal, 835:287, 2017.
[19] G.P. Galdi. An Introduction to the Mathematical Theory of the Navier-Stokes
Equations. Springer Monographs in Mathematics. Springer New York, NY, 2
edition, 2011. Hardcover ISBN 978-0-387-09619-3, Softcover ISBN 978-1-4939-
5017-1, eBook ISBN 978-0-387-09620-9.
[20] Stuart Geman and Donald Geman. Stochastic relaxation, gibbs distributions,
and the bayesian restoration of images. IEEE Transactions on Pattern Analysis
and Machine Intelligence, PAMI-6(6):721–741, 1984.
[21] MarcG.Genton. Classesofkernelsformachinelearning: Astatisticsperspective.
Journal of Machine Learning Research, 2:299–312, 2001.
[22] Andrew Gibiansky. Computational fluid dynamics, 2019. Accessed: 2024-06-10.
[23] Robert A. Gingold and Joseph J. Monaghan. Smoothed particle hydrodynam-
ics: theory and application to non-spherical stars. Monthly Notices of the Royal
Astronomical Society, 181(3):375–389, 1977.
[24] L. Han and X. Hu. Sph modeling of fluid-structure interaction. Journal of Hy-
drodynamics, 30:62–69, 2018.
[25] Jonathan Ho, Ajay Jain, and Pieter Abbeel. Denoising diffusion probabilistic
models. arXiv preprint arxiv:2006.11239, 2020.
[26] MatthewD.Hoffman,DavidM.Blei,ChongWang,andJohnPaisley. Stochastic
variational inference. Journal of Machine Learning Research, 14(1):1303–1347,
2013.
[27] C. Huang, J.M. Lei, M.B. Liu, and X.Y. Peng. A kernel gradient free (kgf)
sphmethod. International Journalfor NumericalMethods inFluids,78:691–707,
2015.
[28] C. Huang, T. Long, S.M. Li, and M.B. Liu. A kernel gradient-free sph method
withiterativeparticleshiftingtechnologyformodelinglow-reynoldsflowsaround
airfoils. Engineering Analysis with Boundary Elements, 106:571–587, 2019.
[29] Yongchao Huang. Classification via score-based generative modelling.
https://arxiv.org/abs/2207.11091, 2022.
[30] Yongchao Huang. Electrostatics-based particle sampling and approximate infer-
ence. https://arxiv.org/abs/2406.20044, 2024.
[31] AapoHyva¨rinen.Estimationofnon-normalizedstatisticalmodelsbyscorematch-
ing. Journal of Machine Learning Research, 6:695–709, 2005.
[32] Michael I. Jordan, Zoubin Ghahramani, Tommi S. Jaakkola, and Lawrence K.
Saul. An introduction to variational methods for graphical models. Machine
Learning, 37:183–233, 1999.
17[33] Herman Kahn and Theodore E. Harris. Estimation of particle transmission by
random sampling. In Monte Carlo Method, volume 12 of Applied Mathematics
Series, pages 27–30. National Bureau of Standards, 1949.
[34] Richard Keiser, Bryan Adams, Dominic Gasser, Pascal Bazzi, Philip Dutr´e, and
Markus Gross. A unified lagrangian approach to solid-fluid animation. In Euro-
graphics Symposium on Point-Based Graphics, pages 125–133, 2005.
[35] Diederik P Kingma and Max Welling. Auto-encoding variational bayes, 2013.
[36] S.A. Lamb, R.A. Gerber, and D.S. Balsara. Galactic scale gas flows in colliding
galaxies: 3-dimensional, n-body/hydrodynamics experiments. Astrophysics and
Space Science, 216:337–346, 1994.
[37] L.D. Landau and E.M. Lifshitz. Fluid Mechanics, volume 6 of Course of Theo-
retical Physics. Pergamon Press, Oxford, 1987.
[38] S. Li and W.K. Liu. Moving least-square reproducing kernel method part ii:
Fourier analysis. Computer Methods in Applied Mechanics and Engineering,
139:159–193, 1996.
[39] Steven J. Lind, Benedict D. Rogers, and Peter K. Stansby. Review of smoothed
particle hydrodynamics: towards converged lagrangian flow modelling. Proceed-
ings of the Royal Society A, 476(20190801), 2020.
[40] S. Litvinov, X.Y. Hu, and N.A. Adams. Towards consistence and convergence
ofconservativesphapproximations. Journal of Computational Physics,301:394–
401, 2015.
[41] M.B. Liu and G.R. Liu. Restoring particle consistency in smoothed particle
hydrodynamics. Applied Numerical Mathematics, 56:19–36, 2006.
[42] M.B. Liu, G.R. Liu, and K.Y. Lam. Constructing smoothing functions in
smoothed particle hydrodynamics with applications. Journal of Computational
and Applied Mathematics, 155:263–284, 2003.
[43] QiangLiuandDilinWang. Steinvariationalgradientdescent: ageneralpurpose
bayesianinferencealgorithm. InProceedingsofthe30thInternationalConference
onNeuralInformationProcessingSystems,NIPS’16,page2378–2386,RedHook,
NY, USA, 2016. Curran Associates Inc.
[44] W.-K. Liu, S. Li, and T. Belytschko. Moving least-square reproducing kernel
methods (i) methodology and convergence. Computer Methods in Applied Me-
chanics and Engineering, 143:113–154, 1997.
[45] L.B. Lucy. A numerical approach to the testing of the fission hypothesis. The
Astronomical Journal, 82:1013–1024, 1977.
[46] N. Max. Vectorized procedural models for natural terrain: Waves and islands
in the sunset. In SIGGRAPH ’81: Proceedings of the 8th Annual Conference on
Computer Graphics and Interactive Techniques, pages 317–324, New York, NY,
USA, 1981. ACM Press.
[47] Nicholas Metropolis, Arianna W. Rosenbluth, Marshall N. Rosenbluth, Au-
gusta H. Teller, and Edward Teller. Equation of state calculations by fast com-
puting machines. The Journal of Chemical Physics, 21(6):1087–1092, 1953.
[48] Gavin Miller and Alan Pearce. Globular dynamics: A connected particle system
for animating viscous fluids. Computers and Graphics, 13(3):305–309, 1989.
18[49] Philip Mocz. Smoothed particle hydrodynamics: Theory, implementation, and
application to toy stars, 2011.
[50] J.J.Monaghan.Simulatingfreesurfaceflowswithsph.JournalofComputational
Physics, 110(2):399–406, 1994.
[51] J. J. Monaghan. Smoothed particle hydrodynamics. Reports on Progress in
Physics, 68(8):1703, 2005.
[52] J. Morris. Simulating surface tension with smoothed particle hydrodynamics.
International Journal for Numerical Methods in Fluids, 33:333–353, 1999.
[53] FrankC.Morrison. Substantialderivative. https://pages.mtu.edu/~fmorriso/
cm4650/2012SubstantialDerivative.pdf, 2012. Accessed: 2024-07-04.
[54] Matthias Mu¨ller, David Charypar, and Markus Gross. Particle-based fluid
simulation for interactive applications. In Proceedings of the 2003 ACM SIG-
GRAPH/EurographicsSymposiumonComputerAnimation,pages154–159,Aire-
la-Ville, Switzerland, Switzerland, 2003. Eurographics Association. SCA ’03.
[55] Matthias Mu¨ller, Stefan Schirm, Matthias Teschner, Bruno Heidelberger, and
MarkusGross. Interactionoffluidswithdeformablesolids. Computer Animation
and Virtual Worlds, 15(3-4):159–171, 2004.
[56] Ahmed Nasreldeen, Long Fan, and Keru Liu. Smooth particle hydrodynamics
(sph). Technical report, Penn State University, College of Earth and Mineral
Sciences, Department of Energy and Mineral Engineering, 2017.
[57] Radford M. Neal. Slice sampling. Annals of Statistics, 31(3):705–767, 6 2003.
[58] HaraldNiederreiter. Random Number Generation and Quasi-Monte Carlo Meth-
ods, volume 63 of CBMS-NSF Regional Conference Series in Applied Mathemat-
ics. SIAM, Philadelphia, 1992.
[59] JamesF.O’BrienandJessicaK.Hodgins.Dynamicsimulationofsplashingfluids.
In CA ’95: Proceedings of the Computer Animation, page 198, Washington, DC,
USA, 1995. IEEE Computer Society.
[60] D. Peachey. Modeling waves and surf. In SIGGRAPH ’86: Proceedings of the
13thAnnualConferenceonComputerGraphicsandInteractiveTechniques,pages
65–74, New York, NY, USA, 1986. ACM Press.
[61] SimonPremoze,TolgaTasdizen,JamesBigler,AaronLefohn,andRossWhitaker.
Particle-based simulation of fluids. Computer Graphics Forum (Proc. of Euro-
graphics), 22:401–410, 2003.
[62] J.M.Ram´ırez-Velasquez,L.DiG.Sigalotti,R.Gabbasov,F.Cruz,andJ.Klapp.
Impetus: Consistentsphcalculationsof3dsphericalbondiaccretionontoablack
hole. Monthly Notices of the Royal Astronomical Society, 477:4308–4329, 2018.
[63] RajeshRanganath,SeanGerrish,andDavidM.Blei. Blackboxvariationalinfer-
ence.InProceedingsofthe17thInternationalConferenceonArtificialIntelligence
and Statistics (AISTATS), pages 814–822, 2014.
[64] F.A. Rasio. Particle methods in astrophysical fluid dynamics. Progress of Theo-
retical Physics Supplement, 138:609–621, 2000.
[65] S. Reinhardt, T. Krake, B. Eberhardt, and D. Weiskopf. Consistent shepard
interpolation for sph-based fluid animation. ACM Transactions on Graphics,
38:1–11, 2019.
19[66] GarethO.RobertsandRichardL.Tweedie. Exponentialconvergenceoflangevin
distributions and their discrete approximations. Bernoulli, 2(4):341–363, 1996.
[67] Stephen J Roberts and Will D Penny. Variational bayes for generalized autore-
gressivemodels. IEEETransactionsonSignalProcessing,50(9):2245–2257,2002.
[68] Riccardo Angelini Rota Roselli, Giuliano Vernengo, Stefano Brizzolara, and
Roberto Guercio. Sph simulation of periodic wave breaking in the surf zone -
a detailed fluid dynamic validation. Ocean Engineering, 176:20–30, 2019.
[69] M. S. Shadloo, G. Oger, and D. L. Touze. Smoothed particle hydrodynamics
methodforfluidflows,towardsindustrialapplications: Motivations,currentstate,
and challenges. Computers and Fluids, 136:11–34, 2016.
[70] S. Sibilla. An algorithm to improve consistency in smoothed particle hydrody-
namics. Computers & Fluids, 118:148–158, 2015.
[71] L. Di G. Sigalotti, J. Klapp, O. Rendo´n, C.A. Vargas, and F. Pen˜a-Polo. On
thekernelandparticleconsistencyinsmoothedparticlehydrodynamics. Applied
Numerical Mathematics, 108:242–255, 2016.
[72] LeonardoDiG.Sigalotti,JaimeKlapp,andMonchoGo´mezGesteira. Themath-
ematics of smoothed particle hydrodynamics (sph) consistency. Frontiers in Ap-
plied Mathematics and Statistics, 7, 2021.
[73] SimScale. What are the navier-stokes equations? https:
//www.simscale.com/docs/simwiki/numerics-background/
what-are-the-navier-stokes-equations/. Accessed: 2024-07-04.
[74] Yang Song, Jascha Sohl-Dickstein, Diederik P. Kingma, Abhishek Kumar, Ste-
fanoErmon,andBenPoole. Score-basedgenerativemodelingthroughstochastic
differential equations. CoRR, abs/2011.13456, 2020.
[75] JosStamandEugeneFiume. Depictingfireandothergaseousphenomenausing
diffusion processes. In Proceedings of the 22nd Annual Conference on Computer
GraphicsandInteractiveTechniques,SIGGRAPH’95,pages129–136,NewYork,
NY, USA, 1995. ACM Press.
[76] D.Stora,P.Agliati,M.-P.Cani,F.Neyret,andJ.Gascuel. Animatinglavaflows.
In Graphics Interface 99, pages 203–210, 1999.
[77] DamienVioleau.FluidMechanicsandtheSPHMethod: TheoryandApplications.
Oxford University Press, 05 2012.
[78] John von Neumann. Various techniques used in connection with random digits.
Applied Math Series, Notes by G. E. Forsythe, in National Bureau of Standards,
12:36–38, 1951.
[79] Yiwei Wang, Jiuhai Chen, Chun Liu, and Lulu Kang. Particle-based energetic
variational inference. Statistics and Computing, 31(34), 2021.
[80] Frank White. Fluid Mechanics. McGraw-Hill Higher Education, 4th edition,
2002.
[81] Xiaoyang Xu, Yao-Lin Jiang, and Peng Yu. Sph simulations of 3d dam-break
flow against various forms of the obstacle: Toward an optimal design. Ocean
Engineering, 229:108978, 2021.
[82] G.M.ZhangandR.C.Batra. Modifiedsmoothedparticlehydrodynamicsmethod
anditsapplicationtotransientproblems. ComputationalMechanics,34:137–146,
2004.
20[83] D.Zhou,S.Chen,L.Li,H.Li,andY.Zhao. Accuracyimprovementofsmoothed
particle hydrodynamics. Engineering Applications of Computational Fluid Me-
chanics, 2:244–251, 2008.
[84] Q. Zhu, L. Hernquist, and Y. Li. Numerical convergence in smoothed particle
hydrodynamics. The Astrophysical Journal, 800(1):6, 2015.
A Mathematical notations
For clarity, we present some of the (common) mathematical notations used in this
context.
Gradient Gradient is a collection of derivatives along each coordinate. For a real-
valued function f(x,y,z) on R3, the gradient ∇f(x,y,z) is a vector-valued function
on R3:
(cid:18) (cid:19)
∂f ∂f ∂f ∂f ∂f ∂f
∇f(x,y,z)= , , = i+ j+ k
∂x ∂y ∂z ∂x ∂y ∂z
Divergence The divergence divf is the dot product of f with ∇ (the gradient
operator can be regarded as a vector):
(cid:18) (cid:19)
∂ ∂ ∂
divf = i+ j+ k ·[f (x,y,z)i+f (x,y,z)j+f (x,y,z)k]
∂x ∂y ∂z 1 2 3
(cid:18) (cid:19) (cid:18) (cid:19) (cid:18) (cid:19)
∂ ∂ ∂ ∂f ∂f ∂f
= (f )+ (f )+ (f )= 1 + 2 + 3
∂x 1 ∂y 2 ∂z 3 ∂x ∂y ∂z
Often, it is convenient to write the divergence divf as ∇·f.
Laplacian Forareal-valuedfunctionf(x,y,z),theLaplacian off,denotedby∆f,
is:
∂2f ∂2f ∂2f
∆f(x,y,z)=∇·∇f = + + .
∂x2 ∂y2 ∂z2
Often, instead of using ∆f, the notation ∇2f is used for the Laplacian, with the
convention ∇2 =∇·∇.
Inthiscontext,derivative(s)in∇,∇·and∇2 allrefertospatialderivative(s),i.e.
w.r.t the coordinates. ∇K , for example, is an abbreviation for ∇ K = ∇ K(|r−
ij i ij r
r |,h)| .
j r=ri
B Computational fluid dynamics: basics
Fluid dynamics is a sub-field of fluid mechanics which concerns about the flow of
fluids such as liquids (e.g. hydrodynamics) and gases (e.g. aerodynamics). There
are typically two classes of methods used in computational fluid dynamics (CFD):
discretization models and turbulence models [22]. The former divides the fluid into a
set of discrete elements (e.g. particles), and iteratively simulate their motions using
theNavier-Stokesequations;turbulencemodelsattempttotrackorobtainthevalueof
specific properties of a fluid over time. Particle-based methods simplify computation
21andofferapproximate,interactivesimulationswithfastspeed: eachparticleissubject
tothevelocityfieldsdictatedbytheNavier-Stokesequationsaswellasexternalforces.
In the center of fluid dynamics are the Navier-Stokes (N-S) equations, which are
partialdifferentialequationsthatdescribethemotionofviscousfluids[19]. N-Sequa-
tions are based Newton’s second law of motion, taking into account the viscous and
pressure effects in order to describe a viscous fluid flow. These equations consist
of three types of conservation equations: conservation equations of mass (continuity
equation 18),momentum(Newton’ssecondlaw forfluids),andenergy(firstlawofther-
modynamics). Conservation of mass states that the net difference between mass
inflow and outflow throughout the fluid is zero:
∂ρ
+∇·(ρv)=0 (Continuity equation) (10)
∂t
whereρisdensity,v isvelocity,and∇·isthedivergencewhichcharacterizesoutward
flux. If density remains constant over time, the fluid is considered incompressible,
which simplifies the continuity equation (three-dimensional fluid as an example):
∂ρ ∂v ∂v ∂v
=0→∇·v= + + =0 (Incompressible continuity equation)
∂t ∂x ∂y ∂z
Theothertypeoffluidiscompressible fluids 19 whichtransportthedensityasper
themassconservationlawEq.10. Representingafluidusingasetofparticlesnaturally
preservesmass: conservationofmassisguaranteedforparticlesystemsasthenumber
of particles are fixed with constant mass.
Momentum is the produce of mass and velocity, describing a mass in motion.
According to Newton’s second law, f = ma = m∆v/∆t where f is the net force, m
the mass, a the acceleration, the momentum can only change through the action of
forces; conservation of momentum (i.e. momentum remains constant) indicates
momentum isneithercreatednordestroyed. TheNewton’ssecondlawforafluidcan
be expressed as [73]:
Dv
ρ =f=fbody+fsurf
Dt
where D,withcapitalD,isthesubstantialderivative 20 (alsotermedmaterialderiva-
Dt
tive). f is the net force exerted on a fluid element (e.g. a particle) per unit volume.
18Continuityequationsareastronger,localformofconservationlaws,whichstatesthatthe
quantity is locally conserved: it can neither be created nor destroyed, nor can it ”teleport”
from one place to another. It can only move by a continuous flow. A weak version of the
conservationlawstatesthat,thequantitycoulddisappearfromonepointwhilesimultaneously
appearingatanotherpoint,withthetotalamountfixed.
19Althoughalltypesoffluidsarecompressibleoveravarietyofmolecularstructures,most
ofthem,however,canbeassumedincompressible[73],i.e. theirdensitychangesarenegligible.
Thereareexceptionalscenarioswherefluidsshouldbeconsideredascompressible,oneisgeo-
physicalflowsinwhichthermaleffectscanleadtodensitychanges,anotherishigh-speedflows
inwhichthevelocityexceedsacriticallimit(characterizedbytheMach number threshold).
20ThesubstantialderivativeofQ,in3D,is: D DQ
t
= ∂ ∂Q
t
+v·∇Q= ∂ ∂Q
t
+ ∂ ∂Q xvx+ ∂ ∂Q yvy+
∂ ∂Q zvz. The substantial derivative represents the rate of change of the quantity Q (Q can be
mass, energy, momentum, etc) as experienced by an observer that is moving with the flow
(theLagrangianapproach). Theobservationsmadebyamovingobserverareaffectedbythe
stationarytime-rate-of-change ∂Q,aswellaswheretheobservergoesasitfloatsalongwith
∂t
theflow(v·∇Q)[53].
22fbody isthebodyforce21appliedonthewholevolumeoftheparticle,e.g. gravitational
force fbody =ρg where g is the gravitational acceleration. In this context, we denote
all external body force per unit volume as fbody = fext. fsurf is the internal, surface
force such as those induced by pressure (pressure gradient force fpre) and viscosity
(viscous force fvis), it can be in general expressed as:
fsurf =fpre+fvis =∇·τ
where τ is a stress tensor which can be decomposed into pressure gradient stress and
viscous stress 22. ∇·τ is the (spatial) divergence of the stress tensor, indicating how
the stress varies in space. Bringing the body and surface forces together, we re-write
the Newton’s second law for fluid as:
Dv
ρ =f=fext+fpre+fvis (11)
Dt
The LHS of the momentum equation represents inertia force (i.e. acceleration of
the fluid element); RHS are contributions from body forces, pressure gradients, and
internalfriction. Therearecaseswheretheviscousforcefvis isnegligible(i.e. inviscid
flow, and the N-S momentum equation reduces to the Euler equation [3]), e.g. when
theReynoldsnumber(Re),whichistheratioofinertialandviscouseffects,approaches
infinity (Re → ∞). On the other hand, if Re ≪ 1, then inertia effects are negligible
(i.e. LHS becomes zero).
Incompressible fluids, again for example, have constant density and therefore the
following N-S equations 23:
∇·v=0 (Incompressibe continuity equation)
Dv (12)
ρ =−∇P +µ∇2v+fext (Incompressible momentum equation)
Dt
where
- v is the flow velocity vector.
- ρ is the density, i.e. the mass per unit volume of the fluid. It is a scalar field that
varies with position and time.
- D is the material derivative, defined as ∂ +v·∇.
Dt ∂t
- ∇· is the divergence, e.g. ∇·v is the divergence of the flow velocity v, which is a
scalar field.
- P is the pressure, a scalar field representing the force exerted per unit area within
thefluid. Itvarieswithpositionandtime. ∇P isthegradientofthepressurefieldP,
which is a vector 24.
21A body force is a force that acts throughout the volume of a body (e.g. a particle or a
material),e.g. forcesinducedbyfriction,gravity,electricfieldsandmagneticfields,etc. Body
forcescontrastwithcontactforcesorsurfaceforceswhichareexertedtothesurfaceofabody.
InthecontextoffluiddynamicsandtheNavier-Stokesequations,bodyforcesareforcesthat
actoneveryelementofthefluidwithinavolume. Theseforcesdistributeoverthevolumeof
thefluidratherthanbeingappliedatspecificpointsorsurfaces.
22Viscous stress can be further decomposed into those induced by velocity gradients and
bulkviscosity,seee.g. [73].
23∇ denotes gradient (w.r.t. coordinates), ∇· denotes divergence, ∇2 indicates Laplacian.
SeeAppendix.A.
24The gradient of a scalar field results in a vector field that points in the direction of the
greatestrateofincreaseofthescalar. Bydefaultweassumecolumnvectors.
23-µisthedynamicviscosity orabsoluteviscosity. Herewehaverepresentedtheviscous
force as µ∇2v where ∇2v is the Laplacian of the velocity vector.
- fext is the external (body) force per unit mass, e.g. gravitational force, electromag-
netic forces, etc.
By defining the kinematic viscosity or momentum diffusivity ν = µ/ρ, Eq.12 can be
written in the more frequent form:
∇·v=0 (Incompressibe continuity equation)
Dv 1 1 (12b)
=− ∇P +ν∇2v+ fext (Incompressible momentum equation)
Dt ρ ρ
thefirstterm−1∇P representstheforceinducedbyspatialpressuregradient, which
ρ
is caused by change of density, and is therefore an internal source. The pressure
gradientdrivesthefluidflowfromregionsofhighpressuretolowpressure. Thesecond
term ν∇2v represents viscous force within the fluid, which accounts for diffusion of
momentum. −1∇P andν∇2vtogetherrepresentthespatialdivergenceofstress. fext
ρ
represents contributions from external sources.
The energy equation, as per the first law of thermodynamics, has to be con-
sidered if any thermal interaction is involved in the problem. It specifies the total
energy increment in the system as the sum of heat added to and work done on the
system. As we are not concerned about thermal effects, we mainly focus on the mass
and momentum conservation equations.
Also relevant 25 is the equation of state (EoS), which relates pressure, temper-
ature and density of a fluid [37]:
P =P(ρ,T) (13)
and indicates that pressure P is a function of density ρ and temperature T. There
existvariousformstorelatepressureanddensity[3], onebeingthePoissonequation:
∇v
∇2P =ρ (14)
∆t
which can be solved using Eulerian or Lagrangian approaches. For ideal gas 26, we
have [54, 3, 22]:
P =kρ (15)
or a more numerically stable version [56]:
P =c2(ρ−ρ ) (15b)
s 0
wherec isthesoundspeed,andρ istherest(reference)density. UsingeitherEq.15
s 0
or Eq.15b is equivalent as the pressure gradient ∇P is concerned in the momentum
equations.
The N-S equations have a complex, non-linear structure, and it is hardly possi-
ble to find an exact solution [73]. Analytical solutions can be sought if assumptions
25InthecontextoftheNavier-Stokesequations,theEoSisessentialforclosingthesystem
ofequations,particularlyforcompressibleflows.
26The ideal gas law states PV = nRT, where P, V and T are the pressure, volume and
temperaturerespectively. nistheamountofsubstance,andRistheidealgasconstant.
24are imposed to simplify the equations [80] (e.g. ignoring the nonlinearities, result-
ing in Couette flow, Poisellie flow, etc); numerical solutions via discretization can
be obtained with different levels of complexity and accuracy. Solutions for the two-
dimensional Navier-Stokes equations exist and are smooth; for low initial velocities,
smooth solutions to 3-dimensional Navier-Stokes exist [22].
Time-invariantN-Sequations Iftheflowissteady,i.e. themotionandparam-
eters are independent of time, the term ∂/∂t vanishes, the general continuity (Eq.10)
and momentum (Eq.11) equations are then simplified as:
(cid:40)
∇·(ρv)=0 (Continuity equation)
(16)
ρv·∇v=fext+fpre+fvis (Momentum equation)
the steady 3D N-S equations for incompressible fluids, for example, become:
∂v ∂v ∂v
v∂
xx
∂x
∂v
x+
x
+∂y
vy y+
∂ ∂v
yx∂z
+z v= z∂0
∂v
zx =−
ρ1∂ ∂P
x
+ν(∂ ∂2 xv
2x +
∂ ∂2 yv
2x +
∂ ∂2 zv
2x)+
ρ1
f xext
(17)
v
vx
x∂
∂
∂∂v
v
xxy
z
++ vv
yy
∂∂
∂∂
vv
yy
zy ++ vv
zz
∂∂
∂∂
vv
zz
zy == −− ρ1ρ1 ∂∂
∂∂
PP
zy
++ νν (( ∂∂
∂∂
22
xx
vv
22
zy ++ ∂∂
∂∂
22
yy
vv
22
zy ++ ∂∂
∂∂
22
zz
vv
22
zy )) ++ ρ1ρ1 ff zeye xx tt
C SPH: fundamental principles
Herewefollow[51,39,77]andpresentthebasicformulationoftheSPHmethodology.
For each particle j, as per Newton’s second law, we have the acceleration:
f
a = j
j ρ
j
where f is the net force, i.e. sum of all forces acting on the particle.
j
SPH integral approximation A function f(r), which represents a physical
quantity such as pressure or density at position r in d-dimensional space Ω, can be
approximated via kernel approximation:
(cid:90)
f(r)≈ f(r′)K(|r−r′|,h)dV(r′) (18)
Ω
where V is the volume of the particle. h is defined as the smoothing length which
characterizes the influence radius of the kernel K(r,h). The kernel can be seen as
a distance-based weight function. Normally it is chosen to be a smooth, isotropic
andevenfunctionwithcompactsupport[39]. Generalrequirementsofthesmoothing
kernelinclude[72]: (1)positivedefinite;(2)even,i.e. K(|r−r′|,h)=K(|r′−r|,h);(3)
monotonicallydecreasing,i.e. thefunctionvalueshoulddecreaseasdistanceincreases
(essentially decays to 0 at distances equal to or greater than multiples of h), as we
expectnearbypointsshouldhavemoreinfluencethanthosefaraway;(4)normalized,
(cid:82)
i.e. K(|r|,h)dr = 1; (5) it should equal the Dirac delta distribution in the limit
h→0.
25Commonly used kernel functions are Gaussian kernel and spline kernel. With
positive kernels, the error of the integral approximation in Eq.18 is O(h2) [51]. Eq.18
givesthecontinuumapproximationofthequantityf(r);theRHSintegrationinEq.18
can be further approximated using discrete Riemann summation 27 [72]:
M M
f(r)=(cid:88) V f(r )K(|r−r |,h)=(cid:88)m jf(r )K(|r−r |,h) (19)
j j j ρ j j
j
j=1 j=1
where M is the total number of particles, V = m /ρ is the volume of the d-
j j j
dimensionalparticlej. Eq.19expressesthetargetquantityatpositionrasaweighted
summationofcontributionsfromalltheparticlesaroundthepoint. Thediscretization
produceserrorswhichreplyontheparticlesizeV1/d,theinfluencelength-scaleh,and
j
particle arrangement in space.
The SPH formulation in Eq.19 facilitates the calculation of derivatives of f(r)
(spatial gradient, w.r.t. coordinates r) and therefore discretization of the Navier-
Stokes equations - we only need to differentiate the smoothing kernel. For example,
M
∂ (cid:88)
∇f(r)= f(r)= V f(r )∇K(|r−r |,h)
∂r j j j
j=1
(20)
∇2f(r)=
∂2 f(r)=(cid:88)M
V f(r )∇2K(|r−r |,h)
∂r2 j j j
j=1
Density approximation Replacing f(r ) by ρ =ρ(r ) in Eq.19, we obtain the
j j j
density ρ =ρ(r ) of particle i as:
i i
M M
(cid:88) (cid:88)
ρ(r )= V ρ K = m K (21)
i j j ij j ij
j=1 j=1
whereforbrevitywehavedenotedK(|r −r |,h)asK . Eq.21giveserroneous(lower)
i j ij
density near surface for equally spaced particles, as surface particles in free surface
scenarioshavelessneighbours[3]. Tocorrectthis,wecanusethecontinuityequation
to obtain ρ(r ).
i
Toderivethetimederivativeofdensity,assumingconstantmassforeachparticle,
we differentiate Eq.21 w.r.t time:
(cid:32)M (cid:33) M
dρ i = d (cid:88) m K =(cid:88) m dK ij (22)
dt dt j ij j dt
j=1 j=1
As the kernel function relies on the positions r and r , the time derivative of the
i j
kernel function can be derived using the chain rule:
dK dK dr dK dr
ij = ij · i + ij · j
dt dr dt dr dt
i j
The velocities of particles i and j are v = dri and v = drj. Using the fact that
i dt j dt
∇K =−∇K , we have:
ji ij
27Note the similarity between the SPH representation and spatial kernel smoother: both
useneighbourstoestimatethequantityatobservationposition. Kernelsmoothingisusedin
e.g. kerneldensityestimation(KDE),kernelregression,etc.
26dK
ij =∇KT ·v +∇KT ·v =∇KT ·(v −v )
dt ij i ji j ij i j
where we have denoted the spatial derivatives ∇K = ∇ K(|r − r |,h)| and
ij r j r=ri
∇K =∇ K(|r−r |,h)| .
ji r i r=rj
Therefore, Eq.22 translates to:
M
dρ i =(cid:88) m (v −v )T ·∇K (23)
dt j i j ij
j=1
Eq.23statesthat,eachparticleisinitializedwithadensityρ ,anddensitychanges
0
are only due to relative motion of particles. It guarantees a correct density at free
surfaces as well [3]. One can choose to use Eq.21, which is more stable but less
accurate for surface particles, or solving Eq.23 to obtain the density.
In the following, we introduce two SPH formulations of the Navier–Stokes equa-
tions: weakly compressible SPH (WCSPH) and incompressible SPH (ISPH).
Weakly compressible SPH (WCSPH) The Navier-Stokes equations can be
written in Lagrangian form as [39]:
dρ
=−ρ∇·v (Continuity equation)
dt
(24)
dv 1 1 1
=− ∇P + fvis+ fext (Momentum equation)
dt ρ ρ ρ
wherevisthefluidvelocityvector,ρisfluiddensity,tistime,P isfluidpressure. The
first term on RHS of the momentum equation is the pressure gradient force, second
termistheviscosity-inducedresistanceforce(e.g. fvis =µ∇2v),andthirdtermisall
external (body) forces (e.g. gravity).
For example, if we ignore the viscous force (the momentum equation reduces to
the Euler equation for inviscid flow) and consider fext =ρg, Eq.24 becomes [3]:
dρ
=−ρ∇·v
dt
(24b)
dv 1
=− ∇P +g
dt ρ
Particles conveniently carry properties such as mass, density and velocity; the
pressureP,however,needstobecalculated. ItcanbederivedfromtheEoSequation
(Eq.13). In WCSPH, a stiff EoS, which relates fluid pressure to changes in density, is
often used [39]:
c2ρ (cid:20) ρ (cid:21)
P = 0 0 ( )γ−1 (Equation of State) (25)
γ ρ
0
whereγ isthefluidpolytropicindex,ρ isthereferencedensity,andc isthereference
0 0
numericalspeedofsoundinthefluid[39,3]. Eq.25isderivedbasedontheTaitequation
28 [50].
To calculate the pressure P at particle i, we apply SPH smoothing (Eq.19):
i
M
P(r
)=(cid:88)m
jP K(|r −r |,h) (26)
i ρ j i j
j
j=1
28TheTaitequationcanbeusedtoefficientlyenforcevolumepreservationaswell[50].
27Eq.26 however is not symmetric; ideally, as per Newton’s third law, we would like
everyactionshouldhaveanequalandoppositereaction[22]. Thiscanbeachievedby
revising Eq.26 to be:
M
P(r
)=(cid:88)m
j
P i+P
jK(|r −r |,h) (26b)
i ρ 2 i j
j
j=1
AfterobtainingP,wecanapplythespatialgradientprincipleEq.20toobtain∇P:
M
∇P(r
)=(cid:88)m
jP ∇ K(|r−r |,h)| (27)
i ρ j r j r=ri
j
j=1
or
M
∇P(r
)=(cid:88)m
j
P i+P
j∇ K(|r−r |,h)| (27b)
i ρ 2 r j r=ri
j
j=1
The discrete Lagrangian WCSPH Navier-Stokes equations can then be written as
29 [51]:
M
dρ i =(cid:88) m (v −v )T ·∇K +δ (Continuity equation)
dt j i j ij i
j=1
(28)
M (cid:18) (cid:19)
dv i =−(cid:88) m P i + P j ∇K + 1 fvis+ 1 fext (Momentum equation)
dt j ρ2 ρ2 ij ρ i ρ
j=1 i j
where fvis denotes the viscous force. Different formulations of fvis are possible, see
i i
Eq.5 and Eq.6.
ThefinalterminthedensityequationinEq.28,δ ,isanartificialdensitydiffusion
i
term used to limit spurious density fluctuations (this SPH method is called δ-SPH).
One of the density diffusion schemes is suggested by [2]:
M
δ =a hc
(cid:88)m
jψT ·∇K (29)
i d 0 ρ ij ij
j
j=1
where
(cid:18) (cid:19)
ρ r −r
ψ =2 j −1 i j
ij ρ |r −r |2+0.1h2
i i j
where a is a diffusion parameter,typically set to 0.1.
d
TodiscretizeEq.28,onecandesignaleapfrogintegrationscheme,whichconserves
energy, to update the position, velocity and density:
29NB: Eq.27b is read from [22] while Eq.28 is widely used in many literature such as
[51,49,39]-weneed,however,moresmoothingtransitionheretobridgeboth.
28∆t
v(t+1)/2 =vt+at ,
i i i 2
rt+1 =rt+v(t+1)/2∆t,
i i i
vt+1 =v(t+1)/2+at+1∆t , (30)
i i i 2
M
ρt+1 =ρt+[(cid:88) m (vt+1−vt+1)T ·∇K +δ ]∆t
i i j i j ij i
j=1
where the superscript t denotes the time step, a = dv /dt is the acceleration which
i i
can be calculated via a = F /m where F is the overall forces on the RHS of the
i i i i
momentum equation in Eq.28.
Notethat,whenapplyingthecontinuityequationinEq.28,negativedensityvalues
canoccurduetothenumericalintegrationprocess,theartificialdensitydiffusionterm
and large step size ∆t.
The WCSPH representation is summarised as follows:
WCSPH equations
Navier-Stokes Equations (Lagrangian form):
dρ
=−ρ∇·v
dt
dv 1 1 1
=− ∇P + fvis+ fext,
dt ρ ρ i ρ
Equation of State (EoS):
c2ρ (cid:20)(cid:18) ρ (cid:19)γ (cid:21)
P = 0 0 −1
γ ρ
0
Discrete SPH equations:
M
dρ i =(cid:88) m (v −v )T ·∇K +δ
dt j i j ij i
j=1
M (cid:18) (cid:19)
dv i =−(cid:88) m P i + P j ∇K + 1 fvis+ 1 fext,
dt j ρ2 ρ2 ij ρ i ρ
j=1 i j
Incompressible SPH (ISPH) Incompressibility implies no volumetric varia-
tions, therefore density and mass are constant. The Navier-Stokes equations in La-
grangian form for an incompressible fluid become:
∇·v=0 (Continuity equation)
dv 1 1 1 (31)
=− ∇P + fvis+ fext (Momentum equation)
dt ρ ρ i ρ
where v again is the velocity, ρ the density, t is time, P the pressure, fvis the viscous
force, fext all external forces (e.g. gravity or other body forces).
Again, if we consider fvis =µ∇2v and fext =ρg, Eq.31 become [39]:
i
29∇·v=0
dv 1 (31b)
=− ∇P +ν∇2v+g
dt ρ
where ν =µ/ρ is again the viscosity.
As density remains constant and no longer needs to be solved, updating of the
position and velocity can be proceeded as follows [39]: at step t, for each particle i,
we first calculate an intermediate position r∗ (although not used) with velocity vt:
i i
r∗ =rt+vt∆t
i i i
and an intermediate velocity v∗ considering only the viscous force at time t (e.g.
i
1fvis,t =ν∇2vt):
ρ i i
1
v∗ =vt+ fvis,t∆t
i i ρ
ThepressurePt+1 attimet+1isobtainedbytheimplicitsolutionofthePoisson
equation 30:
(cid:18) (cid:19)
1 1
∇· ∇Pt+1 = ∇·v∗
ρ ∆t i
The velocity vt+1 at time t+1 is then obtained by considering the body force 31
i
fext (e.g. fext =ρg):
(cid:18) (cid:19)
1 1
vt+1 =v∗+ − ∇Pt+1+ fext ∆t,
i i ρ ρ
Finally particle positions rt+1 at time t+1 are calculated by central difference:
i
(cid:18) vt+vt+1(cid:19)
rt+1 =rt+ i i ∆t.
i i 2
Notethat,particleconvergencecanbeaproblemwithISPH,andregularizationor
shifting is essential to produce accurate converged solution [39]. ISPH is summarised
as below:
ISPH equations
Navier-Stokes equations (Lagrangian form):
∇·v=0,
dv 1 1 1
=− ∇P + fvis+ fext
dt ρ ρ i ρ
(1) Compute intermediate position r∗ and velocity v∗:
i i
r∗ =rt+vt∆t,
i i i
1
v∗ =vt+ fvis,t∆t
i i ρ i
30DiscretizationoftheLHSoftheabovePoissonequationcanbeperformedwitheitherthe
MorrisorSchwaigeroperator.
31Bodyforces,e.g. fext=ρg,aregenerallytimeinvariant.
30(2) Compute pressure Pt+1:
(cid:18) (cid:19)
1 1
∇· ∇Pt+1 = ∇·v∗
ρ ∆t i
(3) Compute velocity vt+1 and position rt+1:
i i
(cid:18) (cid:19)
1 1
vt+1 =v∗+ − ∇Pt+1+ fext ∆t,
i i ρ ρ
1
rt+1 =rt+ (vt+vt+1)∆t
i i 2 i i
D The smoothing kernel
Thequality,speedandaccuracyofSPHsimulationreliesonthechoiceofthesmoothing
kernel K(r,h) where r = |r −r | is the distance between two particles. For the
i j
SPH method, the smoothing kernel K(r,h) is typically chosen to have a smooth and
compact support. Here we present four commonly used kernels.
The gradient of the smoothing kernel K(r,h), a directional vector, is defined as:
dK(r,h) r −r
∇K(r,h)= · i j
dr r
where r and r are the positions of particle i and j, respectively. The distance
i j
r = |r −r | is a scalar. h is the smoothing length. (r −r )/r is the unit direction
i j i j
vector between particles particle i and j. The smoothing kernel is stationary and
isotropic: it induces a ball centered at the point of concern with radius h, and the
values K(r,h) and ∇K(r,h) are homogeneous in all directions.
Empirical kernel The general smoothing kernel is a sixth-degree polynomial
315
K(r,h)= (h2−r2)3 (32)
64πh9
and its gradient w.r.t r:
dK 945
=− ·r(h2−r2)2
dr 32πh9
it avoids calculating the square root r and is therefore faster [22].
Pressure kernel Particles should repel more as they come closer, which inspires
the following kernel for pressure calculation [22]:
15
Kpre(r,h)= (h−r)3 (33)
πh6
and its gradient w.r.t r:
dKpre 45
=− (h−r)2
dr πh6
Viscosity kernel Viscousforceisafrictionforceanddissipatesenergy. Thespeed
should not increase as particles come closer. This inspires the following kernel for
viscosity calculation [22]:
31r3 r2 h
Kvis(r,h)=− + + −1 (34)
2h3 h2 2r
and its gradient w.r.t r:
dKvis 3r2 2r h
=− + −
dr 2h3 h2 2r2
Cubicsplinekernel Anothercommonlyusedsmoothingkernelisthecubicspline
kernel (2D as an example):
K(r,h)= 7π 11 h0 02 (cid:16) (cid:16)1 1−
(cid:0)
23 2 −(cid:0) hr r(cid:1) (cid:1)2 3(cid:17)+ ,3 4(cid:0) hr(cid:1)3(cid:17) , 0 1≤
<
hr
r
≤ ≤1
2
07 ,πh2 4 h
r
>h
2
h
and its gradient:
dK(r,h)
=  −7π1 h0 13 0(cid:16) − (cid:16)3 3hr
(cid:0)
2+ −49 r(cid:0) (cid:1)hr 2(cid:1) (cid:17)2(cid:17)
,
, 0 1≤
<
hr
r
≤ ≤1
2
dr 0,7πh3 4 h
r
>h
2
h
The four kernels, along with their gradients, are shown in Fig.2.
(a) Empirical kernel (b) Pressure kernel
(c) Viscosity kernel (d) Cubic spline kernel
Figure 2: Smoothing kernels and gradients.
E SPH-based sampling (external force field)
The algorithm for the SPH-based sampling using an external force field is presented.
32Algorithm 2 SPH-based sampling (target score as external force field)
• Inputs: a queryable target density p(r) with magnitude amplification con-
stant α, number of particles M, particle (density) dimension d, initial pro-
posaldistributionp0(r),totalnumberofiterationsT,stepsize∆t,smooth-
ing kernel K(r,h) with length-scale h. Particle mass mi,i=1,2,...,M. Ref-
erence density ρ0, reference speed of sound in the fluid c0, fluid polytropic
index γ, dynamic viscosity µ. Density diffusion parameter a .
d
• Outputs: Particles located at positions {ri ∈ Rd}M
i=1
whose empirical dis-
tribution approximates the target density p(r).
1. Initialise particles [O(M)].
Draw M m-dimensional particles r0 = {r0}M from the initial proposal
j j=1
distribution p0(r). Initialise (ρ0,r0,v0) for i=1,2,...,M.
i i i
2. Update particle positions.
For each iteration t=1,2,...,T, repeat until converge:
(1) Compute the density ρt for each particle i=1,2,...,M (Eq.1 or cc.Eq.30)
i
[O(M2)]:
M M
ρt
i
=(cid:88) mjK(|rt i−rt j|,h), orρt
i
=ρt i−1+[(cid:88) mj(v it−v jt)T ·∇Kij+δ it]∆t
j=1 j=1
where δ it=a dhc0(cid:80)M j=1mjψ ρit j tT ·∇Kij and ψ it
j
=2(cid:18) ρ ρt j
t
−1(cid:19) |rt−rr tt i |− 2+rt j 0.1h2.
j i i j
(2) Compute the (internal) pressure Pt, and external forces fext by
i i
querying ∇rp(rt i), for each particle i [O(M)]:
P it=
c2
0
γρ0
[(
ρρ 0t
i)γ−1], f iext,t=α∇rlogp(rt i)
(3) Compute the overall force Ft acting on each particle i (Eq.3) [O(M2)]:
i
Ft
i
=−(cid:88)M mj(cid:32) ρP
ti
2t
+
ρP
tj
2t(cid:33)
∇Kij+f ivis,t+f iext,t
j=1 i j
where fvis,t is calculated using Eq.5 or Eq.6.
i
(4) Update (rt,vt) (cc.Eq.30 simplified) [O(M)]:
i i
Ft
vt+1=vt+ i∆t, rt+1=rt+vt+1∆t
i i mi i i i
3. Return thefinalconfigurationofparticles{rT}M andtheirhistogramand/or
j j=1
KDE estimate for each dimension.
33Practical implementation Based on the above algorithm, in order to optimise
efficiency, at each iteration t, following procedure can be implemented:
• Step 1: compute and cache distance matrix Rt (symmetric, with entries
M×M
rt = |rt −rt|), kernel value matrix Kt (symmetric, with entries kt =
ij i j M×M ij
K(|rt −rt|,h)), kernel gradient tensor ∇Kt (asymmetric, with entries
i j M×M×d
∇kt =∇K(|rt−rt|,h)).
ij i j
• Step2: computeparticledensities{ρ(rt)=(cid:80)M m K(|rt−rt|,h)}M foreach
i j=1 j i j i=1
particle, and query target value {∇ logp(rt)}M at each particle position.
r i i=1
• Step 3: retrieve densities and compute internal pressures {Pt = c2 0ρ0[(ρt i)γ −
i γ ρ0
1]}M .
i=1
• Step 4: retrievedensities,pressuresanddistances,computeoverallforceacting
(cid:18) (cid:19)
oneachparticle{Ft =fpre,t+fvis,t+fext,t}M ,wherefpre,t =−(cid:80)M m Pit + Pjt ∇K ,
i i i i i=1 i j=1 j ρt2 ρt2 ij
i j
fvis,t =(cid:80)M µ mjvt∇2K(|rt−rt|,h)orfvis,t =m η (vit−vjt)T·(rt i−rt j) ∇K(|rt−
i j=1 ρt ρt j i j i j ij |rt−rt|2+ϵ·h2 i
j j i j
rt|,h), fext,t =α∇ logp(rt).
j i r i
• Step5: retrieveforces,updatevelocitiesandpositions{vt+1 =vt+Ft i∆t, rt+1 =
i i mi i
rt+vt+1∆t}M .
i i i=1
34