Prompts First, Finally
BrentN. Reeves JamesPrather PaulDenny
AbileneChristianUniversity AbileneChristianUniversity TheUniversityofAuckland
Abilene,TX,USA Abilene,TX,USA Auckland,NewZealand
brent.reeves@acu.edu james.prather@acu.edu paul@cs.auckland.ac.nz
JuhoLeinonen StephenMacNeil BrettA. Becker
AaltoUniversity TempleUniversity UniversityCollegeDublin
Espoo,Finland Philadelphia,PA,UnitedStates Dublin,Ireland
juho.2.leinonen@aalto.fi stephen.macneil@temple.edu brett.becker@ucd.ie
Andrew Luxton-Reilly
TheUniversityofAuckland
Auckland,NewZealand
a.luxton-reilly@auckland.ac.nz
ABSTRACT areasofhumanactivitydemandit.Adjustingtothe
GenerativeAI(GenAI)andlargelanguagemodelsinparticular,are requirementforperfectionis,Ithink,themostdif-
disruptingComputerScienceEducation.Theyareprovingincreas- ficultpartoflearningtoprogram.
inglycapableatmoreandmorechallenges.Someeducatorsargue InparttoeasethepainofsuchpunishingexactitudethatBrooks
thattheyposeaseriousthreattocomputingeducation,andthat observed,thehistoryofComputerSciencerevealsanongoingquest
we should ban their use in the classroom. While there are seri- toraisethelevel ofabstractionthroughthecreationofnew lan-
ous GenAI issues that remain unsolved, it may be useful in the guages and constructs. From Assembly Language to COBOL to
presentmomenttostepbackandexaminetheoveralltrajectoryof Python to Rust, it seems now in retrospect that humans always
ComputerSciencewritlarge.Sincetheverybeginning,ourdisci- wantedtocommunicatewithmachinesinincreasinglevelsofab-
plinehassoughttoincrease thelevel ofabstractionineachnew stractions.Untilrecently,theambiguityofnaturallanguage–per-
representation. Wehaveprogressedfromhardwaredipswitches, hapsitsdefininghallmark–hasbeenboththesourceofitspower
throughspecialpurposelanguagesandvisualrepresentationslike andatthesametimethefactorthathaslimiteditsuseasavehicle
flow charts,all theway now to “naturallanguage.” Withthe ad- thatcanconveytheexactnessrequiredofcommunicatingwitha
ventofGenAI,studentscanfinallychangetheabstractionlevelof machine.AsBrooksnoted,onemustperformperfectly.This,how-
aproblemtothe“language”they’vebeen“problemsolving”with ever,hasdrasticallychangedwiththearrivalofmoderngenerative
all their lives. In thispaper,weargue thatour programming ab- AI(GenAI). Finally,asBrookswouldsay,themagicofmythand
stractionswerealwaysheadedhere–tonaturallanguage.Nowis legendhascometrueinourtimeandnovicelearnerscanusenat-
thetimetoadopta“PromptsFirst”approachtoComputerScience urallanguagetoinstructcomputerswithouttherequirementsof
Education. being“perfect.”
AlthoughsomeseethearrivalofGenAIasanexistentialthreat
CCSCONCEPTS
tocomputingeducation,wearguethatthisiswherewewereal-
• Computingmethodologies→Artificialintelligence;•So- waysheadedasadisciplineandthatitshouldbeembraced.Much
cialandprofessionaltopics→Computerscienceeducation; likethedebatesofoldabout“objectsfirst”,wearguefora“prompts
Computingeducation. first”approachtoprogrammingeducation.Educatorsshouldstart
coursesbyteachingstudents“promptengineering”–or,moreac-
KEYWORDS curately, “programming in natural language.” Although our call
ComputerScienceCurriculum;CS1;ComputerScienceEducation; tonaturallanguageismotivatedbyrecentGenAIadvances,itre-
ComputingEducation;ProgrammingLanguages;Abstraction;Gen- flectsaperspectivearguedbyMarkHalpernclearlybackin1966
erativeAI;LLMs;LargeLanguageModels -that“naturalprogramminglanguage isonethatcanbewritten
freely,notjustreadfreely”[12].Astheperformanceofgenerative
1 INTRODUCTION AI continues toincrease, thevast majorityof programming will
focusonproblemsolvingviadomain-specificconstructs,andnot
In1975,whilemanagingthedevelopmentofOS/360atIBM,Fred
programming-languageconstructs.
Brooksdescribedprogramming[5]:
Onemustperformperfectly.Thecomputerresem-
blesthemagicoflegendinthisrespect,too.Ifone
2 GENAIINCOMPUTINGEDUCATION
character,onepause,oftheincantationisnotstrictly In February 2022, Finnie-Ansley et al. presented a groundbreak-
inproperform,themagicdoesn’twork.Humanbe- ing paper at the Australasian Computing Education conference,
ingsarenotaccustomedtobeingperfect,andfew assessing the capabilities of OpenAI’s Codex model for solving
4202
luJ
21
]YC.sc[
1v13290.7042:viXraBrentN.Reeves,JamesPrather,PaulDenny,JuhoLeinonen,StephenMacNeil,BrettA.Becker,andAndrewLuxton-Reilly
introductoryprogrammingproblems[11].Comparingtheperfor- canwritehighlyefficientalgorithms.Startinginthe1940s,Kath-
manceofCodextothatofstudentsonstandardCS1problems,the leenBoothcreated theassembly language and thedesign ofthe
modelranked17thoutof71students,andwasabletoproducevar- assemblerforthefirstARCcomputersatBirkbeckcollegeinLon-
iedsolutionsintermsoflength,syntax,andalgorithmicapproach. don[4].
Theauthorsconcludedbyexpressingtheirsurpriseatthemodel’s Now one no longer had to read anopcodenumber and think
advancedcapabilities,describingtheresultsas“stunning”andin- “call”-onecouldjustwrite“call.”Andmemorylocationscouldnow
dicativeofanemergentexistentialthreattotraditionalmethodsof benamed.Givenwhatprogrammerswantedtodo,havingnames
teachingandlearningintroductoryprogramming. wasbetter.Itlettheprogrammergetsomeoftheknowledgeinthe
Numeroussubsequent papersemerged to present and discuss headandputitoutintotheworld,intotheprogramsourcecode.
themanyimplicationsofLLMsoncomputingeducation[3,8,19]. Nowotherscouldbetterseewhatthecodewassupposedtodo-
Thesehavehighlightedconcernssuchasacademicintegrity,poten- someofitshiddenintentwasmadevisible,readabletoothers.
tialover-relianceonAI,andtheriskofmisleadingoutputs,while
alsoemphasizingtransformativeopportunitieslikegeneratinged- 3.3 High-Level Languages
ucationalresourcesandprovidinginstantfeedback.Therapidim- Onceweacclimatedtoluxurieslikecommentsandmacros,thecom-
provementinLLMcapabilities,suchasthesuperiorperformance munitydidnotstaycontentforlong.Assemblernowbecameknown
ofGPT-4overCodex,underscoresthepotentialofthesemodelsin as“low-level”programming,“low”inthesenseofbeingnearthe
education[19]. hardware.Inreflectingontheinventionof“highlevellanguages”
EducatorandstudentperceptionsofLLMshaverevealedamix Brookswrotein1986,“Surelythemostpowerfulstrokeforsoft-
ofexcitementandconcern.Educatorsaredividedbetweenresist- wareproductivity,reliability,andsimplicityhasbeentheprogres-
ingAItoolusageandembracingthemtoenhancelearning[13,23]. siveuseofhigh-levellanguagesforprogramming.Mostobservers
StudentsappreciatetheefficiencyofAItoolsbutworryaboutover- creditthatdevelopmentwithatleastafactoroffiveinproductivity,
relianceandthepotentialforunderminingfundamentalproblem- andwithconcomitantgainsinreliability,simplicity,andcompre-
solving skills[20, 21].While bothgroupsacknowledge the chal- hensibility”[6].
lenges tolearning thatGenAI poses,they also recognizetherel- ThedesignersofCOBOLthoughtthatmakingtheprogramming
evanceofgenerativeAItoolsincomputingeducationandfuture language more like natural language of the domain of business
careers[19]. wouldimproveit.Whileitshouldbenotedthatsomeinthecom-
Leveraging thestrengthsofgenerative AIwhilemitigatingits munity,suchasDijkstra,ferventlyopposedCOBOLbecauseofits
riskswillrequireinnovativepedagogicalapproaches,includingteach- orientationtowardtheEnglishlanguage,otherslikeMarkHalpern
ingstudentshowtoworkeffectivelywiththesemodels.Thepro- arguedthattheproblemwithCOBOLwasactuallythatitwasnot
ductionoflearningresourceshasbeenwellstudiedalready,forex- orientedtowardEnglishenough!HalpernwritesofDijktra’sposi-
ample,withBalseetal.[2]andMacNeiletal.[16]demonstrating tion:“Hisdiagnosisofthetroublewithpassivesystemsisastute,
theeffectivenessofLLM-generatedcodeexplanationsinsupport- butthecure(insofaraslanguagecanofferone)istomakethepro-
ingstudentlearning,andSarsaetal.[22]andLogachevaetal.[15] grameasiertowrite,nothardertoread”[12].
documentingthepotentialforgeneratingnovelprogrammingex- ItisnotdifficulttoagreewithBrooksandHalpernthatwhen
ercises. More recent efforts have identified the need to help stu- aprogrammerdoesnothavetothinkabout“decrementacounter,
dentsinteractwithLLMs,forexample,bylearninghowtocreate checkregister and branch-not-zero,” butinstead can think “loop
effectiveprompts[7,18]. overtheseitems...,”thatseveralbenefitsaccrue.
3 HISTORYTHROUGHTHELENSOF 3.4 StructuredProgramming
ABSTRACTIONS
StructuredProgramming imposed strictguidelines onhigh-level
Thehistoryofprogramminglanguagesisahistoryoftheinven- languagesbyremovingthego-tostatement.EdsgerDijkstra’slet-
tionsofabstractions.Inthissection,wediscussafewimportant ter “Go To Statement Considered Harmful,”published in CACM
historicalabstractions,recognizingthatitisnotanexclusivelist. inMarch,1968criticizedexcessiveuseof“goto”andincludedthe
admonition[10]:
3.1 MachineCode
...ourintellectualpowersarerathergearedtomas-
Machinecodeenabledthemovefromelectro-mechanicaltoelec- terstaticrelationsandthatourpowerstovisualize
tronic.Itreplacedphysicalpatchcablesandswitchesthatmanip- processesevolvingintimearerelativelypoorlyde-
ulatehardware withsoftware instructionsthat manipulatehard- veloped.Forthatreasonweshoulddo(aswisepro-
ware.However,itisimportanttonotethatevenatthelowestlevel grammersawareofourlimitations)ourutmostto
ofabstractionwithrespecttocomputerhardware,itisstillanab- shortentheconceptualgapbetweenthestaticpro-
straction. gramandthedynamicprocess,tomakethecorre-
spondencebetweentheprogram(spreadoutinthe
3.2 Low-Levellanguages textspace)andtheprocess(spreadoutintime)as
Assemblerprovidesasymbolicrepresentationlayerabovemachine trivialaspossible.
code.Eachmicroprocessorsupportsacustomsetofinstructions. “Shorteningtheconceptualgap”evidentlydoesnotalwaysinvolve
Because of the “nearness” of the hardware to the language, one inventinganewabstraction.DijkstraseemedtothinkitispossiblePromptsFirst,Finally
byremoving anexisting construct,inthiscasethe“go to”state- universallyunderstoodwithinthefieldandprovideasuccinctway
ment. todescribecomplexideas.Similarly,mathematicalequationsand
Fastforwardnowtotoday’subiquitousabstractionoftheexcep- functionsareanunambiguouswaytospecifyanidea.
tion,anevent Developingandteachingaprecisevocabularywillbecomeeven
whichoccursduringthe executionofa program, morecrucialincomputersciencegoingforward.Asprogramming
thatdisruptsthenormalflowoftheprogram’sinstructions.[1] innaturallanguagebecomesthenorm,itwillbenecessaryforstu-
dentstobecomemorecapableofdescribingthefunctionoftheir
Itisalsoreferredtoasa“non-localGOTO.”Dijkstra’scritique
code.Higherlevelconceptssuchasmapping,filtering,piping,and
wastakentoheartatthetimeandthenmanyyearslater,thelan-
exceptionhandlingarepartoftheprofessionalprogrammer’slex-
guagesandconceptualabstractionshadmaturedenoughtoenable
iconbecause they provide an efficient and unambiguous wayto
anewwayofthinkingandimplementingadifferentkindofGOTO
communicate intricate ideas. Educators must focus on instilling
statement, a jump “out, out, out” and back to the invoking con-
thisvocabularyinstudentstoequipthemforeffectivecommunica-
struct.
tionandproblem-solving.Inthisvein,perhapsDijkstrawasright
3.5 Objects allalongaboutneedingpreciselanguage,althoughperhapsnotin
thewayhethoughtitwouldbe.
AbstractDataTypes(ADTs)wereanimportantstepinhelpinga
programmerthinkintermsofhigher-levelconceptsthanfunctions
4.2 DebuggingSkills
ormemory[14].Aqueuehadattributesandmethodsandcouldbe
implemented several different ways. Perhaps ADTs helped pave While Generative AIcan accelerate codingby generating boiler-
thewaytoObjectOrientedprogramming[17].Once“Objects”were plateorevencomplexcodesnippets,thenon-deterministicnature
acceptedasusefulabstractions,educatorsasked,“whentoteach?” ofthesemodelsmeansthaterrorsandunexpectedbehaviorsare
This discussion became known as “Objects First,” some arguing inevitable.Therefore,educatorsmustprioritizeteachingstudents
thatoneshouldnotwaituntilnovices hadthoroughlylearneda debuggingtechniques.Studentsshouldlearntoapproachdebug-
languagebeforeintroducingobjectorientedthinking. ging with a critical eye, questioning the AI’s output and cross-
Inthislight,wephraseourproposalas“PromptsFirst,”arguing referencingitwiththeirunderstandingoftheproblemdomain.
that, just like Objects were finally accepted as “valid,” one only
hadtodecidewhentoteachthatabstraction.Weclaimthatlarge 5 CONCLUSION
languagemodelsarenowatthatpoint-havingearnedaplacein Areviewofprogramminglanguagehistoryshowsthateachnew
programming,itnowonlyremainstoask,“whentoteach?” languageinventionraisedthelevelofabstraction.Fromdipswitches
toassemblerandontohigh-levellanguages,eachnewrepresenta-
4 DISCUSSION
tion enabled us to ignore the “irrelevant features” and focus on
Witheachincreaseoftheabstractionlevelovertime,programmers “moresalient”ones.Eachnewrepresentationopenedupcomputer
wereabletofocusmoreonthepurposeofthecode(whatitdoes) sciencetoagrowingaudiencebyremovingartificialhurdles.
thanonthetechnicaldetails(howitdoesthat).GenerativeAIcon- In[12],Halpern’sfinalchallengewasthis:
tinuesthisprocessofraisingthelevelofabstractionincurrentcom-
Finally,thepossibilityofuser-guidednatural-language
putingconstructs.Thisadvancementoffersnewopportunitiesfor
programmingoffersapromiseofbridgingtheman-
educatorstoemphasizeprogrammingconceptsoversyntax,over-
machinecommunicationgapthatistoday’sgreat-
coming barriers that often demoralize and discourage early pro-
estobstacletowiderenjoymentoftheservicesof
grammers[19].Thisshifttowardsprioritizingthepurposeofthe
thecomputer.
codecanalsobemoreengagingforearlystudents,asithelpsthem
seeaclearconnectionbetweenwhattheylearnandreal-worldim- Designing, describing, and processing state and behavior has
pacts[9]. alwaysbeenchallenging.Butitwasmadeevenmorechallenging
However, GenAI alsointroducesuniquechallenges. First,itis thannecessarybyarbitraryhistoricalrepresentationalconstraints.
clearthatlower-performingnoviceprogrammerscanover-relyon Freedfromthepreviouslynecessaryobsessionwithexactlyhowto
it,disruptingtheirproblemsolvingskillsand leaving themwith doathing,today’sstudentscanspendmoretimeonsalientmat-
an “illusion of competence” [20]. Second, the mapping between ters-theconstructsofprogrambehaviorandthelanguageofthe
levels ofabstractioninGenerative AIisnon-deterministic. Mod- domain.Finally.
elscanmisunderstandnaturallanguageinputsandhallucinatein-
correctcode.For thesereasons, wemustexploreandadoptnew ACKNOWLEDGMENTS
approachesinbothteachingandpracticalapplication. Thisresearch wassupportedbytheResearchCouncilofFinland
(AcademyResearchFellowgrantnumber356114).
4.1 PreciseVocabulary
Toaddresschallengesandmaximizebenefits,awell-definedvocab- REFERENCES
ulary will be essential to convey deeper and more complex con- [1] [n.d.]. The Java™ Tutorials. Retrieved Jun 3, 2024 from
cepts.Forexample,otherfieldsincludingMathematicsandMusic https://docs.oracle.com/javase/tutorial/essential/exceptions/definition.html
[2] RishabhBalse,VirajKumar,PrajishPrasad,andJayakrishnanMadathilWarriem.
excelinthisregard;havingawelldefinednotationtodescribecon-
2023.EvaluatingtheQualityofLLM-GeneratedExplanationsforLogicalErrors
cepts.InMathematics,termslike“differentiation”or“average”are inCS1StudentPrograms.InProceedingsofthe16thAnnualACMIndiaComputeBrentN.Reeves,JamesPrather,PaulDenny,JuhoLeinonen,StephenMacNeil,BrettA.Becker,andAndrewLuxton-Reilly
Conference(Hyderabad,India)(COMPUTE’23).AssociationforComputingMa- withGenerativeAI.InProceedingsofthe2024ACMConferenceonInternational
chinery,NewYork,NY,USA,49–54. https://doi.org/10.1145/3627217.3627233 ComputingEducationResearch-Volume1(ICER’24).AssociationforComputing
[3] BrettA.Becker,PaulDenny,JamesFinnie-Ansley,AndrewLuxton-Reilly,James Machinery,NewYork,NY,USA.
Prather,andEddieAntonioSantos.2023.ProgrammingIsHard-OratLeastIt [16] StephenMacNeil,AndrewTran,ArtoHellas,Joanne Kim,SamiSarsa,Paul
UsedtoBe:EducationalOpportunitiesandChallengesofAICodeGeneration.In Denny, Seth Bernstein, and Juho Leinonen. 2023. Experiences from Us-
Proceedingsofthe54thACMTechnicalSymposiumonComputerScienceEducation ingCodeExplanationsGeneratedbyLargeLanguageModelsinaWebSoft-
V.1(TorontoON,Canada)(SIGCSE2023).AssociationforComputingMachinery, ware Development E-Book. In Proceedings of the 54thACM Technical Sym-
NewYork,NY,USA,500–506. https://doi.org/10.1145/3545945.3569759 posium on Computer Science Education V. 1 (Toronto ON, Canada) (SIGCSE
[4] AndrewD.Booth.2009.ALifeinScience.CNCCNewsletter1,1(2009). 2023).AssociationforComputingMachinery,NewYork,NY,USA, 931–937.
[5] FredPBrooks.1975.TheMythicalMan-Month:EssaysonSoftwareEngineering. https://doi.org/10.1145/3545945.3569785
(1975). [17] DavidA.Moon.1986.Object-orientedprogrammingwithflavors.SIGPLANNot.
[6] FrederickP.Brooks.1986. NoSilverBullets–EssenceandAccidentinSoft- 21,11(jun1986),1–8. https://doi.org/10.1145/960112.28698
wareEngineering.InProceedingsoftheIFIPTenthWorldComputingConference. [18] SydneyNguyen,HannahMcLeanBabe,YangtianZi,ArjunGuha,CarolynJane
1069–1076. Anderson, andMolly QFeldman. 2024. HowBeginning Programmersand
[7] PaulDenny,JuhoLeinonen,JamesPrather,AndrewLuxton-Reilly,Thezyrie Code LLMs (Mis)readEach Other. In Proceedings of the CHI Conference on
Amarouche,BrettBecker,andBrentReeves.2024.PromptProblems:ANewPro- HumanFactorsinComputingSystems(Honolulu,HI,USA)(CHI’24).Associ-
grammingExercisefortheGenerativeAIEra.InProceedingsofthe55thACM ationforComputingMachinery,NewYork,NY,USA,Article651,26pages.
TechnicalSymposiumonComputerScienceEducationV.1(Portland,OR,USA) https://doi.org/10.1145/3613904.3642706
(SIGCSE2024).ACM,NY,USA,7pages. [19] JamesPrather,PaulDenny,JuhoLeinonen,BrettA.Becker,IbrahimAlbluwi,
[8] PaulDenny,JamesPrather,BrettA.Becker,JamesFinnie-Ansley,ArtoHellas, MichelleCraig,HiekeKeuning,NatalieKiesler,TobiasKohn,AndrewLuxton-
JuhoLeinonen,AndrewLuxton-Reilly,BrentN.Reeves,EddieAntonioSantos, Reilly,StephenMacNeil,AndrewPetersen,RaymondPettit,BrentN.Reeves,
andSamiSarsa.2024.ComputingEducationintheEraofGenerativeAI.Com- andJaromirSavelka.2023.TheRobotsAreHere:NavigatingtheGenerativeAI
mun.ACM67,2(jan2024),56–67. https://doi.org/10.1145/3624720 RevolutioninComputingEducation.InProceedingsofthe2023WorkingGroup
[9] PaulDenny,DavidHSmithIV,MaxFowler,JamesPrather,BrettABecker,and ReportsonInnovationandTechnologyinComputerScienceEducation(Turku,Fin-
JuhoLeinonen.2024.ExplainingCodewithaPurpose:AnIntegratedApproach land)(ITiCSE-WGR’23).AssociationforComputingMachinery,NewYork,NY,
forDevelopingCodeComprehensionandPromptingSkills.InProceedingsofthe USA,108–159. https://doi.org/10.1145/3623762.3633499
2024ACMConferenceonInnovationandTechnologyinComputerScienceEduca- [20] JamesPrather,BrentReeves,JuhoLeinonen,StephenMacNeil,ArisoaSRandri-
tion(Milan,Italy)(ITiCSE’24).AssociationforComputingMachinery. anasolo,BrettBecker,BaileyKimmel,JaredWright,andBenBriggs.2024.The
[10] EdsgerWDijkstra.1968.Letterstotheeditor:gotostatementconsideredharm- WideningGap:TheBenefitsandHarmsofGenerativeAIforNoviceProgram-
ful.Commun.ACM11,3(1968),147–148. mers.InProceedingsofthe2024ACMConferenceonInternationalComputingEd-
[11] JamesFinnie-Ansley,PaulDenny,BrettA.Becker,AndrewLuxton-Reilly,and ucationResearch-Volume1(ICER’24).AssociationforComputingMachinery,
JamesPrather.2022.TheRobotsAreComing:ExploringtheImplicationsofOpe- NewYork,NY,USA.
nAICodexonIntroductoryProgramming.InAustralasianComputingEducation [21] JamesPrather,BrentN.Reeves,PaulDenny,BrettA.Becker,JuhoLeinonen,
Conference(VirtualEvent,Australia)(ACE’22).AssociationforComputingMa- AndrewLuxton-Reilly,GarrettPowell,JamesFinnie-Ansley,andEddieAntonio
chinery,NewYork,NY,USA,10–19. https://doi.org/10.1145/3511861.3511863 Santos.2023.“It’sWeirdThatitKnowsWhatIWant”:UsabilityandInteractions
[12] MarkHalpern.1966.Foundationsofthecasefornatural-languageprogramming. withCopilotforNoviceProgrammers. ACMTrans.Comput.-Hum.Interact.31,
InProceedingsoftheNovember7-10,1966,FallJointComputerConference(San 1,Article4(nov2023),31pages. https://doi.org/10.1145/3617367
Francisco,California)(AFIPS’66(Fall)).AssociationforComputingMachinery, [22] SamiSarsa,PaulDenny,ArtoHellas,andJuhoLeinonen.2022. Automatic
NewYork,NY,USA,639–649. https://doi.org/10.1145/1464291.1464360 GenerationofProgrammingExercisesandCodeExplanationsUsingLargeLan-
[13] SamLauandPhilipGuo.2023. From"BanItTillWeUnderstandIt"to"Re- guageModels.InProceedingsofthe2022ACMConferenceonInternationalCom-
sistanceisFutile":HowUniversityProgrammingInstructorsPlantoAdaptas putingEducationResearch-Volume1(LuganoandVirtualEvent,Switzerland)
MoreStudentsUseAICodeGenerationandExplanationToolssuchasChat- (ICER’22).AssociationforComputingMachinery,NewYork,NY,USA,27–43.
GPTandGitHubCopilot.InProceedingsofthe2023ACMConferenceonInter- https://doi.org/10.1145/3501385.3543957
nationalComputingEducationResearch-Volume1(Chicago,IL,USA)(ICER [23] JudySheard,PaulDenny,ArtoHellas,JuhoLeinonen, LauriMalmi,andSi-
’23). Association for Computing Machinery, New York, NY, USA, 106–121. mon.2024. InstructorPerceptionsofAICodeGenerationTools -AMulti-
https://doi.org/10.1145/3568813.3600138 InstitutionalInterviewStudy.InProceedingsofthe55thACMTechnicalSym-
[14] BarbaraLiskovandStephenZilles.1974.Programmingwithabstractdatatypes. posium on Computer Science Education V. 1 (Portland, OR, USA) (SIGCSE
SIGPLANNot.9,4(mar1974),50–59. https://doi.org/10.1145/942572.807045 2024).AssociationforComputingMachinery,NewYork,NY,USA,1223–1229.
[15] EvanfiyaLogacheva,ArtoHellas,JamesPrather,SamiSarsa,andJuhoLeinonen. https://doi.org/10.1145/3626252.3630880
2024. EvaluatingContextuallyPersonalizedProgrammingExercisesCreated