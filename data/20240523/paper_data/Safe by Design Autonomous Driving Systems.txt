Safe by Design Autonomous Driving Systems
Marius Bozga and Joseph Sifakis
Univ. Grenoble Alpes, CNRS, Grenoble INP, VERIMAG, 38000, France
{marius.bozga,joseph.sifakis}@univ-grenoble-alpes.fr
Abstract. Developing safe autonomous driving systems is a major sci-
entificandtechnicalchallenge.ExistingAI-basedend-to-endsolutionsdo
notofferthenecessarysafetyguarantees,whiletraditionalsystemsengi-
neeringapproachesaredefeatedbythecomplexityoftheproblem.Cur-
rently,thereisanincreasinginterestinhybriddesignsolutions,integrat-
ing machine learning components, when necessary, while using model-
based components for goal management and planning.
We study a method for building safe by design autonomous driving sys-
tems,basedontheassumptionthatthecapabilitytodriveboilsdownto
the coordinated execution of a given set of driving operations. The as-
sumption is substantiated by a compositionality result considering that
autopilotsaredynamicsystemsreceivingasmallnumberoftypesofvis-
tas as input, each vista defining a free space in its neighborhood. It is
shown that safe driving for each type of vista in the corresponding free
space,impliessafedrivingforanypossiblescenarioundersomeeasy-to-
checkconditionsconcerningthetransitionbetweenvistas.Thedesigned
autopilot comprises distinct control policies one per type of vista, artic-
ulated in two consecutive phases. The first phase consists of carefully
managingapotentiallyriskysituationbyvirtuallyreducingspeed,while
the second phase consists of exiting the situation by accelerating.
The autopilots designed use for their predictions simple functions char-
acterizing the acceleration and deceleration capabilities of the vehicles.
Theycoverthemaindrivingoperations,includingenteringamainroad,
overtaking, crossing intersections protected by traffic lights or signals,
and driving on freeways. The results presented reinforce the case for
hybridsolutionsthatincorporatemathematicallyelegantandrobustde-
cision methods that are safe by design.
Keywords: autonomousdrivingsystems·safebydesign·assume-guarantee
techniques.
1 Introduction
The development of trustworthy autonomous driving systems (ADS) is today a
majorscientificandtechnicalchallengethatcouldhaveaconsiderableeconomic
and societal impact. It will also be an important step towards building systems
with human-level intelligence. ADS need to combine extensive cognitive capa-
bilities for situation awareness and management of multiple objectives, while
meeting stringent requirements for safety and adaptability.
4202
yaM
02
]AM.sc[
1v59911.5042:viXra2 Marius Bozga and Joseph Sifakis
At present, there is no viable approach allowing to bring satisfactory solu-
tionstothisproblem.Ontheonehand,model-basedapproaches,whichwehave
successfully applied to various safety-critical systems such as flight controllers,
arehamperedbycomplexityissues.Ontheotherhand,theAI-basedend-to-end
solutionsalreadyavailable[29,19]donotofferthenecessaryguaranteesofsafety
due to the impossibility of explaining neural networks [10]. The immaturity of
the state of the art is also confirmed by the current debate on the deployment
of autonomous cars in urban environment and real-world experience supporting
the view that ADS still have a long way to go before offering acceptable safety
guarantees [11].
Currently there is an increasing interest in hybrid design solutions [12,25]
combining the best from each approach and integrating ML components, when
necessary,e.g.,forperception,whileusingmodel-basedcomponentsforgoalman-
agement and planning. One of the main challenges of hybrid solutions lies in
building a model of the vehicle’s external environment that accurately describes
alltheinformationrelevanttoitsoperation.Suchamodelisessentialfordeciding
which of a set of goals are applicable and, for each of these goals, for generating
planstoachievethem.Goalmanagementdealswithavarietyofpossiblyconflict-
ing goals subject to different timing constraints. We are distinguishing between
short-term goals, such as keeping the vehicle on a trajectory and avoiding col-
lision, long-term goals, such as driving to a destination and medium-term goals
concerning the performance of a given driving operation, such as overtaking,
merging into a main road or crossing and intersection.
Many studies separate the problem of perception from that of decision-
making. They assume that the autopilot has access to a model of the external
environment in the form of a map that represents the relevant geometric details
of the environment, as well as the signaling equipment and the obstacles around
the vehicle, with their positions and kinematic attributes. The formalization of
maps and their underlying concepts has been the object of numerous studies in-
cluding proposals of standards such as [1,2]. Modeling maps as extended graphs
is a common idea adopted by many works, one of the main problem being to
build maps by composition of heterogeneous elements and data e.g., [20,8,4].
In [6], we study a multilevel semantic framework for the description of maps
and their properties, based on metric graphs. The framework allows maps to be
specifiedasacompositionofbuildingblockssuchasdifferenttypesofroadsand
junctions. It also shows how the traffic rules for each of these building blocks
induce corresponding safety constraints to be respected by autopilots.
The design of autopilots for autonomous vehicles has been the subject of
studies originating in robotics and control theory. Some studies focus on archi-
tecturesandtheirhierarchicalstructure,fromthefastesttasksatthelowestlevel
to the slowest tasks at higher levels, e.g. [26]. In the field of architectures, the
NIST 4D/RCS reference model [3] provides a basis for the design, engineering
and software integration of intelligent systems for unmanned ground vehicles.
The reference model integrates planners for a set of tasks, each dedicated to a
specificobjectiveforpredefinedoperations.ItimplicitlyassumesthatthedrivingSafe by Design Autonomous Driving Systems 3
ability can be summed up as the combination of skills required to perform a set
ofelementarydrivingoperations.Ourworkisalsobasedonsuchanassumption,
whichallowsustodecomposetheautopilotbehaviorintoasetofspecificcontrol
policiesthatcanbedesignedandverifiedseparately.Validatingthisassumption
poses two problems: the first is to prove the correctness of the composition, i.e.,
that if the control policies are safe so is the resulting autopilot behavior. The
other is completeness, i.e., that the set of control policies considered is sufficient
to drive safely in all circumstances.
Of particular interest to this study are correct-by-construction techniques,
where the autopilot or some of its features are constructed from a set of proper-
ties derived from system requirements. There is considerable work on controller
synthesis from a set of system properties, usually expressed in linear temporal
logic, see for example [14,22,28,30,31]. These techniques have been extensively
studiedinthefieldofcontrol.Theyconsistofrestrictingthecontrollablebehavior
ofthesysteminteractingwithitsenvironmentsothatthedesiredpropertiesare
satisfied. However, their practical value is limited by their high computational
cost, which depends in particular on the type of properties and the complexity
of the system’s behavior.
An alternative to synthesis is to achieve correctness by design as a result
of composing component properties expressed as ”assume-guarantee” contracts
specifying a causal relationship between components and their environment: if
the environment satisfies the ”assume” part of the contract, the state of the
component will satisfy the ”guarantee” part, e.g., [5,9,17]. A prerequisite for
contract-based design is the decomposition of global system requirements into
contracts,andtheexistenceofsuitabletechniquesfortheirimplementation[27].
There are a number of theoretical frameworks that apply mainly to continu-
ous or synchronous systems, particularly for analysis and verification purposes
[16,21,24]. They suffer from computational limitations because, in the general
case, they involve the symbolic solution of fixed-point equations [16]. Further-
more, they only apply to systems with a static architecture, which excludes
reconfigurable dynamic systems, such as autonomous systems.
This paper builds on previous results [7] concerning a correct coordination
method for autonomous driving systems that allows the construction of a Run-
time coordinating a set of autonomous vehicles based on their positions and
kinematic attributes. The method considers an ADS as a dynamic system in-
volving vehicles moving in a static environment modelled as a map [6]. A key
idea is that the vehicles are bounded to move within their corresponding al-
located free spaces computed by the Runtime so as the whole system satisfies
givenpropertiesincludingcollisionavoidanceandtrafficrules.Themainresultis
that,givenasetoftrafficrules,theRuntimecancalculateauthorizationsforthe
coordinated vehicles in such a way that the resulting system behavior respects
the traffic rules by design. It is established by showing that the composition of
assume-guarantee contracts is an inductive invariant that entails ADS safety.
This work adopts the same perspective of correct-by-design, but consid-
ers that there is no overall coordination of vehicles. Instead, they drive au-4 Marius Bozga and Joseph Sifakis
tonomously,as in real life, withlimitedknowledge of their physical environment
and surrounding obstacles. The approach adopted is based on the assumption
that the complexity of ADS design can be mastered by factoring it into three
dimensions.
Locality of context: ADS operate in complex environments taking on a
wide variety of configurations, each of which can affect the behavior of the sys-
tem. Therefore, ADS safety is strongly dependent on the context in which ve-
hicles operate. The traffic infrastructure can be seen as the composition of a
finite number of patterns comprising different types of roads and junctions with
theirsignalingequipment.Wecanthereforeimaginethatavehicle’ssafetypolicy
is the composition of elementary policies, each of which is used to drive safely
according to the corresponding basic road patterns.
Locality of knowledge: A vehicle’s driving policy is based only on local
knowledge of the ADS state due to limited visibility. It must therefore drive
safely, taking into account the obstacles closest to it, delimited by a visibility
zone.Inthisway,thecollectivebehaviorofvehiclesinanADScanbeunderstood
andanalyzedasthecompositionofsmallersetsofvehiclesgroupedaccordingto
proximity and visibility criteria.
Rights-based responsibility: ADS are a special kind of distributed sys-
tems where each agent is responsible for managing a space in its planned route
definedbytrafficrules.Hence,thereisnointeractionbetweenthevehicles.Traf-
fic rules guarantee that if each vehicle drives safely in the free space determined
dynamicallybyitsrights,thenthewholesystemissafe.Thisprincipleofrights-
based responsibility[23,13] greatly simplifies the validation problem as theinter-
action between vehicles is unidirectional (flow-oriented). It is enough to show
that each vehicle drives safely in its own free space.
Weshowthattheabovedecompositionprinciplesreducethegeneralproblem
to the design of a vehicle autopilot capable of driving responsibly in a limited
number of contexts and configurations involving a relatively small number of
other vehicles and objects.
Wecallvista theinputofanautopilotgeneratedbyitsperceptionfunctionaf-
teranalysisandinterpretationoftheinformationprovidedbythesensors.Thus,
a vista defines the state of the environment of a vehicle as well as the applicable
traffic rules. The state of the environment includes the positions and kinematic
attributes of other vehicles, as well as information on signaling equipment and
its status. A vista also delimits an area where the vehicle has to act responsibly
assuming that the mobile agents in this area behave in accordance with traffic
regulations. A vehicle’s vista depends on the visibility determined by various
factors in its environment, including topology and physical obstacles, as well as
weather and light conditions. A simple analysis shows that, as a vehicle moves,
its autopilot reacts to inputs that are changes in the state of its environment,
characterized by three different types of vistas.
1. road vistas where there are no crossroads in the vehicle’s area of visibility,
andtheautopilotistaskedwithtakingintoaccounttheobstaclesinitsroute
ahead;Safe by Design Autonomous Driving Systems 5
2. merging vistas when the vehicle’s route joins a road or a lane where oncom-
ing vehicles have a higher priority and it must therefore give way to these
vehicles;
3. crossingvistas wherethevehicle’sroutecrossesajunctionaccessibletoother
vehicles, and therefore, the vehicle must comply with the traffic rules appli-
cable in this context.
A key idea of this work is that to guarantee safety of an ADS, it is sufficient
to ensure safe driving of the vehicles involved for each types of vista types. The
main result is obtained by compositionality, in two main steps.
First, we provide safe driving policies for different contexts in each type of
vista.Givenareferencevehicle,calledegovehicle,safedrivingforavistarequires
a specific driving operation to overcome potential conflicts while respecting the
applicable traffic rules. We argue that critical situations can be characterized
by configurations involving, in addition to the ego vehicle, an oncoming vehicle
whoseroutemayintersectthatoftheegovehicleandafrontvehiclelocatedafter
the intersection on the ego’s route. The vehicle’s driving policy should take into
account its dynamic characteristics, in particular its braking and acceleration
capacity, as well as the relationships with surrounding obstacles, in particular
their speeds and their distances from locations where collisions can occur.
Secondly, based on the assumption that over the course of a journey, the
changing perceived reality is a succession of vistas, we show that if a vehicle can
drive safely for each vista type, under certain simple temporal conditions, the
resulting behavior is safe.
The paper is structured as follows. Section 2 presents the overall approach
includingdefinitionofbasicconcepts,thetypesofvistasandcorrespondingcon-
trol policy principles. Section 3 provides control policies for three vista types
and demonstrates their safety. Section 4 shows the correctness of the method
by proving compositionality of the policies for the different types of vistas. Sec-
tion5concludesbysummarizingthemainresultsobtainedanddiscussingfuture
developments with a view to their effective application.
2 The Approach
2.1 Environment modeling with maps
Following the idea presented in [6], we build contiguous road segments from a
set S equipped with a partial concatenation operator · : S ×S → S ∪{⊥},
a length norm ||.|| : S → R and a partial sub-segment extraction operator
≥0
.[.,.] : S ×R ×R → S ∪{⊥}. Given a segment s, ||s|| represents its length
≥0 ≥0
and s[a,b] for 0 ≤ a < b ≤ ||s||, represents the sub-segment starting at length a
from its origin and ending at length b. Segments can be used to represent roads
at different levels of abstraction. The highest level may ignore the form for the
segmentandgiveonlyitslength.Thelowestlevelcanbeatwo-dimensionalarea.
An intermediate level can be a curve showing the form of the road and making
abstraction of its width.6 Marius Bozga and Joseph Sifakis
def
We use metric graphs G = (U,E,S) to represent maps, where U is a finite
set of vertices, S is a set of segments and E ⊆U×S⋆×U is a finite set of edges
labeledbynon-zero length segments(denotedS⋆).Foranedgee=(u,s,u′)∈E
we denote •e d =ef u, e• d =ef u′, e.seg d =ef s. We call a metric graph connected if a
path exists between any pair of vertices.
def
We consider the set Pos = U ∪{(e,a) | e ∈ E, 0 ≤ a ≤ ||e.seg||} of the
G
positions definedbyametricgraph.Notethatpositions(e,0)and(e,||e.seg||)are
considered equal respectively to positions •e and e•. We denote by p−→s p′ the
G
existenceofans-labellededge route betweensucceedingpositionsp=(e,a)and
p′ =(e,a′)inthesameedgeewhenever0≤a<a′ ≤||e.seg||ands=e.seg[a,a′].
Moreover, we denote by p ⇝s p′ the existence of an s-labelled route between
G
arbitrary positions p, p′, that is, ⇝ d =ef ( →− )+ the transitive closure of
G G
edgeroutes.Finally,wedenotebyp′−pthedistance frompositionptoposition
p′ defined as 0 whenever p = p′ or as the minimum length among all segments
labeling routes from p to p′ or as +∞ if no such route exists. Whenever G is
fixed in the context, we will omit the subscript G for positions Pos and routes
G
→− or ⇝ .
G G
A connected metric graph G=(U,E,S) can be interpreted as a map, struc-
tured into roads and junctions, subject to additional assumptions:
– Werestricttometricgraphswhichare2D-consistent[6],meaningintuitively
theycanbedrawninthe2D-planesuchthatthegeometricpropertiesofthe
segmentsarecompatiblewiththetopologicalpropertiesofthegraph.Inpar-
ticular,iftwodistinctpathsstartingfromthesamevertexu,meetatanother
vertex u′, the coordinates of u′ calculated from each path are identical. For
the sake of simplicity, we further restrict to graphs where distinct vertices
are located at distinct points in the plane, and moreover, where no edge is
self-crossing(meaningactuallythatdistinctpositions(e,a)ofthesameedge
e correspond to distinct points).
– Weconsiderthatifthesegmentsoftwoedgese ande intersectatdistances
1 2
a and a from their starting points, then for the respective positions of the
1 2
point of intersection we have (e ,a )=(e ,a ).
1 1 2 2
Wenowdefinethejunctions ofamapastheclassesofanequivalencerelation
▷◁ on edges, obtained as the transitive closure of the relation generated by
pairsofedges(e ,e )suchthat:eithere ande intersectortheendpointof
1 2 1 2
e and e is the same vertex (e • =e •). That is, a junction is a connected
1 2 1 2
sub-graph such that for each edge e there exists another edge e with the
1 2
same endpoint or intersecting e . Note that if we remove the junctions of a
1
map we obtain sets of roads, where a road is a sequence of non-intersecting
edges whose initial vertices have in-degree 1. We assume that junctions are
equipped with additional signals to regulate traffic on the edges, e.g., traffic
lights, stop signs, etc.
Intheremainderofthepaper,weconsiderafixedmetricgraphG=(U,E,S)
altogether with the junction relationship ▷◁. Also, we extend the junction rela-
tionships from edges to their associated positions, that is, consider (e ,a ) ▷◁
1 1Safe by Design Autonomous Driving Systems 7
def
(e ,a ) = e ▷◁e whenever e ▷◁e . Finally, we denote by r ⊎r the property
2 2 1 2 1 2 1 2
thatroutesr ,r inGarenon-intersecting,thatis,theirsetsofpositionsaredis-
1 2
joint and moreover not belonging to the same junction(s), except for endpoints.
2.2 ADS as dynamic systems
An ADS is a dynamic system involving a set of vehicles C, a set of regulatory
signals H, and a map G that represents the environment where the signals are
locatedandthevehiclescanmove.Weusethetermobstacle torefertoavehicle
or a signal.
The state q of an ADS is the union of the states of its vehicles and signals,
def def def
q = q ∪q , where q = {q } and q = {q } where:
C H C c c∈C H h h∈H
def
– The state of a vehicle c, is a tuple q = ⟨p ,s ,v ,V ,...⟩, where p is the
c c c c c c
positionofconthemap,s isasegmentlabelingarouteonthemapstarting
c
at p , v is the speed of c, V is its speed limit enforced at position p .
c c c c
def
– The state of a signal h, is a tuple q = ⟨p ,type ,...⟩, where p is its
h h h h
position on the map and type denotes its type. We consider signals of the
h
following types:
• stop or yield signs guarding junctions, with a critical distance attribute
cd defining the length of the route segment they are protecting,
h
• traffic lights guarding junctions, with a critical distance attribute cd ,
h
a color attribute color taking values red, yellow or green, and time-to-
h
color attributes ttred , ttgreen ; note that ttred = 0 if color = red
h h h h
and otherwise ttred > 0 is keeping the strictly positive duration until
h
color became red (same for ttgreen ),
h h
• speed limits, with an attribute V defining the enforced speed limit.
h
def
An ADS evolves from an initial state q[0] = q [0]∪q [0] and through states
C H
def ∆t
q[t] = q [t]∪q [t], with q[t]→q[t+∆t] where ∆t is an adequately chosen time
C H
step. The latter can be the period of the autopilots.
In the context of an ADS state, we introduce some additional notations on
the underlying metric graphs G. For a vehicle c and non-negative value d we
denote by p + d the unique position p located ahead on the route of c at
c c
distance d, that is, formally satisfying p
sc⇝[0,d]
p. Moreover, for any such two
c
positions p = p + d , p = p + d we write p ∼ p′ iff d ∼ d for any
1 c c 1 2 c c 2 1 c 2 1 2
∼∈{<,≤,≥,>}.
Visibilityzone: Forareferencevehiclecalledego vehicle,wedefinetheconcept
of vista characterized by its state and the states of the obstacles in its visibility
zone.Thevisibilityzoneisdefinedbyanareaofthemaparoundtheegovehicle
using two types of parameters (Figure 1):8 Marius Bozga and Joseph Sifakis
pe
se
p
sa1pa1
f1
p1
p2
p
sa2 f2
pa2 p
f3
Fig.1. Vistaofanegovehiclewithpositionp androutes andtwoarrivingvehicles.
e e
– The frontal visibility of the ego vehicle on its route up to a front distance
fd(q )isdelimitingtheintervalinwhichtheego’sautopilotcanperceivethe
e
obstacles on its route. The distance fd(q ) depends on factors such as road
e
curvature, obstacles in view and weather conditions at position p .
e
– Thelateral visibility oftheegovehiclewhenitsroutemeetsaroadorlaner,
is the distance from the junction point at which the ego vehicle can perceive
vehicles arriving from r. We denote by ld (q ) this distance.
r e
These parameters delimit the visibility zone by points on the route of the
ego vehicle and also on the possibly intersecting roads from which vehicles can
arrive.
Vistas: Given an ADS, a vista for an ego vehicle with state q is a triple
e
def
vs = ⟨q ,q ,q ⟩ where
e F A
– q is the state of the ego vehicle.
e
def
– q is the ordered set of the states of front obstacles F = {f ,...,f } ⊆
F 1 n
C∪H located on the route of the ego vehicle in its visibility zone such that
p ≤ p < ··· < p = p + fd(q ). We consider that the last visible
e e f1 e e fn e e e
obstacle f is a fictitious vehicle at the front visibility limit.
n
– q is the set of the states of arriving vehicles A ⊆ C, at most one per road
A
joining the route of the ego vehicle in its frontal visibility zone. If there is
no real vehicle arriving on the road r within the corresponding visibility
distance ld (q ), then we consider a fictitious vehicle a with state q =
r e r ar
⟨p ,s ,v ,V ⟩ defined such that (i) p is the position on the segment
ar ar ar ar ar
representing the road r at distance ld (q ) from the junction point, (ii) s
r e ar
is the segment between p and the junction point and (iii) v =V = the
ar ar ar
speed limit enforced at p on this route. Thus, for vehicles a arriving from
ar r
a road r, the position p of the junction point is such that:
r
∃d ≤fd(q ). ∃d ≤ld (q ). p + d =p + d =p .
e e r r e e e e ar ar r r
Note that while the vista vs includes the states of all visible obstacles in
the ego vehicle’s route, it only includes the state of a single arriving vehicleSafe by Design Autonomous Driving Systems 9
q[t] G,qc1[t] qc1[t+∆t]
q[t] q[t] G,qc2[t] qc2[t+∆t] q[t+∆t]
···
q[t] G,qcm[t] qcm[t+∆t]
vsc1(q[t]) qc1[t] qc1[t+∆t]
q[t] G,q[t] vs(q[t]) vsc2(q[t]) qc2[t] qc2[t+∆t] q[t+∆t]
···
vscm(q[t]) qcm[t] qcm[t+∆t]
Fig.2. ADS as a dynamic system composed of the environment and the autopilots.
joiningorcrossingitsroutewithinthefrontalvisibilitylimit.Theprecautionary
principle requires us to consider fictitious vehicles at the limits of the visibility
zone. These fictitious vehicles can be a frontal obstacle at distance fd(q ), or a
e
vehicle arriving from a road or lane joining its route at distance ld (q ). In this
r e
way, visibility constraints are implicitly taken into account in a vista.
ADS as dynamic systems: An ADS with m vehicles, is a dynamic system
using a map G and having states q[t] that can change after time ∆t to q[t+∆t].
AtthetopofFigure2weshowadecompositionoftheADSasadynamicsystem
with autopilots one for each vehicle c, which knowing the global system state
q[t] at time t and the map G, compute their new state q [t+∆t] at time t+∆t.
c
At the bottom of Figure 2, this architecture is further refined with the au-
topilots and a component representing the environment of the vehicles. The
environmentcomponentreceivesthestatesofthevehiclesattheendofthecycle
and computes the global state of the ADS using the map and the knowledge
of the state of its signals. Furthermore, it produces for the c vehicle autopilot
the corresponding vista vs (q[t]) from the global state q[t] taking into account
c
visibility parameters.
2.3 The three basic vista types
As explained in the Introduction, we consider that the autopilot of the ego
vehicle receives basic types of vistas as input, each requiring specific operations
implemented by the corresponding control policies (Figure 3):
○1 Road vistas are of the form vsd =ef ⟨q ,q ,∅⟩ where there is no junction
e F
in the frontal visibility area of the ego vehicle. Note that road vistas can be
simplifiedinthefollowingmanner.Considertheorderedsetofthefrontobstacles
F and remind that the last visible obstacle is a fictitious vehicle at the front
visibility limit. Clearly, these obstacles are either vehicles or signals (e.g., speed10 Marius Bozga and Joseph Sifakis
ve ve
pv ee
se
pv ff pe vs aep
f1 p
pv ff 22 p vae se
p f1 p v f2
sa sa
pa pa p
f2
Fig.3. Road, merging and crossing vistas - critical sections in gray.
limits). The ego vehicle is responsible for driving safely in the space on its route
until to the closest visible vehicle, hence all the obstacles after this vehicle can
be omitted as irrelevant.
○2 Merging vistas describe situations where the route of the ego vehicle
def
merges into a main road. They are of the form vs = ⟨q ,q ,q ⟩ such that there
e F a
exists a merging position p satisfying
∃d ,d ,d. p + d =p + d =p and s [d ,d +d]=s [d ,d +d]
e a e e e a a a e e e a a a
and moreover p ≤ p ≤ p< p where f is a yield or stop sign. That is, all
e e f1 e e f2 1
theelementsofF otherthanf arelocatedafterthemergingpointp.Amerging
1
vista can be simplified by replacing q by q where ⟨q ,q ,∅⟩ is the simplified
F F′ e F′
road vista for ⟨q ,q ,∅⟩. To avoid collision, we assume that the signal f is at
e F 1
critical distance cd on the route of the ego vehicle before the merging point.
f1
Notethattheegovehicledealswithmergingvistaswhenitsroutemergesinto
ahigher-priorityroadorwhenitchangeslanes.Inparticular,overtakinginvolves
two successive merging operations: one consists of moving from the initial lane
to an adjacent lane, the other of returning to the initial lane after a phase of
drivinginastraightlinetoensurethatitisfarenoughawayfromtheovertaken
vehicle.
○3 Crossing vistas describe situations where the route of the ego vehicle
def
crosses a main road. They are of the form vs = ⟨q ,q ,q ⟩ such that there
e F A
exists a crossing position p satisfying
∃d ,d . p + d =p + d =p
e a e e e a a a
forallarrivingvehiclesa∈A.Weassumethatf isasignalsuchasatrafficlight
1
orastopsignlocatedbeforepandprotectingacriticaldistancecd ,thatis,the
f1
def
length of s in the intersection. A simplified crossing vista svs = ⟨q ,q ,q ⟩
e e F′ A
is such that ⟨q ,q ,∅⟩ is a simplified road vista. We can define sub-types of
e F′
crossing vistas. One is when f is a traffic light, another when f is a yield or a
1 1
stop sign.
Based on this decomposition into types of vistas, the autopilot can be archi-
tectured as the serial composition of two components (Figure 4):
– a Vista Manager component that receives vistas and produces simplified
vistaswiththeirtypeandrelevantparameterssuchastheprotectingsignals
for crossing vistas and the positions where routes may intersect;Safe by Design Autonomous Driving Systems 11
vse(q[t])=(qe,qF,qA) VSM
G,q[t]
svs,type
qe[t+∆t] CPM
drive∆v,∆d,∆ϕ
Fig.4. Architecture of the autopilot.
ve
de=p h−pe
pe se
p
cd h v f
h
va sa p d f =p f −p p f
da=p−pa
pa
Fig.5. A vista and its characteristic parameters.
– a Control Policy Manager that receives the simplified vistas and their type,
applies the corresponding control policy and produces the next state of the
ego vehicle, sent to the environment component responsible for composing
the next vista for each vehicle. The Control Policy Manager also generates
commandstothedrive-by-wireplatformtomodifythespeedby∆v andthe
steering angle by ∆ϕ, in distance ∆d. Note that the proposed controllers
only calculate the speed variation ∆v and distance ∆d. We assume that the
corresponding steering angle ∆ϕ can be estimated from the curvature of the
road segment at the current position and the distance traveled ∆d.
2.4 Characteristic parameters of vistas
Avistafortheegovehicledescribesasituationinvolvingapotentialobstacleon
its route and calling for operation implemented by a specific control policy. In
its simplest and general form, a vista involves (Figure 5):
– the ego vehicle at position p , with its route s and speed v
e e e
– anarrivingvehicleaatspeedv ,locatedatpositionp onitsroutes ,which
a a a
encounters the route s at position p
e
– a signal h at position p on the route s , located before and protecting the
h e
obstacle p with critical distance cd i.e., p < p≤ p + cd
h h e e h e h
– a front vehicle f at position p on the route s located after the obstacle at
f e
a distance d =p −p.
f f12 Marius Bozga and Joseph Sifakis
It is easy to check that the three different types of vistas match this model.
For road vistas the obstacle is just a speed limit signal. Merging vistas cover
two cases. The first is when the obstacle can be a yield sign and the road of
the ego vehicle merges into a road of higher priority where the arriving vehicle
is traveling. The second case is where the ego vehicle moves from one lane to
another in which the arriving vehicle is traveling. In both cases, we assume that
there is a front vehicle after the merging point. Crossing vistas cover also two
cases.Thefirstiswhentheobstacleisthetrafficlightsprotectinganintersection,
in which case arriving vehicles are irrelevant. The second case is an intersection
where the crossing ego vehicle faces a yield or stop sign.
3 Control Policies for Vista Types
3.1 Assumptions about the vehicle’s dynamics
As explained, an autopilot for a given vista, issues commands that aim at con-
trolling the speed of the vehicle based on its knowledge of the dynamics of the
vehicle as an electromechanical system. This knowledge is important for pre-
dicting vehicle behavior and its ability to execute given commands aimed at
modifying its kinematic state. To avoid detailed modeling of the vehicle as a
dynamic system, see for example [15], we assume that we know for each vehicle
the next two functions that are sufficient to decide feasibility of control:
1. Thebrakingfunction B(v)thatgivesthedistanceneededtobrakefromspeed
v to speed 0. We assume the braking function is strict and monotonic, that
is, B(0)=0 and B(v )>B(v ) for any v >v .
1 2 1 2
2. The speed control function C(v,VL) which gives the pair (∆v,∆d) of the
greatest speed variation ∆v and the associated distance traveled ∆d after
∆t, if any achievable from speed v such that 0 ≤ v +∆v and v +∆v,∆d
compliant to speed limit constraints VL as explained below.
It is clear that the speed limit constraints impose changes in speed which must
becompatiblewithvehicle’sdynamicscharacterizedbythetwofunctionsBand
C.WeassumethatthespeedlimitconstraintsVLencounteredbyavehicleonits
route are specified as sequences of pairs ⟨(d ,V )⟩ of distance d and speed
i i i=0,n i
limitV (seeFigure6),meaningthatthespeedlimitV isenforcedintheinterval
i i
[d ,d ) for all i ∈ [0,n] (and where implicitly 0 = d < d < ... < d <
i i+1 0 1 n
def
d = +∞). To comply with speed limit constraints, the above-mentioned
n+1
functions must meet the following requirements:
def
– First, the C function is only defined for input arguments v and VL =
⟨(d ,V )⟩ that satisfy the controllability condition B(v) ≤ d +B(V ),
i i i=0,n i i
that is, the vehicle is able to slow down from speed v to V in distance less
i
than d , for all i∈[0,n].
i
def
– Second, in this case, the output pair (∆v,∆d) = C(v,VL) shall satisfy, for
all i∈[0,n]:Safe by Design Autonomous Driving Systems 13
• v+∆v ≤V whenever d ≤∆d<d ,
i i i+1
• ∆d+B(v+∆v)≤d +B(V ) whenever ∆d≤d ,
i i i
• ∆d≤d whenever V =0.
i i
That is, the new speed v+∆v satisfies the controllability condition with re-
specttospeedlimitsstillaheadaftertravelingthedistance∆dandmoreover,
∆d never exceeds the distance to a speed 0 limit.
These joint requirements of B and C functions allow us later to establish safety
invariance properties relating the speed of the vehicle, its braking capacity and
its distance to front obstacles (speed limit signals, moving vehicles, etc). Their
effectiveusetodefinespeedcontrolpoliciesforspecificdrivingsituationswillbe
explained in the next sections.
As an example, we show how these functions can be defined in a simple
case.Assumeforthesakeofsimplicitythattheautopilotcanonlyselect,during
every∆tperiod,amongdifferentconstantacceleration/decelerationvaluesinthe
interval [−b ,a ]⊆R, that is, between a maximal deceleration rate −b
max max max
andamaximalaccelerationratea .InthiscasethebrakingfunctionB and
max ex
the speed control function C could be defined as follows:
ex

v∆t/2 if v <b ∆t
 max
B (v)d =ef v∆t−b ∆t2/2 +
ex max
 B (v−b ∆t)if v ≥b ∆t
ex max max
C (v,⟨(d ,V )⟩ )d =ef (a∗∆t,v∆t+a∗∆t2/2) where
ex i i i=0,n
a∗ d =ef min max{a∈[−b ,a ] | v+a∆t≥0, ∆d=v∆t+a∆t2/2,
i=0,n max max
d >0 and ∆d+B (v+a∆t)≤d +B (V ) or
i ex i ex i
d =0 and v+a∆t≤V }
i i
That is, the function B defines the distance needed to decrease from speed v
ex
to speed 0 when only constant decelerations are used for braking during fixed
periods∆t.ThefunctionC definestheoptimalspeedvariationasthemaximal
ex
variation satisfying all the speed limit constraints.
It is an easy check that, if the inputs given to the function C satisfy
ex
the controllability condition B (v) ≤ d +B (V ) then, the sets of accelera-
ex i ex i
tion/deceleration values over which the maximum is computed are not empty,
for every speed limit constraint (d ,V ). That is, the set of values a compliant
i i
with the ith constraint contains, at least:
– a wheneverd >0andv∆t+a ∆t2/2+B (v+a ∆t)≤d +B (V ),
max i max ex max i ex i
– 0 whenever d >0 and v∆t+B (v)≤d +B(V ) or d =0 or v ≤V ,
i ex i i i i
– −b whenever b ∆t≤v,
max max
– (V −v)/∆t whenever 0<v−V <b ∆t.
i i max
For example, Figure 6 represents the speed limit constraints VL = ⟨(0m,
100km/h), (40m,50km/h), (140m,0km/h)⟩ with three thick horizontal lines,
respectively100km/hduring40meters(interval[0,40)),followedby50km/hfor14 Marius Bozga and Joseph Sifakis
100km/hat[0,40)
100
50km/hat[40,140)
0km/hat[140,-)
80
60
40
20
0
0 20 40 60 80 100 120 140 160
d (m)
Fig.6. Speed control illustration according to speed limits VL
100 meters (interval [40,140)), and then stop at 0km/h at 140 meters (interval
[140,−)). For each speed limit, below the solid line of the same color is the
corresponding controllability region, assuming b = −3.4m/s2 and ∆t = 1s.
max
Moreover, the area below the dotted line of the same color is the part of the
corresponding controllability region from which the vehicle is controllable after
applying the maximal acceleration a =2.5m/s2 for ∆t.
max
The figure shows also the possible speed variations and the associated dis-
tance for respectively initial speeds of 30, 60 and 90km/h. For initial speed of
30and60km/hthevehicleiscontrollablewithrespecttothethreespeedlimits,
whereas for initial speed 90km/h it is not possible to respect the speed limit
of 50km/h. The figure shows in green for 30 and 60km/h, possible choices of
speed variations and the corresponding traveled distance during ∆t. Note that,
whereaseveryaccelerationpreservescontrollabilityforinitialspeed30km/h,the
maximal acceleration a = 2.5m/s2 for 60km/h results in a speed exceeding
max
the controllability limit.
3.2 The follow policy and travel time prediction
Using the braking B and speed control C functions, we now define the primitive
follow policy and the related travel time prediction function tt. These primitives
are used next to define the more sophisticated control policies for vista types.
The follow(vs,p) policy takes as input a position p located in the current
vista vs of the ego vehicle ahead on its route. This policy controls the speed of
theegovehiclesothatitfollowssafelythepositionpi.e.,bykeepingthedistance
p−p as small as possible while remaining safe.
e
First,thepolicyobservesthespeedlimitsenforcedontheegovehicleroutein
itsvistavstillthepositionp.Todoso,itreliesonthefunctionspeed-limits(vs,p)
)h/mk(
vSafe by Design Autonomous Driving Systems 15
definednexttocomputethespeedlimitconstraintsVLintheappropriateformat
defined in subsection 3.1.
def
speed-limits(⟨q ,q ,q ⟩,p) =
e F A
let ⟨h ,...,h ⟩←⟨h∈F | type =speed limit,p < p⟩
1 k h h e
return ⟨(0,V ),(p −p ,V ),...,(p −p ,V ),(p−p ,0)⟩
e h1 e h1 hk e hk e
That is, the current speed limit V is applied at the current position, the next
e
speed limit V is applied from its position p (if any), etc, and the speed limit
h1 h1
0 is applied at position p.
Second, the follow(vs,p) policy uses the speed control function C given the
currentspeedv andthespeedlimitconstraintsVLontheroutetocomputethe
e
commands ∆v and ∆d for the driving platform (as explained in subsection 2.3
and illustrated in Figure 4):
def
follow(vs,p) =let VL←speed-limits(vs,p)
drive C(v ,VL)
e
Recalling that the speed control function C is a partial function, note that
follow(vs,p) executes correctly only if C is called with parameters satisfying
the controllability property. To this end, the next proposition establishes the
pre/postconditions for the correct execution of follow(vs,p) in terms of vs and p
according to the assumptions about the B and C functions.
Proposition 1. Let ⟨h ,...,h ⟩ be the ordered set of speed limit signs from the
1 k
front obstacles F in vs before p. The policy follow(vs,p) executes correctly only
if
1. v ≤V , that is, current speed is lower than the current speed limit,
e e
2. p + B(v )≤ p + B(V ), that is, speed limit preservation with respect to
e e e e hi e hi
any speed limit h located such that p < p < p,
i e e hi e
3. p + B(v )≤ p, that is, safety distance preservation to the position p.
e e e e
In this case, the speed variation ∆v and the distance traveled ∆d satisfy, for any
def
speed limit signal h as above (where taking implicitly p = p):
i hk+1
4. v +∆v ≤V if p + ∆d< p ,
e e e e e h1
5. v +∆v ≤V if p ≤ p + ∆d< p ,
e hi hi e e e e hi+1
6. p + ∆d+ B(v +∆v)≤ p + B(V ) if p + ∆d≤ p ,
e e e e e hi e hi e e e hi
7. p + ∆d+ B(v +∆v)≤ p.
e e e e e
Proof. Thefollow(vs,p)policycallsthespeedcontrolfunctionCwiththecurrent
def
speedv andthespeedlimitconstraintsVL = ⟨(0,V ),⟨(p −p ,V )⟩ ,(p−
e e hi e hi i∈[1,k]
p ,0)⟩ to obtain the speed variation ∆v. Then, the conditions 1–3 above are
e
simplyrestatingthecontrollabilityconditions,thatis,thepreconditionsguaran-
def
teeing a valid return value (∆v,∆d) = C(v ,VL), relative to the current speed
e
and the position of the ego vehicles with respect to front obstacles in the vista,
respectively:16 Marius Bozga and Joseph Sifakis
– B(v )≤0+B(V ) (condition 1),
e e
– B(v )≤p −p +B(V ) for all i∈[1,k] (condition 2),
e hi e hi
– B(v )≤p−p +B(0) (condition 3)
e e
In a similar manner, the conditions 4–7 are restating the postcondition of the
successful call, respectively:
– v +∆v ≤V if 0≤∆d<p −p (condition 4),
e e h1 e
– v +∆v ≤V if p −p ≤∆d<p −p for some i∈[1,k] (condition 5),
e hi hi e hi+1 e
– ∆d+B(v +∆v)≤p −p +B(V )foralli∈[1,k]suchthat∆d≤p −p
e hi e hi hi e
(condition 6),
– ∆d+B(v +∆v)≤p−p +B(0)(condition7)becausethelastlimitconstraint
e e
enforces the speed 0 at distance p−p . ⊔⊓
e
Finally, consider a typical vista vs involving a front vehicle f at position p
f
and a signal h located at position p , protecting a critical area situated between
h
theegovehicleandf (asinFigure5).Usually,thedecisionfortheegovehicleto
crossornotthepositionp betweenp andp dependsonthetimeneededtogo
h e f
from p to p + cd when safely following f. This travel time can be predicted
e h e h
ifweassumetheegovehiclewilldrivecontinuouslyaccordingtothefollow(vs,p)
policy at least until it reaches the position p + cd .
h e h
That is, as follow(vs,p) is a deterministic policy, we can effectively predict
the time to travel from p to any position p′ such that p < p′ ≤ p by using
e e e e
the function tt(vs,p′,p) defined below:
tt(vs,p′,p)d =ef let v ←v , VL←speed-limits(vs,p), x←p′−p , t←0
e e
while x>0 do
let (∆v,∆d)←C(v,VL),
v ←v+∆v, x←x−∆d, t←t+∆t,
VL←⟨(max(d −∆d,0),V ) | (d ,V )∈VL, ∆d≤d ⟩
i i i i i+1
return t
This function “simulates” driving according to follow(vs,p) and sums up the ∆t
steps until the ego vehicle travels the distance x = p′ −p . Note that, in this
e
computation we assume that the leading position p is not changing. In typical
situations, p may correspond to the position p of a front vehicle f moving
f
forward. In any case, however, consequent predictions for the traveling time to
p′ can either remain unchanged or decrease (but never increase) over time.
3.3 Control policies for vista types
Each vista requires a specific operation when the ego vehicle approaches the
obstacle.Theaimoftheoperationistocleartheobstaclesafely,respectingtraffic
regulations and, of course, avoiding accidents with the arriving vehicle and the
front vehicle. The operation corresponding to a vista is logically characterized
by scenarios comprising two successive phases:Safe by Design Autonomous Driving Systems 17
1. Acautionphase duringwhichtheegovehicleapproachestheobstacle,reduc-
ing its speed if necessary, and waiting for conditions to be favorable to clear
theobstacle,e.g.,approachingamerge,approachingacrossingorremaining
in the same lane before overtaking.
2. Aprogressphase duringwhichtheegovehicleclearstheobstacleaftercheck-
ingthatthereisnoriskofcollisionwiththearrivingvehicleorthevehiclein
front,e.g.,toovertakeavehicle,enteramainroad,crossanintersection.The
progress phase therefore, consists of moving as quickly as possible to avoid
collision with the arriving vehicle, while retaining the possibility of avoiding
a collision with the front vehicle.
An important issue in autopilot design is the interplay between cautious
behavior and progress. An extremely cautious autopilot may be safe but if it
neglectstheopportunitytoprogressitcandegradeperformanceresultinginbad
roadoccupancyandpossiblydeadlocks.Hereareafewexamplesofover-cautious
control policies: driving at low speed on a freeway; stopping before a yield sign
evenifthepriorityroadisclear;notovertakingaslowvehicleinfront,suchasa
truck,whentheegovehicle’sperformanceallowsitandtheoutsidelaneisclear;
stopping before a green light.
In our design, we make a clear distinction between cautious driving and
progress by providing a clearance condition that enables the transition between
the two phases. We define control policies as processes run by the autopilot to
control the speed of the vehicle by generating every ∆t a corresponding speed
change ∆v. They are defined on the basis of the iterative application of the
primitivefollowpolicy.Controlpoliciesarewrittenassimpleprogramspol ,one
T
for every type of vista T, with guarded commands of the form
def
pol (vs) = [init(cid:55)→...] if g (cid:55)→pol (vs,...)|···|g (cid:55)→pol (vs,...) fi
T 1 1 k k
Their execution should be understood in relation to the architecture of the au-
topilot (see Figure 4) proposed in subsection 2.3. Every ∆t, as long as the input
vistas vs sent to the autopilot have the same type T, the corresponding policy
pol executes the command whose guard is true. A guard is a state predicate
T
depending on the states of the vehicles and signals of the input vista. Whenever
thetypeoftheinputvistavschangestosomeT′ ̸=T atsomestep∆t,thenext
policy pol is first (re)initialized and then takes over with the execution of the
T′
commands as usual.
3.4 Policy for road vistas
Theroadpolicyforasimplifiedroadvistavs=⟨q ,q ,∅⟩isthedirectapplication
e F
of follow(vs,p ), where f is the last (leading) front obstacle in F i.e., either a
f
realorfictitiousvehiclebeforethefrontalvisibilitylimitoftheegovehicleinvs.
def
road(vs) = if true (cid:55)→follow(vs,p ) fi
f18 Marius Bozga and Joseph Sifakis
3.5 Policies for merging vistas
Merging with yield sign Themerge-yieldpolicyappliesforasimplifiedmerg-
ing vista vs=⟨q ,q ,q ⟩ as illustrated in Figure 7.
e F a
In the caution phase, the ego vehicle approaches according to follow(vs,p )
h
where h is the yield sign protecting the merging point. That is, the ego vehicle
ensures B(v ) ≤ d and can stop if needed at critical distance cd before the
e h h
mergingpoint.Intheprogressphase,theegovehiclemovestowardsthemerging
point according to follow(vs,p ) where f is the leading front vehicle in F.
f
ve
de
pe se cd h v
f
p
h
va sa d f p f
da
pa
Fig.7. Merging vista with yield sign
The clearance condition allowing to switch from the caution to the progress
phase is defined as follows. For the arriving vehicle a, we assume that it can
drive at the maximal speed limit V on its road and it is at distance d from
a a
the merging point. So, if the ego vehicle decides to progress and so switch to
the follow(vs,p ) policy, the time to reach the merging point would be at most
f
tt(vs,p + cd ,p ). Within this time the arriving vehicle will have traveled
h e h f
distance V ·tt(vs,p + cd ,p ). So the remaining distance from the merging
a h e h f
pointwillbed −V ·tt(vs,p + cd ,p ).Thisdistanceshouldbelargeenough
a a h e h f
for a safe brake, therefore, B(V )≤d −V ·tt(vs,p + cd ,p ).
a a a h e h f
The merge-yield policy is therefore specified as follows. Note that the switch-
ingbetweenthetwophasesiscontrolledbythebooleanclearanceflagcl initially
set to false and updated continuously during the caution phase.
def
merge-yield(vs) = init(cid:55)→ cl ←false, h←yield-sign(F)
if ¬cl (cid:55)→ follow(vs,p ), cl ←(V ·tt(vs,p + cd ,p )+B(V )≤d )
h a h e h f a a
| cl (cid:55)→ follow(vs,p ) fi
f
Lane change The lane change vista vs=⟨q ,q ,q ⟩ is illustrated in Figure 8.
e F A
In the caution phase, the ego vehicle follows the front vehicle f on its lane.
1
The ego vehicle can initiate the progress phase of the lane change whenever the
following conditions hold, respectively:
1. the arriving vehicle a can stop safely behind ego’s position, B(V )≤d ,
2 a2 a2
2. the ego vehicle can stop safely behind the front vehicle f on the other lane,
2
that is, B(v )≤d ,
e f2Safe by Design Autonomous Driving Systems 19
3. neither the front vehicle f nor the back vehicle a are currently performing
1 1
a lane change.
va2 da2 d
f2
v
f2
va1 ve v
f1
pa2 pa1 pe p
f1
p
f2
Fig.8. Lane change vista
Theseconditionsprovidethenecessaryguaranteesfortheegovehicleto(be-
gin to) drive safely in the transition between the two lanes, as required for the
lanechange.Tocheckcondition(3)weassumethatvehiclessignallanechanges,
for example by using flashing lights.
In the progress phase, the ego vehicle follows the front vehicle f while also
2
performing effectively the lane change. This policy is essentially the same as
follow(vs,p ) but also includes moving safely sideways into the corresponding
f2
lane as soon as possible and activating the flashing lights. When the lateral
movement is completed, the policy falls back to follow(vs,p ). The lane change
f2
policy is formalized as follows.
def
lane-change(vs) = init(cid:55)→ cl ←false
if ¬cl (cid:55)→ follow(vs,p ), cl ←(B(V )≤d and B(v )≤d )
f1 a2 a2 e f2
| cl (cid:55)→ follow(vs,p ) fi
f2
3.6 Policies for crossing vistas
Crossing with yield sign The crossing vista with yield sign is illustrated in
Figure 9. It includes the ego vehicle traveling at speed v at a distance d from
e e
the point of intersection with a main road protected by a yield sign h. In this
operation,theegovehicleshouldapproachcautiouslymoderatingitsspeeduntil
it decides to progress if there is no risk of collision with some arriving vehicle
atdistanced andwithallowedmaximalspeedV .Additionally,itshouldavoid
a a
collision with front vehicles at distance d after the intersection. We suppose
f
that around the intersection point there is a critical area delimited by a critical
distance cd such that the presence of two vehicles in this area is considered a
h
potential accident.
For the caution phase, the ego vehicle is driving according to follow(vs,p ),
h
thatis,guaranteeingB(v )≤d .Intheprogressphase,theegovehicleisdriving
e e
according to follow(vs,p ). Hence, the time needed by the ego vehicle to cross
f
and get out of the critical section is tt(vs,p + cd ,p ). In this time, the arriv-
h e h f
ing vehicle will have traveled maximal distance V ·tt(vs,p + cd ,p ). So, the
a h e h f
remainingspaceshouldbeenoughtobrakeifneededtoavoidcollisioninthecrit-
icalarea.ThisgivestheclearanceconditionV ·tt(vs,p + cd ,p )+B(V )≤d
a h e h f a a20 Marius Bozga and Joseph Sifakis
ve
de
pe se cd
h
p
h
va
sa
v
f
da d
f
pa p
f
Fig.9. Crossing vista with yield sign
forswitchingbetweenthetwophases.Thecrossingwithyieldpolicyistherefore
formalized as follows:
def
cross-yield(vs) = init(cid:55)→ cl ←false,h←yield-sign(F)
if ¬ cl (cid:55)→ follow(vs,p ), cl ←(V ·tt(vs,p + cd ,p )+B(V )≤d )
h a h e h f a a
| cl (cid:55)→ follow(vs,p ) fi
f
Traffic lights The crossing vista vs = ⟨q ,q ,q ⟩ illustrated in Figure 10 in-
e F A
volves the ego vehicle approaching a traffic-light protected intersection. It also
involves a signal h of type traffic light with a state variable color taking values
h
red, yellow and green.
We assume that we know the duration T of the yellow light. Furthermore,
y
we assume that the traffic lights of the intersection have an “all red” phase of
knowndurationT whereallthelightsareredbeforesomelightpassesfromred
ar
to green. These constants are very important for respecting safety regulations
requiring that when the ego vehicle enters the critical section the lights should
be either green or yellow. In addition, a vehicle entering the intersection must
exit before a light turns green on a transverse road.
sa va
da
pa
ve se v f
pe de p h cd h d f p f
Fig.10. Crossing vista with traffic lights
In the caution phase, the ego vehicle must maintain its speed so that it can
stop before the traffic light, i.e. B(v ) ≤ d . The clearance condition for the
e e
progress phase is twofold:
– First, the ego vehicle should not see red light which means even if the lights
switchtoyellowrightafterthedecisiontocrossistaken,theegovehiclewillSafe by Design Autonomous Driving Systems 21
reach the entrance of the intersection before the lights turn to red. That is
tt(vs,p ,p )≤T .
h f y
– Second, the time needed to cross the critical section, that is to reach the
position p + cd after the junction must be less that T +T , that is,
h e h y ar
tt(vs,p + cd ,p )≤T +T .
h e h f y ar
– Third, the junction is clear of vehicles, that is, noarriving vehicle a is in the
junction except if located at its respective entry h and not moving v =0.
a a
The crossing with traffic lights policy is therefore formalized as follows.
def
cross-traffic-light(vs) = init(cid:55)→ cl ←false,h←traffic-light(F)
(cid:0)
if ¬cl (cid:55)→ follow(vs,p ), cl ← color =green and
h h
tt(vs,p ,p )≤T and tt(vs,p + cd ,p )≤T +T and
h f y h e h f y ar
(cid:94) (cid:1)
(p =p ⇒(p =p ∧v =0)
a∈A
a h a ha a
| cl (cid:55)→ follow(vs,p ) fi
f
Crossing with all-way stop The crossing vista vs=⟨q ,q ,q ⟩ involves the
e F A
ego vehicle approaching an intersection protected by a stop sign o as illustrated
in Figure 11. We assume the intersection is all-way stop, that is, all its entries
are actually protected by stop signs.
stop stop sa va
ve se stop
da
pa
v f
pe de p h cd h stop d f p f
Fig.11. Crossing vista with all-way stop
The cross-stop policy includes three phases. In the first caution phase, the
egovehicleapproachesthejunctionsuchthattostopatpositionofthestopsign
p . Then, in the second caution phase the ego vehicle waits at the stop position
h
until (i) the intersection is clear of vehicles and (ii) ego is the earliest arrived
among the waiting vehicles. Then, in the third progress phase, ego crosses the
intersection by following its leading front vehicle f from F.
In order to specify and implement the condition (ii) above, we assume that
q includes a time variable st (stop time) that records the exact time when the
e e
vehicle stops. Also, we remind that the ▷◁ relation holds for positions belonging
to the same junction, as introduced in subsection 2.1.22 Marius Bozga and Joseph Sifakis
The cross-stop policy is therefore formalized as follows:
def
cross-stop(vs) = init(cid:55)→ cl ←false,h←stop-sign(F)
if p < p (cid:55)→ follow(vs,p )
e e h h
| p =p ∧¬cl (cid:55)→ follow(vs,p ),
e h h
(cid:94) (cid:0) (cid:1)
cl ← p ▷◁p =⇒ (p =p ∧v =0∧st <st )
a∈A
e a a ha a e a
| cl (cid:55)→ follow(vs,p ) fi
f
Notethatwetacitlyexcludethepossibilitytoobservethesamestoptimefor
two vehicles and hence to mutually block the progress over the junction. This
can be eventually achieved by using an additional arbitration protocol e.g., a
total priority order between junction entries.
4 Correctness of the Method
We will use a compositional approach for guaranteeing safety, regardless the
number of vehicles and the map characteristics. For doing that, we first define
a concept of free space for vehicles depending on their current vista and control
policy. Then, we show that the vehicles can adapt their speed depending on
their free space, that is, are always driving safely while remaining within their
free space. Moreover, we show that the proposed vista management and control
policies guarantee the free spaces stay disjoint throughout the execution, and
thus ensure the absence of collision between vehicles at any time.
The proof of correctness is, however, subject to few additional mild assump-
tions, listed here for the sake of completeness:
(A1) The merging points, crossing points and the junctions of the map are
neatly separated by road segments. Thus, the frontal visibility of every
vehicle contains at most one critical position i.e., a merging, a crossing or
a junction entry-point. Also, no such critical positions exist on the arriv-
ing roads, with the exception of the entry points belonging to the same
junction, if any. In particular, this assumption implies that the transition
from one policy to another is always to/from the road policy. Thus, the
behavior of the Control Policy Manager can be modeled as a mode au-
tomatonwhereeachmodecorrespondstotheapplicationofoneparticular
type of policy, as illustrated in Figure 12.
(A2) The frontal and lateral visibility do not retract. That is, p + fd(q )≤
e e e e
p′ + fd(q′) and ld (q )≤ ld (q′) for every vehicle e, at any consecutive
e e e r e e r e
positions and states p ,p′,q ,q′ respectively, for every arriving road r in
e e e e
itsvista.Moreover,avehiclelocatedatsomeentrypointofajunctionhas
full visibility over all the positions of that junction.
(A3) Speed limit signals are neatly separated and moreover, the limits never
increase when approaching junctions and/or any critical road segments.
Thisassumptionismandatoryfortheconservativeevaluationoftheclear-
ance conditions.Safe by Design Autonomous Driving Systems 23
(A4) The time period ∆t is small enough to guarantee v ·∆t ≤ B(v), for all
v ≥ V > 0 where V is the minimal speed limit used on roads. For
0 0
example, if V = 5km/h and B(v) ∼ v2/(−2b ) for b = −3.4m/s2
0 max max
this assumption reduces to ∆t ≤ 200ms. The assumption is mandatory
for guaranteeing the vehicles remain in their free spaces at every cycle, as
defined next.
T T∈{merge-yield,
lane-change,
caution cross-yield,
cross-traffic-light,
road [clearance] cross-stop}
progress
Fig.12. Refined behavior of the Control Policy Manager.
We remind that the behavior of an ADS is characterized by all the possible
execution sequences ⟨q[t]⟩ consisting of successive states reached every ∆t.
t=n∆t
We assume that vehicles operate according to their specific vista policies, as
introduced previously. That is, at every step ∆t, every vehicle e applies the
corresponding caution or progress policy step corresponding to its vista vs.
4.1 Safe vistas and safe states
def def def
Letq = q[t]beanADSstateandebeavehicle.Letrespectivelyvs = vs (q) =
e
⟨q ,q ,q ⟩ be the current vista (of some type T) and pol (vs) be the control
e F A T
def
policy applied by e in vs. Consider q = ⟨p ,s ,v ,V ,...⟩. Then, we define
e e e e e
– the front lead obstacle fo as the obstacle from F whose position is followed
e
by e in the current execution step of pol (vs), that is, either
T
• the signal h protecting the merging or crossing (e.g., yield sign, traffic
light, stop sign, etc) during the caution phase, or
• the last (closest) front vehicle f during the progress phase of pol (vs)
T
def
– the limit position π = min (p ,p + B(V ),(p + B(V )) ) where
e e fo
e
e e e h e h h∈Fsl
def
F = {h∈F | type =speed-limit, p < p }
sl h h e fo e
– the free space of e as the route fs
d =ef
p
se⇝[0,ℓ]
π where
ℓd =ef
π −p .
e e e e e
In other words, the limit of free space is determined by the strongest constraint
resulting either from the position of the front obstacle, or from the distances
required to comply with speed limits. Let us observe that p ≤ π ≤ p ≤
e e e e fo e
e24 Marius Bozga and Joseph Sifakis
p + fd(q ), that is, the free space never exceeds the position of the front lead
e e e
obstacle,andconsequentlyofthefrontalvisibilitylimitofe(becausetheobstacle
fo is one of the front obstacles from F, visible in the vista vs, see Figure 13).
e
ve v f′
pe se πe πa p f′
va sa v
f
pa p
f
Fig.13. Examples of vistas (gray) and free spaces (yellow)
We call a vista vs of type T safe if I (vs)∧I (vs) hold where
1 2
def
I (vs) =(p + B(v )≤ π )
1 e e e e e
(cid:26)
I 2(vs)d =ef ( trfo uee =h∧p e ≤ e p h)∨(p h+ ecd h < e p fo e ∧C T) i if
f
T
T
̸= =r ro oa ad
d
where C is provided in Table 1, for different types T.
T
I (vs) ensures the speed of the e vehicle is adapted to its free space in its vista
1
vs. I (vs) ensures the lead obstacle fo is consistently defined with respect to
2 e
the execution phase of the policy pol (vs) for merging or crossing vista vs. The
T
two terms of the disjunction correspond to the caution and the progress phases
respectively. For the caution phase, the safety condition ensures that the free
spaceislimitedbytheprotectingsignalhandhencenotintersectingthecritical
sectionofthejunctionormerging.Intheprogressphase,however,thefreespace
may expand over the critical section. In this case, the condition C provides the
T
additional guarantees for having non-intersecting free spaces.
Table 1. Specific safety conditions for merging and crossing vistas
T C
T
merge-yield, cross-yield V ·tt(vs,p + cd ,p )+B(V )≤d
a h e h foe a a
cross-traffic-light p ≤ p =⇒ (tt(vs,p ,p )<ttred )∧
(cid:86)e e h h foe h
tt(vs,p + cd ,p )<ttgreen ∧
(cid:86)a∈A h e h foe ha
p ▷◁p =⇒ (p =p ∧v =0)
a∈A a h a ha a
(cid:86)
cross-stop p ▷◁p =⇒ (p =p ∧v =0∧st <st )
a∈A a h a ha a e a
We call a state q safe if all the vistas are safe, for all vehicles e.
We call a state q compliant to speed limits if v ≤V for all vehicles e.
e eSafe by Design Autonomous Driving Systems 25
Lemma 1. A safe state is compliant to speed limits and ensures disjoint free
spaces for all vehicles.
Proof. As the vista of every vehicle e is safe it holds p + B(v ) ≤ π . By
e e e e
definition of the limit position it holds π ≤ p + B(V ). Hence, B(v )≤B(V )
e e e e e e e
and so v ≤V . Therefore, the state is compliant to speed limits.
e e
By contradiction, suppose two vehicles c , c have intersecting free spaces.
1 2
First,considerthatp belongstothefreespaceofc ,thatis,p < p < π .
c2 1 c1 c1 c2 c1 c1
This implies c belongs to the front obstacles of c which is moreover located
2 1
before fo because π ≤ p . But this is impossible by the definition of fo
c1 c1 c1 fo c1 c1
which is either the nearest protecting signal h or the nearest front vehicle to c .
1
Second, consider there exists a common position p belonging to the two free
spaces, that is, p < p< π and p < p< π . This can happen only if
c1 c1 c1 c1 c2 c2 c2 c2
p is a merging or crossing position of the routes of c and c . Let T , T be the
1 2 1 2
types of vistas of c , c respectively. We consider the following cases, the others
1 2
being symmetric:
– T = merge-yield, T = road: that is, c must give way to c on the merging
1 2 1 2
atpositionp.Asthefreespaceofc extendsbeyondpthatmeansc isinthe
1 1
progressphase,thus,followingafrontvehiclefo locatedbeyondthecritical
c1
section,thatis,afterp + cd .Also,c isperceivedasanarrivingvehiclein
h c1 h 2
the vistaof c . Sincethe mergingvista of c is safeit satisfies theassociated
1 1
invariant,hencewehaveV ·tt(vs ,p + cd ,p )+B(V )≤d ).This
c2 c1 h c1 h fo
c1
c2 c2
implies B(V ) ≤ d and consequently π < p, thus contradicting the
c2 c2 c2 c2
assumption that the two free spaces intersect.
– T = cross-yield, T = road: identical to the previous case.
1 2
– T = T = cross-traffic-light: the free spaces could intersect only if the two
1 2
vehicles c and c are in the progress phase. If at least one of them is in the
1 2
junction (i.e., c ) then the safety condition for the other (i.e. c ) is violated.
1 2
That is, the 3rd constraint fails for the vista safety of c whenever p ▷◁p .
2 c1 h
Ifnoneofc orc hasyetenteredthejunction,theirsafetyconditionswould
1 2
require for both of them to have the traveling time to their respective traffic
lights lower than the time to pass to red, that is, the 1st constraint. But
this would mean both of the two traffic lights have a non-red color, which is
forbidden.
– T =T = cross-stop: the free spaces could intersect only if the two vehicles
1 2
c and c are in the progress phase. But then, if at least one of them is
1 2
already in the junction, the safety condition of the other one is violated,
as in the previous case. Also, if both are at their entry points, the safety
conditions of their vistas would require for both of them to have the lowest
stop time, which is impossible. ⊔⊓
4.2 Preservation of safe vistas
Let respectively q d =ef q[t], q′ d =ef q[t+∆t] be two consecutive ADS states. Let
e be a vehicle with states q d =ef ⟨p ,s ,v ,V ,...⟩, q′ d =ef ⟨p′,s′,v′,V′,...⟩ and
e e e e e e e e e e26 Marius Bozga and Joseph Sifakis
vistas vs d =ef vs (q) d =ef ⟨q ,q ,q ⟩, vs′ d =ef vs (q′) d =ef ⟨q′,q′ ,q′ ⟩ at q and
e e F A e e F′ A′
q′, respectively. Let T, T′ be the types of the two vistas above and pol (vs),
T
pol (vs′) the corresponding control policies.
T′
Letrespectivelyfo ,fo′ bethefrontleadobstaclesofeaccordingtoitsvistas
e e
vs, vs′. We call the step from q to q′ non-intrusive for e if either p ≤ p
fo e fo′
e e
or p′ + B(V′) ≤ p . That is, either the position of the front obstacle is
e e e e fo′ e
progressing on the route of e, or it can change arbitrarily as long as its distance
to p′ is greater than B(V′).
e e
We are now ready for proving two key preservation properties. The next two
lemmasgivetheconditionsforpreservationofvistasafety,assumingrespectively,
the types of the vistas do not or do change between q and q′.
Lemma 2. If the vista vs is safe, the states q and q′ are compliant to speed
limits, the step from q to q′ is non-intrusive for e and vs′ has the same type as
vs then, the vista vs′ is safe.
Proof. I (vs′).Theconditionp + B(v )≤π isactuallyequivalenttoconditions
1 e e e e
def
1–3 of Proposition 1 when considering the (lead) position p = p . Then,
fo
e
– conditions 4–5 of Proposition 1 guarantee v′ ≤V′ depending on the current
e e
applicable speed limit
– condition 6 of Proposition 1 guarantees p′ + B(v′) ≤ p +B(V ) for the
e e e h h
speed limits h∈F such that p′ ≤ p < p
sl e e h e fo e
– condition 7 of Proposition 1 guarantees p′ + B(v′)≤ p
e e e e fo e
– the step from q to q′ being non-intrusive for e guarantees p ≤ p or
fo e fo′
e e
p′ +B(V′)≤ p .
e e e fo′ e
Using all the above we can infer I (vs′) that is
1
p′ + B(v′)≤ π′ d =ef min (p ,p′ + B(V′),(p + B(V ))
e e e e e e fo′ e e e e h e h h∈F s′ l
where F′ = {h ∈ F′ | h speed limit,p < p }. In particular, observe that for
sl h fo′ e
any speed limit h ∈ F′ that is not taken into account in F we have p′ +
sl sl e e
B(v′)≤ p < p < p +B(V ).
e e fo e e h e h h
I (vs′)First,assumefo =h∧p ≤ p ,thatis,thepolicypol (vs)isinthe
2 e e e h T
caution phase for vista vs. Two situations can happen during the step:
– no clearance: then, at the next vista vs′ we still have fo′ =h and we know
e
from the previous point that p′ + B(v′) ≤ p . Then, we obtain immedi-
e e e e fo e
ately p′ ≤ p , that is, I (vs′) holds for the caution phase of pol (vs′).
e e h 2 T
– clearance:then,atthenextvistavs′wewillhavefo′ =f forsomefrontvehi-
e
cle f located beyond the critical section, that is, p + cd ≤ p . Moreover,
h e h e f
as the clearance condition holds at vs for pol (vs) we can check that the
T
specificconditionC holdsatvs′,foreverytypeofmergingorcrossingvista
T
T. That is, we obtain that I (vs′) holds for the progress phase of pol (vs′).
2 TSafe by Design Autonomous Driving Systems 27
Second, assume p + cd ≤ p ∧C , that is, the policy pol (vs) is in the
h e h e fo e T T
progressphaseatvistavs.Then,weobtainthatp + cd ≤ p ifp ≤ p .
h e h e fo′ fo e fo′
e e e
This latter condition holds if the step is non-intrusive and moreover, assuming
therearenoentrypointslocatedimmediatelyaftertheendofthecriticalsection,
thatis,Assumption(A1).Also,wecancheckthatthespecificconditionC holds
T
atvs′ aswell.Inparticular,weusethatthestatesq,q′ arespeedcompliantand
moreoverthespeedlimitsarenon-increasingwhenapproachingcriticalroadseg-
ments,thatis,Assumption(A3).Inaddition,weusethefollowingmonotonicity
property of tt():
tt(vs′,p,p )≤tt(vs,p,p )−∆t
fo′ fo
e e
for any position p between p and p provided p ≤ p . That is, the time
e fo fo e fo′
e e e
to reach a position can only improve due to the moving forward of the front
obstacle. ⊔⊓
Lemma 3. If the vista vs is safe, the states q and q′ are compliant to speed
limits, the step from q to q′ is non-intrusive for e and vs′ has a different type
than vs then, the vista vs′ is safe.
Proof. I (vs′): as in the previous lemma. I (vs′): First, consider T = road and
1 2
T′ ̸= road. The change from the road policy to any other merging or crossing
policyisperformedbecausethefirstvisibleobstaclechangesfromafrontvehicle
f (in vs) to a signal h (in vs′). This implies p < p , otherwise vs would not
f e h
have been a road policy. We know for the road policy that p′ ≤ p , that is,
e e f
the e vehicle must be able to stop behind the front vehicle f. Consequently,
fo′ =h∧p′ ≤ p holds in vs′, that is, I (vs′) holds on the first case.
e e e h 2
Second, consider T ̸=road and T′ ̸=T. That is, the e vehicle is in a merging
or crossing vista vs and, while being in the progress phase, it goes beyond the
signalhandreceivesanothervistavs′ atthenextstep.ByAssumption(A1)we
knowthatallcriticalregionsofthemaps(thatis,mergings,crossings,junctions,
etc) are separated by road segments. Henceforth, T′ =road unless the e vehicle
is perceiving another signal h immediately after treating the vista vs, which is
impossible. Therefore, I (vs′) is trivially satisfied as vs′ is a road vista.
2
The next lemma gives a property about the evolution of the limit position
and the derived free space in a step.
Lemma 4. If the vista vs is safe, the step from q to q′ is non-intrusive for e,
then π ≤ π′, that is, the free space of e is non-retracting between q and q′.
e e e
Proof. In general, recall that minX ≤ minY iff ∀y ∈ Y ∃x ∈ X. x ≤ y. There-
fore, let us consider the terms used in the min-definition of π′, respectively
e
– p : as the step from q to q′ is non-intrusive we know that p ≤ p or
fo′ fo e fo′
e e e
p′ + B(V′) ≤ p . In the first case we are done (as p occurs in the
e e e e fo e′ fo e
min definition of π ). In the second case we are also done as p is not the
e fo′
e
minimal value for the definition of π′.
e28 Marius Bozga and Joseph Sifakis
– p′+ B(V′):wehaveeitherV =V′,thatis,thespeedlimitdoesnotchange,
e e e e e
or V ̸= V′. In the first case, p + B(V ) occurs in the min definition of
e e e e e
π and moreover p ≤ p′. In the second case, V′ = V for some speed
e e e e e h
limit h ∈ F visible for the ego vehicle e in state q. But then, p + B(V )
sl h e h
occurs in the min definition of π and moreover p ≤ p ≤ p′. Hence,
e e e h e e
p + B(V )≤ p′ + B(V′).
h e h e e e e
– p + B(V ) for h∈F′ : we have either h∈F or h∈F′ \F . In the first
h e h sl sl sl sl
case,wearedone,asthesametermoccursonbothsides.Inthesecondcase,
we have p ≤ p < p +B(V ). ⊔⊓
fo e h e h h
e
4.3 Preservation of state safety
Letrespectivelyq d =ef q[t],q′ d =ef q[t+∆t]betwoconsecutiveADSstates.Wesay
that the step from q to q′ has no gaps if for any vehicle e, p′ ∈fs , that is, the
e e
e vehicle moves within its free space.
Lemma 5. If q is safe then, the step from q to q′ has no gaps and is collision-
free.
Proof. Letfixsomevehiclee.Rememberthatthevehicleeisfollowingthefront
leading obstacle fo in the current execution step. Therefore, it must be able to
e
stop at fo . We distinguish two cases. First, if the limit position π is equal to
e e
p the vehicle must therefore be able to stop at π hence, it moves within its
fo e
e
free space. Otherwise, the limit position π is strictly smaller than p and we
e fo
e
further distinguish two sub-cases:
– π = p + B(V ): then, the maximal speed of e during the step could be
e e e e
V ≥V , and using Assumption (A4) we obtain V ·∆t≤B(V ) hence, the e
e 0 e e
vehicle moves in its free space
– π = p + B(V ) for some speed limit h located ahead on the route of e:
e h e h
then, the maximal speed of e during this step could be V′ ≥ V ≥ V such
h 0
that B(V′) = (p + B(V ))−p . Again, using assumption (A4) we obtain
h e h e
V′·∆t≤B(V′) which implies that the vehicle e moves within its free space.
Inconclusion,thestephasnogaps.Asq issafe,byLemma1thefreespacesare
disjoint. Hence, the step is collision-free. ⊔⊓
Lemma 6. Ifq issafethen,thestepfromq toq′ isnon-intrusiveforallvehicles.
Proof. Bycontradiction,assumethestepfromqtoq′isintrusiveforsomevehicle
e, that is, we p < p and p < p′ + B(V′). This means that the front
fo′ e e fo e fo′ e e e e e
leading obstacle has shifted backwards and is moreover located below the speed
limit range p′ + B(V′).
e e e
Weshalldistinguishtwocases,dependingonthenatureoffo′.First,consider
e
that fo′ is a signal h. But then, h was already in the visibility range at state
e
q and, as p < p it has been already considered (i.e., cleared) in the caution
h fo
e
phase of the policy.Safe by Design Autonomous Driving Systems 29
Second,considerthatfo′ isavehicle.Iffo′ isthefictitiousvehiclelocatedat
e e
thefrontvisibilitylimitthen,thevisibilitylimithasretractedfromtheprevious
state, where the position p was visible. This contradicts Assumption (A2).
fo
Otherwise, as vehicles are neve er moving backwards on their routes, fo′ must be
e
somenewvehiclethatentersorcrossestheroadoftheevehicleinthenewvista
vs′ ofeatq′.Then,atstateq,thevehicleeisapproachingamerging,crossingor
junctionandasp <p ,itmustbeinaprogressphasebyAssumption(A1).
fo′ fo
e e
We distinguish the following situations depending on the vista type T of e at at
state q:
– T = road: then, the vehicle e is driving on a high-priority road, which is
crossedorjoinedbysomelow-priorityroad.Ifsomeothervehiclefo′ appears
e
infrontoftheevehiclesuchthatp < p′+ B(V′)thatmeansfo would
fo′ e e e e e e′
be also in the progress phase of its vista of type merge-yield or cross-yield.
But then, this contradicts the safety of this vista of fo′.
e
– T =merge-yieldorT =cross-yield:thissituationisthedualoftheaboveand
we have a similar contradiction for the safety of the vista of e, which must
not be in the progress phase while another (high-priority arriving) vehicle
(that is, fo′) could enter on its road.
e
– T = cross-traffic-light or T = cross-stop: again, these situations contradict
the safety of the vista of e, which means that no other vehicle may cross the
junction at the same time.
Lemma 7. If q is safe then q′ is speed compliant and safe.
Proof. First, by Lemma 1 the state q is speed compliant.
Second,weprovethatstateq′ isalsospeedcompliant.Consideranarbitrary
e vehicle and its safe vista vs. As in Lemma 2, the condition p +B(v ) ≤ π
e e e
guarantees the conditions 1–3 of Proposition 1 when the e vehicle is following
the front leading obstacle fo . Then, the conditions 4–5 guarantee v′ ≤ V′,
e e e
depending on the applicable speed limit V′ at the next state q′.
e
Third, by Lemma 6 the step from q to q′ is non-intrusive for all vehicles. We
just proven that q and q′ are speed compliant. Then, as all vistas vs are safe at
q by Lemma 2 and Lemma 3 all vistas vs′ are safe at q′. Hence, q′ is safe.
Theorem 1. If the ADS is initially safe, it will remain so throughout its ex-
ecution. That is, the execution will preserve safety by avoiding collisions and
complying with applicable traffic regulations.
Proof. IftheADSisinitiallysafe,byLemma7allthestatesalongtheexecution
are safe. Moreover, by Lemma 1 these states are compliant to speed limits and
collision free. Furthermore, by Lemma 5 the steps between them are collision-
free. ⊔⊓
5 Discussion
This paper makes a fundamental contribution in a rarely explored direction for
ADS, where the state of the art in autopilot design focuses on two diametrically30 Marius Bozga and Joseph Sifakis
opposedapproachesthatareunlikelytobeacceptedinpractice.Ontheonehand,
AI-based end-to-end solutions cannot provide the necessary safety guarantees.
On the other hand, in addition to inherent complexity limitations, approaches
based on controller synthesis over-simplify the problem to make it accessible
to mathematical analysis, and are far from being able to realistically take into
account the important details linked to various driving operations.
The idea that driving a vehicle boils down to a composition of skills, each
dealingwithspecificsituations,iswidelyheld.Advocatedby[3],itisalsoadopted
in validation techniques that focus on particular classes of pre-crash scenarios
involving high-risk operations [18]. The paper demonstrates the advantages of
compositional reasoning, breaking down the general problem into sub-problems
that can be tackled by successive realistic simplifications.
A first class of simplifications is based on the application of rules whose
scope is limited by context and knowledge, to which is added the principle of
rights-based responsibility. This leads to the definition of the notion of vista
for each vehicle, and the corresponding free space in which it can circulate in
complete safety. The second class of simplifications comes from the fact that
analysis of autopilot inputs enables classification into a very limited number of
vistas,eachcharacterizedbyacorrespondingcontrolpolicy.Hence,theideathat
the composition according to which safe driving for each type of vista implies
safe driving for any route. Finally, a third class of simplifications derives from
theassumptionthatvehiclesdriveresponsibly,strictlyobservingthetrafficrules
andstayingwithintheirallocatedfreespaceinallcases.Inthiswayitispossible
to envisage minimal configurations for each vehicle, including a single vehicle in
frontofitandvehicleswhoseroutesmaycrossitsown.Thisgreatlysimplifiesthe
mathematical analysis, which deduces the invariant constraints to be respected
by control policies on the basis of knowledge of two functions characterizing a
vehicle’s controllability. These functions and their properties define a kind of
contract between the autopilot and the underlying electrical control system for
braking and steering. They are an essential element of the proposed solution, as
they provide the predictability on which safe control policies can be built.
The results presented are an important step in a research program into the
development of safe ADS. They should be complemented by the study of safe
policies for other operations such as U-turns and parking maneuvers. In addi-
tion, their application needs to be refined by considering more detailed two-
dimensional models of the environment and the integration of autopilot with
trajectory control modules.
References
1. ASAM OpenDRIVE® - open dynamic road information for vehicle environment.
Tech. Rep. V 1.6.0, ASAM e.V. (Mar 2020), https://www.asam.net/standards/
detail/opendrive
2. ASAM OpenScenario® - dynamic content in driving simulation, UML model-
ing rules. Tech. Rep. V 1.0.0, ASAM e.V. (Mar 2020), https://www.asam.net/
standards/detail/openscenarioSafe by Design Autonomous Driving Systems 31
3. Albus, J.S., et al.: 4D/RCS version 2.0: A reference model architecture for un-
manned vehicle systems. Tech. Rep. NISTIR 6910, NIST Publication (August
2022), https://doi.org/10.6028/NIST.IR.6910
4. Beetz,J.,Borrmann,A.:Benefitsandlimitationsoflinkeddataapproachesforroad
modelinganddataexchange.In:EG-ICE.LectureNotesinComputerScience,vol.
10864, pp. 245–261. Springer (2018)
5. Benveniste, A., Caillaud, B., Nickovic, D., Passerone, R., Raclet, J., Reinkemeier,
P.,Sangiovanni-Vincentelli,A.L.,Damm,W.,Henzinger,T.A.,Larsen,K.G.:Con-
tracts for system design. Found. Trends Electron. Des. Autom. 12(2-3), 124–400
(2018)
6. Bozga,M.,Sifakis,J.:Specificationandvalidationofautonomousdrivingsystems:
A multilevel semantic framework. In: Principles of Systems Design. Lecture Notes
in Computer Science, vol. 13660, pp. 85–106. Springer (2022)
7. Bozga, M., Sifakis, J.: Correct by design coordination of autonomous driving sys-
tems. Int. J. Softw. Tools Technol. Transf. 25(5), 625–639 (2023)
8. Butz, M., Heinzemann, C., Herrmann, M., Oehlerking, J., Rittel, M., Schalm, N.,
Ziegenbein, D.: SOCA: domain analysis for highly automated driving systems. In:
ITSC. pp. 1–6. IEEE (2020)
9. Chatterjee,K.,Henzinger,T.A.:Assume-guaranteesynthesis.In:TACAS.Lecture
Notes in Computer Science, vol. 4424, pp. 261–275. Springer (2007)
10. Chen,L.,Wu,P.,Chitta,K.,Jaeger,B.,Geiger,A.,Li,H.:End-to-endautonomous
driving:Challengesandfrontiers.CoRRabs/2306.16927(2023),https://doi.org/
10.48550/arXiv.2306.16927
11. Cummings, M.L.: What self-driving cars tell us about AI risks. IEEE Spectrum
(July 2023), https://spectrum.ieee.org/self-driving-cars-266249426
12. Harel, D., Marron, A.,Sifakis, J.: Autonomics:In searchof a foundationfor next-
generationautonomoussystems.Proc.Natl.Acad.Sci.USA117(30),17491–17498
(2020)
13. Hasuo, I.: Responsibility-sensitive safety: an introduction with an eye to logical
foundations and formalization. CoRR abs/2206.03418 (2022)
14. Kress-Gazit, H., Pappas, G.J.: Automatically synthesizing a planning and control
subsystem for the DARPA urban challenge. In: CASE. pp. 766–771. IEEE (2008)
15. Li, W., Li, H., Xu, K., Huang, Z., Li, K., Du, H.: Estimation of vehicle dynamic
parameters based on the two-stage estimation method. Sensors 21(11) (2021).
https://doi.org/10.3390/s21113711
16. Mavridou, A., Katis, A., Giannakopoulou, D., Kooi, D., Pressburger, T., Whalen,
M.W.: From partial to global assume-guarantee contracts: Compositional realiz-
abilityanalysisinFRET.In:FM.LectureNotesinComputerScience,vol.13047,
pp. 503–523. Springer (2021)
17. Meyer, B.: Applying ”design by contract”. Computer 25(10), 40–51 (1992)
18. Najm, W.G., Smith, J.D., Yanagisawa, M.: Pre-crash scenario typology for crash
avoidance research. Tech. rep., National Highway Traffic Safety Administration,
US (2007)
19. Nvidia: Nvidia drive overview (2023), https://resources.nvidia.com/
en-us-drive-overview
20. Poggenhans,F.,Pauls,J.,Janosovits,J.,Orf,S.,Naumann,M.,Kuhnt,F.,Mayr,
M.:Lanelet2:Ahigh-definitionmapframeworkforthefutureofautomateddriving.
In: ITSC. pp. 1672–1679. IEEE (2018)
21. Saoud, A., Girard, A., Fribourg, L.: Assume-guarantee contracts for continuous-
time systems. Autom. 134, 109910 (2021)32 Marius Bozga and Joseph Sifakis
22. Schwarting, W., Alonso-Mora, J., Rus, D.: Planning and decision-making for au-
tonomousvehicles.AnnualReviewofControl,Robotics,andAutonomousSystems
1, 187–210 (2018), https://doi.org/10.1146/annurev-control-060117-105157
23. Shalev-Shwartz, S., Shammah, S., Shashua, A.: On a formal model of safe and
scalable self-driving cars. CoRR abs/1708.06374 (2017)
24. Sharf,M.,Besselink,B.,Molin,A.,Zhao,Q.,Johansson,K.H.:Assume/guarantee
contracts for dynamical systems: Theory and computational tools. CoRR
abs/2012.12657 (2020)
25. Sifakis, J., Harel, D.: Trustworthy autonomous system development. ACM Trans.
Embed. Comput. Syst. 22(3), 40:1–40:24 (2023)
26. Staron,M.:AutomotiveSoftwareArchitectures-AnIntroduction,SecondEdition.
Springer (2021)
27. Sun, M., Bakirtzis, G., Jafarzadeh, H., Fleming, C.: Correct-by-construction:
a contract-based semi-automated requirement decomposition process. CoRR
abs/1909.02070 (2019)
28. Waqas,M.,Murtaza,M.A.,Nuzzo,P.,Ioannou,P.:Correct-by-constructiondesign
ofadaptivecruisecontrolwithcontrolbarrierfunctionsundersafetyandregulatory
constraints (2022), https://arxiv.org/abs/2203.14110
29. Waymo: The world’s most experienced driver (2023), https://waymo.com/
30. Wongpiromsarn, T., Karaman, S., Frazzoli, E.: Synthesis of provably correct con-
trollers for autonomous vehicles in urban environments. In: ITSC. pp. 1168–1173.
IEEE (2011)
31. Wongpiromsarn, T., Topcu, U., Murray, R.M.: Receding horizon temporal logic
planning. IEEE Trans. Autom. Control. 57(11), 2817–2830 (2012)