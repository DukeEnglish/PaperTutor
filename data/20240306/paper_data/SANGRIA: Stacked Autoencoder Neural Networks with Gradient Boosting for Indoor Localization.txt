This article has been accepted for publication in IEEE Embedded Systems Letters. This is the author's version which has not been fully edited and
content may change prior to final publication. Citation information: DOI 10.1109/LES.2023.3279017
SANGRIA: Stacked Autoencoder Neural Networks
with Gradient Boosting for Indoor Localization
Danish Gufran, Saideep Tiku, Sudeep Pasricha
Abstract— Indoor localization is a critical task in many embedded in device characteristics, e.g., wireless radios that are used to
applications, such as asset tracking, emergency response, and real- transmit and receive Wi-Fi data, and software used to process
time navigation. In this article, we propose a novel fingerprinting- the Wi-Fi signals, such as the algorithms used to filter out noise
based framework for indoor localization called SANGRIA that and errors [4]. Because of device heterogeneity, two different
uses stacked autoencoder neural networks with gradient boosted
devices may end up capturing very different RSS values at the
trees. Our approach is designed to overcome the device
same indoor location. This phenomenon leads to reduction in
heterogeneity challenge that can create uncertainty in wireless
indoor localization accuracy across devices. Consequently, it is
signal measurements across embedded devices used for
crucial to devise indoor localization frameworks that can not
localization. We compare SANGRIA to several state-of-the-art
frameworks and demonstrate 42.96% lower average localization only cope with uncertainties across indoor environments, but
error across diverse indoor locales and heterogeneous devices. also factor in the impact of user device heterogeneity.
Index Terms— Indoor localization, Wi-Fi fingerprinting, stacked
In this article, we present SANGRIA, a novel neural
autoencoders, neural networks, gradient boosted trees network-based Wi-Fi fingerprinting framework for indoor
localization that is specifically designed to address the device
I．INTRODUCTION heterogeneity challenge. Our approach combines the benefits of
I a stacked autoencoder neural network and gradient boosted
ndoor localization involves the use of various technologies to
trees, resulting in a highly accurate and robust approach for
determine the location of a device or person inside an enclosed
indoor localization. Our novel contributions are as follows:
space. Localization across indoor locales can serve several use
cases, such as asset tracking, emergency response, and real-time  We propose a novel and uniquely tailored data
indoor navigation [1]. As GPS signals are not able to penetrate augmentation technique for handling device heterogeneity;
buildings and other indoor environments, radio frequency  We propose a framework with gradient boosting
signals such as Bluetooth low energy (BLE) and Wi-Fi are often algorithms to minimize indoor localization error;
utilized for localization [2]. One of the most promising methods  Through capturing fingerprints from several smartphones
for indoor localization involves measuring the received signal across diverse buildings, we establish real-world
strength (RSS) of Wi-Fi signals, transmitted by Wi-Fi access benchmarks to compare SANGRIA’s localization accuracy
points (APs), across multiple locations in an indoor floorplan. against several state-of-the-art localization frameworks.
The measured RSS values at any indoor location forms a unique
‘fingerprint’ for that location that can then be used by a device II． RELATED WORK
to estimate location. This approach is popularly known as Wi-
Wi-Fi RSS fingerprinting is a particularly promising method
Fi RSS fingerprinting-based indoor localization [3].
for indoor localization due to the ubiquitous use of Wi-Fi
In the fingerprinting approach, there are typically two
capable devices by users and availability of Wi-Fi APs in
phases: offline and online. During the offline phase, the RSS
indoor environments [2]. Several studies have applied ML
of Wi-Fi APs is captured at locations throughout the indoor
algorithms to learn patterns in Wi-Fi RSS data and provide
space using one or more devices, such as smartphones and
accurate localization predictions [3].
smartwatches. The resulting Wi-Fi RSS fingerprint data at each
The work in [5] employs k-nearest-neighbors (KNN) and
location is used to create a fingerprint database. A machine
proposes an RSS averaging technique to improve localization
learning (ML) model, such as a neural network, can then be
accuracy but fails to show consistent results across buildings.
trained with the fingerprint database, such that the observed
In [6], random forests (RF) and support vector machines (SVM)
RSS fingerprint is the input, and the location is the output of the
are enhanced by incorporating principle component analysis
model. In the online phase, the trained ML model is deployed
(PCA) for feature extraction. The work in [7] combines
and used for localization. During this phase, a device measures
gaussian process classifiers (GPC) with an augmentation
the RSS of the Wi-Fi APs at an unknown indoor location, and
strategy to deal with noisy RSS data, but for a simpler
the measured RSS values are sent to the ML model which in
localization problem with lower resolution. Several recent ML
turn predicts the current location of the device.
techniques have used gradient-boosted trees (GBT) for indoor
There are several factors that can affect the accuracy of
localization [8]-[10]. The GBT algorithm in [8] is applied on
indoor localization frameworks [3]. Indoor environments are
BLE RSS data. However, Wi-Fi RSS is more effective for
often highly cluttered, with many static and dynamic obstacles
localization compared to BLE RSS due to its wide availability,
that cause unforeseeable wireless signal attenuation, as well as
high accuracy, low cost, and longer range compared to BLE [9].
multipath fading and shadowing. These factors introduce noise
The works in [10] and [11] employ a simple GBT model [10]
in measured fingerprints, which can degrade the localization
and XgBoost (extreme gradient boosting) [11] to improve
accuracy. Another major challenge arises due to heterogeneity
localization accuracy. However, these works do not address
Authorized licensed use limited to: COLORADO STATE UNIVERSITY. Downloaded on March 02,2024 at 23:58:31 UTC from IEEE Xplore. Restrictions apply.
© 2023 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission.(cid:13)(cid:10)See https://www.ieee.org/publications/rights/index.html for more information.This article has been accepted for publication in IEEE Embedded Systems Letters. This is the author's version which has not been fully edited and
content may change prior to final publication. Citation information: DOI 10.1109/LES.2023.3279017
challenges due to the variations caused by device heterogeneity. values in dBm (decibel-milliwatts). Each RSS value ranges
Neural networks, e.g., deep neural networks (DNN) [12] and between –100dBm to 0dBm, where –100 indicates no signal
convolutional neural networks (CNN) [13] have also been and 0 indicates a full (strongest) signal. We collect RSS values
explored to improve Wi-Fi RSS based indoor localization. The from multiple (six in our experimental analysis) smartphones
framework in [12] aims to address device heterogeneity but from different manufacturers, with different Wi-Fi chipsets.
shows higher localization errors compared to the approaches in The collected data is pre-processed by normalizing and splitting
[5]-[11]. The work in [13] demonstrates lower localization it into train and test datasets for subsequent use with the ML
errors than [12] but does not consider device heterogeneity. The algorithm. We normalize all RSS values between the range of 0
work in [14] adapts multi-head attention neural networks for (–100dBm) to 1 (0dBm). The resulting normalized vector of
localization but shows higher worst-case localization errors for RSS values for each location reference point (RP) represents a
certain testing devices, lacking strategic augmentation. fingerprint and is stored in the RSS database. To evaluate the
To mitigate device heterogeneity, augmenting training data ML model, we split the collected RSS data into training and
plays a critical role in inhibiting overfitting. A few prior works testing datasets.
have used augmentation techniques for indoor localization. In
C. Greedy Layer-Wise Stacked Autoencoder
[12], generative adversarial networks (GANs) are used as an
To augment the collected data before training, we design a
augmentation module, while [7] employs stacked autoencoders
custom stacked autoencoder (SAE) neural network model. Our
(SAEs), and [8] employs a simple neural network.
SAE model is composed of multiple autoencoders (AE), as
After thoroughly analyzing the prior works, we devise
shown in figure 2, which are trained one layer at a time using a
SANGRIA that combines a carefully tailored augmentation
greedy layer-wise training approach.
technique based on Stacked Autoencoder (SAE) [7] with a
powerful gradient boosting algorithm [10], [11] to achieve high
accuracy in a resource-efficient manner.
III．SANGRIA FRAMEWORK
A. Overview
Our proposed SANGRIA framework (figure 1) consists of
two main components: a greedy layer-wise stacked autoencoder
(custom SAE) and a categorical gradient boosting algorithm.
Figure 2: Greedy layer-wise stacked autoencoder (SAE) architecture with
Encoder (gray), Decoder (green), and bottleneck (orange) layers.
An AE neural network consists of three main parts: an
Encoder, a Decoder, and a Bottleneck layer. Each of these parts
is composed of one or more fully connected layers with varying
number of neurons. The encoder layers are used to compress
the input data (dimensionality reduction) and the decoder layers
are used to reconstruct a noisy representation of the input data,
Figure 1: Implementation overview of the SANGRIA framework
back to its original dimension. The bottleneck layer is a
In the offline phase, SANGRIA involves data collection, data representation of the input data at its lowest dimension,
pre-processing, data augmentation, and ML model training and representing important features in the data.
deployment. The data collection and pre-processing phases are The proposed SAE consists of three AEs stacked together
used to generate an RSS fingerprint database. A custom stacked with each having its own fully connected layers, as shown in
autoencoder (SAE) model is tailored to augment fingerprints figure 2. AE1 and AE3 are trained layer-wise, where the output
from the database such that an ML model can produce accurate of the second layer (L2) of AE1 is fed as input to AE3. AE2
predictions despite device heterogeneity. The collected data receives the trained weights from AE1 and AE3 and is
prior to augmentation and the augmented data are concatenated positioned as shown in figure 2. The SAE is trained in a greedy
to diversify the RSS input data. The concatenated data is then layer-wise manner to minimize reconstruction error between
used to train the categorical gradient boosting ML model, to the input and output data. The advantage of this approach is that
learn the relationship between RSS measurements and indoor it allows the network to learn a good representation of the input
locations. Finally, this trained model is deployed on the data at each layer before moving on to the next one, rather than
smartphone. The offline phase is typically performed once, and trying to optimize all the layers together. This can make the
the resulting model is used for multiple localization estimates training process more stable and can lead to better performance.
in the online phase. The accuracy of the location estimates is SAE is trained on the RSS database to generate synthetic RSS
determined by computing error using the Euclidian distance: measurements, simulating variations across devices that are not
overly biased towards the device used for training, resulting in
(cid:1830)(cid:1861)(cid:1871)(cid:1872)(cid:1853)(cid:1866)(cid:1855)(cid:1857)=(cid:3493)(cid:3118) ((cid:1850) (cid:2870)− (cid:1850) (cid:2869))(cid:2870)+ ((cid:1851) (cid:2870)− (cid:1851) (cid:2869))(cid:2870)+ ((cid:1852) (cid:2870)− (cid:1852) (cid:2869))(cid:2870) (1) better generalization and more accurate predictions.
where ((cid:1850) , (cid:1851), (cid:1852) ) and ((cid:1850) , (cid:1851), (cid:1852) ) are the values of the ground D. Categorical Gradient Boosting
(cid:2869) (cid:2869) (cid:2869) (cid:2870) (cid:2870) (cid:2870)
truth and predicted location coordinates, respectively. Gradient-boosted trees (GBTs) are a powerful type of ML
model that involve training a series of decision trees and
B. Data Collection, Preprocessing, and Database Creation
combining their predictions to create a stronger overall model.
For any indoor environment of interest, we collect Wi-Fi RSS
Authorized licensed use limited to: COLORADO STATE UNIVERSITY. Downloaded on March 02,2024 at 23:58:31 UTC from IEEE Xplore. Restrictions apply.
© 2023 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission.(cid:13)(cid:10)See https://www.ieee.org/publications/rights/index.html for more information.This article has been accepted for publication in IEEE Embedded Systems Letters. This is the author's version which has not been fully edited and
content may change prior to final publication. Citation information: DOI 10.1109/LES.2023.3279017
Instead of predicting the target variable, each decision tree in a A detailed description of the number of trainable parameters
gradient boosting model is trained to predict the residual error in the proposed SAE within SANGRIA is shown in table 1. We
of the previous tree, which helps minimize the overall error enhanced the baseline CatBoost algorithm from the library in
during training. There are several types of GBT models, [15]. To fine-tune CatBoost within SANGRIA, we set number
including CatBoost, XgBoost, and LightGBM. We chose to use of iterations to 50, with a total depth in trees to 7, learning rate
CatBoost for our problem because it is better suited for dealing of 0.1, and L2 leaf regularization to 5 to prevent overfitting. In
with categorical variables and does not require additional pre- the next section we present experimental results of SANGRIA’s
processing steps, making it a more efficient choice. performance comparison against the state-of-the-art.
Additionally, its symmetric trees can provide more accurate TABLE 1: Trainable parameters for each stack in the SAE in SANGRIA
predictions in cases with a large number of categorical features, AE1-L1 AE1-L2 AE1-L3 AE2-L1 AE2-L2 AE2-L3
14878 10414 14964 10414 5103 3570
such as the number of unique visible Wi-Fi APs in our indoor
AE2-L4 AE2-L5 AE3-L1 AE3-L2 AE3-L3 Total
localization problem. To train our model, we iteratively update 7388 14964 7289 5103 7388 101475
each decision tree to the residual error of the previous iteration,
as per the mathematical representation in the equations below:
B. Experimental Results
To evaluate the performance of SANGRIA, we select seven
(cid:1832)((cid:1876))=(cid:1846)(Σ (cid:1849) ∗ (cid:1834)((cid:1876))) (2)
(cid:3036) (cid:3036) state-of-the-art indoor localization frameworks for comparison:
(cid:1832)((cid:1876))=(cid:1832)((cid:1876)−1)+(cid:1834)((cid:1876)) (3)
KNN [5], RF [6], SVM [6], GPC [7], and DNN [12] that target
where (cid:1834)((cid:1876)) is the prediction made by the (cid:1861)(cid:3047)(cid:3035) decision tree, (cid:1849)
(cid:3036) (cid:3036) localization with device heterogeneity resilience; and XgBoost
are the weights assigned to the (cid:1861)(cid:3047)(cid:3035)tree, and T is monotonic
[11] and CNN [13] which aim to aggressively minimize indoor
transformation applied to the combined predictions. The
localization error but do not address device heterogeneity.
monotonic transformation is key as it retains the order of the
We collect localization errors for each train-test combination
RSS fingerprint for each tree (changes in the fingerprint order
across all paths. The results are plotted in figure 3 by averaging
can lead to higher localization errors). The weights (cid:1849) are
(cid:3036) the localization errors across all floorplans. From figure 3, we
representative of the learned features from the RSS fingerprint.
can clearly observe low errors for SANGRIA compared to other
(cid:1834)((cid:1876)) is the prediction made by the decision tree at iteration x.
frameworks. SANGRIA shows 28% to 66% improvements in
(cid:1832)((cid:1876)−1) is the prediction made by the model after x−1
mean, and 42% to 74% maximum error reduction, compared to
iterations. (cid:1832)((cid:1876)) is the final prediction (location of the RSS the other frameworks. This is an indication of SANGRIA’s
fingerprint) made by the model after x iterations. excellent generalizability across all devices.
IV．EXPERIMENTS
A. Experimental Setup
We collected fingerprint data from five buildings with
different salient features on the Colorado State University
campus. The buildings have path lengths varying between 60 to
80 meters and contain 80 to 180 Wi-Fi APs. RP locations for
each fingerprint are one meter apart. Building 1 has wooden
Figure 3: Min (lower whisker), Mean (green bar), and Max (upper whisker)
furniture and concrete walls, Building 2 has heavy metallic error across all comparison frameworks for indoor localization.
laboratory equipment, Building 3 and 4 have a mix of wood,
To further analyze the individual device-wise performance of
concrete, and smaller metallic equipment and computers, and
each framework, we construct a heatmap for the top four best
Building 5 has wide open spaces.
performing frameworks, as shown in figure 4. The error (in
To account for device heterogeneity, we selected six
meters) for each cell is the average for that configuration (train-
smartphones: BLU Vivo 8 (BLU), HTC U11 (HTC), Samsung
test combination) across all five building floorplans. From
Galaxy S7 (S7), LG V20 (LG), Motorola Z2 (MOTO), and
figure 4, we see that SANGRIA improves the worst-case
OnePlus 3 (OP3). During the training phase, we collected data
localization errors compared to the other frameworks. For
from a single smartphone per building floorplan. We ensured
example, in the LG-MOTO and LG-OP3 configurations, we
that each smartphone captured between 61 to 78 unique RPs per
observe higher errors in SVM and XgBoost, but these worst-
floorplan, with 78 to 339 visible APs. We also took five samples
case errors are greatly reduced for SANGRIA. Similarly, in the
per RP for training and one sample per RP for testing. In total,
BLU-OP3 configuration, we observe high errors in RF and
we collected 1606955 data points for our training dataset, which
these errors are reduced for the rest of the frameworks with
includes all floorplans. To further improve the size and quality
SANGRIA reporting the lowest error.
of our training dataset, we utilized the custom SAE for data
We have open sourced our dataset [17] to aid reproducibility.
augmentation. The SAE effectively doubles the size of our
To further evaluate the effectiveness of SANGRIA, we trained
training dataset, resulting in a total of 3213910 data points for
the proposed ML models using another publicly available
training. We collected the RSS fingerprints in a real-world
dataset: the UJI dataset [16] for indoor localization. The dataset
scenario and considered building floorplans with multiple
contains Wi-Fi RSS measurements from 520 APs distributed
salient features, including external obstacles that can add noise
across a three-story building. Each of the 520 Wi-Fi APs was
to the collected RSS data. Moreover, we collected training and
equipped with one receiver and four antennas, and data was
testing data during normal working hours of the day to
collected using 20 Wi-Fi cards. Figure 5 shows the mean
incorporate environmental factors such as human interference,
localization errors of each model trained and tested on the UJI
dynamic obstacles, attenuation, fading, shadowing, and so on.
Authorized licensed use limited to: COLORADO STATE UNIVERSITY. Downloaded on March 02,2024 at 23:58:31 UTC from IEEE Xplore. Restrictions apply.
© 2023 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission.(cid:13)(cid:10)See https://www.ieee.org/publications/rights/index.html for more information.This article has been accepted for publication in IEEE Embedded Systems Letters. This is the author's version which has not been fully edited and
content may change prior to final publication. Citation information: DOI 10.1109/LES.2023.3279017
Figure 4: Experimental results for the top four best performing frameworks with average errors (meters) across all floorplans.
dataset. Notably, SANGRIA has the lowest localization errors, framework on smartphones. SANGRIA has the fastest
surpassing its closest competitor XgBoost by 11.4%. inference time with an average of ~13.3ms, followed by KNN
with ~21.6ms, and XgBoost with ~20ms. GPC has the highest
latency due to its probabilistic computation.
V．CONCLUSION
Figure 5: Mean localization errors across all frameworks using UJI dataset In this paper, we present SANGRIA, a novel neural network-
based solution that is resilient towards device heterogeneity
SANGRIA’s superior localization capabilities are to a large
during indoor localization. Experimental results show a 42.96%
extent due to the uniquely tailored greedy-layer wise SAE. The
reduction in average localization error and an average latency
other contributing factor is the excellent feature extraction
of 13.3 milliseconds, making it a reliable and practical approach
ability of the CatBoost algorithm. CatBoost has several
for device-invariant indoor localization.
advantages over other algorithms due to its ability to handle
categorical features, such as number of visible APs and MAC
(Media Access Control address) ID of each Wi-Fi AP. In
REFERENCES
contrast, other algorithms such as DNN, CNN, SVM, RF, KNN, [1] R. Martinez, et al., “Revisiting the analysis of hyperparameters in KNN
and GPC require the categorical features to be transformed into for WI-FI and BLE fingerprinting: Current status and general results,”
IPIN, 2021.
numerical form. CatBoost also can better reduce overfitting,
[2] “Target rolls out bluetooth beacon technology in stores to power new
which is a common problem in GBT algorithms. It does this by indoor maps in its app,” [Online] http://tcrn.ch/2fbIM0P, (2022).
randomly selecting a subset of features to use at each iteration [3] N. Singh, et al., “Machine learning based indoor localization using WI-FI
of the boosting process, making it a better choice than XgBoost. RSSI fingerprints: An overview,” IEEE Access, 2021.
[4] S. Zhang, et al., “Wireless indoor localization for heterogeneous mobile
C. Effect of the Stacked Autoencoder devices,” ICCP, 2012.
[5] S. Tiku, et al., “SHERPA: A lightweight smartphone heterogeneity
In figure 6, we observed a significant drop in mean
resilient portable indoor localization framework,” ICESS, 2019.
localization errors for all frameworks when using SAE: 6.82% [6] A. H. Salamah, et al., “An enhanced WIFI indoor localization system
lower mean error for CatBoost, 17.64% lower mean error for based on ML,” IEEE IPIN, 2016.
XgBoost, 20.12% lower mean error for SVM, 8.16% lower [7] M. Abbas, et al., "WIDEEP: WIFI-based accurate and robust indoor
localization system using deep learning," IEEE PerCom, 2019.
mean error for RF, 2.64% lower mean error for KNN, 37.94%
[8] A. Goharfar, et al., "Indoor positioning via gradient boosting enhanced
lower mean error for DNN, 47.34% lower mean error for CNN, with feature augmentation using deep learning," VTC, 2022.
and 87.59% lower mean error for GPC. [9] W. Wang, et al., "Multiple fingerprints-based indoor localization via
GBDT: Subspace and RSSI," IEEE Access, 2019.
[10] U. M. Qureshi, et al., "Indoor localization using wireless fidelity (WIFI)
and bluetooth low energy (BLE) signals," IEEE ISIE, 2019.
[11] S. Navneet, et al., “XGBLOC: XGBOOST-based indoor localization in
multi-building multi-floor environments” IEEE Sensors, 2022.
[12] W. Njima, et al., "DNN-based indoor localization under limited dataset
using GANs and semi-supervised learning," IEEE Access, 2022.
[13] A Mittal et al., "Adapting convolutional neural networks for indoor
localization with smart mobile devices," GLSVLSI, 2018.
Figure 6: Bar plot comparing average errors of all frameworks with SAE [14] S. Tiku, D. Gufran, S. Pasricha, "Multi-head attention neural network for
(Blue) and without SAE (Orange) smartphone invariant indoor localization," IPIN, 2022.
[15] D. Anna Veronika, et al., "CATBOOST: Gradient boosting with
TABLE 2: Avg. inference time (milliseconds) across devices and frameworks categorical features support." arXiv preprint arXiv:1810.11363, 2018.
[16] A Maverick, et al., "UJIIndoorLoc Dataset," Kaggle, 2014. [Online].
SANGRIA XgBoost SVM RF KNN DNN CNN GPC
Available: https://www.kaggle.com/datasets/giantuji/UjiIndoorLoc.
BLU 20 30 400 90 30 630 680 1960
[17] EPIC-CSU, "Heterogeneous RSSI Indoor Navigation," GitHub, 2021.
HTC 10 20 110 80 20 540 630 1830
LG 20 30 200 80 10 550 630 1860 [Online]: https://github.com/EPIC-CSU/heterogeneous-rssi-indoor-nav.
MOTO 10 10 190 70 20 540 610 1820
OP3 10 20 280 80 30 540 620 1810
S7 10 10 180 80 20 510 610 1740
Avg. 13.3 20 226.6 80 21.6 551.6 630 1836.6
D. Model Inference Time Latency
Low latency in the online phase is important to achieve
practical indoor localization framework deployment. Table 2
shows the measured latencies in milliseconds for each
Authorized licensed use limited to: COLORADO STATE UNIVERSITY. Downloaded on March 02,2024 at 23:58:31 UTC from IEEE Xplore. Restrictions apply.
© 2023 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission.(cid:13)(cid:10)See https://www.ieee.org/publications/rights/index.html for more information.