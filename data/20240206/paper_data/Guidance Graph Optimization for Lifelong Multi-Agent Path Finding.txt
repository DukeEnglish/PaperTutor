Guidance Graph Optimization for Lifelong Multi-Agent Path Finding
YulunZhang1, HeJiang1, VarunBhatt2, StefanosNikolaidis2 and JiaoyangLi1
1RoboticsInstitute,CarnegieMellonUniversity
2ThomasLordDepartmentofComputerScience,UniversityofSouthernCalifornia
yulunzhang,hejiangrivers @cmu.edu, vsbhatt,nikolaid @usc.edu,jiaoyangli@cmu.edu
{ } { }
Abstract 0.010
0.008
We study how to use guidance to improve the
throughput of lifelong Multi-Agent Path Finding 0.006
(MAPF). Previous studies have demonstrated that 0.004
while incorporating guidance, such as highways,
0.002
can accelerate MAPF algorithms, this often re-
sults in a trade-off with solution quality. In ad- 0.000 (a)Noguidance (b)Crisscross (c)Ourguidance
dition, how to generate good guidance automat-
ically remains largely unexplored, with current Figure 1: Comparison of no guidance, human-designed crisscross
methods falling short of surpassing manually de- guidance, and our guidance with a simulation of 240 agents in a
signed ones. In this work, we introduce the di- 33×36warehousemap, showninFigure8binAppendixB.The
rectedguidancegraphasaversatilerepresentation heatmapsshowthetile-usage(thefrequencythateachtileisoccu-
ofguidanceforlifelongMAPF,framingGuidance pied). Our guidance results in the most balanced traffic with the
GraphOptimization(GGO)asthetaskofoptimiz- highestthroughput.
ing its edge weights. We present two GGO algo-
rithmstoautomaticallygenerateguidanceforarbi-
on improving the throughput, namely the average number
trarylifelongMAPFalgorithmsandmaps.Thefirst
of reached goals per timestep, by developing better lifelong
methoddirectlysolvesGGObyemployingCMA-
MAPF algorithms [Ma et al., 2017a; Li et al., 2020; Kou et
ES, a black-box optimization algorithm. The sec-
al., 2020; Damani et al., 2021] or optimizing map layouts
ondmethod,PIU,optimizesanupdatemodelcapa-
(i.e.,mapstructures)[Zhangetal.,2023a,b].
bleofgeneratingguidance,demonstratingtheabil-
ity to transfer optimized guidance graphs to larger GiventhatlifelongMAPFrequiresonlinecomputationof
maps with similar layouts. Empirically, we show new paths as agents are continuously assigned to new goal
that (1) our guidance graphs improve the through- locations, lifelong MAPF algorithms always decompose the
put of three representative lifelong MAPF algo- problemintoaseriesof(one-shot)MAPFinstancesandsolve
rithmsinfourbenchmarkmaps,and(2)ourupdate them sequentially. However, such methods are myopic be-
modelcangenerateguidancegraphsforaslargeas cause each MAPF instance involves only the current goal
93 91mapsandasmanyas3000agents. locations. Achieving (near-)optimal solutions for individ-
× ual MAPF instances does not necessarily result in the best
throughput. In this work, we propose to foster implicit co-
1 Introduction
operation among agents over the long term by introducing
We study the problem of leveraging a guidance graph with global guidance for agent movement. Our guidance takes
optimized edge weights to guide agent movement, thereby the form of a directed weighted graph that alters the costs
improvingthethroughputoflifelongMulti-AgentPathFind- of agents moving along each edge and waiting at each ver-
ing (MAPF). MAPF [Stern et al., 2019] involves planning texofgraphG. Intuitively,suchaguidancegraphservestwo
collision-freepathsforasetofagentsfromtheirstarttogoal purposes. First, by amplifying the cost difference of trav-
locations on a given graph G. Lifelong MAPF [Li et al., eling through an edge in opposite directions, we encourage
2021] extends MAPF by assigning new goals to agents as agentstomoveinthesamedirection,reducingthenumberof
soon as they reach their current ones. Example applications head-oncollisions,whichhappenwhentwoagentstrytotra-
include character control in video games [Ma et al., 2017b; versethroughthesameedgeinoppositedirections. Second,
Jansen and Sturtevant, 2008] and automated warehouses in by increasing the cost of moving in areas prone to conges-
whichhundredsofrobotsarecontinuallyassignednewtasks tion, we motivate agents to navigate through less congested
totransportinventorypods[Varamballyetal.,2022]. Driven areas,ultimatelyreducingtrafficcongestion. Figure1shows
bythesereal-worlddemands,numerousstudieshavefocused thetile-usageresultingfromdifferentguidancestrategies.
4202
beF
2
]AM.sc[
1v64410.2042:viXraOne closely related work to our guidance graph is high- LifelongMAPFAlgorithms
ways [Cohen et al., 2015; Li and Sun, 2023], which are a Solving MAPF optimally is known to be NP-hard [Yu and
subset of edges selected from graph G with assigned direc- LaValle,2013]. LifelongMAPFposesanevengreaterchal-
tions and a lower traversal cost. This strategy incentivizes lenge as agents consistently receive new goal locations, re-
agents to move along the highways, reducing the number of quiring the continuous computation of new paths. Conse-
collisionstoberesolvedbyMAPFalgorithms. However,the quently, state-of-the-artalgorithmsapproachlifelongMAPF
questionofhowtoselecttheseedgesanddeterminetheirdi- bydecomposingitintoaseriesof(modified)one-shotMAPF
rectionsandcostsremainslargelyunexplored.Thecrisscross instances, usually one at each timestep, assuming that mini-
approach [Cohen, 2020], where edge directions alternate in mizingtheirsum-of-costsenhanceslifelongMAPFthrough-
evenandoddrowsandcolumns,iscommonbutnotoptimal; put. Theycanbedividedintothreecategories. Toshowthe
LiandSun[2023]showthat,whilecrisscrosshighwaysspeed generalityofourGGOalgorithms, weselectaleadingalgo-
up lifelong MAPF algorithms, they do not always improve rithmfromeachcategorytoconductourexperiments.
throughput. Additionally,Cohenetal.[2016a]proposedtwo Replan all. We replan all agents at every timestep (or ev-
methodstoselectedgesanddirectionsforhighways,butnei- ery few timesteps) [Wan et al., 2018; Li et al., 2021]. In
therofthemoutperformscrisscrosshighways. each replanning cycle, we solve a MAPF instance with the
Therefore, we introduce the Guidance Graph Optimiza- start locations being the current locations of all agents and
tion(GGO)problemtoimprovethroughputbyoptimizingthe the goal locations being their current goal locations. We se-
edge weights of a directed guidance graph. We present two lectRHCR[Lietal.,2021]asarepresentativealgorithmfrom
automatic GGO methods. The first applies Covariance Ma- thiscategory.
trix Adaptation Evolutionary Strategy (CMA-ES) [Hansen, Replannew. Thiscategoryissimilartothepreviousoneex-
2016], astate-of-the-artblack-boxoptimizer, tosolveGGO, cept that we replan only agents that have just reached their
but its solution is map-specific. Therefore, we propose the current goal locations and have been assigned new goal lo-
secondmethod,ParameterizedIterativeUpdate(PIU),which cationsateverytimestep[Ca´petal.,2015;Maetal.,2017a;
uses CMA-ES to optimize an update model. This update Grenouilleauetal.,2019;Liuetal.,2019]. Sinceagentsbe-
model, represented by a neural network, starts with an un- ingreplannedmustavoidcollisionswithagentsnotbeingre-
weightedguidancegraphanditerativelyupdatesitwithtraf- planned,methodsinthiscategoryneedtoimposeconstraints
ficinformationobtainedfromalifelongMAPFsimulator. It on the map structure and goal locations, often denoted as
is capable of optimizing guidance graphs for different maps well-formed maps, to ensure the existence of collision-free
withsimilarlayouts. paths. We select DPP [Liu et al., 2019; Li et al., 2021] as a
We make the following contributions: (1) introducing the representativealgorithmfromthiscategory.
guidance graph, a versatile representation of guidance for Reactive. In contrast to the previous two categories, reac-
lifelong MAPF, and guidance graph optimization (GGO) to tive methods plan paths for each agent without considering
improve its throughput, (2) conducting an in-depth study of collisions with other agents (resulting in paths with no wait
variousexistingguidanceworksinMAPF,and(3)proposing actions) and then resolve collisions reactively through pre-
two automatic GGO methods, CMA-ES and PIU, showcas-
definedrules[WangandBotea,2008;Okumuraetal.,2019;
ing their superior performance over unweighted graphs and YuandWolf,2023], suchasinsertingwaitactionsortaking
previousguidancemethods, alongwiththetransferabilityof short detours. We select PIBT Okumura et al. [2019] as a
PIUtolargermapswithsimilarlayouts. representative algorithm from this category. It is complete
onbiconnectedgraphsandrunssignificantlyfasterthanalgo-
rithmsinothercategories.
2 ProblemDefinitionandPreliminaries
2.2 GuidanceGraphOptimization
2.1 LifelongMulti-AgentPathFinding To maintain generality, we consider graph G(V,E) to be
either directed, undirected, or mixed. We use (u,v) and
Definition 1 ((One-Shot) MAPF). The (one-shot) MAPF (u v) to denote an undirected edge and a directed edge,
problem takes as inputs a graph G(V,E) and k agents →
respectively. WeuseE andE todenotethesubsetsof
und dir
A = a ,..,a withtheirstartandgoallocations. Ateach
1 k edgesinE thatareundirectedanddirected,respectively.
{ }
timestep, an agent can move to an adjacent vertex or stay
Definition 3 (Guidance Graph). Given a graph G(V,E) of
atitscurrentvertex. Twoagentscollidewhentheyarriveat
a lifelong MAPF problem, we define a guidance graph as a
thesamevertexorswaplocationsatthesametimestep. The
directedweightedgraphG (V ,E ,ω)withthesamevertex
(one-shot) MAPF problem searches for collision-free paths g g g
setV =V.EachedgeinE correspondstoanactionthatan
thatmoveeachagenta fromtheirstarttogoallocationswith g g
i agentcantakeateachvertex,withtheactioncostrepresented
minimal sum-of-cost, defined as the total number of actions
bytheedgeweight.Formally,wedefineE =E E
theagentsneedtotake. g wait ∪ move
suchthat
(cid:91)
Definition2(LifelongMAPF). LifelongMAPFextendsone- E = (v v) (1)
wait
shotMAPFbyconstantlyassigningnewgoalstoagentswhen { → }
v∈V
they reach their current ones. Lifelong MAPF searches for (cid:91)
E = (u v),(v u) E . (2)
collision-freepathsthatmaximizethroughput,namelytheav- move dir
{ { → → }}∪
eragenumberofreachedgoalspertimestep. (u,v)∈EundRepresentation Generation Usage
Edgedirection Movecost Waitcost Design MAPF OnlineUpdate Method
1 JansenandSturtevant[2008] soft R+ N/A handcraftedprocedure lifelong Yes reactive
2 WangandBotea[2008] strict 1 N/A crisscross one-shot No reactive
3 Cohenetal.[2015] soft 1,c 1 crisscross one-shot No ECBS
4 Cohenetal.[2016b] soft {1,c} 1 handcraftedprocedure one-shot No ECBS
5 LiandSun[2023] soft {1,c} 1 crisscross lifelong No RHCR
6 YuandWolf[2023] soft
{R+}
N/A handcraftedprocedure lifelong Yes reactive
7 Chenetal.[2024] soft R+ N/A handcraftedprocedure both Yes PIBT
8 GGO(ours) soft R+ R+ automatic lifelong No many
Table 1: Overview of previous works on representation, generation, and usage of guidance in MAPF. For edge direction, strict means
movementisunidirectionalalongeachedge,andsoftmeansbidirectional. Movecostreferstothecostofmovingtoanadjacentvertexand
waitcostreferstothecostofwaitingatthecurrentvertex. Formovecost,{1,c}meansthatthevalueconsiders1andascalerc > 1only.
Fordesign,handcraftedprocedurereferstousingamanuallydesignedproceduretogenerateguidance,whilecrisscrossreferstothepopular
human-designedguidance[Cohen,2020].
Alledgesweightsarecollectivelyrepresentedasavectorω inswarmrobotics,work1representsguidancethroughadi-
∈
R|Eg|. rection map. This map assigns a direction vector to every
>0
vertex of G and sets the movement cost along an edge to
Planinngwithguidancegraphs. Toutilizeguidancegraphs be inversely related to the dot product of its direction vec-
in lifelong MAPF, we redefine the sum-of-costs of the un- tor and the vector of the edge, encouraging agents to move
derlying(one-shot)MAPFinstancesasthesumoftheaction along the direction vectors. Consequently, a direction map
costsacrossallpathsforallagents(insteadofthetotalnum- canbetransformedintoaguidancegraphwithedgeweights
berofactions). Thisleadstoaminormodificationtoexisting defined as dot products mentioned above. (2) Work 2 turns
lifelongMAPFalgorithms.Specifically,whenplanningpaths some undirected edges into unidirectional, strictly prohibit-
foreachagent,insteadofseekingtheshortestpathonG,we
ingagentsfrommovingagainsttheassignededgedirections.
aim to find a cost-minimal path on G g. This modification This can be seen as a special guidance graph with infinite
alterstheMAPFobjectivewithoutcompromisingfeasibility. weightsforconstrainededgesand1forothers. (3)Works3
Definition4(GuidanceGraphOptimization(GGO)). Given to5usethehighwayideathatconvertsundirectededgesinto
an unweighted graph G(V,E) of a lifelong MAPF problem, directededgesinbothdirectionsandthenselectsasubsetof
an objective function f : R|Eg| R, as well as predefined directed edges to be highways. They assign a weight of 1
→ for all highway edges and a weight of a predefined constant
lower and upper bounds ω and ω (0 < ω ω )
lb ub lb ub
≤ c > 1forotheredges,encouragingagentstomovealongthe
for edge weights, the guidance graph optimization problem
searches for the optimal guidance graph G∗(V ,E ,ω∗) highway edges. Highways are special guidance graphs with
g g g restrictions on the values of movement and wait costs. (4)
with
Works 6 and 7 represent guidance similarly to our guidance
ω∗ = argmax f(ω). (3)
graphs,withthedistinctionthattheydonotallowself-edges
ωlb≤ω∗≤ωub
andthuscannotrepresentwaitcosts.
In this paper, our objective function f is a simulator that Generating Guidance. An important distinction between
runs a given lifelong MAPF algorithm on a given guidance our work and previous works is that we are the first to pro-
graphandreturnsthethroughput. poseanautomatedmethodforgeneratingguidance. Allpre-
vious works either use handcrafted guidance, such as criss-
3 GuidanceinMAPF crosshighways(Works2,3,and5),orusehandcraftedproce-
durestogenerateguidancefromaheatmaporasimilardata
While the term “guidance” has not been explicitly proposed structure that predicts traffic flows (Works 1, 4, 6, and 7).
in the literature, the concept of enforcing global guidance Morespecifically,Work1computesdirectionvectors(ofthe
and rules to enhance MAPF has been employed by numer- direction map) directly from past traffic flows and then uses
ous works in various ways. In this section, we present, for ahandcraftedequationtoconvertthemintomovementcosts.
thefirsttime,asummaryoftheseworksandprovideacom- Work4introducestwomethods,GMandHM,forgenerating
prehensivereviewofhowtheyrepresent,generate,andutilize highways. GM uses a graphic model [Koller and Friedman,
guidance. Table 1 shows the comparison between them and 2009] with a number of handcrafted features obtained from
our GGO. We will refer to them by their indices throughout the estimated traffic flow. HM converts the estimated traf-
theremainderofthissection. ficflowintoascoreforeachedgeusingahandcraftedscore
Representing Guidance. Previous works primarily repre- functionandselectsedgesbasedonapredefinedscorethresh-
sentguidancethroughmodifiededgedirectionsormovement old. Work6usesadata-drivenmodeltopredicttrafficflow,
costs. They are all particular cases within the definition of ormorespecifically,thedelaysthattheagentswillencounter
the guidance graph, and none of them can represent vary- (due to collision avoidance etc.) and directly uses the pre-
ing wait costs. We roughly divide them into 4 categories. dicted delays as movement costs. Last, Work 7 collects the
(1) Inspired by potential-field and flow-field methods used plannedpathsofallagentsandconvertsthemintomovementmatrixadaptation.Figure2givesanoverviewofusingCMA-
EStosolveGGO.Specifically,wemodeltheedgeweightsω
as a multi-variate Gaussian distribution. We then iteratively
Sample Form guidance graph Run lifelong MAPF Algo Update samplefromthedistributionfornewbatchesofedgeweights,
formingguidancegraphs. Wenormalizetheedgeweightsto
be within a given bound [ω ,ω ]. We then evaluate each
lb ub
guidancegraphbyrunningN simulationsinagivenlife-
Figure2:CMA-ESforGGO.Theedgeweightsareiterativelysam- ecma
pled from a Gaussian distribution and then evaluated in a lifelong long MAPF simulator and computing the average through-
MAPFsimulator.ThesimulatedresultsareusedtoupdatetheGaus- put. Theevaluatedguidancegraphsarerankedbasedonthe
siandistributiontowardshigh-throughputregions. throughputandthetopN ofthemareusedtoupdatethe
best
Gaussiandistributiontowardsthehigh-objectiveregionofthe
searchspace.WerunCMA-ESforIiterationswithbatchsize
coststhroughahandcraftedequation.
b. Wereturntheguidancegraphwiththehighestthroughput
Therefore,weselect4baselinemethodstogenerateguid- asthesolution.
ance graphs in our experiments: (1) Unweighted, where no HandlingBoundsthroughNormalization. Whileoptimiz-
guidanceisused,(2)Crisscross,(3)HMCost,adaptedfrom
ingtheedgeweightsωdirectly,weneedtohandlethebound
HM in Work 4, and (4) Traffic Flow, adapted from Work 7. constraint. Yet, CMA-ES does not handle such bounds be-
WedidnotcompareWork1,asHMfromWork4isinspired causethesolutionsaresampledfromaGaussiandistribution.
by it. We did not compare GM from Work 4, as its perfor-
We use min-max normalization to enforce the constraint
mance is similar to HM. We did not compare Work 6, be-
because it does not affect path-planning solutions. To prove
cause,whileitobtainspredictedtrafficflowdifferentlyfrom
it, consider two guidance graphs with edge weights ω and
1
Work4,theprocedureofconvertingpredictedtrafficflowto ω = C ω , where C R+. Since the weight of every
2 1
guidanceissimilar. · ∈
edgeisscaledbythesamescalerC,thepathsreturnedbythe
PleasenotethattheHMCostandTrafficFlowusedinour lifelongMAPFalgorithmswithlow-levelsingleagentsolvers
experimentsdonotusetheoriginaltrafficflowmodelsintheir minimizingthesumofedgeweightsdonotchange.Weshow
papers. ThisisbecauseWork4tacklesone-shotMAPFand additionalexperimentsinAppendixCthatmin-maxnormal-
predicts traffic flows by planning shortest paths between the izationyieldsbettersolutionsthanrepresentativeboundshan-
start and goal locations of the agents, which is not realis- dling methods introduced by Biedrzycki [2020], which pro-
tic in lifelong MAPF as goal locations are unknown in ad- videsacomprehensivecomparisonofhandleboundsmethods
vance. Work7tackleslifelongMAPFbutassumestheguid- forCMA-ES.
ance graph can be updated on the fly using real-time traffic
information,whileweassumethatourguidancegraphisop- 4.2 ParameterizedIterativeUpdate
timized offline, and thus we do not have access to real-time
CMA-ESisknowntoscalepoorlytohighdimensionalsearch
traffic information. Therefore, we use the same traffic flow
spaces, make it challenging to optimize guidance graph for
model,namelythetile-usagemapobtainedfromsimulation,
large maps. Therefore, we propose Parameterized Iterative
forbothmethods. MoredetailscanbefoundinAppendixA.
Update(PIU).Figure3givesanoverviewthealgorithmand
Using Guidance. All previous works study their guidance
Algorithm 1 provides thepseudocode. On a highlevel, PIU
methods with a specific MAPF algorithm, so it remains un-
leveragesaparameterizedupdatemodeltoiterativelyupdate
clear whether and how well their methods can generalize to
theedgeweightsoftheguidancegraphusingtrafficinforma-
other MAPF algorithms. For example, an evident limitation
tionobtainedfromlifelongMAPFsimulations.PIUcanwork
ofmethodsdesignedforreactive(lifelong)MAPFalgorithms
withawidevarietyofoptimizationmethods.Inthiswork,we
(namely Works 1, 2, 6, and 7) is that, since paths planned
choosetouseCMA-EStooptimizetheupdatemodel.
byreactivemethodsdonotincludewaitactions, theseguid-
UpdateModel. Wedefinetheupdatemodelasfollows:
ance methods, by design, do not define wait costs, making
it non-trivial to extend them to (lifelong) MAPF algorithms Definition 5 (Update model). Given a guidance graph
inothercategories. Incontrast,weassessourGGOmethods G g(V g,E g,ω), an update model is a function π
θ
: R|Eg|
with three leading lifelong MAPF algorithms from different R|Eg| R|Eg| that computes the updated edge weigh× ts
categories,therebydemonstratingtheirgenerality. ω′ R→ |Eg| given the current edge weights ω R|Eg| and
∈ >0 ∈ >0
edge usage U R|Eg|. The edge usage is the number of
4 Approach Eg ∈ ≥0
timeseachedgeisusedintheguidancegraph. Themodelis
WefirstintroduceCMA-EStosolveGGOdirectly. Thenwe parameterized by a vector θ Θ, where Θ is the space of
∈
introduce Parameterized Iterative Update (PIU), which uses allparameters.
CMA-EStooptimizeanupdatemodelthatiterativelygener-
PIU.TheredloopinFigure2givesanoverviewofPIU,and
atesaguidancegraphbasedonsimulatedtrafficinformation.
Lines10to20ofAlgorithm1providesthepseudocode. We
first form an update model π parameterized by a given pa-
4.1 CMA-ES θ
rameter vector θ (Line 11). We then initialize edge weights
CMA-ES [Hansen, 2016] is a derivative-free, black-box, ω to 1 (Line 12) and start an iterative update procedure
single-objective optimization algorithm based on covariance (Lines 13 to 19). In each iteration, we construct the currentAlgorithm1:Updatemodeloptimization
Input: µ ,Σ : initialmeanandcovariancematrixof
0 0
themultivariateGaussiandistribution.
Np: numberofiterationstoruninPIU.
update gaussian: functiontoupdateµandΣ
accordingtoevaluatedsolutions.
Obtain edge
simulate: functiontorunlifelongMAPF usage
simulationandreturnsedgeusageU and
Eg
waitactionusageU .
W
Initializeµ µ ,Σ Σ ,θ∗ NULL,g∗
1 0 0
← ← ← ←−∞
fori 1toI do
2
←
Samplebsolutionsθ ,...,θ (µ,Σ)
3 1 b
∼N
fork 1tobdo
4
g ← ,ω PIU(θ ,N )
5 k k k p
ifg >← g∗then
6 k
g∗ g ,θ∗ θ
7 k k
← ←
µ,Σ update gaussian(g ,θ ) Figure3:ParameterizedIterativeUpdate(PIU):startingwithinitial
8 1∼b 1∼b
← edgeweightsuniformly, weiterativelyrunlifelongMAPFsimula-
Returng∗,θ∗
9 tionstogettheedgeusageandwaitactionusage. Wethenusean
10
FunctionPIU(θ,Np):
updatemodelπ θ toupdatetheedgeweights. Theupdatemodelπ θ
11 Constructupdatemodelπ θ isoptimizedusingCMA-ES.
Initializeω =1
12
forj 1toN do
13 p
Co← nstructguidancegraphG (V ,E ,ω) erate the guidance graph, we simply use the optimized up-
14 g g g
15 forq 1toN epiudo date model to run PIU with a large N epiu = 10, meaning
U← (q),f(q) simulate(G ) thattheupdatemodelleveragestrafficinformationfrommore
16 Eg j ← g lifelong MAPF simulations in each run to update the guid-
17 U Eg
←
Ne1
piu
(cid:80)N q=e 1piuU E(q g) a thn rc oe ugg hra pp uh t. oW fge enfu er rt ah tee dr s gh uo iw danth ce ee gf rf ae pc ht so if nth Ae ppN ee ndpi iu xCon
.
the
f 1 (cid:80)Nepiuf(q)
18 j ← Nepiu q=1 j On the Advantage of PIU. Compared to directly using
19 ω ←π θ(ω,U Eg) CMA-ES,theadvantageofoptimizingtheupdatemodeland
usingPIUtogenerateguidancegraphistwo-folds. First,op-
Returnf ,ω
20 Np
timizing the update model reduces the dimension of search
space. AlthoughCMA-ESisversatileandapplicabletovari-
ouslifelongMAPFalgorithmsandmaps,itseffectivenessdi-
guidancegraphusingω (Line14). WethenrunN life- minishesinhigh-dimensionalsearchspaces, makingitchal-
epiu
long MAPF simulations (Lines 15 and 16), computing the lenging to use CMA-ES to search for edge weights directly
averagethroughputf andedgeusageU (Lines17and18). for large maps. Specifically, CMA-ES employs a full-rank
Thenweusetheupdatemodelπ toupdE ag tetheedgeweights, n n covariance matrix to model its Gaussian distribution
θ ×
startinganewiteration(Line19). WerunPIUforN itera- in an n-dimensional space, leading to quadratic increases in
p
tions.Finally,wereturnthethroughputf andedgeweights bothtimeandspacecomplexity[Varelasetal.,2018]. Inthe
ωofthelastiteration(Line20).
Np
caseofGGO,thenumberofedgeweightsofaguidancegraph
increases quadratically with the number of vertices, while
UpdateModelOptimization. Totraintheupdatemodel,we
define an objective function g : Θ R that runs the PIU our update model maintains a consistent number of param-
→ etersregardless ofthe sizeof theguidancegraph, offeringa
algorithm for N iterations with a given update model pa-
p morescalablesolutionthandirectlyapplyingCMA-ES.Sec-
rameterizedbyvectorθ. Thethroughputinthelastiteration
ond,theoptimizedupdatemodelisnotspecifictothemapit
f isreturnedastheoutputofg. Wethensearchforoptimal
Np is optimized on. Different maps with similar layouts could
parametersθ∗ =argmax g(θ)usingCMA-ES.
θ potentiallyhavesimilarhigh-throughputguidancegraphthat
Lines 1 to 9 of Algorithm 1 shows the pseudocode of
can be generated by the same update model. The guidance
update model optimization using CMA-ES. Starting with a
graphoptimizedbyCMA-ES,ontheotherhand,consistsof
giveninitialmulti-variateGaussiandistribution(Line1),the
edgeweightsforaspecificmap.
algorithm iteratively samples b parameter vectors (Line 3)
and runs PIU with them (Lines 4 and 5). Based on the re-
5 ExperimentalEvaluation
turnedthroughputvalues,itkeepstrackofthebestguidance
graph (Lines 6 and 7) and updates the Gaussian distribution In this section, we compare guidance graphs optimized by
(Line8). Finally,thealgorithmreturnsthebestupdatemodel CMA-ES and PIU with various baselines and assess the ca-
andthecorrespondingthroughput(Line9). pabilityofPIUtogeneratehigh-throughputguidancegraphs
GuidanceGraphGenerationwithUpdateModel. Togen- formapsoflargersizeswithsimilarlayouts.Setup MAPF Map Na Necma Nepiu Np GGO MAPF simulations, with a larger N
a
for PIBT compared to
1
2 PIBT
wr aa rn ehd oo um se32 33×32
36
400
5 1 5 CMA-ES&PIU
RHCRandDPPtodemonstratethatbothCMA-ESandPIU
3 room64 6×4 1500 workforcongestedscenarios.
×
4 RHCR warehouse33 36 220 5 N/A N/A CMA-ES Columns5to7showthehyerparametersofCMA-ESand
×
5 DPP warehouse20 17 88 5 N/A N/A CMA-ES PIU. To ensure a fair comparison, we choose the hyperpa-
×
rameterssuchthatCMA-ESandPIUrunthesamenumberof
Table 2: Summary of the experiment setup. N is the number of
a lifelong MAPF simulations. In particular, we set batch size
agents,N andN arethenumberoflifelongMAPFsimu-
ecma epiu b=100andthenumberofiterationsI =100forbothCMA-
lationstorunwhileevaluatingeachguidancegraphinCMA-ESand
ES and PIU, resulting in a total of b I = 10k objective
PIU,respectively.N isthenumberofiterationstoruninPIU.
p ×
function evaluations for both algorithms. In each iteration,
weselectthetopN =50solutionstoupdatetheGaussian
best
Setup MAPF+GGO SR Throughput CPURuntime(s) distribution. ForCMA-ES,eachevaluationrunsN =5
ecma
PIB PT IB+ TC +M PIA U-ES 1 10 00 0%
%
77 .. 47 68 ±00 ..0 02
2
1 1.. 23 91 ±00 ..0 01
2
lifelongMAPFsimulations,resultingin50ksimulations. For
1 P PI IB BT T+ +C Hr Missc Cr oo ss ts 1 10 00 0%
%
6 5. .8 94 8±±0 0. .0 02
2
1 1. .2 14 7±±0 0. .0 02
2
P anIU d, ee aa cc hh ie tev ra al tu ia ot nio rn ur nu sn NsthePIU =a 1lgo sir mith um latf io or n,N rp esi ute lr tia nti gon ins
PIBT+TrafficFlow 100% 7.43±0.02 1.19±0.02 epiu
PIBT+Unweighted 100% 5.52±0.01 1.20±0.02 50k simulations, identical to CMA-ES. We run each simu-
± ± lationfor1,000timesteps. ForRHCRandDPP,westopthe
PIBT+CMA-ES 100% 7.64 0.01 1.27 0.01
PIBT+PIU 100% 7.28±0.01 1.22±0.01 simulationearlyincaseofcongestion,whichhappensifmore
2 P PI IB BT T+ +C Hr Missc Cr oo ss ts 1 10 00 0%
%
6 5. .6 65 3±±0 0. .0 01
1
11 .. 22 41± ±00 ..0 01
1
thanhalfoftheagentswaitattheircurrentlocation.
PIBT+TrafficFlow 100% 5.84±0.01 1.23±0.01 Column 8 shows the GGO algorithms we run for each
PIBT+Unweighted 100% 5.22±0.01 1.25±0.01 setup. We apply CMA-ES across all setups to demonstrate
± ±
PIBT+CMA-ES 100% 3.12 0.01 4.91 0.06 its versatility. However, due to computational constraints,
PIBP TIB +T C+ risP sI cU
ross
1 10 00 0%
%
23 .. 71 53± ±00 ..0 01
1
4 4.. 65 79± ±0 0. .0 05
7
wefocusonusingPIUprimarilywithPIBT.WhilebothPIU
3 PIBT+HMCost 100% 2.41±0.01 4.71±0.05 and CMA-ES conduct the same number of lifelong MAPF
PIBT+TrafficFlow 100% 2.87±0.01 4.55±0.05 simulations, there is a notable difference in their execution.
PIBT+Unweighted 100% 2.51±0.01 4.95±0.06
± ± In CMA-ES, all N ecma simulations in each guidance graph
RHCR+CMA-ES 100% 6.58 0.04 91.24 15.66
RHCR+Crisscross 100% 5.59±0.20 3771.71 ±659.20 evaluationcanbeparallelized. Incontrast,PIUrunsthesim-
4 RHCR+HMCost 0% ±N/A ± N/A ulationssequentially,resultinginslowerruntime.
R RH HC CR R+ +T Ur na wffi ec igF hl to ew
d
3 02 %% 3.57 ±0 N. /2 A0 324.12 ±63 N.9 /A1 UpdateModel.Toenabletheupdatemodeltogenerateguid-
ancegraphsforarbitrarymaps,weuseaConvolutionalNeu-
DPP+CMA-ES 100% 5.17 0.00 28.75 0.53
DPP+Crisscross 100% 4.76±0.01 17.36±0.31 ral Network (CNN) as our update model. We can use CNN
5 DPP+HMCost 100% 4.32±0.01 29.94±1.39 becausewechoosegrid-basedmapsintheexperiments. The
DPP+TrafficFlow 100% 4.07±0.00 578.43 ±53.61
DPP+Unweighted 100% 4.34± ±0.01 20.30± ±0.49 fC oN lloN wh ea ds b3 yc ao Rnv eo Ll Uuti ao cn tia vl al ta ioy ne .rs To hf ek ue pr dn ae tl es miz oe d3 el× ha3 s, 4e ,2a 3c 1h
Table3: Successrates,throughput,andCPUruntimesoftheguid- parameters. For a map of dimension h w, we represent
×
ance graphs. SR refers to the success rate. For RHCR and DPP, theedgeweightsω oftheguidancegraphasatensorofsize
the success rate is the percentage of simulations that end without h w 5, where the first four channels are the movement
× ×
congestion. For PIBT, it is the percentage of simulations that end costsandthelastchannelisthewaitcosts.
withouttimeout. CPUruntimereferstotheruntimeofthesimula- Baseline Guidance. As mentioned in Section 3, we have 4
tioninseconds. WeonlymeasurethethroughputandCPUruntime baselineguidancegraphs,namely(1)Unweighted,(2)Criss-
ofsuccessfulsimulations.
cross[Cohen,2020],(3)HMCost[Cohenetal.,2016b],and
(4)TrafficFlow[Chenetal.,2024].
5.1 ExperimentSetup TransferOptimizedUpdatedModel. Weattempttotrans-
fer the update model optimized with setup 2 to larger ware-
General Setups. Table 2 outlines our experimental setup. housemapswithsimilarlayouts. Specifically,wemimicthe
Column 2 shows the lifelong MAPF algorithms. Follow- layout of warehouse 33 36 in setup 2 and design larger
ingtherecommendationsofpreviousworks[Lietal.,2021; warehousemapswithsize× supto93 91.Weshowthelarger
Zhang et al., 2023b], we use PBS [Ma et al., 2019] and mapsandotherexperimentsetupsi× ncludingimplementation
SIPP[PhillipsandLikhachev,2011]astheMAPFsolverand andcomputationresourcesinAppendixB.
thesingle-agentsolver,respectively,inbothRHCRandDPP
anduseh = 5andw = 10inRHCR.Column3outlinesthe 5.2 Results
maps, all being 4-neighbor girds, including two warehouse
maps(warehouse33 36andwarehouse20 17)frompre- ComparingGGOwithBaselineGuidance
× ×
viousworks[Lietal.,2021;Zhangetal.,2023b]andtwoad- Wefirstcompareouroptimizedguidancegraphwiththebase-
ditionalmaps(random32 32androom64 64)fromthe line guidance graphs. For each guidance graph, we run 50
× ×
MAPF benchmark [Stern et al., 2019]; see Figure 8 in Ap- simulationsandreportthenumericalresultsinTable3inthe
pendixBforillustration. WechoosemultiplemapsforPIBT formatofx y,wherexistheaverageandyisthestandard
±
to demonstrate that both CMA-ES and PIU work for differ- error. Both CMA-ES and PIU outperform all baseline guid-
entmaps. Column4isthenumberofagentsusedinlifelong ancegraphsinallsetupsintermsofthroughput. Specifically,DPP + CMA-ES DPP + Crisscross DPP + HM Cost DPP + Traffic Flow DPP + Unweighted
PIBT + CMA-ES PIBT + Crisscross PIBT + HM Cost PIBT + Traffic Flow PIBT + Unweighted PIBT + PIU
RHCR + CMA-ES RHCR + Crisscross RHCR + HM Cost RHCR + Traffic Flow RHCR + Unweighted
6 10 9 4
3 5 4.5 2
010 49 8888 050 220 400 800 0200 400 800 0100 1500 3000
Number of Agents Number of Agents Number of Agents Number of Agents
(a)warehouse20×17 (b)warehouse33×36 (c)random32×32 (d)room64×64
Figure4: Throughputwithdifferentnumbersofagents. TheguidancegraphsareoptimizedwithN agents,whichisindicatedbytheblack
a
verticallines.In(b),theblackverticallinesat220and400agentsindicateN forsetups4and2,respectively.
a
CMA-ESoutperformsallbaselineguidancegraphsinallse- Setup MAPF Map Na Necma Nepiu Np GGO
tups,showingtheversatilityofthealgorithm.Forthebaseline 6 PIBT warehouse33 36 150 5 1 5 CMA-ES/PIU
×
methods, the human-designed crisscross guidance performs
Table4: AnadditionaltheexperimentsetuptocomparePIBTwith
quite well in setups 2, 4, and 5 in warehouse 33 36 and
× RHCRwhentherearefeweragents.
warehouse 20 17 while Traffic Flow is more competitive
×
insetups1and3withrandom32 32androom64 64.
When comparing CMA-ES an× d PIU, CMA-ES× outper- Setup MAPF+GGO SR Throughput CPURuntime(s)
forms PIU in setups with smaller maps (warehouse 20 PIBT+CMA-ES 100% 4.74 0.01 0.58 0.00
× PIBT+PIU 100% 4.77±0.01 0.58±0.01
17, warehouse33 36, andrandom32 32), butmatches 6 PIBT+Unweighted 100% 3.75±0.00 0.50±0.00
PIUinthelargerro× om64 64mapbecau× seCMA-ESscales RHCR+Unweighted 100% 4.95±0.00 87.37±0.72
× ± ±
poorlytohigh-dimensionalsearchspace.Theguidancegraph
of room 64 64 has 14,340 parameters, making the opti- Table5: Successrates,throughput,andCPUruntimesoftheguid-
mizationvery× challenging.Optimizingtheupdatemodelwith ancegraphscomparingRHCRandPIBTwiththesamenumberof
PIU,ontheotherhand,hasalower-dimensionalsearchspace agentsinsetup6.
of4,231parametersregardlessofmapsize, makingPIUad-
vantageousinlargemaps.
the throughput gap between RHCR and PIBT, we conduct
To further understand the performance of the optimized
additional experiments as detailed in Table 4. We choose
guidance graphs, we run lifelong MAPF simulation with
N =150becauseitisthelargestnumberwithwhichRHCR
a
various numbers of agents and plot the throughput in Fig-
can maintain 100% success rate using an unweighted guid-
ure4. Thetrendsaresimilarinallmaps,withCMA-ESand
ancegraph.
PIU generally outperforming all baselines, except that Traf-
Table 5 shows the numerical results comparing RHCR
ficFlowmatchesPIUwithfeweragentsInrandom32 32
with an unweighted guidance graph and PIBT with opti-
×
and room 64 64. However, Traffic Flow is less compet-
mized guidance graphs. We run 50 simulations, each with
×
itive in warehouse 33 36 and warehouse 20 17, indi-
1000 timesteps, and report the average and standard errors.
× ×
cating that the performance of Traffic Flow depends on the
We find that, while RHCR still has the highest throughput,
map structure. To illustrate such dependency, we show the
both GGO methods significantly reduce the throughput gap
edgeweightsoftheguidancegraphasheatmapsinFigure5.
between PIBT and RHCR, from 24.2% to less than 4.2%,
It is notable that the edge weights in the center of the ran-
This indicates that, with the help of our optimized guidance
dom 32 32 map are higher, promoting the agents to tra-
graph,wecanenableagreedy,distributed,yetextremelyfast
×
verse the edges on the peripheral area. In the warehouse 33
rule-based MAPF algorithm (PIBT) to achieve performance
36map,however,theverticallanesofemptyspaces(white
comparable to a centralized, computationally heavy, search-
×
tilesshowninFigure8b)areheavilycongested,inflatingthe
based MAPF algorithm (RHCR). Figure 6 further compares
edgeweightsinthoseverticesalmostequally. Therefore,the
PIBT and RHCR with various numbers of agents. We ob-
guidancegivenbythegraphinFigure5bislessinformative
serve that the throughput of RHCR quickly drops after 150
than that in Figure 5a, causing Traffic Flow to have inferior
agents, while PIBT can maintain an increasing trend with
performanceinthewarehouse33 36map.
moreagents.
×
PIBTandRHCRwithGGO TransferOptimizedUpdateModel
In Figure 4, we additionally observe improved throughput We use the update model optimized in setup 2 to test trans-
for PIBT in warehouse 33 36 with fewer agents. To il- ferability. We first use the optimized update model to gen-
×
lustrate how a well-optimized guidance graph can narrow erate guidance graphs for maps with different sizes but sim-
tuphguorhT tuphguorhT tuphguorhT tuphguorhT(a)random32×32 (b)warehouse33×36
Figure5: EdgeweightsoftheoutgoingedgesofTrafficFlowguidancegraphsateveryvertexinwarehouse33×36andrandom32×32
maps.
PIBT + CMA-ES
PIBT + PIU 3500
PIBT + Unweighted 11
RHCR + Unweighted
3000
10 10
2500
9
2000
8
1500
5
7 1000
6 500
45 47 57 58 69 69 81 80 93 91 45 47 57 58 69 69 81 80 93 91
× × Map×Size × × × × Map×Size × ×
0
50 150 350
Number of Agents Figure 7: Max throughput and the number of agents at this maxi-
mum. PIUTransferreferstousingtheupdatemodeloptimizedin
Figure 6: A well-optimized guidance graph enables PIBT to have setup2togenerateguidancegraphs.
competitivethroughputwithRHCRdespitetheadvantageofRHCR
withfeweragents.
maps. Wealsoshowtheabilityofupdatemodeltogenerate
guidancegraphforlargermapswithsimilarpatterns.
ilar layouts (specified in Figure 9 of Appendix B) with an Our work is limited in many ways, yielding numerous
increasing number of agents, ranging from around 10% to future directions. First, both CMA-ES and PIU are com-
90% of the non-obstacles in the maps. We then run 50 life- putationally expensive, requiring a large number of lifelong
long MAPF simulations in each of the generated guidance MAPFsimulations. Futureworkscanfocusonreducingthe
graphswithPIBT.Weplotthemaximumthroughputachieved computational requirements of both methods. Second, al-
ineachmapandthecorrespondingnumberofagentsinFig- though our guidance graph can be used with online update
ure7,comparingPIUTransferwithbaselineguidancegraphs. mechanismsintroducedinpreviousworks[Chenetal.,2024;
WeobservethatPIUTransferdominatesallbaselineswithall Yu and Wolf, 2023], we limit our experiment settings with-
sizes.Wefurthershowthethroughputwithdifferentnumbers outsuchmechanisms.Integratingthesemechanismswithour
ofagentsineachmapinFigure10ofAppendixC. GGOapproachcouldfurtherenhanceMAPFguidanceutility.
6 Conclusion References
RafałBiedrzycki. Handlingboundconstraintsincma-es: An
WedefineguidancegraphandGGOtomaximizethethrough-
experimental study. Swarm and Evolutionary Computa-
put of lifelong MAPF, reviewing previous works on guid-
tion,52:100627,2020.
anceinMAPFandhighlightingthegeneralityofourguidance
graph. WeproposetwoGGOapproaches,CMA-ESandPIU, Michal Ca´p, Jir´ı Vokr´ınek, and Alexander Kleiner. Com-
thatoptimizeguidancegraphacrossdifferentalgorithmsand plete decentralized method for on-line multi-robot trajec-
tuphguorhT
tuphguorhTxaM
tuphguorhTxaMtastnegA#tory planning in well-formed infrastructures. In Proceed- JiaoyangLi,KexuanSun,HangMa,ArielFelner,T.K.Satish
ings of the International Conference on Automated Plan- Kumar, andSvenKoenig. Movingagentsinformationin
ningandScheduling(ICAPS),pages324–332,2015. congested environments. In Proceedings of the Interna-
tionalJointConferenceonAutonomousAgentsandMulti-
Zhe Chen, Daniel Harabor, Jiaoyang Li, and Peter Stuckey.
agentSystems(AAMAS),pages726–734,2020.
Trafficflowoptimisationforlifelongmulti-agentpathfind-
ing. In Proceedings of the AAAI Conference on Artificial JiaoyangLi,AndrewTinka,ScottKiesel,JosephW.Durham,
Intelligence(AAAI),2024. T.K.SatishKumar,andSvenKoenig.Lifelongmulti-agent
path finding in large-scale warehouses. In Proceedings
Liron Cohen, Tansel Uras, and Sven Koenig. Feasibility
of the AAAI Conference on Artificial Intelligence (AAAI),
study: Using highways for bounded-suboptimal multi-
agent path finding. In Proceedings of the International pages11272–11281,2021.
Symposium on Combinatorial Search (SoCS), pages 2–8, Minghua Liu, Hang Ma, Jiaoyang Li, and Sven Koenig.
2015. Task and path planning for multi-agent pickup and deliv-
Liron Cohen, Tansel Uras, T. K. Satish Kumar, Hong Xu, ery. In Proceedings of the International Conference on
Nora Ayanian, and Sven Koenig. Improved solvers for
Autonomous Agents and Multi-Agent Systems (AAMAS),
bounded-suboptimalmulti-agentpathfinding. InProceed- pages1152–1160,2019.
ingsoftheInternationalJointConferenceonArtificialIn- HangMa,JiaoyangLi,T.K.SatishKumar,andSvenKoenig.
telligence(IJCAI),pages3067–3074,2016. Lifelongmulti-agentpathfindingforonlinepickupandde-
Liron Cohen, Tansel Uras, T. K. Satish Kumar, Hong Xu, livery tasks. In Proceedings of the International Confer-
Nora Ayanian, and Sven Koenig. Improved solvers for enceonAutonomousAgentsandMultiagentSystems(AA-
bounded-suboptimalmulti-agentpathfinding. InProceed- MAS),pages837–845,2017.
ingsoftheInternationalJointConferenceonArtificialIn- Hang Ma, Jingxing Yang, Liron Cohen, T. K. Satish Ku-
telligence(IJCAI),pages3067–3074,2016. mar, and Sven Koenig. Feasibility study: Moving non-
Liron Cohen. Efficient Bounded-Suboptimal Multi-Agent homogeneous teams in congested video game environ-
Path Finding and Motion Planning via Improvements to ments. In Proceedings of the AAAI Conference on Ar-
FocalSearch. PhDthesis,UniversityofSouthernCalifor- tificial Intelligence and Interactive Digital Entertainment
nia,2020. (AIIDE),pages270–272,2017.
Mehul Damani, Zhiyao Luo, Emerson Wenzel, and Guil- Hang Ma, Daniel Harabor, Peter J. Stuckey, Jiaoyang Li,
laume Sartoretti. PRIMAL : Pathfinding via reinforce- andSvenKoenig. Searchingwithconsistentprioritization
2
ment and imitation multi-agent learning - lifelong. IEEE for multi-agent path finding. In Proceedings of the AAAI
RoboticsandAutomationLetters,6(2):2666–2673,2021. ConferenceonArtificialIntelligence(AAAI),pages7643–
7650,2019.
Florian Grenouilleau, Willem-Jan van Hoeve, and John N.
Hooker. A multi-label A* algorithm for multi-agent KeisukeOkumura,ManaoMachida,XavierDe´fago,andYa-
pathfinding. In Proceedings of the International Con- sumasaTamura. Priorityinheritancewithbacktrackingfor
ference on Automated Planning and Scheduling (ICAPS), iterativemulti-agentpathfinding.InProceedingsoftheIn-
pages181–185,2019. ternationalJointConferenceonArtificialIntelligence(IJ-
CAI),pages535–542,2019.
Nikolaus Hansen, yoshihikoueno, ARF1, Gabriela Kadle-
cova´, Kento Nozawa, Luca Rolshoven, Matthew Chan, Adam Paszke, Sam Gross, Francisco Massa, Adam Lerer,
YouheiAkimoto,brieglhostis,andDimoBrockhoff. Cma- JamesBradbury,GregoryChanan,TrevorKilleen,Zeming
es/pycma: r3.3.0,January2023. Lin, Natalia Gimelshein, Luca Antiga, Alban Desmaison,
AndreasKopf,EdwardYang,ZacharyDeVito,MartinRai-
Nikolaus Hansen. The CMA evolution strategy: A tutorial.
son,AlykhanTejani,SasankChilamkurthy,BenoitSteiner,
ArXiv,abs/1604.00772,2016.
LuFang, JunjieBai, andSoumithChintala. PyTorch: An
M. Renee Jansen and Nathan R Sturtevant. Direction maps imperative style, high-performance deep learning library.
for cooperative pathfinding. In Proceedings of the AAAI InProceedingsoftheAdvancesinNeuralInformationPro-
ConferenceonArtificialIntelligenceandInteractiveDigi- cessingSystems(NeurIPS),pages8024–8035,2019.
talEntertainment(AIIDE),pages185–190,2008.
MikePhillipsandMaximLikhachev. SIPP:safeintervalpath
Daphne Koller and Nir Friedman. Probabilistic Graphical planningfordynamicenvironments. InProceedingsofthe
Models: Principles and Techniques - Adaptive Computa-
IEEE International Conference on Robotics and Automa-
tionandMachineLearning. TheMITPress,2009. tion(ICRA),pages5628–5635,2011.
NgaiMengKou,ChengPeng,HangMa,T.K.SatishKumar,
RoniStern,NathanR.Sturtevant,ArielFelner,SvenKoenig,
andSvenKoenig. Idletimeoptimizationfortargetassign-
Hang Ma, Thayne T. Walker, Jiaoyang Li, Dor Atzmon,
mentandpathfindinginsortationcenters. InProceedings
LironCohen, T.K.SatishKumar, RomanBarta´k, andEli
of the AAAI Conference on Artificial Intelligence (AAAI),
Boyarski. Multi-agent pathfinding: Definitions, variants,
pages9925–9932,2020.
andbenchmarks. InProceedingsoftheInternationalSym-
Ming-Feng Li and Min Sun. The study of highway for life- posiumonCombinatorialSearch(SoCS),pages151–159,
longmulti-agentpathfinding. ArXiv,2304.04217,2023. 2019.Bryon Tjanaka, Matthew C. Fontaine, David H. Lee, Yu-
lun Zhang, Nivedit Reddy Balam, Nathaniel Dennler, Su-
jay S. Garlanka, Nikitas Dimitri Klapsis, and Stefanos
Nikolaidis. pyribs:Abare-bonespythonlibraryforquality
diversityoptimization. InProceedingsoftheGeneticand
Evolutionary Computation Conference (GECCO), pages
220–229,2023.
SumanthVarambally,JiaoyangLi,andSvenKoenig. Which
MAPFmodelworksbestforautomatedwarehousing? In
Proceedings of the Symposium on Combinatorial Search
(SoCS),pages190–198,2022.
Konstantinos Varelas, Anne Auger, Dimo Brockhoff, Niko-
laus Hansen, Ouassim Ait ElHara, Yann Semet, Rami
Kassab,andFre´de´ricBarbaresco. Acomparativestudyof
large-scalevariantsofcma-es.InParallelProblemSolving
fromNature–PPSNXV,pages3–15,2018.
QianWan,ChonglinGu,SankuiSun,MengxiaChen,Hejiao
Huang,andXiaohuaJia. Lifelongmulti-agentpathfinding
inadynamicenvironment. InProceedingsoftheInterna-
tional Conference on Control, Automation, Robotics and
Vision(ICARCV),pages875–882,2018.
Ko-Hsin Cindy Wang and Adi Botea. Fast and memory-
efficient multi-agent pathfinding. In Proceedings of the
International Conference on Automated Planning and
Scheduling(ICAPS),pages380–387,2008.
JingjinYuandStevenM.LaValle. Structureandintractabil-
ityofoptimalmulti-robotpathplanningongraphs. InPro-
ceedingsoftheAAAIConferenceonArtificialIntelligence
(AAAI),pages1444–1449,2013.
Ge Yu and Michael Wolf. Congestion prediction for large
fleets of mobile robots. In Proceedings of the Interna-
tional Conference on Robotics and Automation (ICRA),
pages7642–7649,2023.
Yulun Zhang, Matthew C. Fontaine, Varun Bhatt, Stefanos
Nikolaidis, andJiaoyangLi. Arbitrarilyscalableenviron-
mentgeneratorsvianeuralcellularautomata. InProceed-
ings of the Advances in Neural Information Processing
Systems(NeurIPS),2023.
Yulun Zhang, Matthew C. Fontaine, Varun Bhatt, Stefanos
Nikolaidis,andJiaoyangLi. Multi-robotcoordinationand
layoutdesignforautomatedwarehousing. InProceedings
of the International Joint Conference on Artificial Intelli-
gence(IJCAI),pages5503–5511,2023.Algorithm 2: Traffic Flow Guidance Graph Genera- Algorithm3:HMCostGuidanceGraphGeneration
tion
Input: G (V ,E ,ω),whereω =1
g g g
Input: G g(V g,E g,ω),whereω =1 N base: numberofiterations
N base: numberofiterations S,T V g: potentialstartandgoallocationsof
S,T V g: potentialstartandgoallocationsof theag⊂ ents
⊂
theagents plan path: functiontofindsingleagentpath
plan path: functiontofindsingleagentpath givenstart,goal,andguidancegraph.
givenstart,goal,andguidancegraph. α,β,γ R: hyperparametersofcomputing
1 InitializevertexusageU Vg(v) ←0, ∀v ∈V g followp∈ referencep,interferencecostt,and
2 InitializeedgeusageU Eg(u,v) ←0, ∀(u →v) ∈E g saturationcostt,respectively.
3 fori ←1toN basedo 1 InitializevertexusageU Vg(v) ←0, ∀v ∈V g
654
7
fPS oa i rm ← V Up e Vl rpe gtl e (s a x vi n )v∈ ←pR ∈atS P Uh, i V(g gs di (i o, v∈ g )R i +,T G 1gs ).t. s i ̸=g i 2 3 4
5
I fon riti i S Pa al ← ii mz ←e p1e l petd o lg s aNe i n∈u b pas Rsa aeg tS he d , (oU g siE i,∈g g( R iu ,, T Gv g) s ).← t. s0 i, ̸=∀( gu i→v) ∈E g
8
9
forE Ud Eg ge (u(u
,v→ )
←v)
U∈
EgP (i ud ,o
v)+1
6
7
forV Ue Vr gte (x v)v ←∈P Ui Vgd (o
v)+1
1 1 10 1
2
forE p
c
ω((d (uvg u,)e
,v←
v( )u )←⌈→ U UV 1v g V) +( g2v (∈ )
u
c− (,E 1 uv⌉g
,)
vd
×
)o
+U
V pg
(( vv ),u)
108 9 f fo or rE
E
pU (d dE ug gg ,e e( vu(
(
)u u,v→ →) ← αv v) )U∈ ∈E Ug EP E( gi gu (d u,
d
,o v vo) )+1
13 ← 11 ← × Nbase
14 ω TF ←ω 12 t(u,v) ←β ×
UE
Ng
b( av s, eu)
15
ReturnG TF(V g,E g,ω TF) UEg(u,v)+UEg(v,u)
13 s(u,v) γ 2Nbase
←
c(u,v) 1 p(u,v)+t(u,v)+s(u,v)
14
← −
ω(u,v) c(u,v)
A BaselineGuidanceGraphs 15 ←
SetE E withlowestc(u,v)s.t.
Inthissection, wediscussthebaselineguidancegraphsthat 16 HM ⊂ g
E = 1 E andu=v
wecomparewithinSection5.AsmentionedinSection3,we | HM | 7| g | ̸
have4baselineguidancegraphs,namely(1)Unweighted,(2) 17 SetE H′ M ←randomlysample 1 5 ofedgesfromE HM
Crisscross[Cohen,2020],(3)HMCost[Cohenetal.,2016a], 18 Initializeedgeweightsω HM
and(4)TrafficFlow[Chenetal.,2024]. 19 forEdge(u v) E g do
if(u
v→
)
E∈′
then
20 → ∈ HM
A.1 UnweightedandCrisscross 21 ω HM(u,v) 0.5
←
else
22
Bothunweightedandcrisscrossguidancegraphsarehuman-
ω (u,v) 1
23 HM
designed. Wedefineunweightedguidancegraphasfollows: ←
ReturnG (V ,E ,ω )
Definition 6 (Unweighted Guidance Graph). We define a 24 HM g g HM
guidancegraphG(V ,E ,ω)whereω =1asanunweighted
g g
guidancegraph.
A.2 TrafficFlowandHMCost
Our crisscross guidance graph follows the definition of
crisscrosshighways[Cohen,2020]. Inparticular: The previous work on traffic flow guidance [Chen et al.,
2024] is developed for lifelong MAPF with an online up-
Definition 7 (Crisscross Guidance Graph). Given an un-
datemechanism. TheworkonHMCostguidance[Cohenet
weighted guidance graph G(V ,E ,ω) for a 4-neighbor
g g al., 2016b] is developed for one-shot MAPF. Therefore, we
grid-basedmapinwhichagentscanmoveup, down, left, or
adaptbothmethodstoconstructguidancegraphsforlifelong
right at each vertex, we select a subset of edges E E
c ⊂ g MAPF.
suchthat:
TrafficFlow.Algorithm2describestheadaptedTrafficFlow
1. intheevenrows,alledgespointingrightarechosen, guidance graph generation procedure. On a high level, we
iterativelyplansingle-agentpathsbasedonthecurrentguid-
2. intheoddrows,alledgespointingleftarechosen,
ancegraphandupdatethegraphbasedonthecongestionof
3. intheevencolumns,alledgespointinguparechosen, thesepaths. Startingwithanunweightedguidancegraph,we
sampleapairofstartandgoallocations(Line4)andsearch
4. intheoddcolumns,alledgespointingdownarechosen.
for a path P that minimizes the sum of its edge weights on
i
We let the edge weights of edges in E be 0.5 and all other the current guidance graph (Line 5). Then, we increment
c
edgesE E be1,promotingtheagentstouseedgesinE . the usages of vertices and edges on P by 1 (Lines 6 to 9).
g c c i
\(a)warehouse20×17 (b)warehouse33×36 (c)random32×32 (d)room64×64
Figure8:Mapsusedforexperiments.
Afterward, we follow the previous work [Chen et al., 2024] B AdditionalExperimentSetups
to compute the vertex congestion averaged over vertex us-
B.1 Maps
age for each vertex (Line 11) and the contraflow congestion
foreachedge(Line12)andthenupdatetheedgeweightsof Figure 8 summarizes the maps used for experiments in Sec-
the guidance graph by summing the vertex congestion, the tion 5. In all maps, black tiles are obstacles and non-black
contraflow congestion, and 1 (Line 13), where the 1 indi- tiles are traversable. In warehouse maps, orange tiles are
cates the zero congestion cost. The updated edge weights home-locations,bluetilesareendpoints,andpurpletilesare
inflatethecostoffrequentlyusededgessothatthefollowing workstations. In warehouse 20 17, agents start from or-
×
single-agentpathsareencouragedtoavoidtheseedges. Traf- ange tiles (home-locations) and move constantly between
ficFlowrepeatstheprocedureforN iterationsandreturns randomly chosen blue tiles. In warehouse 33 36, agents
base
×
theedgeweightsfromthelastiterationastheguidancegraph start from any non-black tiles and move between randomly
(Lines14and15). SincetheTrafficFlowalgorithmdoesnot chosenblueandpurpletiles.Inrandom32 32androom64
×
considerwaitcosts,wesetwaitcostsofallverticestobe1. 64,agentsstartfromandmovebetweenrandomlychosen
×
whitetiles.
Figure 9 summarizes the warehouse maps used to test
HMCost. Algorithm3describestheadaptedHMCostguid-
transferability of the optimized update model in Section 5.
ancegraphgenerationprocedure. SimilartoTrafficFlow,we
Tocreatethesemaps,wemimicthepatternofFigure8b,re-
firstsamplestartandgoallocations(Line4)andrunsingle-
peatingblockof10shelves(black)andendpoints(blue)and
agent path planning on the current guidance graph (Line 5),
placingworkstations(purple)ontheleftandrightborders.
updating vertex and edge usage (Lines 6 to 9). Then we
follow the previous work [Cohen et al., 2016b] to compute
B.2 HyperparametersforBaselineMethods
(1) the follow preference p (Line 11), which encourages the
agents to traverse through previously used edges, (2) the in- InbothTrafficFlowandHMCost,weuseN base = 10,000
terference cost t, which discourages the agents to traverse togeneratetheguidancegraphsforallmaps.InHMCost,we
through edges in the opposite directions of previously used follow the previous work [Cohen et al., 2016b] to use α =
edges, and(3)thesaturationcosts. TheHMcostcisalin- 0.5,β =1.2,andγ =1.3.
earcombinationoftheabovethreevariables(Line14), with
smaller HM costs indicating edges that are used more fre- B.3 Implementation.
quently. We then set the HM cost as the edge weights of WeimplementCMA-ESinPyribs[Tjanakaetal.,2023]and
the guidance graph and repeat the iteration for N base times theupdatemodelinPyTorch[Paszkeetal.,2019]. Wehave
(Line15). includedthesourceinthesupplementarymaterial.Weimple-
mentTrafficFlowandHMCostguidancegraphgenerationin
Python.WeimplementthelifelongMAPFalgorithmsinC++
Nevertheless, after running N single agent path plan-
base basedonopenlyavailableimplementationfromtheprevious
ning,HMCostincludesadditionalprocedurestogeneratethe
works[Lietal.,2021;Okumuraetal.,2019].
final guidance graph from the computed HM cost. Follow-
ingpreviouswork[Cohenetal.,2016b],weselectthetop 1
7 B.4 ComputeResource
of the edges with the smallest HM cost and then randomly
sample 1 of them as the set of highway edges (Lines 16 We run our experiments on two machines: (1) a local ma-
5
and 17). We then set the weights of the highway edges as chinewitha64-coreAMDRyzenThreadripper3990XCPU,
0.5 and non-highway edges as 1, forming a guidance graph 192GBofRAM,andanNvidiaRTX3090TiGPU,and(2)a
(Lines18to23). InHMCost,allselectededgesarenotself- high-performingclusterwithnumerous64-coreAMDEPYC
edges. Therefore,thewaitcostsofallverticesare1,sameas 7742CPUs,eachwith256GBofRAM.WemeasureallCPU
thenon-highwayedges. runtimeonmachine(1).(a)45×47 (b)57×58 (c)69×69 (d)81×80 (e)93×91
Figure9:Warehousemapsusedfortestingthetransferabilityoftheupdatemodeloptimizedwithsetup2inSection5.
PIBT + Crisscross PIBT + HM Cost PIBT + PIU Transfer PIBT + Traffic Flow PIBT + Unweighted
10 10 10 12 12
5 5 5 6 6
0200 850 1500 0200 1200 2200 0400 1700 3000 0600 2300 4000 01000 3500 6000
Number of Agents Number of Agents Number of Agents Number of Agents Number of Agents
(a)45×47 (b)57×58 (c)69×69 (d)81×80 (e)93×91
Figure10:Throughputwithdifferentnumbersofagentsinlargerwarehousemaps.
PIBT+PIU(Nepiu=1) ulationswithvariousnumberofagents,eachwith50simula-
PIBT+PIU(Nepiu=10) tions. WeshowtheresultinFigure11. Wefindnosignificant
PIBT+PIU(Nepiu=30)
differenceinthroughputwithdifferentvaluesofN .
PIBT+PIU(Nepiu=50) epiu
10
C.2 BoundsHandlinginCMA-ES
A previous work [Biedrzycki, 2020] compares a number of
bounds handling approaches for CMA-ES. Their compari-
5 sondemonstratesthatresampling,reflection,projection,and
transformation are among the most popular and empirically
bestchoicesofboundshandlingmethods. Therefore,wefirst
brieflypresentthesemethodsandcomparethemwithourpro-
0 posedboundshandling,namelymin-maxnormalization. For
50 400 800
Number of Agents simplicity,weusenormalizationtorefertomin-maxnormal-
izationinthefollowingtexts.
Figure 11: Effect of different values of N . The black verti-
epiu
callineindicatesthenumberofagentsusedtooptimizetheupdate Bounds-HandlingMethods
model. Assumethatweoptimizeforω′ Rn suchthatl ω′ u
with l,u Rn. Then, given a∈ randomly sample≤ d solu≤ tion
ω
Rn,∈
the bounds handling methods seek to generate a
C AdditionalExperiments
vali∈ dsolutionω′fromω.
Weincludethefollowingadditionalexperiments:(1)forPIU, Resampling:Theresamplingmethodkeepsresamplingfrom
we test guidance graph generation with different values of theGaussiandistributionuntilallvariablesω ωarewithin
i
N epiutotestifrunningmoresimulationsinPIUcanimprove thegivenbounds. ∈
the generated guidance graph, and (2) for bounds handling Notably,theresamplingmethoddoesnotstopuntilallvari-
ofCMA-ES,weshowablationexperimentsonnormalization ables are within the bounds. The probability of sampling a
comparing with other representative bounds handling meth- solution from a Gaussian distribution such that all variables
odspresentedin[Biedrzycki,2020]. arewithinagivenbounddependsheavilyontheparameters
ofthedistributionandthedimensionalityofthesearchspace.
C.1 OntheValueofN
epiu OurexperimentsetupsspecifiedinTable2andTable4have
We use the update model optimized with setup 2 to gener- atleast1159parameters,makingresamplinginapplicable.
ate guidance graphs with N 1,10,30,50 . We then Projection: The projection method projects out-of-bounds
epiu
∈ { }
evaluatetheguidancegraphsbyrunninglifelongMAPFsim- solutionstothelowerorupperbounds.
tuphguorhT
tuphguorhT
tuphguorhT tuphguorhT tuphguorhT tuphguorhTPIBT + CMA-ES (Normalization) RHCR + CMA-ES (Normalization)
PIBT + CMA-ES (Projection) RHCR + CMA-ES (Projection)
PIBT + CMA-ES (Reflection) RHCR + CMA-ES (Reflection)
PIBT + CMA-ES (Transformation) RHCR + CMA-ES (Transformation)
9 10
4.5 5
0 0
200 400 800 50 220 350
Number of Agents Number of Agents
(a)Setup1:random32×32 (b)Setup4:warehouse33×36
Figure12: ComparisonofdifferentboundshandlingmethodsinCMA-ESinsetup1and4. Theblackverticallinesindicatesthenumberof
agentsN usedtooptimizetheguidancegraph.
a
the throughput. For both setups, normalization empirically

ω i l i ≤ω i ≤u i achieves the highest throughput with N a agents. While
ω′ = l ω <l (4) scaling to more agents, normalization consistently has bet-
i i i i
u ω >u ter throughput than other bounds handling methods in setup
i i i
1 with PIBT. While the throughput of RHCR drops more
Reflection: Thereflectionmethodreflectstheout-of-bounds
rapidlywithnormalizationafterN agents,thiscanbecom-
a
solutionstowithintheboundssuchthat:
pensated by increasing N during the optimization of the
a
 guidancegraph.
ω l ω u
 i i ≤ i ≤ i Theadvantageofnormalizationcomesfromtheutilization
ω′ i = 2l i ω i ω i <l i (5) oftheguidancegraphinlifelongMAPF.AsdiscussedinSec-
2u−
ω ω >u tion 4, the absolute magnitude of the edge weights has less
i i i i
−
Transformation: The transformation method maps out-of- or no impact on the MAPF solutions compared to the rela-
boundssolutionstowithintheboundssuchthat: tive magnitude. Therefore, normalizing these edge weights
simplifies the optimization problem, shifting the focus to
u l 1+ l the shape of the Gaussian distribution modeling the edge
al =min( i − i, |i |) (6)
i 2 20 weights,ratherthantheirprecisenumericalvalues. Thissim-
plificationenablesnormalizationtooutperformotherbounds-
u l 1+ u
au =min( i − i, | i |) (7) handlingmethodsforCMA-ES.
i 2 20

ω l +al ω u au
ω′ i
=
ul i
ii
+ −(ω (ωi− i−( 4l (ai 4u− l i
ai
u
i+al i a)
u
i)2
))2
l
uii
i− −a al
ii
u
i≤≤
<ω
ωii i<≤
≤l i
ui
+
i−
+al i
ai
u
i
(8)
Intuitively,thetransformationdoesnotchangethesampled
solutionifitiswithinthebound[l +al,u au].Ifthesolu-
i i i − i
tionfallsinto[l al,l +al)or(u au,u +au],quadratic
i − i i i i − i i i
transformationsareappliedtomapthesolutiontowithinthe
bounds. Ifthesolutionissmallerthanl al orlargerthan
u
+au,thetransformationmethodfirsti u− sesi
Equation(5)to
i i
reflect the solution using l al or u +au as the bounds.
i − i i i
ThenEquation(8)isappliedtofurthertransformthevalueif
necessary.Weusethetransformationmethodimplementedin
Pycma[Hansenetal.,2023]toruntheexperiments.
EmpiricalComparison
We compare normalization with projection, reflection, and
transformation on setup 1 and setup 4. Similar to Sec-
tion5,werunlifelongMAPFsimulationswithvaryingnum-
bers of agents, each with 50 simulations. Figure 12 shows
tuphguorhT tuphguorhT