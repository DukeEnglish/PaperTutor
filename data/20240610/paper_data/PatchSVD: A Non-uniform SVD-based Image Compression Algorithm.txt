PatchSVD: A Non-uniform SVD-based Image Compression Algorithm
ZahraGolpayegani1,NizarBouguila2
GinaCodySchoolofEngineering,ConcordiaUniversity,Montreal,Canada
1zahra.golpayegani@mail.concordia.ca,2nizar.bouguila@concordia.ca
Keywords: LossyImageCompression,SingularValueDecomposition,PatchSVD,JointPhotographicExpertsGroup
Abstract: Storing data is particularly a challenge when dealing with image data which often involves large file sizes
duetothehighresolutionandcomplexityofimages. Efficientimagecompressionalgorithmsarecrucialto
bettermanagedatastoragecosts. Inthispaper, weproposeanovelregion-basedlossyimagecompression
technique,calledPatchSVD,basedontheSingularValueDecomposition(SVD)algorithm.Weshowthrough
experiments that PatchSVD outperforms SVD-based image compression with respect to three popular im-
agecompressionmetrics. Moreover,wecomparePatchSVDcompressionartifactswiththoseofJointPhoto-
graphicExpertsGroup(JPEG)andSVD-basedimagecompressionandillustratesomecaseswherePatchSVD
compressionartifactsarepreferablecomparedtoJPEGandSVDartifacts.
1 INTRODUCTION
Enormous amounts of data are generated every day
byvarioussources,includingsocialmedia,sensorson
wearabledevices,andsmartgadgets. Inmanycases,
thedataneedstobestoredonasmalldevicetoserve
a specific purpose. For instance, a real-time defect
detector stores images of its camera feed and sends
them to a lightweight model to catch possible flaws
in a production line (Pham et al., 2023). Such small
devicesarelimitedinstoragecapacities;therefore,it
isessentialtodesignefficientdatastoragealgorithms
capableofstoringthedatawithoutsignificantlossin
quality.
Images are one of the most commonly used data
formats,andstoringanimagefileonadigitaldevice
canrequireanywherefromkilobytestomegabytesof Figure1:JPEGproducesmorecompressionartifactsinim-
agescontainingtextcomparedtotheproposedmethod.The
storagespace,dependingonthecomplexityoftheim-
sample is taken from the IAM Handwriting Database and
age and the storage technique. Image compression
theimagehasbeenzoomedin30timestheoriginalsizeto
algorithmscanbecategorizedintolosslessandlossy
bettervisualizethecompressionartifacts.
compression methods. In lossless methods, such as
Portable Network Graphics (PNG) image compres- tainsvisiblecompressionartifacts.Specifically,JPEG
sion, the original input can be reconstructed after image compression is based on the assumption that
compressing because compression was achieved by withinan8×8pixelblock,therearenosharpchanges
removingstatisticalredundancies.However,onlylow in intensity. However, in some use cases, such as
compression ratios are achievable through lossless compressing images of text or electronic circuit di-
imagecompression,andimagecompressionisnotal- agrams,thisassumptiondoesnothold,andJPEGcre-
waysguaranteed. Ontheotherhand,lossycompres- ates visible compression artifacts around the drawn
sion techniques, such as Joint Photographic Experts lines. Figure 1 compares the JPEG compression ar-
Group(JPEG)compression(Wallace,1991),achieve tifacts with those of the proposed method presented
highercompressionratiosbyallowingmoreinforma- inthispaper,usinganexampleimagecontainingtext
tionloss,butthereconstructedimagesometimescon- sourced from the IAM Handwriting Database (Marti
4202
nuJ
7
]VC.sc[
1v92150.6042:viXraandBunke,2002). SVD, the number of non-zero elements on the diag-
To improve the compression results, some tradi- onal of S is equal to r. By retaining only the first r
tional methods compress regions of interest (ROIs) elementsfromU,S,andVT wegetanr-rankapprox-
with a higher bit-rate than the rest of the regions imationA =U S VT forthematrixA.
r r r r
(Christopoulos et al., 2000), however, the ROIs are Ifweusek-rankSVDtocompressanimagerep-
not detected automatically and should be specified resentedbymatrixA ,thenumberofelementswe
m×n
by the user. Deep learning-based approaches have needtostoretorepresentthecompressedimageiscal-
alsobeenappliedtoimagecompression(Chengetal., culatedbysummingupthenumberofelementsfrom
2018;Todericietal.,2017;Agustssonetal.,2017;Li each SVD component. Therefore, storing the k-rank
etal.,2018;Chengetal.,2019;Prakashetal.,2017). version of A with m×n elements only requires
m×n
Nevertheless, training deep learning models require S = k(m+n+1) values. Note that the k-rank
SVD
high computational power and during inference, the approximation of matrix A keeps most of the use-
model has to exist on the device that runs the com- ful information about the image while reducing the
pressioncode,whichcallsforadditionalstoragecom- storage requirements for the input, especially if the
paredtotraditionalmethods. rowsandcolumnsintheimagearehighlycorrelated
In this paper, we propose a new image com- (r≪min(m,n)). However,whenhighercompression
pression algorithm based on Singular Value Decom- ratios are required, it is beneficial to sacrifice more
position (SVD), called PatchSVD1. First, we ex- informationtosavemorestorage,whichisachievable
plain how PatchSVD works, what is the compres- bychoosingk <k.
SVD
sionratiowecanachieveusingPatchSVD,andwhat
are the required conditions to compress an image
using PatchSVD. Then, through extensive experi- 3 RELATED WORKS
ments, we demonstrate that PatchSVD outperforms
SVD in terms of Structural Similarity Index Mea-
SVD has been used before in literature for image
sure (SSIM), Peak Signal-to-Noise Ratio (PSNR),
compression (Andrews and Patterson, 1976; Akri-
and Mean Squared Error (MSE) metrics. Moreover,
tasandMalaschonok,2004;KahuandRahate,2013;
through examples, we show that PatchSVD is more
Prasanthaetal., 2007; Tianetal., 2005; Cao, 2006).
robust against sharp pixel intensity changes, there-
In (Ranade et al., 2007), a variation on image com-
fore, it is preferable over JPEG in some use cases,
pressionusingSVDhasbeenproposedthatappliesa
including compressing images of text, where high
data-independentpermutationontheinputimagebe-
changesinpixelintensityexist.
fore performing SVD-based image compression as a
preprocessingstep. In(Sadek, 2012), aforensictool
is developed using SVD that embeds a watermark
2 PRELIMINARIES into the image noise subspace. Another application
ofSVDappliedtoimagedataisimagerecoverydis-
Inthissection,webrieflyoverviewSVDanditsbasic cussed in (Chen, 2018) where authors used SVD for
properties. SingularValueDecompositionorSVDis matrixcompletion.
analgorithmthatfactorizesagivenmatrixA∈Rm×n Few studies have investigated region-based or
into three components A=USVT, whereU and patch-based image compression using techniques
m×m
VT are orthogonal matrices and S is a diagonal similartoSVD.In(Limetal.,2014),aGUIsystemis
n×n m×n
matrix containing singular values in descending or- designedthattakesRegionsofInterest(ROI)inmed-
der. The singular values are non-negative real num- ical images to ensure near-zero information loss in
bersthatrepresentthemagnitudeofthesingularvec- thoseregionscomparedtotherestoftheimagewhen
tors; i.e., largersingularvaluesindicatedirectionsin compressed. However, usersneedtoselecttheROIs
thedataspacewherethereismorevariability. There- manually, and Principle Component Analysis (PCA)
fore, by keeping the larger singular values and their isusedinsteadofSVD.(LimandAbdManap,2022)
correspondingvectors,theoriginalmatrixcanbeap- usedapatch-basedPCAalgorithmthateliminatesthe
proximatedwithminimuminformationloss. needtomanuallyselecttheROIsinbrainMRIscans
The maximum number of linearly independent usingthebrainsymmetricalproperty. However,their
rows or columns of a matrix is called the rank (r) of approach has very limited use cases because of the
that matrix. When a matrix A is decomposed using assumedsymmetricalpropertyintheimages.
Joint Photographic Experts Group (JPEG) com-
pression (Wallace, 1991) is one of the most com-
1PatchSVD source code is available at https://github.
monly used image compression methods, applicable
com/zahragolpa/PatchSVD(a) Originalimage (b) Differenceimage(∆) (c) Complex (in gray) and (d) PatchSVDoutput
simple(inblack)patches
Figure2: PatchSVDalgorithmfirstapplieslow-rankSVDtotheoriginalimageandsubtractsthelow-rankapproximation
fromtheoriginalimage(Figure2(a))toobtain∆(Figure2(b)).Then,byapplyingascorefunction,PatchSVDcalculatesthe
patchesthatcontainmoreinformationaccordingto∆(2(c))tocreatethefinalcompressedimage(seeFigure2(d)).
to both grayscale and color continuous-tone images. that SVD missed from the simpler ones, we investi-
JPEGworksbytransforminganimagefromthespa- gatethevaluesin∆anddetermineifapatchiscom-
tial domain to the frequency domain using Discrete plex or simple (see Figure 2(c)). In other words, the
Cosine Transforms (DCTs) (Ahmed et al., 1974). ∆matrixhelpsusfindtheareasthatwouldintroduce
Eachimageisdividedinto8×8pixelsblocks,trans- largecompressionerrorsifweusedthestandardSVD
formed using DCT, and then quantized according to for image compression. We utilize ∆ as a heuristic
aquantizationtable,followedbyfurthercompression functiontominimizethecompressionerrorbyapply-
using an entropy encoding algorithm, such as Huff- ingnon-uniformcompression.
man coding (Huffman, 1952). While JPEG is used Morespecifically,wesplittheimagecorrespond-
in many use cases, it fails to perform well in exam- ingtothe∆matrixintopatchesofsizeP ×P. Ifthe
x y
ples where sudden changes in intensity exist within image is not divisible by the patch dimensions, we
theblocks. addtemporarymarginstothesideswithpixelvalues
Weaimtoextendthepreviousworksbyautomati- equal to the average pixel value in the image. Then,
callyselectingthecomplexpatchesandutilizingSVD we loop over the patches and assign a score to each
withrespecttotheimagecontexttocompressimages patch according to a score function. Next, we sort
with minimum information loss and achieve signif- the patches based on the score and select the top n
c
icant reductions in storage without any training re- complexpatches. Thenumberofcomplexpatchesis
quiredusingsimplemathematicaloperations. determined based on the desired compression ratio,
followingEquation2.
After we find the complex patches, we run SVD
4 METHOD foreachpatchandtakethek-rankapproximationwith
two different constants; k for complex patches and
c
k for simple patches where k ≤k . When we en-
s s c
4.1 PatchSVDAlgorithm
counterthepatchesthatcontaintheextramargin,we
removethemarginbeforeperformingk-rankapprox-
TocompressA usingPatchSVD,wefirstcompute
m×n imation using SVD. Finally, we put the compressed
the SVD of the image and take the first k singu-
SVD patches together to form the compressed image (see
larvaluestoreconstructthek -rankapproximation.
SVD Figure 2(d)). PatchSVD algorithm is described in
Then,wesubtractthek -rankapproximationfrom
SVD detail in Algorithm 1. We argue that PatchSVD is
the original image to get matrix ∆ (see Figure 2(b)).
a more flexible image compression algorithm com-
In our experiments, we selected the initial k =1.
SVD paredtoSVDandJPEGbecauseitallowsyoutoas-
Based on the properties of SVD, the k -rank ap-
SVD signnon-uniformimportancetoeachpatchintheim-
proximationcapturesmostoftheimageinformation;
ageaccordingtoacustomizablefunction. Whileour
therefore,highvaluesin∆(whitepixels)indicatepix-
method relies on the 1-rank SVD to calculate the ∆
elsthatwerenotcapturedbythefirstsingularvalues,
matrixandemploysthestandarddeviationscorefunc-
andlowvaluesin∆(blackpixels)wouldgiveusthose
tiontosortpatches,itisnoteworthythatvarioustech-
locationswerealmostalltheinformationintheorigi-
niques, such as graph-based approaches, gradient-
nalimagewascapturedbythek -rankapproxima-
SVD based methods, edge detection, and expert knowl-
tion. Therefore, to distinguish the complex patchesFigure3: ThisfigureshowstheeffectofpatchsizeontheperformanceofthePatchSVDalgorithmacrossCLIC(firstrow)
andKodak(secondrow)datasets.
edge, can also be employed to detect and sort com-
plexpatches. Thechoicemaydependonthespecific
Input: A ,k ,k ,P,P,CR
requirementsoftheapplication. m×n s c x y
Output: cmpr image
nc ←(PxPy(1−CR) −k ) 1 ;
4.2 CompressionRatio(CR) t Px+Py+1 s kc−ks
∆←A−k rank SVD(A,1);
Supposewewanttocompressaninputimageofsize ∆patches←patch and add margin(∆,P x,P y);
m×nusingPatchSVDandwechoosethepatchsize if n tc ×num patches<1then
to be P x×P y. The amount of compression we get k SVD←int((1−CR)× mm +× n+n 1);
depends on the values we choose for k and k , i.e., returnk rank SVD(A,k SVD);
c s
lower-rank approximations result in higher amounts end
ofimagecompression. Morespecifically,thenumber forpatchin∆patchesdo
of digits we need to save, S PatchSVD, to represent an ∆scores[patch]←score(patch);
imageusingPatchSVDisS =n k (P +P + end
PatchSVD c c x y
1)+n sk s(P x+P y+1),wheren candn sarethenumber ∆scores←sort(∆scores);
of complex and simple patches, respectively. Taking forpatchin∆patchesdo
k =k =k would result in the storage required U,S,Vt ←SVD(patch);
c s SVD
by the SVD algorithm (S ) which is equivalent to ifindex(patch)≤n then
SVD c
thestorageneededbythePatchSVDalgorithmwhen k←k ;
c
P =n,P =m,n =1,andn =0whichisequalto end
x y c s
S =k (m+n+1). else
SVD SVD
Therefore, the Compression Ratio (CR) can be k←k ;
s
calculatedusingthefollowingformula: end
cmpr patch←k rank SVD(patch,k);
S −S
Original PatchSVD cmpr patches.append(cmpr patch);
CR=
S Original end
(1)
(P +P +1)(n k +n k ) cmpr image←arrange(cmpr patches);
x y c c s s
=1−
PP(n +n )
returncmpr image;
x y c s
Algorithm1:PatchSVDImageCompression
where S is the storage needed for the orig-
Original
inal image. From 1, we can calculate the number ofFigure4:ThisfigurecomparesSSIM,PSNR,andMSEmetricsforPatchSVD,JPEG,andSVDimagecompressionalgorithms
ontheCLICdatasetwithapatchsizeof10(toprow)andtheKodakdatasetwithapatchsizeof16(bottomrow).
complex patches n when the required compression Ontheotherhand, iftheproportionistoosmall, the
c
ratioisknown: number of complex patches may end up being less
than1, inwhichcasePatchSVDwillfallbacktothe
standardSVD-basedimagecompressionalgorithm.
(P +P +1)(n k +n k )
x y c c s s
CR=1−
PP(n +n )
x y c s
(2) 4.3 PatchSizeLowerBound
n PP(1−CR) 1
c x y
=⇒ =( −k )
s
t P x+P y+1 k c−k s Not every arbitrary patch size works with the
PatchSVDalgorithm. Whiletheimagesizeisatriv-
wheret is the total number of patches in the im-
ialupperboundforP,itshouldbenotedthatgreater
age. WeneedtoensureCR≥0tohaveacompressed
patchsizeswillresultinlessaccuratescoring. More
image;therefore,thefollowingshouldhold:
specifically, if the patch size is too large, the score
0≤
n c
≤
Px+Px PP yy +1−k s
(3)
f su imnc pt li eon paw tci hll eslo bs ee cait us sese on fsi it ti svi lt ey ssto loc co alm dp ole mx aiv ne .rs Tu os
n +n k −k
c k c s findalowerboundforpatchsize,wesimplifyEqua-
whichrequirestwoconditionstobetrue: tion 4 by assuming that we are using a square patch
P xP
y
withP x=P y=P. Then,wewillhave 2PP +2
1
≥k s.
≥k s (4) By simplifying this inequality further, we get a
P +P +1
x y
lower bound on the patch size which is P ≥ k +
s
and (cid:112) k2+k ≥0.
s s
k ≥k (5)
c s
Moreover, we can observe from the condition in 5 EXPERIMENTS
3 that there is a trade-off between the proportion of
thecomplexpatchesandthevalueswechoosefork
c With PatchSVD, we compress images from two
andk . Forinstance,ifwewanttokeepahigherpro-
s datasetsusingdifferentpatchsizestoevaluatetheef-
portionofcomplexpatches,thedifferencebetweenk
c fectofpatchsizeontheperformanceofthealgorithm.
andk shouldbehigherandk shouldbemuchsmaller
s s Then,wepickthebestpatchsizeforeachdatasetand
thank . Notethatsincek ≥k ≥0,theproportionof
c c s comparePatchSVDwithSVDandJPEGaccordingto
complex patches cannot be higher than a threshold.
threemetricsandbyvisuallycomparingthecompres-(a) ImagecompressionatCR=85%appliedto”kodim06.png”fromtheKodakdataset.
(b) ImagecompressionatCR=20%appliedto”kodim09.png”fromtheKodakdataset.
Figure5: PatchSVD,JPEG,andSVDcompressionalgorithmsappliedtotwoimagesamplesfromtheKodim
datasetshowthecompressionartifactsproducedbyeachalgorithm. Asyoucansee,PatchSVDproducesmore
sharpedgeswhichresultsinperfectlylegibletextevenaftertheimagehasbeengreatlycompressed.
sion artifacts. We also briefly discuss some choices uessignalsuperiorimagequalitywithlessdistortion
forPatchSVDscorefunctionsandhowtheycompare and increased similarity between original and pro-
witheachother. cessedimages.
5.1 DatasetsandMetrics
6 RESULTS AND DISCUSSION
We evaluated our method on Kodak (Kodak, 1999)
and CLIC (Toderici et al., 2020) datasets because
6.1 PatchSVDPerformanceBasedon
they contain original PNG format images that were
PatchSize
never converted to JPEG. Kodak is a classic dataset
thatisfrequentlyusedforevaluatingimagecompres-
sionalgorithms. Itcontains24full-color(24bitsper Figure3depictstheimpactofpatchsizeontheperfor-
pixel)imagesthatareeither768x512or512x768pix- mance of the PatchSVD algorithm across the Kodak
elslarge. Theimagesinthisdatasetcaptureavariety andCLICdatasets,asmeasuredbySSIM,PSNR,and
of lighting conditions and contain different subjects. MSEmetrics.Thefindingsindicatethatoptingforex-
TheCLICdataset wasintroducedinthelossy image cessivelylargepatchsizesisnotadvisable,andtheef-
compression track for the Challenge on Learned Im- fectivenessofcompressionmaybecompromisedwith
ageCompressionin2020andincludesbothRGBand patchsizesthataretoosmall,contingentonthechar-
grayscaleimages.Foralltheexperiments,weutilized acteristicsofthedataset. Notethatthealgorithmfalls
thetestsplit,whichcomprises428samples. backtoSVDforpatchsizesthataretoolargewhich
Weusetraditionalimagecompressionmetrics,in- iswhytheplotsoverlapforsomecompressionratios.
cluding Mean Squared Error (MSE), Peak Signal-
to-noise Ratio (PSNR), and Structural Similarity In- 6.2 ImageCompressionPerformance
dex Measure (SSIM) (Wang et al., 2004) to evaluate Comparison
theimagecompressionperformanceofeachmethod.
LowerMSEmeansbetterperformance,indicatingre-
TobetterdemonstratetheperformanceofPatchSVD,
ducedpixeldeviations. HigherPSNRandSSIMval-
we compared the performance of PatchSVD with aFigure 6: This figure illustrates PatchSVD algorithm performance on the Kodak dataset with the patch size of 16 using
differentscorefunctions,namely,standarddeviation(std),mean,andmaximum(max).Tocompare,SSIM,PSNR,andMSE
metricsareused.Itisdemonstratedthatstandarddeviationhasaslightlybetterperformancecomparedtoothers.
fixedpatchsizeagainstJPEGandSVDonCLICand 7 CONCLUSION
Kodak datasets. According to the experiment results
inSection6.1,patchsizes10and16wereselectedfor In this work, we introduced PatchSVD as a non-
CLIC and Kodak, respectively. Figure 4 illustrates uniformimagecompressionalgorithmbasedonSVD.
the performance comparison with respect to SSIM, Throughexperiments,wedemonstratedthatthepatch
PSNR,andMSE.PatchSVDoutperformsSVDinall sizeinthePatchSVDalgorithmaffectsthe compres-
three metrics on both datasets, although JPEG still sion performance. Also, we compared the perfor-
performsbetterthanPatchSVD.Thisisexpectedbe- mance of PatchSVD with JPEG and SVD with re-
cause neither of the three metrics are context-aware. spect to SSIM, PSNR, and MSE. We compared the
Nevertheless, PatchSVD may still be preferred over compression artifacts that each algorithm introduced
JPEGinsomeusecasesasexplainedinSection6.3. toimagesandillustratedexamplesofthecaseswhere
PatchSVD was preferable over JPEG and SVD be-
6.3 CompressionArtifacts causeitproducedlessdestructiveartifactsinregions
thatcontainedinformationthatwouldhavebeenlost
While the compression artifacts of PatchSVD and if we applied standard SVD-based image compres-
SVDareusuallyintheformofcoloredpixels(some- sion. Studying the impact of PatchSVD as an im-
times called ”stuck pixels”, see SVD output in Fig- age compression algorithm on the downstream tasks
ure5(b)),forJPEG,theseartifactstaketheformsofa is an interesting future work. Moreover, applying
generallossofsharpnessandvisiblehalosaroundthe PatchSVD to medical images is a prospective exten-
edgesintheimage. Inhighercompressionratios,the sion because, in medical images, higher resolution
edgesofblocksthatPatchSVDandJPEGusebecome is required in the pixels containing diagnostic infor-
visible,too. However,forusecaseswheresharpness mation compared to the rest of the image and non-
shouldbemaintainedlocally,PatchSVDispreferable. uniform local compression could be beneficial. Ex-
For example, in Figure 5, for both samples, the text pertknowledgecanleadustomorecustomizedscore
writtenontheboatismorelegiblewhentheimageis functionswhichmakesthisapplicationevenmorein-
compressedwithPatchSVD. teresting.
6.4 ChoiceofScoreFunction
REFERENCES
Wecomparedvariousscorefunctions,includingtak-
ing the maximum value, averaging, and calculating Agustsson, E., Mentzer, F., Tschannen, M., Cavigelli, L.,
the standard deviation of the pixel values present in Timofte,R.,Benini,L.,andGool,L.V.(2017). Soft-
the input patch, as shown in Figure 6. The perfor- to-hard vector quantization for end-to-end learning
compressiblerepresentations. Advancesinneuralin-
mance of all the score functions is almost similar,
formationprocessingsystems,30.
but standard deviation yields better results in terms
Ahmed,N.,Natarajan,T.,andRao,K.R.(1974). Discrete
ofSSIM,PSNR,andMSE.Theintuitionbehindthis
cosine transform. IEEE transactions on Computers,
isthatstandarddeviationintroducessensitivitytode-
100(1):90–93.
viationsfromthemeanwhichisusuallywheremore
Akritas,A.G.andMalaschonok,G.I.(2004).Applications
complexpatternsarepresent.ofsingular-valuedecomposition(svd). Mathematics Prasantha,H.,Shashidhara,H.,andMurthy,K.B.(2007).
andcomputersinsimulation,67(1-2):15–31. Imagecompressionusingsvd. InInternationalcon-
Andrews, H.andPatterson, C.(1976). Singularvaluede- ferenceoncomputationalintelligenceandmultimedia
composition (svd) image coding. IEEE transactions applications (ICCIMA 2007), volume 3, pages 143–
onCommunications,24(4):425–432. 145.IEEE.
Cao, L. (2006). Singular value decomposition applied Ranade, A., Mahabalarao, S. S., and Kale, S. (2007). A
to digital image processing. Division of Computing variationonsvdbasedimagecompression.Imageand
Studies, Arizona State University Polytechnic Cam- Visioncomputing,25(6):771–777.
pus,Mesa,ArizonaStateUniversitypolytechnicCam- Sadek, R.A.(2012). SVDbasedimageprocessingappli-
pus,pages1–15. cations: State of the art, contributions and research
Chen, Z. (2018). Singular value decomposition and its challenges. CoRR,abs/1211.7102.
applications in image processing. In Proceedings of Tian, M., Luo, S.-W., and Liao, L.-Z. (2005). An inves-
the20181stInternationalConferenceonMathemat- tigationintousingsingularvaluedecompositionasa
icsandStatistics,pages16–22. methodofimagecompression. In2005International
Cheng, Z., Sun, H., Takeuchi, M., and Katto, J. (2018). Conference on Machine Learning and Cybernetics,
Deep convolutional autoencoder-based lossy image volume8,pages5200–5204.IEEE.
compression. In 2018 Picture Coding Symposium Toderici, G., Shi, W., Timofte, R., Theis, L., Balle, J.,
(PCS),pages253–257.IEEE. Agustsson,E., Johnston,N.,andMentzer,F.(2020).
Cheng, Z., Sun, H., Takeuchi, M., and Katto, J. (2019). Workshop and challenge on learned image compres-
Deep residual learning for image compression. In sion(clic2020). Lastaccessedon2023-11-14.
CVPRWorkshops,page0. Toderici, G., Vincent, D., Johnston, N., Jin Hwang, S.,
Christopoulos, C., Skodras, A., and Ebrahimi, T. (2000). Minnen, D., Shor, J., and Covell, M. (2017). Full
The jpeg2000 still image coding system: an resolution image compression with recurrent neural
overview. IEEE transactions on consumer electron- networks. In Proceedings of the IEEE conference
ics,46(4):1103–1127. on Computer Vision and Pattern Recognition, pages
5306–5314.
Huffman,D.A.(1952). Amethodfortheconstructionof
minimum-redundancycodes. ProceedingsoftheIRE, Wallace,G.K.(1991). Thejpegstillpicturecompression
40(9):1098–1101. standard. CommunicationsoftheACM,34(4):30–44.
Kahu, S. and Rahate, R. (2013). Image compression Wang,Z.,Bovik,A.C.,Sheikh,H.R.,andSimoncelli,E.P.
using singular value decomposition. International (2004). Image quality assessment: from error visi-
JournalofAdvancementsinResearch&Technology, bility to structural similarity. IEEE transactions on
2(8):244–248. imageprocessing,13(4):600–612.
Kodak(1999). Kodaklosslesstruecolorimagesuite. Last
accessedon2023-11-14.
Li, M., Zuo, W., Gu, S., Zhao, D., and Zhang, D.
(2018). Learningconvolutionalnetworksforcontent-
weighted image compression. In Proceedings of
theIEEEconferenceoncomputervisionandpattern
recognition,pages3214–3223.
Lim,S.T.andAbdManap,N.B.(2022). Aregion-based
compression technique for medical image compres-
sionusingprincipalcomponentanalysis(pca). Inter-
nationalJournalofAdvancedComputerScienceand
Applications,13(2).
Lim, S.T., Yap, D.F., andManap, N.(2014). Aguisys-
temforregion-basedimagecompressionusingprinci-
palcomponentanalysis. In2014InternationalCon-
ference on Computational Science and Technology
(ICCST),pages1–4.IEEE.
Marti, U.-V. and Bunke, H. (2002). The iam-database:
an english sentence database for offline handwrit-
ingrecognition. InternationalJournalonDocument
AnalysisandRecognition,5:39–46.
Pham, D.-L., Chang, T.-W., et al. (2023). A yolo-based
real-timepackagingdefectdetectionsystem.Procedia
ComputerScience,217:886–894.
Prakash,A.,Moran,N.,Garber,S.,DiLillo,A.,andStorer,
J.(2017).Semanticperceptualimagecompressionus-
ing deep convolution networks. In 2017 Data Com-
pressionConference(DCC),pages250–259.IEEE.