NESTOOLS : A Dataset for Evaluating Nested Tool Learning Abilities of
Large Language Models
HanHan,TongZhu,XiangZhang,MengsongWu,HaoXiong,WenliangChen*
InstituteofArtificialIntelligence,SchoolofComputerScienceandTechnology,
SoochowUniversity,China
{hhan,tzhu7,xzhangxzhang23,mswumsw,hxiongxionghao}@stu.suda.edu.cn
wlchen@suda.edu.cn
Abstract Complex Instruction
On October 8, 2023, what was the export volume of the
Largelanguagemodels(LLMs)combinedwith best-selling wine in California from its country of origin?
tool learning have gained impressive results
[Tool Calling…] The answer is 10783. inreal-worldapplications. Duringtoollearn-
ing, LLMs may call multiple tools in nested
Nested Tool Calling
orders,wherethelattertoolcallmaytakethe
API: get_top_selling_wine
formerresponseasitsinputparameters. How- Parameters: {location: “California”,
date: “2023-10-08”}
ever,currentresearchonthenestedtoollearn- Responses: [“Ramey Chardonnay”, 1570]
ing capabilities is still under-explored, since
theexistingbenchmarkslackofrelevantdata
API: get_product_origin
instances. To address this problem, we in- Parameters: {product: }
Responses: [“USA”]
troduceNESTOOLStobridgethecurrentgap
in comprehensive nested tool learning evalu- API: get_export_quantity
Parameters: {location: , product: ,date:
ations. NESTOOLS comprises a novel auto- “2023-10-08”}
Responses: [10783]
maticdatagenerationmethodtoconstructlarge-
scale nested tool calls with different nesting
Figure1: Exampleofnestedtoolcalling.
structures. With manual review and refine-
ment,thedatasetisinhighqualityandclosely
alignedwithreal-worldscenarios. Therefore,
latter tool may take the former one’s response as
NESTOOLScanserveasanewbenchmarkto
an input parameter. This scenario is prevalent in
evaluate the nested tool learning abilities of
LLMs. Weconductextensiveexperimentson accomplishingcomplextaskswithmanyexecution
22LLMs,andprovidein-depthanalyseswith steps.
NESTOOLS,whichshowsthatcurrentLLMs However,theLLMs’nestedtoollearningability
stillsufferfromthecomplexnestedtoollearn- is still under-explored, and corresponding bench-
ingtask.
marks are absent to provide comprehensive eval-
1 Introduction uations. Among current tool learning datasets,
some datasets completely ignore the nested tool
LargeLanguageModels(LLMs)haveshownpow-
calls (Tang et al., 2023; Patil et al., 2023). Other
erful abilities in natural language understanding
benchmarksonlyhaveasmallquantityofnested
andreasoning(Achiametal.,2023;Dubeyetal.,
toolcalls(Lietal.,2023;Huangetal.,2024;Wu
2024; Yang et al., 2024; Jiang et al., 2024; Zhu
et al., 2024) or have low qualities with repetitive
et al., 2024). To extend such abilities into real-
patterns (Shen et al., 2023) and coarse evalua-
world systems, tool learning (Inaba et al., 2023)
tions(Chenetal.,2024;Qinetal.,2023b). Tothis
hasbecomeapromisingparadigmtosolvecomplex
end, it is hard to comprehensively assess LLMs’
problemsandreducehallucinationswithexternal
performanceonthereal-worldnestedtoollearning
APIs,suchasthecalculatorandthesearchengine
scenario, and provide insights for further model
(Patil et al., 2023; Schick et al., 2024). In a real-
development.
worldapplication,LLMsmayinteractwithmulti-
Toaddresstheabovechallenges, weintroduce
pletools(Songetal.,2023;Yeetal.,2024;Huang
NESTOOLS , a high-quality nested tool learning
etal.,2023;Maetal.,2024). AsshowninFigure1,
benchmarktoprovidecomprehensiveevaluations.
themulti-toolcallingprocessisnested,wherethe
NESTOOLS offers an innovative automated data
* Correspondingauthor construction scheme, generating large-scale and
1
4202
tcO
51
]LC.sc[
1v50811.0142:viXraNESTOOLS T-Eval API-Bank ToolBench UltraTools BFCL
(Ours) (Chenetal.,2024) (Lietal.,2023) (Qinetal.,2023b) (Huangetal.,2024) (Patiletal.,2023)
Amount 3,034 50 73 16,464 436 1,618
Tools
Avg.params(required) 2.24 1.24 1.97 1.01♢ 4.22 2.11
Amount 1,000 553 485 126,486 1,000 2,000
Multiple-toolcallings 1,000 553 122 85,330♢ 867 490
Instances
Nested-toolcallings 830 N/A♠ 50 N/A♠ 227 0
Avg.toolcall 3.04 5.81 1.53 unknown 2.38 unknown
Multiple-toolscenario? ✔ ✔ ✔ ✔ ✔ ✔
Evaluationofnesting? ✔ ✘ ✘ ✘ ✘ ✘
Table 1: Comparison of tool learning datasets for evaluation. ♠ The tool calling procedure is carried under a
multi-stepsettingandtheexactnumbercannotbeobtained. ♢ThestatisticsrefertoSeal-Tools(Wuetal.,2024).
morediverseexamplesofnestedtoollearningcom- and insights for LLMs in the field of nested
paredtoexistingdatasets. Theentiredatasetcon- toollearning.
structionprocessincludestool&instancegenera-
tion, query generation, and data review & refine- 2 RelatedWork
ment. To ensure an accurate and consistent eval-
uation,wecarefullyselectandcross-verify1,000 Tool learning Early works (Yao et al., 2022;
dataentries. Formorecomprehensiveevaluations, Schick et al., 2024; Paranjape et al., 2023) have
weassessmodelsonfourdeterministicdimensions: incorporatedstraightforwardtoolssuchassearch
toolselection,toolcallingorder,parameterfilling, enginesandcalculatorstoenhanceLLMs’access
and nested parameter filling. Compared to exist- to up-to-date information and precise mathemat-
ingbenchmarksinTable1,ourdatasetfocuseson ical reasoning. Following this, ToolBench (Qin
the nested tool learning task and provides large- etal.,2023b)employsreal-worldAPIstoconstruct
scaletoolswithmorenestedcalls. Inaddition,our datasetscapableofaddressingabroaderspectrum
fine-grainedassessmentdimensionsonnestingtool of real-world user queries. Although ToolBench
calls could provide a set of more comprehensive providesalarge-scaledataset,itonlyevaluatesthe
tool learning evaluations that are closely aligned outputresultswithoutassessingtheprocess,lack-
withreal-worldscenarios. ingfine-grainedcomprehensiveevaluations.
We conduct extensive experiments on
NESTOOLS with 22 popular LLMs, includ-
Tool Evaluation Although tool learning is
ing API-based models and open-sourced models.
rapidly advancing, researchers tend to focus pri-
We provide thorough analyses in terms of the
marilyonthegeneralframework(Qinetal.,2023a)
nesting depth, nesting structure, scaled model
whilefine-grainedevaluationsintoollearningstill
sizes,androbustnesseffects. Theresultsshowthat
remainunexplored. Manybenchmarks(Chenetal.,
although models benefit from size scaling, they
2024;Huangetal.,2024;Lietal.,2023;Basuetal.,
stillsufferfromthesimpletoolselection,andthe
2024)segmenttoollearningintomultipleaspects,
performance would degrade heavily when tools
evaluatingtheperformanceofvariousLLMsacross
are deeply nested. Our core contributions are as
these dimensions. However, they focus more on
follows:
the multi-tool calling instances, and nested tool
callevaluationsareignored. Althoughthesebench-
• Weproposeanovelautomaticdataconstruc-
marksincludealimitednumberofnestedtoolcall-
tion pipeline to easily generate large-scale
ing,researchershavenotundertakenacomprehen-
nestedtoollearningdatasets.
sive analysis and evaluation of this phenomenon.
Consequently, the performance of LLMs in han-
• We introduce NESTOOLS , a high-quality
dlingnestedtoolcallingremainsunder-explored.
datasetwithlarge-scalediverseexamplesfor
comprehensive nested tool learning evalua- Toaddressthisgap,weintroduceNESTOOLS,
tions. adatasetspecificallyconstructedtofeatureamulti-
tudeofnestedtoolcallingscenariosacrossvarious
• We conduct extensive experiments on 22 domains. Thepurposeofthisdatasetistosystemat-
LLMstoverifytheireffectivenessandgener- icallyevaluatetheperformanceofLLMsinnested
alizationabilities,providingdetailedanalyses toollearningabilities.
2Tool & Instance Generation Query Generation Data Review & Refinement
Domain Wine/Sale
In-Context Examples Call Chain AST Check Format Check
Tools
type check
def get_top_selling_wine(location: str, date: str) -> list: Python code arguments
"""get the name and sales of the top-selling wine abstract syntax
Args: tree check
location (str): ..., date (str): ... return values
Returns:
name (str): ..., sales_value (int): ...
""" Manual Check & Refinement
... Instances
all pass
data
Call Chain
Task Query not agree all pass
data0, data1 = annotators check expert check
g " d d d2e a a a0 t t tt a a a_ 2t 2 3 03o ,- = =p 1 "_ 2 0 g gs 0-e e e0 2l t t8l 3_ _in " -p e) 1g xr 0o p_ -w d o 0u ri 8n tc _ "e t q )_(" o uC aria ngl ti if in to y(r d (n dai ata a t" a0, 2) , O sen ll iO ngct wob ine er i8 n, 2 C0 a2 li3 fo, rw nh iaa t f rw omas it th s e c oe uxp no trr yt ovo f l ou rm ige in o ?f the best- ✔ ✔ ✔ pa car ag l rl au in mm g e e o tn ert d r l e min rk ei nn tg ions error manual refine er mro er nt
Figure2: ThedatasetconstructionprocessofNESTOOLS.
3 DatasetConstruction weaskGPT3.5togeneratefixed-formatfunctions
astoolswithannotationfornecessarytoolinforma-
To obtain NESTOOLS , we propose an automatic
tion,andthengenerateacallchaintoexecutethe
dataset generation pipeline with manual reviews.
toolsinthemainfunction.
As shown in Figure 2, the whole process starts
withtoolandinstancegeneration(§3.1),followed
To ensure that the automated generation tools
byquerygeneration(§3.2),anddatareview&re-
cancoverawiderrangeofdomainsandminimize
finement(§3.3). Lastly,weprovideacomparative
repetitionratesasmuchaspossible,wecollectthe
analysisfor NESTOOLSwithotherdatasets(§3.4).
domainsfromSealTools(Wuetal.,2024),includ-
ing146domainsand5,860sub-domains,serving
3.1 Tool&InstanceGeneration
asareferenceguideforthegenerationofthesub-
Inreal-worldapplicationswithalimitednumberof sequenttoolsandinstance.
tools, call chains containing nested calls are rela-
tivelyrestrictedandhomogenized,andtherearenot Whengeneratingtools,weadoptatemplatewith
too many non-duplicated and diverse call chains. functionsinPythoncode,includingcommentsthat
Togetawiderangeoftoolsandinstances,existing describe the tool, required parameters, optional
benchmarksmostlyuseaconventionaltwo-round parameters,andreturnparameters. Initially,weat-
generationscheme,includingfilteringorconstruct- temptanestedcallpatternusing“func1(func2(...),
ingaportionofthetoolsfirst,andthenfilteringor *args)”. However,thisstyleisinsufficientformore
generatingsomeinstances(Quetal.,2024;Chen complexnestedexamples, asitresultsinlengthy
et al., 2024). However, the proportion of gener- expressionsandlacksclarityinreferencingspecific
atedsamplescontainingnestedinstancesunderthis return parameters when dealing with multiple re-
schemeisverysmallbecauseLLMscannotsynthe- turn values. The improved generation pattern is
sizeasmanycandidatetoolsaspossibletoobtain as follows: “data0, ... = func1(...), data2, ... =
potential nested call chains under the limitations func2(data0, ...)”. This approach accommodates
ofthecontext. Ifrelyingonmanualbrainstorming, morecomplexnestingandindicatesspecificreturn
thisisverycostlyanddifficulttoscaleandensure values,asillustratedinFigure2.
diversification.
Howtoincreasethefrequencyofnestedcalling Itisworthmentioningthatthein-contextexam-
instances? LLMs are relatively unfamiliar with plesareveryimportant,therearedifferentnested
nestedtoolcalling. However,theyareveryfamil- structures for different nested calls, to ensure the
iarwithnestedfunctionsincodebecausethepre- diversityandrationalityofthegeneration,wecare-
trainingprocesshasalreadyinjectedlargeamounts fully select a portion of high-quality samples to
ofcodeknowledgeintoLLMs(Dubeyetal.,2024). form the sample pool, and rotate these examples
The two types of nesting can be very similar to duringtheiterativegenerationprocess. Atthesame
someextent,withthecommoncodepatternbeing time,tominimizehomogeneousgeneration,weset
to define a number of Python functions and then thegenerationtemperatureto0.95toseekformore
executethecallsinthemainfunction. Inthistask, diversifiedgeneration.
33.2 QueryGeneration whetherthelow-qualitysamplesareoptimizedto
meetreal-worldrequirements. Weemploytwoan-
While the tool and call chain are generated, we
notatorstotag NESTOOLSfromtwoperspectives:
reserveacommenttoinitiallygeneratesomeraw
consistency between the call chain and the tools,
queriesthatrefertothelogicandflowofthecall
andwhetherthequerymeetstherequirements. Be-
chain,althoughtheymayhaveflawssuchasmiss-
sides,theannotatorsarerequiredtorefinethedata
ingnecessaryparametervalues. Wethenprovide
instancesifthereareerrors. Ifthereisadisagree-
the entire actual call chain and the raw query to
mentbetweenthetwoannotators,anexpertwould
allowGPT3.5togeneratethecompletetask,astep
helpmakeafinalannotation. Theoverallannota-
thatallowsthebigmodeltopopulateallnecessary
tionprocessshowsahighagreementof0.96.
parameters. Finally,weletGPT-4(Achiametal.,
2023) optimize and rewrite the query to make it
3.4 DatasetSummary
morecompleteandclosertotherealrequirements.
Corresponding prompts are presented in Table 6 AsshowninTable1,wecompare NESTOOLS in
andTable7intheAppendix. detail with the currently available datasets, and
withthenecessarynumberoftoolsandinstances
3.3 DataReview&Refinement guaranteed, NESTOOLS has a clear advantage in
terms of nested tool calling, which not only cov-
To ensure the data quality, we perform strict re-
ers a higher percentage of nesting and includes a
viewing steps and make further refinements. We
newframeworkofevaluationLLMsfornestedtool
firstperformautomaticchecks. Giventhatnested
calling.
toolcallingcontainsmultipletoolswhereeachtool
containsmultiple returnvalues, it isnecessary to
4 Experiments
ensurethateachreturnvalueinthecallchainhasa
variabletoreceiveit. Asaresult,weconductthe 4.1 ExperimentalSetup
formatchecktofilteroutabnormaloutputformats
In order to evaluate the LLM’s understanding of
andirregularitiesingeneration. Itisworthnoting
thewholecallchainofnestedtoolcalls,weusethe
thatinadditiontotheformaterror,theautomated
patternofpromptingforevaluation. Fortheparam-
screening includes an abstract syntax tree (AST)
eterofthenestedtools,themodelisconstrainedto
check to ensure the consistency of tools and call
generateaplaceholderlike"API_call_{number}"
chains. Thisprocesscouldalignthereturnvalues
tofilltheparameterofnestedpositionintheevalu-
andparametersbetweenthecandidatetoolsandthe
ationprompt.
callchains.
For each sample, in order to simulate the sce-
Aftertheautomatedcheck,weperformaman-
nariowhentheLLMfacessimilartools,weutilize
ualreviewforfurtherqualitycontrol. Forthecall
thegte-largeretriever1 toretrieve5similartools
chains,wemainlycheckwhetherthevaluesofthe
foreachgoldtoolfromthetoolpool. Tominimize
parametersareinaccordancewiththedescription
theoccurrenceofambiguoustools,wecontrolfor
informationinthegoldentools. Besides,themost
thefactthatthenameofeachretrievedtoolmust
critical aspect of this reviewing step is to deter-
meet a certain Levenshtein distance requirement
mine whether the nested parameters are filled in
withthenamesofallgoldtools.
correctly. It requires manual tracing back to the
We conduct experiments on NESTOOLS with
parent node tool that returns the parameter, and
the latest API-based and open-sourced LLMs.
carefullycomparingtheparentnode’sreturnvalue
For the API-based LLMs, we selected four rep-
withthetextualdescriptionoftheparameteratthis
resentative LLMs: GPT-4o, GPT-4o-mini and
position. Potentialerrorsincludetheparameterbe-
GPT-3.5 from OpenAI and Claude3.5 from An-
ing a non-nested parameter but being filled as a
thropic2. Fortheopen-sourcedLLMs,wechoose
nestedone,orbeinganestedparameterbutbeing
therepresentativeones: LLaMA3.1(Dubeyetal.,
filledwithanincorrectreturnvaluefromaprevious
2024),Qwen1.5(Baietal.,2023),Qwen2(Yang
tool.
For the task query review, we mainly check 1https://huggingface.co/Alibaba-NLP/
gte-large-en-v1.5
whetherthenon-nestedparametersinthecallchain
2TheversionforGPT-4oisgpt-4o-2024-08-06,forGPT-4o
arementionedinthequery,whetherthequeryde-
-miniisgpt-4o-mini-2024-07-18,forGPT-3.5isgpt-3.5-turbo-
scriptionconformstothelogicofthecallchain,and 0125andforClaude3.5isclaude-3-5-sonnet-20240620.
4Selection Order Parameter NestedParam
Model Avg.
P R F1 P R F1 P R F1 P R F1
API-BasedModels
GPT-4o 85.1 86.2 85.7 72.8 74.2 73.5 75.4 78.5 76.9 73.4 69.2 71.3 76.8
GPT-4o-mini 77.4 72.6 74.9 60.7 56.9 58.7 65.3 64.5 64.9 58.9 48.1 53.0 62.9
GPT-3.5 69.1 71.3 70.2 48.0 50.4 49.2 56.8 62.0 59.3 46.5 41.8 44.0 55.7
Claude-3.5 79.6 82.8 81.2 64.2 68.1 66.1 70.4 75.8 73.0 68.2 65.4 66.7 71.7
Open-SourcedModels
LLaMA3.1-8B 65.7 71.6 68.5 44.2 50.7 47.2 44.2 51.0 47.3 40.8 42.7 41.7 51.2
LLaMA3.1-70B 82.2 81.9 82.0 68.8 68.7 68.8 57.6 60.2 58.9 67.4 60.9 64.0 68.4
LLaMA3.1-405B 87.9 87.2 87.5 77.3 77.4 77.3 66.3 68.4 67.3 78.8 72.7 75.7 77.0
Mistral-7Bv0.2 49.5 44.0 46.6 22.0 21.7 21.8 35.1 32.9 34.0 21.9 14.0 17.1 29.9
Mixtral-8x7B 62.4 64.3 63.4 38.0 41.3 39.6 46.2 49.8 48.0 35.6 35.1 35.3 46.6
Mixtral-8x22B 70.5 75.2 72.7 49.6 54.7 52.0 59.4 66.7 62.8 53.0 52.3 52.6 60.1
Qwen2-0.5B 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0
Qwen2-1.8B 39.5 18.0 24.8 12.1 4.3 6.3 28.2 14.1 18.8 0.0 0.0 0.0 12.5
Qwen2-7B 59.3 58.9 59.1 34.8 35.4 35.1 41.0 43.0 42.0 29.6 14.2 19.1 38.8
Qwen2-57B 63.8 68.9 66.3 40.2 45.5 42.7 47.6 54.2 50.7 37.8 29.0 32.9 48.1
Qwen2-72B 78.4 79.2 78.8 62.8 64.2 63.5 66.9 69.8 68.3 57.9 58.7 58.3 67.2
Qwen1.5-0.5B 10.2 0.2 0.3 0.0 0.0 0.0 2.2 0.1 0.1 0.0 0.0 0.0 0.1
Qwen1.5-1.8B 21.3 3.4 5.8 2.5 0.4 0.8 9.7 1.7 2.9 0.0 0.0 0.0 2.4
Qwen1.5-7B 54.9 35.5 43.1 27.6 18.6 22.2 37.9 27.1 31.6 21.2 5.2 8.4 26.3
Qwen1.5-14B 61.8 57.0 59.3 36.9 35.3 36.1 46.4 45.8 46.1 34.2 21.4 26.3 42.0
Qwen1.5-32B 65.2 61.1 63.1 41.6 40.7 41.1 52.3 51.3 51.8 45.6 27.2 34.1 47.5
Qwen1.5-72B 66.0 59.7 62.7 43.1 39.9 41.5 49.4 47.2 48.3 31.4 21.4 25.5 44.5
Qwen1.5-110B 69.7 65.0 67.3 48.9 46.7 47.8 56.2 54.7 55.5 44.7 31.8 37.2 51.9
Table2: ThemainresultsofNESTOOLS. Avg. istheaverageF1scoreofallevaluationmetrics. Boldrepresents
thebestscoreamongallmodels.
etal.,2024),Mistral(Jiangetal.,2023)andMix- evaluatetheorderofthetoolsbeforeandafter.
tral(Jiangetal.,2024). Weperformdetailedexper- ParameterP/R/F1measuresthecorrectnessof
imentsoneachoftheirsizes. LLM’sfillingparameters,whichisalsoacommon
ThedetailedevaluationpromptisshowninAp- evaluationdimension.
pendixB.2. NestedParamP/R/F1isspecifictonestedcalls
andevaluatestheaccuracyofparametersatnested
4.2 EvaluationMetrics
locationsinthecallchain.
ForNESTOOLS,tostandardizetheevaluation,we Other metrics and details are listed in Ap-
devise metrics for the following aspects: correct- pendixB.1.
ness of tool selection, correctness of the order of
4.3 MainResults
toolcalls,correctnessofparameterfilling,andcor-
rectnessofnestedparameterfilling. Eachevalua- In the field of tool learning, for a long time, the
tionisadeterministicP/R/F1metric. GPT-4serieshasoccupiedthepositionofthebest
Selection P/R/F1 measures the accuracy of performance,andopen-sourceLLMsareonceout
LLM’s tool selection, which is a common eval- of reach (Huang et al., 2024; Chen et al., 2024).
uationdimension. However, as shown in Table 4, we are pleasantly
OrderP/R/F1measurestheaccuracyofLLM’s surprisedtofindthatLLaMA3.1-405Bslightlyout-
judgment of the previous and subsequent tools. performs GPT-4o on NESTOOLS , achieving the
Since nested tool calling includes the use of the bestperformanceamongallevaluatedLLMs. This
returnvalueoftheprevioustool,itisnecessaryto signifiesthatopen-sourcedandAPI-basedLLMs
5arecurrentlyverycompetitiveintoollearning.     / / D 0 $        %
 * 3 7   R
WeobservethattheLLaMA3.1seriesexhibits     / / D 0 $       %  4 Z H Q     %
significant advantages in Selection and Order.     0 L [ W U D O   [   %  * 3 7   R  P L Q L
Notably, LLaMA3.1-8B outperforms LLMs like    / / D 0 $      %
 4 Z H Q       %
 4 Z H Q      4 %  Z H Q       % 4 Z H Q        %
Mixtral-8x7BandQwen2-57B,whicharesubstan-  4 Z H Q       %  0 L [ W U D O   [  %
    4 Z H Q    %
tiallylargerinsize. Qwen2-72Breachesthebest
    0 L V W U D O   %
performance in parameters among open-sourced  4 Z H Q      %
  
LLMs. Mixtral-8x22BhasthemoststableJSON
  %    %     %
compliance among open-sourced LLMs, second    6 L ] H   E L O O L R Q  S D U D P H W H U V 
onlytoGPT-4oandClaude3.5inallLLMs. Figure3: ModelscalingresultsonNESTOOLS.
However, in terms of parameter filling, the
LLaMA3.1seriesshowsanunusualdisadvantage.
this process may include more high-quality data
Analysis of sample cases reveals that LLaMA3.1
andmoreoptimizediterativetraining.
is less sensitive to parameter types, often gener-
ating incorrect parameter types in JSON outputs,
5.2 NestingDepthAnalysis
eventhoughtheextractedanswerinformationmay
Differentcallchainshavedifferentcalldepths. We
be correct. This issue is most pronounced in
considertheentirecallchain’snestingdepthtobe1
the LLaMA3.1 series. LLaMA3.1-70B is most
iftheinstancecontainsnonestedcalls. Fornested
severely affected, resulting in a loss of nearly 10
tool calling instances, each tool is at a specific
percentagepointsinparametermetric. Itisworth
nesting depth. Tools that do not use the return
noting that such problems are significantly less
value of previous tools are at depth 1. If a tool
prevalentinotherLLMs,andtheyareentirelyab-
usesthereturnvalueofaprevioustool,itsdepthis
sent in Claude3.5. This suggests that compared
theprevioustool’sdepthplusone,andsoon. For
to other LLMs, the LLaMA series may have un-
aninstance,itsoverallnestingdepthmatchesthe
dergonerelativelylesstrainingfocusedonJSON
deepestlevelamongthetools.
formatalignment.
We analyze the performance of LLMs on
Nested tool calling presents a certain level of
difficulty,andthestrongertheLLM’scapabilities,
NESTOOLS with different nesting depths. As
shown in Figure 4, although the performance of
thebetteritperformsinresolvingnestedtoolcall-
the different LLMs varies, each of them shows
ing. Fillingnestedparametersrequiresthemodelto
a tendency that the deeper the nesting depth, the
trulyunderstandthecallchainandidentifywhich
worsetheperformanceofLLMs. Thisundoubtedly
specific return value corresponds to each nested
illustratesthedifficultyofnestedtoolcallingand
parameter. Judging from the metrics of parame-
itsimportanceformultipletoolcalling.
tersandnesting,LLM’sperformanceinnestingis
This trend can be attributed to several factors.
generally lower than that in parameters, but this
Firstly,asthenestingdepthincreases,thecomplex-
gapisnarrowingastheLLM’soverallperformance
ityofthetaskgrowsexponentially. Eachadditional
improves.
layerofnestingintroducesnewdependenciesand
5 FurtherAnalysis potentialpointsoffailure,makingitmorechalleng-
ingfortheLLMtomaintaincoherenceandaccu-
5.1 ScalingAnalysis
racy throughout the entire call chain. Secondly,
Scaling law is common in LLMs. As shown in deeper nesting requires the model to retain and
Figure 3, we can conclude that most LLMs such process more contextual information over longer
as Qwen2, LLaMA3.1, Mistral, and GPT-4o se- sequences,whichcanleadtoissueswithmemory
ries follow the scaling law in NESTOOLS . The and attention span. This is particularly relevant
larger the size, the stronger its performance in forLLMsthathavefixed-lengthcontextwindows,
tool calling, which is consistent with the previ- where the ability to handle long-range dependen-
ous research conclusions. However, it is worth ciesdiminishesasthesequencelengthincreases.
mentioningthattheQwen1.5seriesdoesnotfully
5.3 NestingStructureAnalysis
follow the scaling law. Compared with the ini-
tiallyreleasedQwen1.5series,Qwenteamreleased As shown in Figure 5, we observe a similar phe-
Qwen1.5-32Btwomonthslater. Wespeculatethat nomenonwiththenestingdepthexperiment,where
6
 H U R F 6  6 / 2 2 7 6 ( 1Selection Order Parameter NestedParam
Setting Avg.
P R F1 P R F1 P R F1 P R F1
base 65.7 71.6 68.5 44.2 50.7 47.2 44.2 51.0 47.3 40.8 42.7 41.7 51.2
w/otype 62.7 73.6 67.7 40.4 51.4 45.3 42.4 52.6 46.9 35.7 43.1 39 49.7
w/oconjunction 59.8 73.4 65.9 35.7 48.3 41 41.1 53.3 46.4 33.2 43.8 37.8 47.8
Table3: RobustnessanalysisconductedonLLaMA3.1-8B,baserepresentstheresultsoftheoriginalsetting,w/o
typerepresentsmaskingthetypeofresponseparametersofeachtool,andw/oconjunctionrepresentsremovingthe
conjunctionsofthequery.
   
 G H S W K     
 G H S W K     
 G H S W K  !    
  
  
  
  
   1 2 3 1 2 3 1 2 3 1 2 3
 / / D 0 $      %  / / D 0 $       % / / D 0 $        %  * 3 7   R  P L Q L  * 3 7   R
Figure5:Theaveragedperformanceofdifferentnesting
Figure4: TherelationbetweennestingdepthandSelec-
structures. Thearrowbetweentwonumbersindicates
tionF1amongLLMs.
thenestingshape. Forexample,thefirststructuretype
(1→2,1→3) denotes that the 1st tool call’s response
contributestheinputparametersforboththe2ndand
shallow tool calls result in higher average perfor-
the3rdtoolcalls.
mance. However,theaveragedperformancewould
behigherifthereisaleadingtoolcall(1→2,1→3)
thatisfollowedbytwoseparatecalls(1→3,2→3). storeanoriginaldirectquery. Consideringthatthe
Besidesthelongnestingcallstructure(1→2→3), rule-basedscreeningcannotcompletelycoverthe
the additional nesting connection (1 → 3) at the connectives in the query, we intend to ask LLMs
mostrightcolumnobtainthelowestperformance toremovetheseadditionalwords. Thepromptcan
amongallthestructures,whichshowstheadverse be found in Appendix B.3. To ensure that this
effectofstructurecomplexity. operation does not affect the core information of
thequery,wechecksomesamplesanddon’tfind
5.4 RobustnessAnalysis
biasescausedbythisprocess.
Although existing benchmarks have comprehen- Fromthetoolperspective,wewouldliketoex-
sively evaluated the tool calling ability of LLMs, ploretheimpactoftoolintegrityontheexperimen-
thereisalackofrobustnessanalysisfortoolcalling talresultswhenthetoolismissingasmallpartof
basedonthesebenchmarks. Weintendtoanalyze theinformation,inordertokeepconsistencywith
therobustnessoftoolcallsfrombothtoolandquery theoriginalevaluationprocess,andtoensurethat
perspectiveson NESTOOLS. the core information of the tool is complete, we
Fromthequeryperspective,wenoticethatsome only mask out the type of the return value of the
conjunctionsthatdonotaffectthemeaningoften tooltoexploretheimpactoftoolcompletenesson
appearinthequeryoftoolcalls,suchas"Then,Af- theexperimentalresults.
terthat,Please",etc. Weguesswhetherthemodel AsshowninTable3,Inthecaseofmaskingoff
workswellbecauseoftheexistenceofashortcut. the type of the tool return value, LLaMA3.1-8B
Consideringthattherule-basedscreeningcannot showsaslightdecreaseinallmetrics. However,In
completelycovertheconnectivesinthequery,we thecaseofremovingtheconnectivesinthequery,
intend to remove these additional words and re- the performance drops more significantly, espe-
7
 Q R L W F H O H 6  I R  H U R F 6   ) 7 7 \ \ S S H H  2 2 P P L L V V V V L L R R Q Q
 2 2 P P L L V V V V L L R R Q Q  , , G G H H Q Q W W L L I I L L F F D D W W L L R R Q Q
 5 5 H H G G X X Q Q G G D D Q Q F F \ \  & & R R Q Q I I X X V V L L R R Q Q
    ( ( [ [ W W U U D D F F W W L L R R Q Q        + + D D O O O O X X F F L L Q Q D D W W L L R R Q Q
      2 2 W W K K H H U U V V                    
   
  
      
   
       
  D   ( U U R U  S U R S R U W L R Q V  R I  Q R Q  Q H V W H G    E   ( U U R U  S U R S R U W L R Q V  R I  Q R Q  Q H V W H G    F   ( U U R U  S U R S R U W L R Q V  R I  Q H V W H G    G   ( U U R U  S U R S R U W L R Q V  R I  Q H V W H G 
 S D U D P H W H U V  L Q  4 Z H Q    %  S D U D P H W H U V  L Q  / / D 0 $      %  S D U D P H W H U V  L Q  4 Z H Q    %  S D U D P H W H U V  L Q  / / D 0 $      %
Figure6: ParametererroranalysisforQwen2-7BandLLaMA3.1-8B
ciallytheOrdermetric,whichprovesthatthecon- 5.5.2 Parametererror
junctiondoeshelpLLMsunderstandtheorderof
For errors in the parameter section, we analyze
thecallchain. Aninterestingobservationisthataf-
the error types from two perspectives: (1)Non-
terapplyingadditionalfactors,theR-valuemetrics
nestedparametererrorsincludeparameteromis-
generally increase, indicating that LLM tends to
sions (Omission), redundant parameters (Redun-
callmoretoolstocoverthegoldstandardanswers.
dancy),theparametervalueiscorrectbutthetype
Insummary,itcanbeinferredthattherobustness
isincorrect(Type),theparametervalueiswrongly
ofcurrentLLMsinthefieldoftoolcallingisstill
extracted (Extraction), and other errors (Others).
insufficientandworthexploring.
(2)Nestedparametererrorsincludenon-nestedpa-
rametermistakenfornested(Hallucination),nested
5.5 ErrorAnalysis parameternotinvolved(Omission),nestedparam-
eter recognized as non-nested parameter (Identi-
WeanalyzetheerrorsfromLLMsduringtheevalu-
fication), nested parameter identified but take an
ationprocess,unfoldingboththetoolandparame-
incorrectvalue(Confusion).
terperspectives.
As shown in Figure 6, we count the propor-
tion of different error categories of Qwen2-7B
5.5.1 ToolError and LLaMA3.1-8B. For non-nested parameters,
LLaMA3.1-8Btendstomispredictparametertypes,
We summarize the errors in the tool perspective
whileQwen2-7Bmakesfewermistakes. Fornested
anddividethemintofivecategories: toolselection,
parameters, the most common mistake made by
toolomission,toolredundancy,hallucinations,and
Qwen2-7Bisrecognizingnestedparametersasnon-
generationformat. Sincethesetypesoferrorsare
nestedparameters. TheerrorsmadebyLLaMA3.1-
usually mixed, it is hard to provide quantitative
8Barerelativelyaverage,andtheyaremorelikely
analysis. Tothisend,weprovideeacherrorcate-
to fill in the wrong nested parameter values after
gorywithacasestudyinAppendixB.4.
identifyingthem. ThisshowsthatLLaMA3.1-8B
Hereareouroverallfindings: (1)Toolselection:
ismorecapableofidentifyingnestedtoolcalling
Wefindthatsimilartoolsmayconfusethemodel,
thanQwen2-7Btosomeextent.
leadingtoerrorsintoolselection. (2)ToolOmis-
sion: Althoughthegoldentoolscorrespondingto
6 Conclusion
eachqueryareincludedintheevaluationprompt,
themodelmaystillmisssomekeytools. (3)Tool In this paper, we introduce NESTOOLS , a large-
Redundancy: LLMs sometimes call redundant scale dataset of high-quality for evaluating the
toolsthatarenottask-related. (4)Hallucinations: LLMs’nestedtoollearningabilities. Weproposea
When faced with some specific tasks, the model novelautomaticmethodtogeneratecasesinvolv-
mayhallucinateandconstructtoolsonitsownthat ingnestedtoolcalls. Throughamulti-stepprocess
donotexistinthetoolpool. (5)GenerationFor- of manual review and refinement, we ensure the
mat: Duringtheevaluationprocess,someLLMs qualityof NESTOOLS. Statisticalanalysisreveals
may generate results in the wrong format, which that our dataset spans a wide range of domains.
cannot be parsed for evaluations. Corresponding Furthermore,experimentsconductedon22LLMs
results are presented in Table 8, where we find demonstratethesignificanceofthistask. Ourfind-
smallermodelsareprunedtogeneratecontentsin ings indicate that LLMs still struggle with effec-
thewrongformats. tively handling nested tool calls. We hope that
8NESTOOLS , combined with our detailed experi- ShijueHuang,WanjunZhong,JianqiaoLu,QiZhu,Ji-
ments, can provide valuable insights and inspire ahuiGao,WeiwenLiu,YutaiHou,XingshanZeng,
YashengWang,LifengShang,etal.2024. Planning,
futurein-depthexplorationofpracticalapplications
creation,usage: Benchmarkingllmsforcomprehen-
intoolagents.
sivetoolutilizationinreal-worldcomplexscenarios.
arXivpreprintarXiv:2401.17167.
Limitations
YueHuang,JiawenShi,YuanLi,ChenruiFan,Siyuan
Thisstudymainlybuildscomplexnestedtoolcall- Wu, Qihui Zhang, Yixin Liu, Pan Zhou, Yao Wan,
NeilZhenqiangGong,etal.2023. Metatoolbench-
ing instances, providing a new perspective on
markforlargelanguagemodels: Decidingwhether
nestedtoolcalling. Althoughpromising,inreality, to use tools and which to use. arXiv preprint
theremaybesituationswherethenecessarypreced- arXiv:2310.03128.
ingtoolsaremissing,andthemodelneedstouseits
Tatsuro Inaba, Hirokazu Kiyomaru, Fei Cheng, and
owncapabilitiestoperformadditionalprocessing
SadaoKurohashi.2023. Multitool-cot:Gpt-3canuse
onthereturnvalue. Anotherlimitationisthatthe multipleexternaltoolswithchainofthoughtprompt-
toolsinvolvedinthisstudycannotbeexecuted. Al- ing. In Proceedings of the 61st Annual Meeting
of the Association for Computational Linguistics
thoughthesetoolsarenotspecificimplementations,
(Volume2: ShortPapers),pages1522–1532.
theycanbeusedassimulationrepresentationstoac-
curatelydescribethefunctionsofthetools,which Albert Q Jiang, Alexandre Sablayrolles, Arthur Men-
sch,ChrisBamford,DevendraSinghChaplot,Diego
canbeusedtoevaluatethecapabilitiesofLLMsin
delasCasas,FlorianBressand,GiannaLengyel,Guil-
tool learning and provide guidance for the future
laumeLample,LucileSaulnier,etal.2023. Mistral
developmentofactualtools. Later,wewilltryto 7b. arXivpreprintarXiv:2310.06825.
designrealexecutioninterfacesforthesetoolsto
Albert Q Jiang, Alexandre Sablayrolles, Antoine
bettersimulatenestedtoolcallsinrealsituations.
Roux, Arthur Mensch, Blanche Savary, Chris
Bamford, Devendra Singh Chaplot, Diego de las
Casas, Emma Bou Hanna, Florian Bressand, et al.
References 2024. Mixtral of experts. arXiv preprint
arXiv:2401.04088.
JoshAchiam,StevenAdler,SandhiniAgarwal,Lama
Ahmad, Ilge Akkaya, Florencia Leoni Aleman, Minghao Li, Yingxiu Zhao, Bowen Yu, Feifan Song,
DiogoAlmeida,JankoAltenschmidt,SamAltman, Hangyu Li, Haiyang Yu, Zhoujun Li, Fei Huang,
ShyamalAnadkat,etal.2023. Gpt-4technicalreport. andYongbinLi.2023. Api-bank: Acomprehensive
arXivpreprintarXiv:2303.08774. benchmarkfortool-augmentedllms. InProceedings
of the 2023 Conference on Empirical Methods in
JinzeBai,ShuaiBai,YunfeiChu,ZeyuCui,KaiDang, NaturalLanguageProcessing,pages3102–3116.
XiaodongDeng,YangFan,WenbinGe,YuHan,Fei
Huang, et al. 2023. Qwen technical report. arXiv Yubo Ma, Zhibin Gou, Junheng Hao, Ruochen Xu,
preprintarXiv:2309.16609. ShuohangWang,LiangmingPan,YujiuYang,Yixin
Cao, and Aixin Sun. 2024. Sciagent: Tool-
augmentedlanguagemodelsforscientificreasoning.
KinjalBasu,IbrahimAbdelaziz,SubhajitChaudhury,
arXivpreprintarXiv:2402.11451.
SohamDan,MaxwellCrouse,AsimMunawar,Sad-
hana Kumaravel, Vinod Muthusamy, Pavan Kapa-
Bhargavi Paranjape, Scott Lundberg, Sameer Singh,
nipathi, and Luis A Lastras. 2024. Api-blend: A
Hannaneh Hajishirzi, Luke Zettlemoyer, and
comprehensivecorporafortrainingandbenchmark-
MarcoTulioRibeiro.2023. Art: Automaticmulti-
ingapillms. arXivpreprintarXiv:2402.15491.
stepreasoningandtool-useforlargelanguagemod-
els. arXivpreprintarXiv:2303.09014.
Zehui Chen, Weihua Du, Wenwei Zhang, Kuikun
Liu, Jiangning Liu, Miao Zheng, Jingming Zhuo, Shishir G Patil, Tianjun Zhang, Xin Wang, and
SongyangZhang,DahuaLin,KaiChen,etal.2024. JosephEGonzalez.2023. Gorilla: Largelanguage
T-eval: Evaluatingthetoolutilizationcapabilityof modelconnectedwithmassiveapis. arXivpreprint
largelanguagemodelsstepbystep. InProceedings arXiv:2305.15334.
of the 62nd Annual Meeting of the Association
for Computational Linguistics (Volume 1: Long Yujia Qin, Shengding Hu, Yankai Lin, Weize Chen,
Papers),pages9510–9529. Ning Ding, Ganqu Cui, Zheni Zeng, Yufei Huang,
ChaojunXiao,ChiHan,YiRenFung,YushengSu,
AbhimanyuDubey,AbhinavJauhri,AbhinavPandey, HuadongWang,ChengQian,RunchuTian,Kunlun
AbhishekKadian,AhmadAl-Dahle,AieshaLetman, Zhu,ShihaoLiang,XingyuShen,BokaiXu,Zhen
Akhil Mathur, Alan Schelten, Amy Yang, Angela Zhang,YiningYe,BowenLi,ZiweiTang,JingYi,
Fan,etal.2024. Thellama3herdofmodels. arXiv Yuzhang Zhu, Zhenning Dai, Lan Yan, Xin Cong,
preprintarXiv:2407.21783. Yaxi Lu, Weilin Zhao, Yuxiang Huang, Junxi Yan,
9Xu Han, Xian Sun, Dahai Li, Jason Phang, Cheng Tong Zhu, Xiaoye Qu, Daize Dong, Jiacheng Ruan,
Yang, Tongshuang Wu, Heng Ji, Zhiyuan Liu, and Jingqi Tong, Conghui He, and Yu Cheng. 2024.
MaosongSun.2023a. Toollearningwithfoundation Llama-moe: Building mixture-of-experts from
models. Preprint,arXiv:2304.08354. llama with continual pre-training. arXiv preprint
arXiv:2406.16554.
YujiaQin,ShihaoLiang,YiningYe,KunlunZhu,Lan
Yan,YaxiLu,YankaiLin,XinCong,XiangruTang, A DatasetConstructiondetails
BillQian, etal.2023b. Toolllm: Facilitatinglarge
languagemodelstomaster16000+real-worldapis. A.1 Tool/InstanceGeneration
arXivpreprintarXiv:2307.16789.
ThecorrespondingpromptispresentedinTable4.
Changle Qu, Sunhao Dai, Xiaochi Wei, Hengyi Cai, Anexampleforthegenerationprocesscanbefound
ShuaiqiangWang,DaweiYin,JunXu,andJi-Rong inTable5.
Wen.2024. Toollearningwithlargelanguagemod-
els: Asurvey. arXivpreprintarXiv:2405.17935. A.2 QueryNormalization
TimoSchick,JaneDwivedi-Yu,RobertoDessì,Roberta ThecorrespondingpromptispresentedinTable6.
Raileanu,MariaLomeli,EricHambro,LukeZettle-
moyer, Nicola Cancedda, and Thomas Scialom. A.3 QueryRefinement
2024. Toolformer: Languagemodelscanteachthem-
ThecorrespondingpromptispresentedinTable7.
selvestousetools. AdvancesinNeuralInformation
ProcessingSystems,36.
B Evaluationdetails
YongliangShen,KaitaoSong,XuTan,WenqiZhang,
B.1 OtherEvaluationMetrics
Kan Ren, Siyu Yuan, Weiming Lu, Dongsheng Li,
andYuetingZhuang.2023. Taskbench: Benchmark-
InadditiontothefourmetricsofSelection,Order,
inglargelanguagemodelsfortaskautomation. arXiv
Parameter,andNestedParam,wealsoconsider
preprintarXiv:2311.18760.
thefollowingmetrics:
YifanSong,WeiminXiong,DaweiZhu,WenhaoWu, FormatmeasurestheaccuracyofLLM’soutput
Han Qian, Mingbo Song, Hailiang Huang, Cheng format.
Li,KeWang,RongYao,etal.2023. Restgpt: Con-
Treemeasuresthepassrateoftheentirecalltree
nectinglargelanguagemodelswithreal-worldrestful
ofLLMs,requiringabsolutecorrectnessinthefour
apis. arXivpreprintarXiv:2306.06624.
previous metrics of Selection, Order, Parameter,
Qiaoyu Tang, Ziliang Deng, Hongyu Lin, Xianpei andNestedParamtobeconsideredapass.
Han, Qiao Liang, Boxi Cao, and Le Sun. 2023.
We provide the format accuracy and Tree pass
Toolalpaca: Generalizedtoollearningforlanguage
rateofallevaluatedLLMsinTable8.
models with 3000 simulated cases. arXiv preprint
arXiv:2306.05301.
B.2 EvaluationPrompt
MengsongWu,TongZhu,HanHan,ChuanyuanTan, ThecorrespondingpromptispresentedinTable9.
Xiang Zhang, and Wenliang Chen. 2024. Seal-
tools: Self-instruct tool learning dataset for agent
B.3 Promptofremovingconjunctions
tuning and detailed benchmark. arXiv preprint
arXiv:2405.08355. ThecorrespondingpromptispresentedinTable10.
An Yang, Baosong Yang, Binyuan Hui, Bo Zheng,
BowenYu,ChangZhou,ChengpengLi,Chengyuan B.4 ErrorExamples
Li, Dayiheng Liu, Fei Huang, et al. 2024. Qwen2
technicalreport. arXivpreprintarXiv:2407.10671. B.4.1 ToolSelection
TheerrorexamplesforToolSelectionareshown
Shunyu Yao, Jeffrey Zhao, Dian Yu, Nan Du, Izhak
inTable11.
Shafran,KarthikNarasimhan,andYuanCao.2022.
React: Synergizingreasoningandactinginlanguage
B.4.2 ToolOmission
models. arXivpreprintarXiv:2210.03629.
TheerrorexamplesforToolOmissionareshown
JunjieYe,GuanyuLi,SongyangGao,CaishuangHuang, inTable12.
Yilong Wu, Sixian Li, Xiaoran Fan, Shihan Dou,
Qi Zhang, Tao Gui, et al. 2024. Tooleyes: Fine- B.4.3 ToolRedundancy
grained evaluation for tool learning capabilities of
TheerrorexamplesforToolRedundancyareshown
largelanguagemodelsinreal-worldscenarios. arXiv
preprintarXiv:2401.00741. inTable13.
10Tool/InstanceGeneration
Please generate several realistic functions with definitions in the given specific domain and
generatecompletefunctioncallingstatementsin‘main()‘,shapedlike"data0,data1=func0(*args)"
, "data2,data3,data4 = func1(*args)",etc. Do not add any additional python code in ‘main()‘.
Themostimportantthingisthattheformerfunction’sreturnvalueshouldbelatterones’input
argument,inotherwords,data1,data2,etc. shouldworkastheargumentsofsubsequentfunction
calls.In this scenario, the subsequent function will use a return value of a preceding function
as its parameter, you need to ensure that the inner meaning of this parameter in both functions
shouldbeconsistent,withidenticalparametertype,whileslightdifferenceinparameternamesand
descriptionsareacceptable.
Allrequiredparametersmustbefilledin,bydirectlywritingtheactualvaluesinorder. Optional
parameterscanbefilledinornotfilledin,butremembertoadd"parameter_name="beforethe
valueoftheoptionalparameterifyouaresuretofillinthisoptionalparameter.
Youneedtowritethetaskinnaturallanguageasacommentunderthefunctioncallingstatements
in ‘main()‘ to describe the entire calling process. Please ensure that it includes all the function
callingvalues.
Don’t use python’s intrinsic functions in your generation, such as lists and dictionaries (index
access,slicing,adding,deleting,etc.).
ThegeneratedAPIonlyneedstoberelatedtothegivendomainanddoesnotneedtobecompletely
subordinatetothegivendomain.
Herearesomeexamples.
{example}
It’syourturntogenerate.
Domain: {}
Answer:
Table4: PromptofTool/InstanceGeneration.
B.4.4 Hallucinations
TheerrorexamplesforHallucinationsareshown
inTable14.
B.4.5 GenerationFormat
The error examples for Generation Format are
showninTable15.
11AnexampleforTool/InstanceGeneration
Domain: Food and Beverage/Food product development
```python
def get_top_selling_wine(location: str, date: str):
"""Retrieve the top-selling wine in a specific location on a specific date.
required parameters:
location (str): the geographical location (country, region, city)
date (str): the date of the sales in 'YYYY-MM-DD' format
Returns:
wine_name (str): the name of the top-selling wine
sales_value (float): the sales value of the wine in dollars
"""
...
def get_product_origin(product: str):
"""Retrieve the origin of a specific product.
required parameters:
product (str): the name or code of the product
Returns:
origin (str): the geographical origin of the product
"""
...
def get_export_quantity(location: str, date: str, product: str):
"""Retrieve the export quantity of a specific product
from a specific location on a specific date.
required parameters:
location (str): the geographical location (country, region, city)
date (str): the date of the export in 'YYYY-MM-DD' format
product (str): the name or code of the product
Returns:
quantity (int): the export quantity of the product
"""
...
def main():
data0, data1 = get_top_selling_wine("California", "2023-10-08")
data2 = get_product_origin(data0)
data3 = get_export_quantity(data2, "2023-10-08", data0)
# I would like to know which wine sold the best in California on October 8th,
2023. Could you provide me with the origin of this wine and inform me about
the export data of this wine from the local area on that day?
if __name__ == "__main__":
main()
```
Table5: AnexampleforTool/Instancegenerationprocess.
12QueryNormalization
BelowaresomeAPIs,atask,andAPIcallresultforthistask. Youneedtocheckifanyvalues
of the API call result that are not present in the task, incorporate those values into the original
taskwithoutmentioningthespecificAPIs,rewritetheoriginaltasktoensurethatitincludesall
thevalues,whichisveryimportant.Ifthevalueisintheformatofcomplexdatatype(suchasa
dictionary,list,tuple,etc.),youneedtoincorporateeachitemfromthevalueintothetaskinnatural
language,ratherthandirectlyaddingthevalueintherawformattothetask.
Theinstructionsoftherewrittentaskdonotneedtobecompletelyconsistentwiththeinformation
inthegivenAPIsuchasthenameanddespcription,andsomeuniquenessofthereal-lifescenario
shouldberetained.
Youonlyneedtogeneratetherewrittentaskwithoutaddinganyadditionalexplanations.
Hereisanexample.
{example}
It’syourturntogenerate.
APIs:
{goldapis}
Task:
{task}
APIcallresult:
{callchainwithgoldapis}
rewrittentask:
Table6: Promptofquerynormalization.
13QueryRefinement
Youareanexcellenttaskrewriter. Next,Iwillgiveyouataskquery,andaskyoutorewriteitin
highquality. Pleasefollowthetipsbelow.
Tips:
1. PleasemakesurethattheactualnameoftheAPI(e.g.,get_article_headline)involvedinthecall
doesnotappearintherewrittentask.
2. The API call result represents the golden tool calling process corresponding to the query.
Parametervalueinthe"API_call_"formatrepresentsareturnvaluefromaprevioustool. Referto
theprovidedAPIsinformationtoensurethattherewrittentaskisconsistentwiththegoldentool
callingprocess.
3. Pleasemakesurethatallregularparametersinthegoldtoolcallingprocess,whicharenotin
the"API_call_"format,canbeextractedorinferredfromtherewrittentask.
4. Withoutchangingthecoremeaningandlogicoftheoriginaltask,andwhileadheringtothecall
chain,appropriatelymodifytheformofexpression,makethetaskmorecoherentandalignedwith
real-worldscenarios.
Here’sanexample:
{example}
It’syourturntogenerate.
APIs:
{goldapis}
Task:
{originaltask}
APIcallresult:
{callchainwithgoldapis}
rewrittentask:
Table7: Promptofqueryrefinement.
14Model Format Tree
API-BasedModels
GPT-4o 100.0 25.9
GPT-4o-mini 94.3 18.3
GPT-3.5 99.4 13.5
Claude-3.5 100.0 26.8
Open-SourcedModels
LLaMA3.1-8B 98.0 6.9
LLaMA3.1-70B 99.1 9.7
LLaMA3.1-405B 97.5 14.7
Mistral-7Bv0.2 68.7 2.9
Mixtral-8x7B 91.3 7.4
Mixtral-8x22B 99.5 17.5
Qwen2-0.5B 1.2 0.0
Qwen2-1.8B 66.5 0.0
Qwen2-7B 94.2 4.6
Qwen2-57B 97.5 9.2
Qwen2-72B 98.6 20.3
Qwen1.5-0.5B 3.3 0.0
Qwen1.5-1.8B 12.6 0.0
Qwen1.5-7B 59.5 2.4
Qwen1.5-14B 85.4 8.0
Qwen1.5-32B 85.7 10.7
Qwen1.5-72B 86.1 7.8
Qwen1.5-110B 88.8 13.0
Table8: FormataccuracyandTreepassrateofNESTOOLS. Boldrepresentsthebestscoreamongallmodels.
15PromptofEvaluation
You have access to a list of APIs and the task description.You need to follow the given task
descriptionanddeterminewhichAPItocallinsequenceaccordingtotheorderrequiredbythe
taskdescription. APIcanberetrievedfromtheAPIslist. Finally,youonlyneedtoreturntheAPI
callresultwithoutanyothercontent.
Thefinalresultshouldbeintheformatof[{"api_name":__,"api_id":__,"parameters":{"arg0":"value0",
"arg1":"value1",...},"responses":{"arg0":"API_call_0",... ,"argn":"API_call_n"}},{"api_name":__,
"api_id":__,"parameters":{"arg0":"value0","arg1":"value1",...},"responses":{"arg0":"API_call_{n+1}",
...}},...].
Youdon’tneedtoknowtheactualreturnvalueoftheAPIcall,justassigneachreturnvalueasa
string"API_call_{number}"in"responses",suchas"API_call_0","API_call_1","API_call_2"and
soon. The"number"in"API_call_{number}"shouldincreasebyonefrom0globally.
PleasefirstdeterminewhichAPIstocallinsequencebasedonthetask,andthendeterminethe
parametervaluesofeachAPIdependingonthespecificdetailsofthetask. Ifyoudecidetocall
theAPI,youneedtofillinallthisAPI’srequiredparameterswhichcanbefoundinthisAPI’s
"required"list. Ifyouthinkthetaskdoesnotincludetheactualvalueofanecessaryparameterin
API’s"required"list,youcanassignthenecessaryparameteravalueof"UNK". Theremaining
parameters are optional parameters, determine whether to fill them in according to the task. If
you think the parameter value to be filled in is the return value of a previous API call, set it as
"API_call_x",thentheparametervaluecanbefilledinwith"API_call_x".
NowitisyourturntogeneratetheAPIcallresultbasedontheAPIsandtaskdescriptionbelow.
RememberthatyouonlyneedtogeneratetheAPIcallresult,notanyadditionalexplanations.
APIs:
{tools}
Taskdescription:
{taskdescription}
APIcallresult:
Table9: Promptofevaluation.
RemoveConjunctions
Nowthereisataskdescription. Ihopeyoucanremovepotentialconjunctionslike"Please","then",
"subsequently","Afterthat"etc.,whilemaintainingthecoremeaning. Ensurethatthetextremains
innaturallanguagewithoutpunctuationerrorsandadjustthecapitalizationaccordingly.
Hereisanexample:
{example}
Nowitsyourturn:
Taskdescription: {}
Result:
Table10: Promptofremovingconjunctions.
16Model Query Response
Qwen2-7B Pleaseprovidemewiththearea,perime- [{"api_name": "calculate_rectangle_perimeter","pa-
ter,anddiagonalofarectanglewithside rameters":{"length":5.0,"width":8.0},"responses":
lengths5.0and8.0. {"perimeter": "API_call_0"}}, {"api_name": "cal-
culate_diagonal", "parameters": {"side1": 5.0,
"side2": 8.0}, "responses": {"diagonal_length":
"API_call_1"}},{"api_name": "calculate_area","pa-
rameters":{"length":5.0,"width":8.0},"responses":
{"area": "API_call_2"}}]
LLaMA3.1-8B Pleasesharethetitleofapieceinthepol- [{"api_name": "request_article","parameters": {"ar-
itics division that incorporates the word ticle_title": "piece in the politics division that
whichiselections. Followingthis,extract incorporates the word which is elections", "au-
information concerning the author who thor": "UNK","access_link": "UNK"},"responses":
pennedtheaforementionedpiece. Lastly,{"access_granted": "API_call_0","download_link":
suggest5articlesthatbearsimilarityabout "API_call_1"}}, {"api_name": "get_author_info",
elections. "parameters": {"author": "API_call_1"}, "re-
sponses": {"birthplace": "API_call_2", "arti-
cles_written": "API_call_3"}},{"api_name": "rec-
ommend_similar_articles", "parameters": {"key-
word":"elections","limit":"5"},"responses":{"sim-
ilar_articles": "API_call_4"}}]
Table11: Errorexamplesfortoolselection.
Model Query Response
LLaMA3.1-70B ScantheISBN"978-3-16-148410-0"ofa [{"api_name": "scan_isbn", "parameters":
book to extract comprehensive data and {"isbn": "978-3-16-148410-0"}, "responses":
verify its presence in the library. Upon {"book_details": "API_call_0", "availability":
identifying the book situated, launch an "API_call_1"}}, {"api_name": "locate_book",
augmentedrealityinteractioncorrelating "parameters": {...},"responses": [...]},{"api_name":
tothebook. "engage_ar_experience","parameters": {"availabil-
ity": "API_call_1","exact_location": "API_call_0"},
"responses": {"ar_message": "API_call_2",
"ar_duration": "API_call_3"}}]
Qwen2-7B I would like to know which company is [{"api_name": "get_product_manufacturer","param-
responsibleforproducingtheSmartphone eters": {"product_name": "SmartphoneX10"},"re-
X10, and I am also interested in under- sponses": {"manufacturer_name": "API_call_0"}},
standingthecomprehensivedevelopment {"api_name": "get_factory_location","parameters":
valueoftheindustrialzoneitbelongsto. {...}, "responses": [...]},{"api_name": "eval-
uate_property", "parameters": {"location":
"API_call_0","type_of_land": "industrial","area":
100.0},"responses": {"land_value": "API_call_1",
"development_potential": "API_call_2"}}]
Table12: Errorexamplesfortoolomission.
17Model Query Response
LLaMA3.1-8B I’mplanningametrocommunicationroute [{"api_name": "choose_modulation_format",
thatneedstospanabout50km,andwe’re "parameters": {"route_type": "metro", "dis-
targeting a bandwidth capacity of 100 tance": 50, "bandwidth": 100}, "responses":
Gbps. Couldyoupleaseprovideamodu-{"modulation_scheme": "API_call_0", "sys-
lationformatthatwillworkwelloverthat tem_settings": "API_call_1"}}, {"api_name":
distance. Also, there’s the challenge of "adjust_amplification", "parameters": {"format":
compensatingforalinelossofaround3.5 "API_call_0", "line_loss": 3.5}, "responses":
dB, so I’ll need to fine-tune the settings {"optimized_gain": "API_call_2", "amplifier":
accordingly. Once got the right settings, "API_call_3", "signal_quality": "API_call_4"}},
Couldyoutellmehowtosetupastable {"api_name": "setup_receiver", "parameters":
connectionbetweenA1andB1? {"trans_config": "API_call_3", "link_budget":
"API_call_2", "channel_type": "single-mode"},
"responses": {"receiver_status": "API_call_5",
"signal_quality": "API_call_6"}}, {"api_name":
"establish_connection", "parameters": {"ampli-
fier_type": "API_call_3","end_points": "A1-B1"},
"responses": {"connection_status": "API_call_7",
"connection_details": "API_call_8"}}]
Qwen2-7B I’m working on a project called "Alien [{"api_name": "create_vfx_scene", "parame-
Planet",whichisaVFXsceneIaimtocre- ters": {"scene_name": "Alien Planet", "duration":
ate. Itshouldlastabout120secondsand 120, "resolution": "4K"}, "responses": {}},
Iwantittobein4Kresolutiontoensure {"api_name": "add_special_effects", "parameters":
highquality. I’dliketoincludeSFXfea-{"scene_path": "path_to_Alien_Planet_scene",
turingaliencreaturesandspacecraftina "effects_list": ["alien_creatures", "spacecraft"],
mysteriousatmosphere. Onceeverything "mood": "mysterious"}, "responses": {}},
is put together, I need the scene to be in {"api_name": "render_scene", "parameters":
MP4format.Couldyouguidemewiththe {"scene_objects": ["alien_creatures", "space-
wholeprocess? craft"], "quality": "high", "resolution": [3840,
2160]}, "responses": {}}, {"api_name": "ex-
port_final_scene", "parameters": {"scene_path":
"path_to_rendered_Alien_Planet_scene", "for-
mat_type": "MOV"},"responses": {}}]
Table13: Errorexamplesfortoolredundancy.
18Model Query Response
LLaMA3.1-8B Pleaseassistindesigninganoptimalpros- [{"api_name": "design_prosthesis", "parameters":
thesisfora35-year-oldmale,whohasan {"patient_info": "{"age": 35, "gender": "male",
unremarkable medical past and has suf- "medical_history": "unremarkable"}", "injury":
fered a fracture impacting his upper ex- "fracture", "affected_area": "upper extremity"},
tremity. Afterward,evaluatethepatient’s "responses": {"prosthesis_details": "API_call_0",
steadyconditionandanticipateacomplete "estimated_cost": "API_call_1"}}, {"api_name":
recoverywithinatimeframeof6months. "patient_assessment", "parameters": {"pa-
Finally,arrangeanorthopedicsurgicalpro- tient_condition": "stable","recovery_expectations":
cedureforthepatient. "completerecoverywithin6months"},"responses":
{"assessment_report": "API_call_2"}},{"api_name":
"schedule_orthopedic_surgery", "parameters":
{"prosthesis": "API_call_0","patient_info": "{äge¨:
35,g¨ender¨: m¨ale,m¨edical_history¨: ünremarkable}¨",
¨
"surgery_type": "orthopedic", "surgery_date":
"2024-03-16"}, "responses": {"surgery_schedule":
"API_call_3"}}]
Qwen2-7B Assess the caliber of the Python code in [{"api_name": "analyze_code_quality", "parame-
the file found at "path/to/file.py". Sub- ters": {"file_path": "path/to/file.py", "language":
sequently, refine the code using the tool "Python"},"responses": {"issues_found": ["issue1",
PyLint.Finally,deploytheoptimizedcode "issue2"], "complexity_score": 4.5, "maintainabil-
asawebapplicationtotheproductionen- ity_score": 8.2}}, {"api_name": "optimize_code",
vironment. "parameters": {"issues": ["issue1", "issue2"],
"optimization_tool": "PyLint"},"responses": {"op-
timized_code": "optimized_code_snippet"}},
{"api_name": "deploy_app", "parameters":
{"app_id": "optimized_code_snippet","server_type":
"Production", "region": "Global"}, "responses":
{"deployment_status": true, "deployed_url":
"https://optimized-code.example.com"}}]
Table14: Errorexamplesforhallucinations.
19Model Query Response
LLaMA3.1- Please check the safety status of a car [{"api_name": "check_vehicle_safety", "parame-
405B withregistrationnumberABC123,lastin- ters": {"vehicle_type": "car","registration_number":
spectedonMay12,2022. IssueaclassC "ABC123", "inspection_date": "May 12, 2022"},
drivinglicensetoJohnDoeaged30. Then "responses": {"safety_status": "API_call_0",
bookavehicleinspectionappointmentfor "next_inspection_date": "API_call_1"}},
atruckwithregistrationnumberDEF456 {"api_name": "issue_driving_license", "pa-
onJune20,2022. rameters": {"applicant_name": "John Doe",
"age": 30, "license_type": "class C"}}, "re-
sponses": {"license_number": "API_call_2",
"expiration_date": "API_call_3"}}, {"api_name":
"book_vehicle_inspection", "parameters": {"reg-
istration_num": "DEF456", "vehicle": "truck",
"inspection_date": "June 20, 2022"}, "responses":
{"appointment_confirmation": "API_call_4"}}]
Qwen2-7B Load the VR environment named "Fan- [{"api_name": "load_vr_environment", "param-
tasyLand"foruserID12345. Obtainin- eters": {"environment_name": "Fantasy Land",
formation about the user’s avatar named "user_id": 12345}, "responses": {"environ-
"Wizard". Explore the VR world within ment_type": "Fantasy","user_preferences": "adven-
the"FantasyLand"environment,starting ture","avatar_skin_color": "blue"}},{"api_name":
atcoordinates(10,5,3)andinteractwith "get_avatar_info", "parameters": {"user_ID":
otheruserspresent. 12345, "avatar_name": "Wizard"}, "responses":
{"avatar_height": 1.8,"avatar_accessories": "pointed
hat, staff", "avatar_bio": "A powerful wizard who
specializes in elemental magic."}, {"api_name":
"explore_vr_world", "parameters": {"environ-
ment_type": "Fantasy", "user_coordinates": [10,
5, 3], "interact_with_others": true}, "responses":
{"discovered_elements":["ancientruins","enchanted
forest","dragon’slair"],"interactive_users": 5}}]
Table15: Errorexamplesforgenerationformat.
20