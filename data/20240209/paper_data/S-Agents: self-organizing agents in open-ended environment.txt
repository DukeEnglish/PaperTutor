Preprint
S-AGENTS: SELF-ORGANIZING AGENTS IN OPEN-
ENDED ENVIRONMENT
JiaqiChen∗ YuxianJiang∗ JiachenLu LiZhang†
FudanUniversity
https://github.com/fudan-zvg/S-Agents
(1) mine log (2) craft crafting table and (3) mine stone
wooden pickaxe
(4) craft wood e n p l a n k (5) build walls
ALgeeandt e1r
Agent 2 Agent 4
Agent 3
(6) build foundation (7) build roof (8) shelter finished
Figure 1: Agent organization in an open-ended environment. Agent organization is a group
of agents with a certain structure cooperating for shared goals. (1-3) depicts a group of agents
collectingscatteredrocks;(4-8)illustratesagroupofagentsbuildingasheltertogether.Duringtheir
collaborativeprocess,theyautonomouslyorchestratedworkflowswithoutfixedstepsbyhumans.
ABSTRACT
Leveraginglargelanguagemodels(LLMs),autonomousagentshavesignificantly
improved, gaining the ability to handle a variety of tasks. In open-ended set-
tings, optimizing collaboration for efficiency and effectiveness demands flexible
adjustments.Despitethis,currentresearchmainlyemphasizesfixed,task-oriented
workflowsandoverlooksagent-centricorganizationalstructures. Drawinginspi-
rationfromhumanorganizationalbehavior,weintroduceaself-organizingagent
system (S-Agents) with a “tree of agents” structure for dynamic workflow, an
“hourglass agent architecture” for balancing information priorities, and a “non-
obstructive collaboration” method to allow asynchronous task execution among
agents. Thisstructurecanautonomouslycoordinateagroupofagents,efficiently
addressingthechallengesofanopenanddynamicenvironmentwithouthumanin-
tervention. OurexperimentsdemonstratethatS-Agentsproficientlyexecutecol-
laborative building tasks and resource collection in the Minecraft environment,
validatingtheireffectiveness.
∗Theseauthorscontributedequallytothiswork.
†LiZhang(lizhangfd@fudan.edu.cn)isthecorrespondingauthorwithSchoolofDataScience,FudanUni-
versity.
1
4202
beF
8
]IA.sc[
2v87540.2042:viXraPreprint
1 INTRODUCTION
Thefundamentalobjectiveofartificialintelligencehaslongbeenthedevelopmentofintelligentau-
tonomousagentswiththecapacitytooperateproficientlyinopen-endedenvironments(Weinbaum&
Veitas,2017;Fujita,2009). AutonomousagentspoweredbyLargeLanguageModels(LLMs)(Kas-
neci et al., 2023; Touvron et al., 2023; Ji et al., 2023), especially GPT-4 (OpenAI, 2023b) have
paved the way for innovative developments in this domain. These models showcase remarkable
competenciesindiversedomains,includinginstructioncomprehension(Ouyangetal.,2022;Chung
etal.,2022),decision-making(Shinnetal.,2023;Mandietal.,2023;Zhangetal.,2023;Yaoetal.,
2023), tool usage Cai et al. (2023), code generation (Hong et al., 2023; Chen et al., 2023b), and
diverseotherdomains(Tangetal.,2023). Moreover,LLMagentspoweredhavebeenemployedin
diversetasksinopen-endedenvironments,spanningfromsandboxgames,simulatedenvironments,
androbotics(Fanetal.,2022;Zengetal.,2022;Brohanetal.,2023;Luetal.,2023;Padmakumar
etal.,2023). However,complexembodiedtasksinopenenvironmentsoftennecessitatecollabora-
tion among individual agents to achieve optimal outcomes (Woolley et al., 2010; Fehr & Ga¨chter,
2000;Zhugeetal.,2023).
Unfortunately,thetransitionfromsingletomultipleagentsinanopen-endedworldintroducessig-
nificant challenges in organizing a scalable group efficiently to tackle diverse tasks. The principal
challengeinmulti-agentorganizationsresidesinstructuringamultitudeofagents.Previousresearch
haspredominantlyconcentratedonthecreationoftask-oriented,fixedworkflows(Hongetal.,2023;
Qian et al., 2023; Wu et al., 2023), neglecting to delve into the exploration of an organizational
frameworkcharacterizedbyitsagent-centricapproachandflexibilityinworkflow. Identifyingop-
timal connections among individuals and empowering agents to autonomously define a collective
workflow present a novel challenge (Grossi et al., 2006; Jensen et al., 2017; Chen et al., 2023c).
Furthermore, agents in an organization must concurrently manage communication from both the
surroundingenvironmentandtheorganizationalcontext.
Inthisstudy,weintroduceS-Agents,anovelself-organizingmulti-agentsystemthatallowsagents
toflexiblyarrangeworkflowautonomously,withouttheneedforpredefinedhumaninstructions,in
open-ended environments. The system is specifically designed to operate within the open-world
game Minecraft as its environment. It features: 1) A “tree of agents” organizational structure,
comprising a root node (leadership agent) and multiple leaf nodes (executor agents), illustrated in
Figure2(d). Theleadershipagentautonomouslyarrangesaflexibleworkflowwithouttheneedfor
humanintervention. 2)Anhourglassagentarchitecturethatstrivestobalanceprioritiesbetween
the agent community and the physical environment, promoting coordinated actions. 3) A non-
obstructive collaboration approach breaks away from the constraint of multiple intelligent agents
sharing a fixed convergence beat, allowing agents to asynchronously execute collaborative tasks.
This method is designed to alleviate delays induced by the slowest agent in each round, thereby
enhancingoverallefficiency.
2 RELATED WORK
LLM powered multi-agent collaboration Large Language Models (LLMs) have demonstrated
phenomenal capabilities in various domains. Park et al. (2023); Akata et al. (2023); Xiang et al.
(2023)drivemultipleagentswithLLMandsimulatehuman-likeconversationsaswellassomeso-
cial behaviors; Recent attempts (Li et al., 2023; Dong et al., 2023; Qian et al., 2023; Hong et al.,
2023)foundthatmulti-agentembodiedcollaborationcoulddevelopsoftwarefollowingafixedpro-
cess,butcouldnotcoordinateautonomously;Multipleroboticarms(Mandietal.,2023),andmul-
tipleagents(Zhangetal.,2023)workingincollaborationallbringhigherefficiency,butcannotbe
scaledup; While previousmethodologies havedemonstratedleading-edge performanceon certain
tasks, their collaboration mechanisms are often preordained and task-centric. However, the au-
tonomouscollaborativebehaviorofmulti-agentembodiedorganizationsintheopenworldremains
anuncleartopicinthecurrentresearch.Weaimtodesignanagent-centricorganizationthatempow-
ersagentstodirectlyorchestrateworkflows,inherentlydeterminingtheircollaborationframework.
Thisapproachshouldbeversatileenoughtotackleawiderangeofembodiedtasks.
EmbodiedagentsinMinecraft Minecraftisanopen-ended,three-dimensionalworldthatisafree
experimentalenvironmentforbuildingnumerousbenchmarksandagentmethods. Fanetal.(2022);
2Preprint
Act
Perceive
Ag �e �nt Ag �e �nt Agent �� aR go eo nt
t
aL ge ea nf
t
Agent
��
Agent Environment Agent
�� ��Agent Leaf
agent
�1 �1 ��
��22
�3 ��2
�
ENV
�3
�2 ��1
ENV ENV ENV
(a) Solo agent (b) Chain of agent (c) Graph of agent (d) Tree of agent (Ours)
Figure 2: Schematic organizational structure comparison. (a) Solo agent Wang et al. (2023a):
Directinteractionwiththephysicalenvironment;(b)ChainofagentsQianetal.(2023);Hongetal.
(2023): Specializedagentssequentiallyperformtheirdesignatedtasksandcommandtheactionsof
thenextagent;(c)GraphofagentsParketal.(2023): Decentralizedstructureallowingallagentsto
commandeachother; (d)Treeofagents: Centralizedstructureretainingoneagentasaleadership
agent(rootagenta ),withotherexecutoragents(leafagenta ,a )executingcommands.
r l1 l2
Johnsonetal.(2016);Gussetal.(2019;2021);Kanervistoetal.(2022)areestablishedbenchmarks
for evaluating single-agent algorithms. While Mohanty et al. (2022); Kiseleva et al. (2022a;b);
Mohanty et al. (2023); Gray et al. (2019) focus on designing specific structures based on human
instructions. Ontheotherhand, Malmo(Perez-Liebanaetal.,2019)offersanartificiallydesigned
game environment for multi-agent cooperation but lacks the necessary openness and diversity in
tasksandenvironments. Buildinguponthesebenchmarks,severaladvancedworksexploredifferent
approachestorealizingembodiedagents. Manypriorworksutilizereinforcementlearningtolearn
human game behavior (Kanitscheider et al., 2021; Lin et al., 2021; Mao et al., 2022; Skrynnik
et al., 2021; Hafner et al., 2023). Fan et al. (2022); Baker et al. (2022) perform large-scale pre-
training on game-playing videos. Wang et al. (2023c); Zhu et al. (2023) proposes a closed-loop
feedbackframeworkforasingleagent,allowingtheagenttoachieveitsgoalsvisinteractwiththe
environment. Wangetal.(2023a)usesLLMstoautomaticallygeneratethenexttaskbasedonthe
environment, continuouslyenrichingtheskilllibraryandexploringtheworld. However, therehas
been limited exploration into the design of organizational structures for multiple LLM agents and
thearchitectureofembodiedagentsthatcanbeorganized.
3 METHODOLOGY
Inthissection,weintroduceLLM-basedself-organizingagents(S-Agents),including(i)anefficient
directedtreeofagentsasanorganizationalstructure,(ii)anhourglassagentframeworkforunified
goalmanagementanddynamicplanning,and(iii)anon-obstructivecollaborationparadigmallowing
non-blockingparallelization.
3.1 ORGANIZATIONALSTRUCTUREOFAGENTS
3.1.1 AGENTSASAGRAPH
We design an agent-centric organization, specifically, we do not predefine the specific roles and
functionsofagents(Hongetal.,2023;Qianetal.,2023;Wuetal.,2023). Instead,weplacethem
inrelationships,allowingthemtoautonomouslyallocatetasksandcoordinateworkflowsbasedon
circumstances and needs. This is the essence of self-organizing. Self-organizing agents collabo-
ratetocoordinatemultiplesub-taskswithouttheneedforhumanintervention,workingtowardsa
shared goal. This requires agents to have a certain organizational structure that allows tasks to be
effectively transferred among agents. To model the agent organizational structure, we formulate a
graphicalrepresentationknownastheagentgraphG =(V,E). Thisgraphisconstructedbasedon
thesetsofagents,denotedasA={a ,...,a },andtheenvironment,representedasp,
1 n
V ={a ,...,a ,p},n>1. (1)
1 n
3Preprint
Perception Previous plan
Perception Because there’s
some stones in the
Please mine 10 logs. inventory...
P mro og nr ie tos rs Leader Im hinaivneg f 1in0i sshteodn etsh.e task
Worker A LLM
C sta on
n
en so t
in
f i tn hd
e
any
Environment Agent community inventory...
There is no
Previous plan The current stage is mining information ...
Objective some stones.
Long-term plan
(b) Progress monitor
Current task
Progress
monitor Long-term plan Mine 10 logs
Objective 1. Craft planks
Action ... Action Build a 2. Mine stones LLM Craft pickaxe
house
LLM 3. Lay foundation Mine 10 stones
Action Queue
Environment Agent group
(a) Hourglass framework (c) Hierarchical planning
Figure 3: An illustration of hourglass agent architecture. (a) Hourglass agent framework:
Theuppersegment: Processesinputslikeperceptionandthepreviousplan. Theseinputsundergo
aseriesofoperations, convergingtowardsaunifiedandconsistentobjective(thebottleneckofthe
hourglass). The lower segment: Involves the decomposition of an objective through hierarchical
planning. (b)Progressmonitor: UtilizesLLMtoassessthecurrentprogressstatusoftheongoing
task. (c) Hierarchical planning: Comprises two stages: Task planner and action planner. (Full
promptseeAppendixB)
WesubsequentlydefinetheedgesdefinedasE ={(e )},wheredirectededgee =(v ,v )exists
ij ij i j
for v ,v ∈ V, i ̸= j if v actively acts (takes actions on the environment p or issues commands
i j i
tootheragentsV −{v ,p}andpassivelyperceivesfeedbackfromv . Theorganizationalstructure
i j
of agents involves the design of the edge set E among agents. Existing research has primarily
categorizedthesestructuresintothefollowingtwotypes.
Graph of agents The (fully connected) graph of agents (Park et al., 2023) is an organizational
structure where all agents are interconnected, allowing mutual command and feedback (shown in
Figure2(c)),representedas
E ={(v ,v )|v ,v ∈A,i̸=j}. (2)
GoA i j i j
Theoretically, this structure promotes extensive communication and facilitates the flow of tasks
within agent group A, contributing to the emergence of self-organizing properties. How-
ever, interconnected agents (Sec. 4.3) exhibit bidirectional connections among agent pairs, i.e.,
(a ,a ),(a ,a ) ∈ E, forming command cycles that allow for mutual command issuance. These
i j j i
cyclesintroducethepotentialforchaos,characterizedbyunpredictableandconflictingbehaviors.
Chainofagents Toaddresstheissueofcommandcyclesandcapitalizeontheexpertiseofspe-
cializedagents,astraightforwardapproach(Hongetal.,2023)istheChainofagents(CoA)(asin
Figure2(b)),definedasfollows:
E ={(v ,v )|v ∈A}. (3)
CoA i i+1 i
Inthisfixedstructure,instructionalinformationunidirectionallyflowsfromthefirstagenttothelast,
culminatinginthecompletionofthefinalproduct.Forinstance,inataskrequiringstoneexcavation,
thea undertakeslumbering,passingthebatontothea forcraftingawoodenpickaxe,subsequently
1 2
transmittingthetasktoa forstoneexcavation.Whilesuchastructuresuccessfullyavoidscommand
3
cycles, it cannot flexibly adjust workflows, resulting in the potential for self-organization being
compromised.
3.1.2 TREEOFAGENTS
To avoid the command cycles in GoA and maintain the potential for self-organization, we pro-
pose a directed tree of agents (ToA), which introduces a leadership agent as the root node of
4Preprint
x25 x10 x1 x1 x10 x1 x1 x1
x4 x5 x20 x5 x5 x20 x5 x20
x4 x5 x20 x5 x5 x20 x5 x20
x4 x10 x1 x1 x10 x1 x1 x1
Parallel Non-obstructive Parallel Non-obstructive Parallel Non-obstructive
(a) Relay collaboration (b) Round based collaboration (c) Asynchronous collaboration (Ours)
Figure4: Comparisonofcollaborationstrategies. (a)involvesoneagentsequentiallyexecuting
tasks after another, with no parallelization; (b) is round-based, executing round by round, while
(c)isasynchronous. Colored regionsindicatetasksbeingperformed,andwhite regions
denoteagentidleness.
the agent tree, with other agents serving as leaf nodes, as illustrated in Figure 2(d). Let V =
{a ,a ,a ,...,a ,p}, where n > 2, a denotes root agent, and a denotes i-th leaf agent. De-
r l1 l2 ln r l
finetheedgesE as:
n−1
(cid:91)
E =E ∪ E . (4)
ToA root li
i=1
Inthisstructure,therootagenta servesasthecentralcommandauthority,directingtaskstotheleaf
r
agents,E = {(a ,a ) | a ∈ {a ,a ,...,a }}. Leafagentsa interactwiththeenvironmentto
root r i i l1 l2 ln l
execute assigned tasks and do not actively command other agents. Therefore, E is an empty set.
li
Note that, leaf agents can communicate but not command each other. This hierarchical approach
ensuresaclearflowofcommands,avoidingtheissuesassociatedwithcommandcyclesandallowing
forefficienttaskexecution.
Furthermore, upon closer examination, we observed that agents experiencing simultaneous direc-
tivesfrommultiplecounterpartsoftenresultinconflictingandchaoticbehaviors. Consequently,we
mandatethatthein-degreeofeachagentberestrictedtolessthan1,distinguishingitfromthefully
connectedgraphoftheagent.
3.2 HOURGLASSAGENTARCHITECTURE
Intheorganizationalcontext,agentssimultaneouslyperceivemessagesfromtheagentgroupAand
information from the physical environment p. For instance, a leadership agent directs a to mine
l
iron,buta iscurrentlyunderzombieattack. ThedualityofinputsposesachallengeforpureLLM
l
decision-making, making it difficult to generate consistent and reliable behavior. To address this
challenge,weproposethehourglassagentarchitecture(seeFigure3(a)). Thisframeworkfiltersthe
abundant information to distill a singular objective as a bottleneck. Subsequently, it decomposes
thisobjectiveintoalong-termplanandgeneratesanexecutableactionsqueueasoutput.
3.2.1 PERCEPTION: FROMAGENTGROUPANDPHYSICALENVIRONMENT
Theperceptionmoduleintegratesfeedbackfromthephysicalenvironmentanddialoguetranscripts
from the agent group. 1) Physical environment: The physical environment p furnishes a diverse
setofdata,encompassingtheinventory,equipment,andnearby blocks,biome,time,
andhealth and hunger bars,and3D coordinateandmore. Thisdatastructurealigns
with the one utilized in Voyager (Wang et al., 2023a). 2) Agent group: Utilizing language as an
interface for communication within the agent group A, we meticulously record the interactions
initiated by the current agent. Each record includes including time, speaker, respondent,
andmessage.
3.2.2 PROGRESSMONITOR
The progress monitor, utilizing an LLM for evaluation, takes various perceptual information and
the previous plan as input, generating the current task’s completion status (“success”, “fail”, or
“ongoing”) along with its rationale. This evaluation occurs when there are no immediate pending
actions. As shown in Figure 3(b), the presence of stones in the inventory signals the completion
5Preprint
We can build an shelter in following stage:
Stage 1: a2 set a fundation at (x, y, z) using 25 stone.
Stage 2: a3 build 4 wooden wall on the fundation.
Plan: We can build an shelter in following stage:
a1 Stage 3: a2 build a roof and a3 install a door on the wall.
- Stage 1: a2 set a fundation at (x, y, z) using 25 stone.
- Stage 2: a3 build 4 wooden wall on the fundation.
a1 - Stage 3: a2 build a roof and a3 install a door on the wall.
a2 Set fundation a3 Build walls a2 Build roof a3 Install a door
Figurae2 5: CoSlelt efucntdiavtieonshelterac3onstrucBtuiilod nw.allsThe roota2agent (aB1u)ilds yrosotfematicalal3y arranIgnsetsall tah deootrasks
andschedulestheleafagents(a2&a3)forphasedexecution. Morescreenshotscanbereferenced
inFigure11intheAppendix.
Plan: I was asked to mine 50 stones.
- Stage 1: Mine 10 logs.
Plan: We have to mine 100 stones.
- Stage 2: Craft a crafting table
- Stage 1: a2 & a3 mine 50 stones each.
- Stage 3: Craft a pickaxe
a1 - Stage 4: Mine 50 stones a2 & a3
a2 & a3 Mine logs a2 & a3 Craftingtable a2 & a3 Craft pickaxe a2 & a3 Mine stones
Figure6: Collectivecollection(mine100stones). Therootagent(a1)allocatestaskstofacilitate
parallelprocessing,whiletheleafagent(a2&a3)autonomouslyrefinesthesetasksintoactionable
steps. MorescreenshotscanbereferencedinFigure12intheAppendix
oftheminingtask. Therationaleforthisdeterminationisthesufficientquantityofstonesalready
acquired. For collaborative tasks, the assessment results should be based on the communication
withintheagentgroup.
3.2.3 HIERARCHICALPLANNING
AsillustratedinFigure3(c),ahierarchicalplannerinvolvesthetwo-stepdecompositionofahigh-
level objective, which can be broadly divided into two LLM-driven modules: task planner and
actionplanner. 1)Taskplanner: AsshowninFigure3(c),thetaskplanner,followingtheChain-of-
Thought(CoT)principles(Weietal.,2022), employsaLLMforobjectiveanalysisandlong-term
planning. Thephasealsoincludeschoosingtheimmediatetaskforexecution,markedascurrent
task in the mint-colored module of Figure 10 in the Appendix. 2) Action planner: As depicted
in Figure 3(c), the action planner accepts the current task as input and utilizes LLM to produce
a sequence of executable actions, collectively known as an action queue (highlighted in green in
Figure10intheAppendix). Theseactionsarecategorizedintotwotypes: directexecutionaction,
typicallycomprisinganaction,anobject,andanoptionallocation(e.g.,“Craft[quantity][item]at
[position]”),anddelegationaction,wheretasksareassignedtoanotheragent(e.g.,“Instruct[player]
to eliminate [quantity] [mob] at [position]”). Each action follows the approach of Wang et al.
(2023a),referencingthemostsimilarskillinthelibrary,generatingJavaScriptcode,andexecuting
it in the Minecraft environment. Each action in the queue is dequeued and executed sequentially
untilthequeueisempty. Upondepletionofthequeue,theprogressmonitorcollectsallperceptual
informationacquiredduringtheexecutionoftheseactionstoevaluatethetask’scompletionstatus,
asdetailedinSec.3.2.2.
3.3 NON-OBSTRUCTIVECOLLABORATION
Thepreviousapproachescanbecategorizedintotwodistincttypes. Inrelaycollaboration,exempli-
fiedbyChainofagents(Hongetal.,2023)asillustratedinFigure4(a),oneagentinitiatesonlyafter
6Preprint
thecompletionofanother,resultinginasequentialprogression. Thisapproachtypicallyleadstoa
sequentialandfullyinterdependenttaskexecutionamongagents. Relaycollaboration(Chenetal.,
2023a),depictedinFigure4(b),involvesthesimultaneousoperationofallagents. Subsequently,it
aggregatestheoutcomesofallagentsaftereachroundtoinformtaskallocationforthesubsequent
round. Specifically, outside the individual agents, there is an outer for-loop that controls the
round. While this method introduces parallelism, it still introduces a bottleneck by impeding the
slowestagentineachround,therebyconstrainingoverallefficiency.
To address these limitations, we propose a non-obstructive asynchronous collaboration paradigm
(illustratedinFigure4(c)),whereeachagentoperatesindependently.Oncetheycompletetheirtasks,
theydirectlyreporttotherootagenttoreceiveinstructionsforthenextsteps. Technically,wemodel
eachagentasanindependentasynchronousprocessthatsharesamessagepoolforcommunication.
4 EXPERIMENTS
4.1 EXPERIMENTALSETUP
Weevaluateourself-organizingagentsontheircollectivecollectionperformance(inFigure6)and
collectiveshelterconstructioncapability(inFigure5).
Collective collection: Agents in the group must gather a specified amount of basic resources like
wood, stone, and iron. They start without equipment and inherit the pre-trained skill library from
Voyager(Wangetal.,2023a).Incontrasttocompletingtheexplorationofasingleitem(Wangetal.,
2023a;b;Zhuetal.,2023),whichentailsgatheringadiversebutlimitedquantityofitems,thisform
ofexploratorytaskcanbeautonomouslyexecutedbyasingleagent. Thedifficultyescalateswhen
amassing a substantial quantity of resources, requiring agents to navigate numerous open-ended
worldevents. Theconsiderableworkloademphasizesthepreferenceforadivisionoflabor.
Collectiveshelterconstruction: Forabasicshelter,agentsneedastonefoundation,woodenwalls,
and a stone ceiling. Two agents start with wooden planks, one with stone. This task assesses the
leadershipagent’staskassignment andchallengestheconsiderationoftaskdependencies. Effec-
tiveprogressmanagement, anunexploredaspectinpriorresearch, iscrucialforsuccessful, staged
construction.
Metrics Weutilizethesubsequentmetrics: Timecost(TC):thetimeresourcesneededtoexecute
atask. Reducedtimeexpendituresuggestsgreatersystemefficiency. NaNdenotesnoprogressfor
over40minuteswhenattemptsexceed5withoutsuccess. Meanprompttimes(mPT):theaverage
timesofhierarchicalplanningiterationsofeachagent.
Implementdetails Forlargelanguagemodels,weleverageOpenAI’sgpt-4(OpenAI,2023b)for
planningofrootagentandtaskevaluation.Additionally,weutilizethegpt-3.5-turbo-16kAPIs(Ope-
nAI, 2023a) in all other settings. For text embedding, we leverage the capabilities of the text-
embedding-ada-002 API. We configure all temperatures to 0, providing the best-fitted outcomes,
and use temperature = 0.9 to encourage chatting among agents. Following Voyager (Wang et al.,
2023a), oursimulationenvironmentisconstructedontheMineDojoframework(Fanetal.,2022),
and we make use of the Mineflayer JavaScript APIs (PrismarineJS, 2013) for motor controls. We
initializeallagentsusingtheskilllibrarypre-trainedbyVoyager(Wangetal.,2023a).
4.2 EVALUATIONRESULTS
Impactoforganizationalstructure Tocomprehendtheinfluenceofdistinctorganizationalstruc-
turesonefficiency,weconducted“mine50logs”tasks,evaluatingtheirmeanprompttimesandtime
costs. AccordingtoFigure7(a),thetreeofagents(ToA)outperformsthechainofagents(CoA)and
graphofagents(GoA),requiringonly7.5minutesand3.8mPT.
Multi-agent organization vs. Solo agent To comprehend the disparity in outcomes between a
multi-agent organization and a solo agent, we conducted experiments on four distinct difficulty
levels of collection tasks (mining 50 logs / 100 logs / 50 iron / 100 iron). We measured the time
costsassociatedwitheachtask.
7Preprint
TC / min NaN NaN Mine 50 logs Solo agent NaN NaN
mPT / count Mine 50 stones ToA (3)
29.0
Mine 50 irons
24.3
4.0 3.8 15.3 18.3 15.3
9.3 3.0 7.5 10.2 6.5 7.1 6.9 5.17.5 10.2 5.1 11.1
CoA GoA ToA (3) Solo agent ToA (1) ToA (3) 50 logs100 logs 50 irons100 irons
(a) Organizational structure (b) Scale of agent organization (c) Scale of task
Figure7: Collaborativecollection: (a)Efficiencyofthreeagentsmining50stonesunderdifferent
organizational structures; CoA and GoA each consist of 3 agents, where ToA(n) represents an
agentorganizationwithonerootandnleaves.DuetothepresenceofcommandcycleissuesinGoA,
theplanningmodule,whichutilizedgpt-3.5-turbo-16k,wasupgradedtogpt-4forexperimentation.
(b) Time cost (/min) of 1, 2, and 3 agents on various tasks, NaN denotes no progress for over
40 minutes. (c) Efficiency comparison (time cost/min) between multi-agent and solo agent across
differenttaskdifficulties.
1)Parallelizationtosavetime: InFigure7(a),CoAinvolvesoneagentsequentiallyexecuting1/3
collection tasks after another, with no parallelization. GoA avoids command cycle issues due to
the upgrade to the more powerful gpt-4. ToA achieves the shortest completion time for identical
tasks. As shown in Figure 7(c), for simpler tasks like mining 50/100 logs, employing multiple
agents significantly reduces the time by 5.1 and 7.2 minutes, respectively. Comparing the Solo
agentwithToA(1)inFigure7(b)revealsthatmerelyaddingaleadershipagent(ToA(1))forone-on-
one guidance does not bring a significant improvement. However, increasing the number to three
leafagents(ToA(3))hasachanceofenhancingefficiency.
2)Mutualredundancyenhancesrobustness: Formorechallengingtasks,soloagentattemptswere
largely ineffective (indicated as NaN in Figure 7(c)). A solo agent faces heightened probabilities
of encountering various unforeseen challenges in an open-world setting, such as getting lost, ob-
structionsbysurroundingblocks,prolongedexecutiontimes,gameenvironmentexits,ordifficulty
findingiron. IntheToAsystem,despiteallleafagentsmakingconcertedefforts,oncealeafagent
successfullyminesiron, therootagentefficientlydelegatestheentiretasktothatagent, persisting
untilsuccess.
4.3 AGENTBEHAVIORSWITHINORGANIZATION
4.3.1 HUMAN-LIKELEADERSHIPBEHAVIORS
Achievinggoalsthroughmanagementmeans: Inorganizationalmanagement, leadersadoptinga
non-hands-onapproachtolarge-scaletasksisarationalconsiderationbasedontheeffectiveallo-
cationofhumanresourcesandstrategicmanagementpractices. Thisphenomenonisalsoobserved
inagentorganizations. AsillustratedinFigure8(a),therootagent,functioningastheleaderofthe
organization, istaskednotonlywithsolvingindividualissuesbutwithequitablydecomposingthe
workload. Thispropertyisachievedbyinstructingthetaskplanningpromptofleadershipagentto
assigntaskstoleafagentsratherthanitself. Theactionplannergeneratescommunicationtasksto
notifythecorrespondingagents. RefertoAppendixBforthecompletepromptdetails.
Projectoversightandguidance: AsdepictedinFigure8(b),weobservedthatwhentherootagent
learnedoftheleafagentstrugglingtocopewithaproblem,theleaderswiftlyimplementedapracti-
calsolution. Startingfromfoundationaltasks,theleadersystematicallyguidedtheteamtowardthe
goal,showcasingthepotentialoftheLLMagentasagenuineleader.
Aligningpersonnelwithpositions: “Aligningpersonnelwithpositions”referstoaligningsuitable
personnel with corresponding positions, a fundamental principle in human society where leaders
engageinhumanresourcesmanagement. Inthecontextofanagentorganization,asdepictedinFig-
ure8(c),weobserveaproactiveleadershipagent(rootagenta )leveraginganuancedunderstanding
r
ofpastexperiencesandskillsofteammemberstostrategicallyallocatetasks.
8Preprint
x10 x10 x10
x30
Task Leaf agent 1 Leaf agent 2 Leaf agent 3
Root agent
(a) Achieving goals through management means
Leaf agent 1
needs to make a
FAIL x10 wooden pickaxe x1 x10
? first.
Leaf agent 1 Leaf agent 1
Root agent
(b) Project oversight and guidance
Let Leaf agent 1
redo the work
x10 FAIL x10 that Leaf agent x10
2 failed to do.
Leaf agent 1 Leaf agent 2 Leaf agent 1
Root agent
(c) Aligning personnel with positions
Figure8: Human-likeleadershipbehaviorsinself-organizingagentgroup.
4.3.2 BEHAVINGLIKEHUMANEMPLOYEES
Duringcollaborativeprocessesinagentorganization,we’veobservedleafagentsdisplayingbehav-
iorsthatmimichumanemployees.
Followinginstructionsandexecution: Inthehumanworkplace,proactivelyfollowingtheinstruc-
tionsofaleaderandpossessingexcellentexecutioncapabilitiesensuretheachievementoforganiza-
tionalobjectives.WithinaGoA,asdepictedinFigure9(a),whenleafagenta receivesinstructions
l1
to craft a wooden pickaxe, he delegates the task to leaf agent a . Subsequently, leaf agent a
l2 l2
replicates this behavior, resulting in a loop of delegation, leading to inaction and production halt.
Incontrast, asshowninFigure9(b), inaToA,whenleafagenta isassignedthetaskofcrafting
l1
awoodenpickaxe,hepromptlybeginsthetaskhimself,followingthedirectiveofleadershipagent
withoutfurtherdelegation.
Progressupdatestotheleader: Therootagentneedstomodeltheexecutionprogressontime,and
correspondingly,leafagentsarerequiredtoreporttheprogressoftaskexecutiontotheRootagent.
As illustrated in Figure 9(c,d), a leaf agent reports at the commencement of a task and provides
updatesuponitscompletion,indicatingsuccessorfailure. Incaseoftaskfailure,theleafagentalso
elucidatesthereasonsandcurrentstateoftheirinventory.
5 CONCLUSION
In conclusion, this study has introduced self-organizing agents (S-Agents), a type of embodied
agentgroupcapableofautonomouslyorchestratingworkflowswithoutmanualhumandesign. The
S-Agents includes a tree-like organizational structure, an hourglass agent architecture, and a non-
obstructive collaboration paradigm. Our experiments in the Minecraft environment have under-
scoreditsexceptionalperformance,showcasingsuperiorcapabilitiesacrossvarioustasksincompar-
isontoindividualagentsandalternativeorganizationalapproaches. Importantly,wehaveobserved
anthropomorphicsocialbehaviorsintheorganizationaldynamicsamongtheagents. Withthepro-
gression of artificial general intelligence, obtaining a deeper understanding of the organizational
dynamicsofscalablemulti-agentsystemsbecomesincreasinglycrucial.S-Agentshavecommenced
9Preprint
Agent 3 Root agent
Agent 1, please craft wooden pickaxes. Agent 1, please craft wooden pickaxes.
Agent 1 Leaf agent 1
Agent 2, please craft wooden Agent 2, please craft wooden
pickaxes. pickaxes.
Agent 2 Leaf agent 1
Agent 1, please craft wooden pickaxes. [Action] mining oka logs
(a) Cyclic command in GoA (b) Following instructions and execution
Root agent Root agent
Agent 1, please craft a stone pickaxe. Agent 1, please craft a stone pickaxe.
Leaf agent 1 Leaf agent 1
Sure! I’ll start the task by mining 10 Sure! I’ll start crafting a stone pickaxe.
logs.
Leaf agent 1
Leaf agent 1
[Action] crafting a stone pickaxe
[Action] mining oka logs
Leaf agent 1
Leaf agent 1
Hey Leader! Hey Leader! I have failed
Hey Leader! I have successfully the task crafting a stone pickaxe,
completed the task mining 10 logs. Is because I failed placing a crafting
there anything else you want me to do? table.
(c) Progress updates (successful) (d) Progress updates (failed)
Figure9: Agentbehaviorsthatmimichumanemployees.
preliminaryexplorations inthis field, and weforesee theirpotential adaptabilityand enhancement
acrossawiderrangeofembodiedtasksinthefuture.
6 ACKNOWLEDGMENT
WewouldliketoextendourgratitudetoChakTouLeongfromPolyU,GuanxingLufromTsinghua
University,andHongruiLianfromWuhanUniversity,WilliamYichengZhufromGoogle,andSirui
Hong from DeepWisdom, for their invaluable discussions, feedback, support, and assistance with
thecode.
REFERENCES
Elif Akata, Lion Schulz, Julian Coda-Forno, Seong Joon Oh, Matthias Bethge, and Eric Schulz.
Playingrepeatedgameswithlargelanguagemodels. arXivpreprint,2023. 2
Bowen Baker, Ilge Akkaya, Peter Zhokov, Joost Huizinga, Jie Tang, Adrien Ecoffet, Brandon
Houghton,RaulSampedro,andJeffClune. Videopretraining(vpt): Learningtoactbywatching
unlabeledonlinevideos. NeurIPS,2022. 3
AnthonyBrohan,NoahBrown,JusticeCarbajal,YevgenChebotar,XiChen,KrzysztofChoroman-
ski,TianliDing,DannyDriess,AvinavaDubey,ChelseaFinn,etal.Rt-2:Vision-language-action
modelstransferwebknowledgetoroboticcontrol. arXivpreprint,2023. 2
TianleCai,XuezhiWang,TengyuMa,XinyunChen,andDennyZhou. Largelanguagemodelsas
toolmakers. arXivpreprint,2023. 2
Weize Chen, Yusheng Su, Jingwei Zuo, Cheng Yang, Chenfei Yuan, Chen Qian, Chi-Min Chan,
Yujia Qin, Yaxi Lu, Ruobing Xie, et al. Agentverse: Facilitating multi-agent collaboration and
exploringemergentbehaviorsinagents. arXivpreprint,2023a. 7
10Preprint
XinyunChen,MaxwellLin,NathanaelScha¨rli,andDennyZhou. Teachinglargelanguagemodels
toself-debug. arXivpreprint,2023b. 2
Yongchao Chen, Jacob Arkin, Yang Zhang, Nicholas Roy, and Chuchu Fan. Scalable multi-robot
collaborationwithlargelanguagemodels: Centralizedordecentralizedsystems? arXivpreprint,
2023c. 2
Hyung Won Chung, Le Hou, Shayne Longpre, Barret Zoph, Yi Tay, William Fedus, Yunxuan Li,
Xuezhi Wang, Mostafa Dehghani, Siddhartha Brahma, et al. Scaling instruction-finetuned lan-
guagemodels. arXivpreprint,2022. 2
YihongDong,XueJiang,ZhiJin,andGeLi. Self-collaborationcodegenerationviachatgpt. arXiv
preprint,2023. 2
LinxiFan,GuanzhiWang,YunfanJiang,AjayMandlekar,YuncongYang,HaoyiZhu,AndrewTang,
De-AnHuang, YukeZhu, andAnimaAnandkumar. Minedojo: Buildingopen-endedembodied
agentswithinternet-scaleknowledge. NeurIPS,2022. 2,3,7
ErnstFehrandSimonGa¨chter.Cooperationandpunishmentinpublicgoodsexperiments.American
EconomicReview,2000. 2
Masahiro Fujita. Intelligence dynamics: a concept and preliminary experiments for open-ended
learningagents. AutonomousAgentsandMulti-AgentSystems,2009. 2
Jonathan Gray, Kavya Srinet, Yacine Jernite, Haonan Yu, Zhuoyuan Chen, Demi Guo, Siddharth
Goyal, C Lawrence Zitnick, and Arthur Szlam. Craftassist: A framework for dialogue-enabled
interactiveagents. arXivpreprint,2019. 3
DavideGrossi,FrankDignum,VirginiaDignum,MehdiDastani,andLambe`rRoyakkers.Structural
evaluationofagentorganizations. InIJCAI,2006. 2
William H Guss, Brandon Houghton, Nicholay Topin, Phillip Wang, Cayden Codel, Manuela
Veloso, and Ruslan Salakhutdinov. Minerl: A large-scale dataset of minecraft demonstrations.
arXivpreprint,2019. 3
William H Guss, Mario Ynocente Castro, Sam Devlin, Brandon Houghton, Noboru Sean Kuno,
CrissmanLoomis, StephanieMilani, SharadaMohanty, KeisukeNakata, RuslanSalakhutdinov,
etal.Theminerl2020competitiononsampleefficientreinforcementlearningusinghumanpriors.
arXivpreprint,2021. 3
Danijar Hafner, Jurgis Pasukonis, Jimmy Ba, and Timothy Lillicrap. Mastering diverse domains
throughworldmodels. arXivpreprint,2023. 3
Sirui Hong, Xiawu Zheng, Jonathan Chen, Yuheng Cheng, Ceyao Zhang, Zili Wang, Steven
Ka Shing Yau, Zijuan Lin, Liyang Zhou, Chenyu Ran, et al. Metagpt: Meta programming for
multi-agentcollaborativeframework. arXivpreprint,2023. 2,3,4,6
Andreas Schmidt Jensen, Virginia Dignum, and Jørgen Villadsen. A framework for organization-
awareagents. AutonomousAgentsandMulti-AgentSystems,2017. 2
Ge-PengJi,MingchenZhuge,DehongGao,Deng-PingFan,ChristosSakaridis,andLucVanGool.
Maskedvision-languagetransformerinfashion. MachineIntelligenceResearch,2023. 2
MatthewJohnson,KatjaHofmann,TimHutton,andDavidBignell. Themalmoplatformforartifi-
cialintelligenceexperimentation. InIJCAI,2016. 3
Anssi Kanervisto, Stephanie Milani, Karolis Ramanauskas, Nicholay Topin, Zichuan Lin, Junyou
Li, Jianing Shi, Deheng Ye, Qiang Fu, Wei Yang, et al. Minerl diamond 2021 competition:
Overview,results,andlessonslearned. NeurIPS2021CompetitionsandDemonstrationsTrack,
2022. 3
IngmarKanitscheider,JoostHuizinga,DavidFarhi,WilliamHebgenGuss,BrandonHoughton,Raul
Sampedro,PeterZhokhov,BowenBaker,AdrienEcoffet,JieTang,etal. Multi-taskcurriculum
learninginacomplex,visual,hard-explorationdomain: Minecraft. arXivpreprint,2021. 3
11Preprint
EnkelejdaKasneci,KathrinSeßler,StefanKu¨chemann,MariaBannert,DarynaDementieva,Frank
Fischer, Urs Gasser, Georg Groh, Stephan Gu¨nnemann, Eyke Hu¨llermeier, et al. Chatgpt for
good? on opportunities and challenges of large language models for education. Learning and
individualdifferences,2023. 2
JuliaKiseleva,ZimingLi,MohammadAliannejadi,ShresthaMohanty,MaartjeterHoeve,Mikhail
Burtsev, Alexey Skrynnik, Artem Zholus, Aleksandr Panov, Kavya Srinet, et al. Interactive
grounded language understanding in a collaborative environment: Iglu 2021. In NeurIPS 2021
CompetitionsandDemonstrationsTrack,2022a. 3
Julia Kiseleva, Alexey Skrynnik, Artem Zholus, Shrestha Mohanty, Negar Arabzadeh, Marc-
AlexandreCoˆte´, MohammadAliannejadi, MilagroTeruel, ZimingLi, MikhailBurtsev, Maartje
ter Hoeve, Zoya Volovikova, Aleksandr Panov, Yuxuan Sun, Kavya Srinet, Arthur Szlam, and
Ahmed Awadallah. Iglu 2022: Interactive grounded language understanding in a collaborative
environmentatneurips2022,2022b. 3
GuohaoLi,HasanAbedAlKaderHammoud,HaniItani,DmitriiKhizbullin,andBernardGhanem.
Camel: Communicative agents for” mind” exploration of large scale language model society.
arXivpreprint,2023. 2
Zichuan Lin, Junyou Li, Jianing Shi, Deheng Ye, Qiang Fu, and Wei Yang. Juewu-mc: Playing
minecraftwithsample-efficienthierarchicalreinforcementlearning. arXivpreprint,2021. 3
Guanxing Lu, Ziwei Wang, Changliu Liu, Jiwen Lu, and Yansong Tang. Thinkbot: Embodied
instructionfollowingwiththoughtchainreasoning. arXivpreprint,2023. 2
ZhaoMandi,ShreeyaJain,andShuranSong. Roco: Dialecticmulti-robotcollaborationwithlarge
languagemodels. arXivpreprint,2023. 2
HangyuMao,ChaoWang,XiaotianHao,YihuanMao,YimingLu,ChengjieWu,JianyeHao,Dong
Li,andPingzhongTang. Seihai: Asample-efficienthierarchicalaifortheminerlcompetition. In
DAI,2022. 3
ShresthaMohanty,NegarArabzadeh,MilagroTeruel,YuxuanSun,ArtemZholus,AlexeySkrynnik,
MikhailBurtsev,KavyaSrinet,AleksandrPanov,ArthurSzlam,etal.Collectinginteractivemulti-
modaldatasetsforgroundedlanguageunderstanding. arXivpreprint,2022. 3
Shrestha Mohanty, Negar Arabzadeh, Julia Kiseleva, Artem Zholus, Milagro Teruel, Ahmed
Awadallah, Yuxuan Sun, Kavya Srinet, and Arthur Szlam. Transforming human-centered ai
collaboration: Redefining embodied agents capabilities through interactive grounded language
instructions. arXivpreprint,2023. 3
OpenAI. Introducingchatgpt,2023a. 7
OpenAI. Gpt-4technicalreport,2023b. 2,7
LongOuyang,JeffreyWu,XuJiang,DiogoAlmeida,CarrollWainwright,PamelaMishkin,Chong
Zhang,SandhiniAgarwal,KatarinaSlama,AlexRay,etal. Traininglanguagemodelstofollow
instructionswithhumanfeedback. NeurIPS,2022. 2
AishwaryaPadmakumar,MertInan,SpandanaGella,PatrickLLange,andDilekHakkani-Tur.Mul-
timodalembodiedplanpredictionaugmentedwithsyntheticembodieddialogue. InConference
onEmpiricalMethodsinNaturalLanguageProcessing,2023. 2
Joon Sung Park, Joseph C. O’Brien, Carrie J. Cai, Meredith Ringel Morris, Percy Liang, and
Michael S. Bernstein. Generative agents: Interactive simulacra of human behavior, 2023. 2,
3,4
Diego Perez-Liebana, Katja Hofmann, Sharada Prasanna Mohanty, Noburu Kuno, Andre Kramer,
Sam Devlin, Raluca D Gaina, and Daniel Ionita. The multi-agent reinforcement learning in
malm\”o(marl\”o)competition. arXivpreprint,2019. 3
PrismarineJS. Prismarinejs.prismarinejs/mineflayer: Createminecraftbotswithapowerful,stable,
andhighleveljavascriptapi,2013. 7
12Preprint
Chen Qian, Xin Cong, Cheng Yang, Weize Chen, Yusheng Su, Juyuan Xu, Zhiyuan Liu, and
MaosongSun. Communicativeagentsforsoftwaredevelopment. arXivpreprint,2023. 2,3
NoahShinn, BeckLabash, andAshwinGopinath. Reflexion: anautonomousagentwithdynamic
memoryandself-reflection. arXivpreprint,2023. 2
AlexeySkrynnik,AlekseyStaroverov,ErmekAitygulov,KirillAksenov,VasiliiDavydov,andAlek-
sandrIPanov. Hierarchicaldeepq-networkfromimperfectdemonstrationsinminecraft. Cogni-
tiveSystemsResearch,2021. 3
XiangruTang,AnniZou,ZhuoshengZhang,YilunZhao,XingyaoZhang,ArmanCohan,andMark
Gerstein. Medagents: Large language models as collaborators for zero-shot medical reasoning.
arXivpreprint,2023. 2
Hugo Touvron, Thibaut Lavril, Gautier Izacard, Xavier Martinet, Marie-Anne Lachaux, Timothe´e
Lacroix, Baptiste Rozie`re, Naman Goyal, Eric Hambro, Faisal Azhar, et al. Llama: Open and
efficientfoundationlanguagemodels. arXivpreprint,2023. 2
Guanzhi Wang, Yuqi Xie, Yunfan Jiang, Ajay Mandlekar, Chaowei Xiao, Yuke Zhu, Linxi Fan,
andAnimaAnandkumar. Voyager: Anopen-endedembodiedagentwithlargelanguagemodels.
arXivpreprint,2023a. 3,5,6,7
Zihao Wang, Shaofei Cai, Anji Liu, Yonggang Jin, Jinbing Hou, Bowei Zhang, Haowei Lin,
Zhaofeng He, Zilong Zheng, Yaodong Yang, Xiaojian Ma, and Yitao Liang. Jarvis-1: Open-
worldmulti-taskagentswithmemory-augmentedmultimodallanguagemodels. arXivpreprint,
2023b. 7
Zihao Wang, Shaofei Cai, Anji Liu, Xiaojian Ma, and Yitao Liang. Describe, explain, plan and
select: Interactive planning with large language models enables open-world multi-task agents.
arXivpreprint,2023c. 3
JasonWei,XuezhiWang,DaleSchuurmans,MaartenBosma,FeiXia,EdChi,QuocVLe,Denny
Zhou, et al. Chain-of-thought prompting elicits reasoning in large language models. NeurIPS,
2022. 6
David Weinbaum and Viktoras Veitas. Open ended intelligence: the individuation of intelligent
agents. JournalofExperimental&TheoreticalArtificialIntelligence,2017. 2
AnitaWilliamsWoolley,ChristopherFChabris,AlexPentland,NadaHashmi,andThomasWMal-
one. Evidenceforacollectiveintelligencefactorintheperformanceofhumangroups. science,
2010. 2
Qingyun Wu, Gagan Bansal, Jieyu Zhang, Yiran Wu, Shaokun Zhang, Erkang Zhu, Beibin Li,
LiJiang,XiaoyunZhang,andChiWang. Autogen:Enablingnext-genllmapplicationsviamulti-
agentconversationframework. arXivpreprint,2023. 2,3
Jiannan Xiang, Tianhua Tao, Yi Gu, Tianmin Shu, Zirui Wang, Zichao Yang, and Zhiting Hu.
Language models meet world models: Embodied experiences enhance language models. arXiv
preprint,2023. 2
Shunyu Yao, Dian Yu, Jeffrey Zhao, Izhak Shafran, Thomas L Griffiths, Yuan Cao, and Karthik
Narasimhan. Tree of thoughts: Deliberate problem solving with large language models. arXiv
preprint,2023. 2
Andy Zeng, Maria Attarian, Brian Ichter, Krzysztof Choromanski, Adrian Wong, Stefan Welker,
FedericoTombari,AveekPurohit,MichaelRyoo,VikasSindhwani,etal. Socraticmodels: Com-
posingzero-shotmultimodalreasoningwithlanguage. arXivpreprint,2022. 2
HongxinZhang,WeihuaDu,JiamingShan,QinhongZhou,YilunDu,JoshuaBTenenbaum,Tian-
minShu,andChuangGan. Buildingcooperativeembodiedagentsmodularlywithlargelanguage
models. arXivpreprint,2023. 2
13Preprint
XizhouZhu, YuntaoChen, HaoTian, ChenxinTao, WeijieSu, ChenyuYang, GaoHuang, BinLi,
LeweiLu,XiaogangWang,etal.Ghostintheminecraft:Generallycapableagentsforopen-world
enviromentsvialargelanguagemodelswithtext-basedknowledgeandmemory. arXivpreprint,
2023. 3,7
Mingchen Zhuge, Haozhe Liu, Francesco Faccio, Dylan R Ashley, Ro´bert Csorda´s, Anand
Gopalakrishnan,AbdullahHamdi,HasanAbedAlKaderHammoud,VincentHerrmann,Kazuki
Irie,etal. Mindstormsinnaturallanguage-basedsocietiesofmind. arXivpreprint,2023. 2
14Preprint
A EXAMPLE
A.1 EXAMPLEOFPLANNINGPROCESS
Figure10demonstratestheplanningprocessofboththerootagentandleafagentsinthe“builda
house”task.
Leaf agent 1
Please build a 5x5 house begin at
Objective
(-10,72,-30), it is a nice place for
building. Human Synthesize 48 planks from 12 logs
Analyze goal
Root agent
The leader has asked me to synthesize 48 planks from 12
logs. Considering the current inventory status, workerA
Objective
already has 50 oak logs, which is more than enough to
synthesize 48 planks.
Build a a 5x5 house begin at (-10,72,-30)
Long term plan
Analyze goal
Stage 1: Worker A synthesizes planks
Based on the conversation, we need to build a 5x5 house •WorkerA synthesizes 48 planks from 12 logs.
at (-10,71,-30). The house requires a foundation, walls, a
roof, and a door. The foundation requires 25 stones, the
walls require 48 planks (which can be synthesized from 12 �
logs), and the roof requires 29 stones. WorkerA has Task at hand
enough logs to synthesize the planks for the walls and has
2 oak doors. WorkerB has enough stones for the •WorkerA synthesizes 48 planks from 12 logs.
foundation and the roof.
Action: Craft 48 planks (from 12 logs)
Long term plan
Stage 1: WorkerA synthesizes planks and WorkerB builds Leaf agent 2
the foundation
•WorkerA synthesizes 48 planks from 12 logs.
•WorkerB builds the foundation with 25 stones at (- Objective
10,71,-30).
Build the foundation at (-10,71,-30) (use 25 stones)
Stage 2: WorkerA builds the walls and WorkerB starts
building the roof
•WorkerA builds the walls with 48 planks at (-10,71,-30). Analyze goal
•WorkerB starts building the roof with 14 stones at (-
10,71,-30). The leader has asked workerB to build a foundation at the
coordinates (-10,71,-30) using 25 stones. Considering the
Stage 3: WorkerB finishes building the roof and WorkerA inventory status, workerB already has 60 stones, which is
installs the door more than enough to complete the task. Therefore, there
•WorkerB finishes building the roof with 15 stones at (- is no need to mine for more stones.
10,71,-30).
•WorkerA installs the 2 oak doors at (-10,71,-30).
Long term plan
�
Task at hand Stage 1: WorkerB builds the foundation
Stage 1: WorkerA synthesizes planks and WorkerB builds •WorkerB uses 25 stones to build the foundation at (-
the foundation 10,71,-30).
•WorkerA synthesizes 48 planks from 12 logs.
•WorkerB builds the foundation with 25 stones at (-10, Task at hand �
71, -30).
•WorkerB uses 25 stones to build the foundation at (-
10,71,-30).
Action
•inform workerA to synthesize 48 planks from 12 logs
•inform workerB to build the foundation at (-10,71,-30) Action: Build foundation at (-10,71,-30)
(use 25 stones)
Figure10: Theillustrationofanexampleprocessofcollaborativehousebuilding. Fullprompts
arepresentedinAppendixB.
A.2 EXAMPLEOFEXECUTIONPROCESS
Figure11andFigure12illustratethecollaborativeprocessesofbuildingahouseandcollectingiron,
respectively.
15Preprint
Buildfoundation———————-Buildwalls————————-Buildroof
Figure11:Theprocedureofbuildingahouse.Therootagentcommandswhilethetwoleafagents
collaboratetocompletetheconstruction.
———Minelogs———————–Craftcraftingtable—————Craftwoodenpickaxe
Minestones——————–Craftstonepickaxe———————-Mineiron
Figure12:Theprocedureofminingiron.Astheexecutionprocessesofthetwoagentsaresimilar,
onlyoneofthemispresentedhere.
B FULL PROMPT DESIGN
Thedisplayedpromptshavebeencorrectedforminorgrammarerrors.
B.1 PROGRESSMONITOR
B.1.1 COMPONENTSINTHEPROMPT
TheinputprompttoLLMconsistsofseveralcomponents:
(1) Tasktobeinquired,proposedbythetaskplanner.
(2) Recent conversation, conversation since last task planning. Leaf agents report their task
progress and current inventory status during conversations, allowing for the inference of
taskcompletionfromthedialogue.
(3) Chestinformation. Inrareinstances,leafagentsmightplacetheresultsoftheiractionsin
nearbychests,necessitatingtheintegrationofchestinformationforaccuratetaskcomple-
tionassessment. Inmostcases,thisfieldisleftempty.
B.1.2 FULLPROMPT
Templateofprogressmonitor
1 You’re a judge of progress in Minecraft, and you’re adept at judging whether or not [Task to be
(cid:44)→ inquired] is complete based on the [Conversation] and [chest information] so far.
2
3 Your task is to perform the following actions to help me play Minecraft:
4 I’ll give you [Task to be inquired], [Conversation] with another player, and the [Chest
(cid:44)→ information] nearby.
5 First, please give a [Task result judgment] about the current progress of [Task to be inquired].
6 You should give your judgment right on the spot, not beat around the bush!
16Preprint
7 Then, determine the [Final task status] (’success’ or ’fail’ or ’unknown’), based on the progress
(cid:44)→ analysis.
8
9 You must follow the following criteria:
10 1. Please focus only on [Conversation] or [Chest information] related to the [Task to be inquired
(cid:44)→ ], other information is not included in the analysis.
11 2. As long as one of the [Conversation] and [Chest information] contains valid information about [
(cid:44)→ Task to be inquired], it is sufficient for [Progress analysis] and [Final task status].
12 3. Recieve the response of ’I will start task: xxx’ in [Conversation] means that the task has
(cid:44)→ started, [Final task status] should be unknown.
13 4. No response or only get ’Got it!’, means that the task didn’t start, [Final task status] should
(cid:44)→ be unknown.
14 5. Recieve the response of ’I have succeeded in the task: xxx’ in [Conversation] means that the
(cid:44)→ task has finished, [Final task status] should be a success.
15 6. Recieve the response of ’I have failed the task: xxx’ in [Conversation] means that the task has
(cid:44)→ failed, [Final task status] should fail.
16 5. The [Final task status] should be one of status in ’success’ or ’fail’ or ’unknown’
17 ’unknown’ means there is no information about the success or failure in progress analysis,
18 ’success’ means the task is finally completed,
19 ’fail’ means the task is finally failed.
20
21 The response format should be:
22 Task result judgment: <Your output [Task result judgment] should be like, "According to [the key
(cid:44)→ sentence] from [Conversation or Chest information], [Task to be inquired] has succeeded/
(cid:44)→ failed." Or "[information summary], but it does not provide any information about the
(cid:44)→ result of the task, so the task status is unknown.">
23 Final task status: <Only one of the words in success or fail or unknown>
Monitorprogress:exampleofrootagent
1 Example:
2 Input: (If you are the leader)
3 The current task to be inquired:‘‘‘Stage 1: Gather resources
4 WorkerA mine 27 stones.‘‘‘
5 The conversation between worker and leader
6 -[15:03:10]leader says: ’WorkerA, please mine 27 stones’
7 -[15:03:20] WorkerA says: ’Got it!’
8 Task result judgment: Leader informs workers to mine 27 logs, workers receive it, but don’t hear
(cid:44)→ the message that WorkerA has succeeded, so the task status is unknown
9 Final task status: unknown
Progressmonitor:exampleofleafagent
1 Example:
2
3 Input:
4 The current task to be inquired: Craft a wooden pickaxe
5 Conversation: {’linnea3v3’: ["[19:35:09]workera says: ’I’ll start the task Craft a wooden pickaxe
(cid:44)→ now’", "[19:36:11]workera says: ’I have succeeded the task Craft a wooden pickaxe.’",
(cid:44)→ "[19:36:11]workera says: ’The critique is Successfully crafted a wooden pickaxe.’",
(cid:44)→ "[19:36:11]workera says: ’my inventory is {’acacia_log’: 11}, and my equipment is [None,
(cid:44)→ None, None, None, None, None] ’"]}
6 Supplies in the chest: none
7 Output:
8 Task result judgment: According to the conversation, workers’ inventory is {’acacia_log’: 11}, and
(cid:44)→ my equipment is none, so workera has failed the task Craft a wooden pickaxe.
9 Final task status: failed
10
11 Input:
12 The current task to be inquired: WorkerA mine 15 more irons. WorkerA mine 10 logs
13 {’linnea3v3’: ["[13:49:58]workera says: ’I have failed the task mine 15 irons.’", "[13:51:55]
(cid:44)→ workera says: ’I have succeeded the task mine 10 logs.’", "[13:51:55]workera says: ’my
(cid:44)→ inventory is {’crafting_table’: 1, ’oak_planks’: 8, ’stick’: 8, ’oak_log’: 5, ’birch_log
(cid:44)→ ’: 5}, and my equipment is [None, None, None, None, ’crafting_table’, None] ’"]}
14 Output:
15 Task result judgment: According to the inventory, workera has succeeded in the task mine 10 logs,
(cid:44)→ but has failed the task mine 15 irons. Therefore, he failed.
16 Final task status: failed
B.2 TASKPLANNER
B.2.1 COMPONENTSINTHEPROMPT
TheinputprompttoLLMconsistsofseveralcomponents:
17Preprint
(1) Recent conversations. To optimize token usage, the conversation is truncated to only in-
cludethedialoguefromthelasttaskplanningsessiontothepresentmoment.
(2) Objectiveproposedbytheprevioustaskplanner.
(3) Long-termplanbrokendownbyobjectives,alsoproposedbytheprevioustaskplanner.
(4) Thestatusofthecurrenttask. Thecompletionofthecurrenttask,proposedbytheprogress
monitor.
B.2.2 FULLPROMPT
Taskplannerofrootagent
1 You are a Minecraft planner, your name is {name}, and you need to follow the rules of Minecraft
(cid:44)→ and split the tasks into multiple stages to complete them according to the tasks in the [
(cid:44)→ Conversation].
2 I will give you a [Conversation] and a [Previous long-term plan] (if have one) and a [Previous
(cid:44)→ inventory of employers], and you need to output the [Current inventory of employers], [
(cid:44)→ Analysis], [Long term plan], [Task at hand] and [Informer].
3 Your task is to perform the following actions to help me play Minecraft:
4 1. Handling the conversation and [Previous inventory of employers], you need to summarize the [
(cid:44)→ Current inventory of employers]. Subject to the latest time of conversation
5 2. If there is no given [Previous long-term plan], develop one based on the conversation and [
(cid:44)→ Current inventory of employers], and if there is a [Previous long-term plan], adjust it
(cid:44)→ based on the conversation and [Current inventory of employers], (if there is not too much
(cid:44)→ information in the [Conversation], output the original [Previous long term plan] content
(cid:44)→ )
6 3. Then, You need to break down the tasks in conversation into step-by-step that can be performed
(cid:44)→ in Minecraft, considering your social role and suppose you have nothing in your inventory
(cid:44)→ .
7 4. Finally, please output the task at hand and who informs you to do the task.
8 You must follow the following criteria:
9 1. You now have employments {employment} in Minecraft to dispatch and divide up, and you need to
(cid:44)→ try to arrange for everyone ({employment}) to have something to do in each STEP to
(cid:44)→ maximize parallelism and efficiency, and not have employees waiting for and blocking each
(cid:44)→ other. Don’t leave your employees with nothing to do.
10 2. You need to consider the interdependence of tasks in Minecraft for the division of labor.
11 3. You need to consider {employment}’s inventory status from the conversation and develop a
(cid:44)→ reasonable plan that fits their available resources (They can not get or use items from
(cid:44)→ others).
12 4. If a [Previous long-term plan] is already in place, you need to adjust it based on their
(cid:44)→ inventory and [previous progress] to reach your goals
13 5. You should take tasks that have a large workload and split them into smaller tasks, for example
(cid:44)→ , if you need to mine 50 logs, you can split them into workerA mine 25 logs, workerB mine
(cid:44)→ 25 logs.
14 6. You should have all your employees doing one thing and one thing only at every stage, no more
(cid:44)→ and no less.
15 7. You have to adjust the plan so that the goal is accomplished in the shortest possible time, for
(cid:44)→ example, by assigning work to an employee with a successful track record (once an
(cid:44)→ employee has completed a job, assign it to someone else who hasn’t) or by swapping the
(cid:44)→ employee’s work in hand.
16 8. Things that affect each other should be done in different stages (e.g. Building foundation
(cid:44)→ should be before building walls, building walls should before building roof and they(
(cid:44)→ building foundation, walls, roof) should be in different stages)
17 9. Things that don’t affect each other can be done in one stage by different employees (e.g.
(cid:44)→ Installing the door and building the roof do not interfere with each other and can be
(cid:44)→ scheduled in the same stage for different employees to do). Please try to improve the
(cid:44)→ overall efficiency as much as possible.
18 10. Each step related to construction needs to contain very detailed location information.
19 11. You can’t generate ’assistance’ tasks, each employee should do different things depending on
(cid:44)→ their inventory.
20
21 The response format should be:
22 Current inventory of employers: <Updated inventory based on a previous inventory of employers and
(cid:44)→ conversation.>
23 Objective: <combine the conversation and the objective from the last PLAN to give the current
(cid:44)→ overall objective, possibly keeping it the same>
24 Analysis: <the step-by-step analysis of the conversation and previous progress (if have), then
(cid:44)→ decide how to plan the goal and division of labor in Minecraft based on inventory of
(cid:44)→ employers>
25 Long-term plan: The overall plan with multiple [stage], in each stage, everyone has important and
(cid:44)→ specific tasks to do
26 The task at hand: The [stage] needs to be done now, in this stage, everyone has a specific task. (
(cid:44)→ Please answer in detailed text), Output None if there is no task need to do now.
27 Informer is <one of the player’s names, who inform you to do this thing, you can find in
(cid:44)→ conversation>
28 Examples:
29 Example 1:
30 [INPUT]:
31 Conversation: ‘‘‘ The conversation between linnea3v3 and leader
32 -[15:33:35]linnea3v3 says: build a house begin at (-10,72,-30)
33 ‘‘‘
34 previous conversation:‘‘‘None‘‘‘
35 previous long-term plan: ‘‘‘None‘‘‘
18Preprint
36 Current inventory of employers: workerA has an empty inventory, workerB has an empty inventory,
(cid:44)→ workerC has an empty inventory.
37
38 [Output]:
39 Current inventory of employers: workerA has an empty inventory, workerB has an empty inventory,
(cid:44)→ workerC has an empty inventory.
40
41 Objective:
42 Build a house.
43
44 Analysis:
45 To build a house, we need to break down the tasks into several stages, including gathering
(cid:44)→ materials, preparing the land, laying the foundation, constructing walls, and adding the
(cid:44)→ roof and finishing touches. Since we’re starting from scratch with empty inventories, the
(cid:44)→ first step will be to gather necessary resources like wood and stone.
46
47 Long-term plan:
48 Stage 1: WorkerA, WorkerB, WorkerC gather resources
49 WorkerA mine 12 woods.
50 WorkerB mine 25 stone.
51 WorkerC mine 25 woods.
52 Stage 2: WorkerA builds the foundation at (-10,72,-30) WorkerB and WorkerC dig the wood
53 WorkerA builds the foundation at (-10,72,-30)
54 Stage 3: WorkerB builds the wood wall at (-10,72,-30)
55 ...
56 Stage 4: WorkerC builds the wood roof at (-10,72,-30)
57 ...
58
59 The task at hand:
60 Stage 1: WorkerA,WorkerB,WorkerC gather resources
61 WorkerA mine 25 woods.
62 WorkerB mine 15 stone.
63 WorkerC mine 25 woods.
64
65 Informer is Linnea3v3
66
67
68 Example 2:
69 [INPUT]:
70 Conversation: ‘‘‘ The conversation between linnea3v3 and leader
71 -[15:33:35]linnea3v3 says: mine 50 stones
72 ‘‘‘
73 previous conversation:‘‘‘None‘‘‘
74 previous long-term plan: ‘‘‘None‘‘‘
75 Current inventory of employers: workerA has an empty inventory, workerB has an empty inventory,
(cid:44)→ workerC has an empty inventory.
76
77 [Output]:
78 Current inventory:
79 workerA has an empty inventory, workerB has an empty inventory, workerC has an empty inventory.
80
81 Objective:
82 Mine 50 stones.
83
84 Analysis:
85 To efficiently complete the task of mining 50 stones, the workload needs to be divided among
(cid:44)→ workerA, workerB, and workerC. Since the task is straightforward and all workers have the
(cid:44)→ same starting point (empty inventory), the task can be evenly distributed.
86
87 Long term plan:
88 Stage 1: Gather stones
89
90 WorkerA mines 17 stones.
91 WorkerB mines 17 stones.
92 WorkerC mines 16 stones.
93
94 The task at hand:
95 Stage 1: Gather stones
96
97 WorkerA mines 17 stones.
98 WorkerB mines 17 stones.
99 WorkerC mines 16 stones.
100
101 Informer is Linnea3v3
102
103 Example3:
104 [INPUT]:
105 Conversation: ’’’ The conversation between linnea3v3 and leader
106 -[19:15:13]linnea3v3 says: ’Mine 50 logs’
107 ...
108
109 The conversation between workera and leader
110 -[19:15:37]leader says: ’WorkerA, please mine 17 logs’
111 -[19:17:33]workera says: ’My inventory is [’birch_log’: 17, ’birch_planks’: 2], and my equipment
(cid:44)→ is [None, None, None, None, None, None] ’
112
113
114 The conversation between workerb and leader
115 -[19:15:42]leader says: ’workerB, please mine 17 logs’
19Preprint
116 -[19:16:09]workerb says: ’I’ll start the task mine 17 logs now’
117
118 The conversation between workerc and the leader
119 -[19:15:48]leader says: ’workerC, please mine 16 logs’
120 -[19:16:19]workerc says: ’I’ll start the task mine 16 logs now’
121
122 ’’’
123 Previous objective: ’’’Mine 50 logs.’’’
124 Previous long term plan: ’’’Stage 1: Gather logs
125
126 WorkerA mines 17 logs.
127 WorkerB mines 17 logs.
128 WorkerC mines 16 logs.’’’
129 The previous progress we have done is the step Stage 1: Gather stones
130
131 WorkerA mines 17 logs.
132 WorkerB mines 17 logs.
133 WorkerC mines 16 logs. is failed
134
135 [Output]:
136 Current inventory of employers: ...
137 Objective:
138 Complete the task of mining 50 stones.
139
140 Analysis:
141 A has successfully completed the task of mining 17 logs, however, b and c have not, to maximize
(cid:44)→ time efficiency try to get A to mine the remaining 33 logs and B and C to continue mining
142
143 Long term plan:
144 Stage 1 (adjust plan):
145 WorkerA mined the remaining 33 logs.
146 WorkerB mines 17 logs
147
148 The task at hand:
149 Stage 1 (adjust plan):
150 WorkerA mined the remaining 33 logs.
151 WorkerB mines 17 logs
152
153 Informer is Linnea3v3
TaskplannerofLeafagent
1 You are a Minecraft planner, and you need to follow the rules of Minecraft and split the tasks
(cid:44)→ into multiple stages to complete them according to the tasks in the [Conversation].
2 Your task is to perform the following actions to help me play Minecraft:
3 1. Your name is {name}. Handling the conversation and your inventory status. If there is [previous
(cid:44)→ progress], you need to consider it when you make a plan.
4 2. If there is no given [Previous long-term plan], develop one based on the conversation, and if
(cid:44)→ there is a [Previous long-term plan], adjust it based on the conversation, (if there is
(cid:44)→ not too much information in the [Conversation], output the original [Previous long term
(cid:44)→ plan] content)
5 3. You need to break down the tasks in conversation step-by-step that can be performed in
(cid:44)→ Minecraft, considering your social role and suppose you have nothing in your inventory.
6 4. Then, please output the task at hand and who informs you to do the task.
7 You must follow the following criteria:
8 1. Since you are a WORKER, you have no Employment{employment}. you receive the plan in the chat
(cid:44)→ logs and you should do it yourself.
9 2. You need to consider your inventory status and make a plan that is easy to succeed in Minecraft
(cid:44)→ .
10 3. Please do not build shelters without authorization, but if you are asked to build something,
(cid:44)→ you should follow orders.
11 4. When mining logs, please do not craft a wooden axe, you should simply mine wood by hand. But,
(cid:44)→ if someone asks you to craft an axe, you should do so.
12 5. When mining stone, you should first mine logs, then craft and equip a pickaxe (e.g. a wooden
(cid:44)→ pickaxe).
13 6. When collecting resources such as Log and Stone, please collect more than one at a time (e.g.
(cid:44)→ 10 or more) just in case!
14 7. If the previous plan failed due to a timeout error, please try again with the same plan, do not
(cid:44)→ change the plan.
15 8. If you already have more than the required amount of supplies in your inventory, you don’t need
(cid:44)→ to generate mine tasks!
16 9. Each step related to construction needs to contain very detailed location information. Each
(cid:44)→ building step should contain location information.
17
18 The response format should be:
19 Current inventory: <current inventory, inferred from the conversation and inventory>
20 Objective: <combine the conversation and the objective from the last PLAN to give the current
(cid:44)→ overall objective, possibly keeping it the same>
21 Analysis: <the step-by-step analysis of the conversation and previous progress (if have), then
(cid:44)→ decide how to plan the goal in Minecraft>
22 Long term plan: The overall plan with multiple [stage], in each stage, everyone has important and
(cid:44)→ specific tasks to do
23 The task at hand: The [stage] needs to be done now, in this stage, everyone has a specific task. (
(cid:44)→ Please answer in detailed text), Output None if there is no task need to do now.
20Preprint
24 Informer is <one of the player’s names, who inform you to do this thing, you can find in
(cid:44)→ conversation>
25 Examples:
26 Example 1:
27 Input:
28 Conversation: ‘‘‘ The conversation between leader and workerA
29 -[15:33:35]leader says: WorkerA mine 10 woods.‘‘‘
30 previous objective:‘‘‘None‘‘‘
31 previous long term plan: ‘‘‘None‘‘‘
32
33 Output:
34 Current inventory:
35 the inventory of workerA is None
36
37 Objective:
38 mine 10 woods.
39
40 Analysis:
41 To mine 10 woods in Minecraft, you need to start by finding trees. Since you’re starting with
(cid:44)→ nothing in your inventory, you’ll have to mine the wood by hand.
42
43 Long term plan:
44 Stage 1: WorkerA gathers resources
45 WorkerA mine 10 woods.
46 The task at hand:
47 WorkerA mine 10 woods.
48 Informer is leader
49
50
51 Example2:
52 Input:
53 Conversation: ‘‘‘ The conversation between leader and workerA
54 -[15:33:35]leader says: WorkerA mine 25 stones.‘‘‘
55 previous objective:‘‘‘None‘‘‘
56 previous long term plan: ‘‘‘None‘‘‘
57
58 Output:
59 Current inventory:
60 the inventory of workerA is None
61
62 Objective:
63 mine 25 stones.
64
65 Analysis:
66 To mine 25 stones in Minecraft, you must first gather wood to craft wooden pickaxes, as mining
(cid:44)→ stones directly by hand won’t yield any resources. Start by finding and mining at least 3
(cid:44)→ logs from trees. Then, use a crafting table to convert these logs into wooden planks and
(cid:44)→ sticks. With these materials, craft a wooden pickaxe to start mining stone.
67
68 Long term plan:
69 Stage 1: Gather resources
70
71 WorkerA mine 3 logs.
72 WorkerA craft wooden planks and sticks from logs.
73 WorkerA crafts a wooden pickaxe.
74
75 Stage 2: Mine stone
76
77 WorkerA uses the wooden pickaxe to mine 25 stones.
78
79 The task at hand:
80 Stage 1: Gather resources
81
82 WorkerA mine 3 logs.
83 WorkerA craft wooden planks and sticks from logs.
84 WorkerA crafts a wooden pickaxe.
85
86 Informer is leader
B.3 ACTIONPLANNER
B.3.1 COMPONENTSINTHEPROMPT
Theinputprompttollmusthecurrenttaskproposedbythetaskplanner.
21Preprint
B.3.2 FULLPROMPT
Templateofactionplanner
1 You are a helpful assistant. Your task is to directly translate [Current task] input into [TODO
(cid:44)→ list] as RESPONSE. Your [TODO list] translations must be consistent with the [Current
(cid:44)→ task], especially the ’who does each task’ issue.
2 1. - You are player {name}. Your profile is ‘‘‘{profile}‘‘‘.
3 2. - [TODO list] has two types of items, those that you do yourself (e.g. Craft [quantity] [item]
(cid:44)→ (at position)) and those that you arrange for someone else to do (e.g. inform [player] to
(cid:44)→ kill [quantity] [mob] (at position))
4 3. - If the [current task] is someone else’s, you should not translate the task you did yourself
(cid:44)→ in [TODO list], but you should INFORM that person!
5
6 You must follow the following criteria:
7 1. The [todo list] items should follow a concise format, such as "Mine [quantity] [block] (at
(cid:44)→ position)", "inform [player] to mine [quantity] [block] (at position)", "inform [player]
(cid:44)→ to kill [quantity] [mob] (at position)", "Craft [quantity] [item] (at position)", "Smelt
(cid:44)→ [quantity] [item] (at position)", "Kill [quantity] [mob] (at position)", "Cook [quantity]
(cid:44)→ [food] (at position)", "Equip [item] (at position)", "Build [item] at [position]" etc.
(cid:44)→ It should be a single phrase. Do not mention anything else. mention position when
(cid:44)→ necessary.
8 2. The [to-do list] items should have an exact position if there is position information in the
(cid:44)→ conversation.
9 3. When the task contains someone else’s name ({employment}), you need to generate the inform todo
(cid:44)→ , like "inform [player] to mine [quantity] [block] (at position)", "inform [player] to
(cid:44)→ kill [quantity] [mob] (at position)", "inform [player1] to give [quantity] [item] to [
(cid:44)→ player2]".
10
11 Response format should be:
12 <a list of todo, like ["todo1", "todo2", "todo3", ...]>(This JSON format will be parsed by Python
(cid:44)→ ‘json.loads‘)
13 Ensure the response can be parsed by Python ‘json.loads‘, e.g.: no trailing commas, no single
(cid:44)→ quotes, etc.
14
15
16 EXAMPLE:
17 {example}
Actionplanner:exampleofrootagent
1 Example 1: If your name is leader, you should better generate task that includes ’inform’:
2 INPUT:
3 Current task:
4 Step: gather resources
5 WorkerA mine 25 woods.
6 WorkerB mine 15 stone.
7 RESPONSE:
8 ["inform WorkerA to mine 25 woods", "inform workerB mine 15 stone"]
9
10 Example 2: If your name is leader:
11 INPUT:
12 Current task:
13 Step: WorkerA needs to build the foundation.
14 RESPONSE:
15 ["inform workerA to build the foundation"]
16
17 Example 3:
18 INPUT:
19 Current task:
20 Stage 2: WorkerA builds the walls
21 WorkerA uses 48 planks to build the walls at (-10,72,-30).
22 RESPONSE:
23 ["inform workerA to build walls at (-10,72,-30) (use 48 planks)"]
24
25 Example 4:
26 INPUT:
27 Current task:
28 Stage 1: WorkerA crafts 4 planks from the log of WorkerB.
29
30 RESPONSE:
31 ["inform workerB to give a log to workerA", "inform workerA to craft 4 planks"]
Actionplanner:exampleofleafagent
1 Example 1: If your name is worker, you should not generate a task includes ’inform’, you should
(cid:44)→ only do the task yourself:
2 INPUT:
22Preprint
3 Current task:
4 Step: WorkerA mine 25 woods
5 RESPONSE:
6 ["mine 25 woods"]
23