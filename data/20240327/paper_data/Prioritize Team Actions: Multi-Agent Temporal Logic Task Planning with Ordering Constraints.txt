Prioritize Team Actions: Multi-Agent Temporal Logic Task Planning
with Ordering Constraints
Bowen Ye, Jianing Zhao, Shaoyuan Li and Xiang Yin
Abstract—Inthispaper,weinvestigatetheproblemoflinear [6], [11], [17]. LTL path planning with unknown or partial-
temporal logic (LTL) path planning for multi-agent systems, unknown environments has also been studied recently [5],
introducingthenewconceptoforderingconstraints.Specifically,
[10], [23].
we consider a generic objective function that is defined for
the path of each individual agent. The primary objective is In the context of LTL path planning for multi-agent
to find a global plan for the team of agents, ensuring they systems, existing works have mainly focused on finding a
collectively meet the specified LTL requirements. Simultane- globallyoptimalplanforallagentstominimizetheobjective
ously, we aim to maintain a pre-determined order in the
functionssuchastotaldistanceorothercost-relatedmetrics.
values of the objective function for each agent, which we refer
However,therearescenarioswheretheabsolutevalueofthe
to as the ordering constraints. This new requirement stems
from scenarios like security-aware planning, where relative objective function is less importantcompared to the relative
orders outweigh absolute values in importance. We present an order of the objective function among all agents. One such
efficient algorithm to solve this problem, supported by proofs scenarioissecurity-awareplanning[14],[22].Inthissetting,
of correctness that demonstrate the optimality of our solution.
the objective is to assign N robots to transport different
Additionally, we provide a case study in security-aware path
items through various regions where information may be
planning to illustrate the practicality and effectiveness of our
proposed approach. leakedtoanexternalattacker.Theattacker’sstrategyinvolves
first collecting all leaked information and then targeting the
I. INTRODUCTION agent that leaks the most data. In this context, the user may
A. Background and Motivations prioritizeassigningthemostsensitivedatatotherobotwhose
pathhastheleastleakageamongallagents.Inthisexample,
In recent years, there has been a growing interest in
theemphasisisontheorderingoftheleakagelevelsforeach
employing formal methods for decision-making and task
path rather than the absolute value of information leakage.
planning in autonomous systems [8], [21]. This approach
This highlights the importance of relative comparisons in
involves describing design requirements using formal spec-
planning for security-sensitive applications.
ifications, allowing for mathematically rigorous reasoning
to automatically derive plans that ensure the overall task
holdswithprovableguarantees.Formalmethodshavegained
traction due to their efficiency and certifiability, leading to B. Our Contributions
successful applications in various safety-critical engineering
systemssuchasmobilerobots[4],[16],autonomousdriving In this paper, we investigate the problem of LTL path
[13], power systems [20], and healthcare facilities [18]. planning for multi-agent systems with ordering constraints.
Linear temporal logic (LTL) stands out among various Specifically, we introduce a generic objective function that
formal specification languages due to its user-friendly yet is defined for the path of each individual agent. Our goal
comprehensive nature in describing temporal requirements is to find a global plan for the team of agents, ensuring
over linear behaviors. For example, LTL enables us to de- they collectively fulfill the specified LTL requirements. Si-
scriberequirementssuchas“surveillanceinaspecificregion multaneously,we aim to maintain a pre-determinedorder in
infinitely often until detecting an objective”, or “fulfilling a the values of the objective function for each agent, which
request within a finite number of steps once received”. In we refer to as the ordering constraints. This new constraint
recent years, LTL has been extensively employed in path is fundamentally different from the conventional cost-based
planning for mobile robots. For example, in [3], [7], [12], requirements, as it pertains to relative rather than absolute
[15] the authors studied the LTL path planning problem values.
to minimize the prefix-suffix cost. Efficient LTL planning The main contributions of this work are summarized
algorithms have been developed using the sampling-based as follows. First, we formally formulate the concept of
approach to address the challenge of state space explosions ordering constraints and their associated LTL path planning
problem. Then, we propose an effective algorithm to solve
ThisworkwassupportedbytheNationalNaturalScienceFoundationof
thisproblemandprovethatthe obtainedsolutionis optimal.
China(62061136004, 62173226, 61803259).
B. Ye, J. Zhao, S. Li and X. Yin are with the Department of Finally, we provide case studies in security-aware planning
Automation, Shanghai Jiao Tong University and the Key Laboratory to illustrate the feasibility of our approach. To the best of
of System Control and Information Processing, the Ministry
our knowledge, such an ordering requirement has not been
of Education of China, Shanghai 200240, China. E-mail:
{yebowen1025,jnzhao,syli,yinxiang}@sjtu.edu.cn. explored in the literature concerning LTL path planning.
4202
raM
62
]YS.ssee[
1v40771.3042:viXraC. Related Works where
There are several works in the literature that have ad- • X g =X1×X2×...X n is the set of global states;
dressed concepts related to the ordering constraint explored • x0,g =x0,1×···×x0,n is the global initial state;
in our paper. For instance, in [14], [22], the author tackled • ∆ g ⊆X g×X g is the transition relationdefinedby:for
multi-agent LTL planning tasks with security constraints, anyx g=(x1,...,x n),x′ g=(x′ 1,...,x′ n)∈X g,we have
ensuring that intruders remain uncertain about whether a (x ,x′)∈∆ if and only if for ∀ 1 ≤ i ≤ n, there is
g g g
specific individual agent is performing crucial subtasks. A (x ,x′)∈∆
i i i
recent development is the introduction of HyperATL*, a • AP g =AP1∪···∪AP n is the global set of atomic
logicextensionofcomputationtreelogicwithpathvariables propositions;
and strategy quantifiers, where ordering plays a significant • L g :AP g →2APg is the labeling function defined by:
role [2]. However, HyperATL* primarily focuses on strate- foranystatex g=(x1,...,x n)∈X g,wehaveL g(x g)=
gic choices, information flow, and expressing asynchronous L1(x1)∪···∪L n(x n);
hyperproperties,while ordering contributesto describing in- • w g:∆ g→R ≥0 is the cost function defined by: for any
formation priority. Additionally, ordering requirements have x g=(x1,...,x n),x′ g=(x′ 1,...,x′ n)∈X g, if (x g,x′ g)∈
been examined in the context of information transmission ∆ , we have w (x ,x′)= n w (x ,x′).
g g g g Pi=1 i i i
between network ports [19]. Nevertheless, these contexts A finite path τ =τ (0)τ (1)···τ (m)∈X∗ is a finite
g g g g g
differ from our formal setting, which pertains to temporal sequenceof states such that τ g(0)=x g,0 and (τ g(j),τ g(j+
logic in dynamic systems. 1))∈∆ for any j =0,1,··· ,m−1. Note that each state
g
in X is an n-tuple and we denote by τi the path of agent
D. Organization g g
i ∈ I in global path τ , i.e., τi = τi(0)τi(1)···τi(m),
Therestofthepaperisorganizedasfollows.First,wepro- g g g g g
where τi(j) is the i-th component in τ (j). We denote by
vide the formaldefinitions and system models in Section II. Path∗(Tg
) the set of all finite paths in
Tg
. Furthermore, we
g g
In Section II-D, we formally formulate the problems that define the cost of a finite path τ ∈Path∗(T ) as
g g
we solve in this paper. In Section III, the solution algorithm
as well as its correctness proofs are provided. A case study |τg|−2
is presented in Section IV to illustrate the applicability of J(τ g)= X w g(τ g(j),τ g(j+1)) (1)
the proposed approach. Finally, we conclude this paper in j=0
Section V.
where we denote by |τ | the length of the path τ . For each
g g
II. PRELIMINARIES AND PROBLEMFORMULATION path τ g ∈Path∗(T g), we define its trace L(τ g) as
A. System Model
L(τ )=L(τ (0))···L(τ (|τ |−1)).
g g g g
We consider a multi-agent system consisting of n agents,
B. Task Specification
for which we denoted by I ={1,2,...,n} the index set.
The mobility of each agent i∈I is captured by a weighted In the multi-agent system, agents are assigned with a
transition system (WTS) as follows: global high-level task specification. The task is described
by linear temporallogic (LTL) formulae. To be specific, the
T
i
=(X i,x0,i,∆ i,AP i,L i,w i)
syntax of LTL is given as follows
where X is the finite set of states, representing different
i
regionsoftheworkspace,x0,i istheinitialstaterepresenting φ:=⊤|a|φ1∧φ2 |¬φ|(cid:13)φ|φ1Uφ2
thestartingregionofagenti;∆ ⊆X ×X isthetransition
i i i where⊤standsforthe“true”predicate;a∈AP isanatomic
relation such that for any (x,x′)∈∆ , the agent i can move
i proposition; ¬ and ∧ are Boolean operators “negation” and
directly to x′ fromx; AP is the set of atomic propositions,
i “conjunction”, respectively; (cid:13) and U denote temporal op-
representing the properties of our interest, L :X →2AP
i i erators “next” and “until”, respectively. One can also derive
is the labeling function that assigns each state with a set
othertemporaloperatorssuchas“eventually”by♦φ=⊤Uφ.
of atomic propositions; w i:∆ i→R ≥0 is the cost function LTL formulae are evaluated over infinite words; the readers
such that w (x,x′) represents the cost incurred when agent
i are referred to [1] for the semantics of LTL. Specifically,
i moves from x to x′.
an infinite word τ ∈ (2AP)ω is an infinite sequence over
In this work, we assume that all the agents are running
alphabet 2AP. We write τ|=φ if τ satisfies LTL formula φ.
synchronously,whichcan be implementedbyusinga global
In this paper, we focus on a widely used fragment of
clock.Tothisend,wecouldcapturethemobilityoftheentire
LTL formulae called the co-safe LTL (scLTL) formulae.
multi-agent system using the following global transition
Specifically, an scLTL formula requires that the negation
system (GTS), denoted by T , which is the synchronous
g operator ¬ can only be applied in front of atomic propo-
product of each T for i∈I.
i sitions. Consequently,one cannotuse “always” (cid:3) in scLTL.
Definition 1 (GTS): Given n weighted transition system
Although the semantics of LTL are defined over infinite
T
i
= (X i,x0,i,∆ i,AP,L i,w i),i ∈ I, the global transition
words, it is well-known that any infinite word satisfying a
system T g=T1⊗···⊗T
n
is a 7-tuple
co-safe LTL formula has a finite good prefix. Specifically, a
T
g
=(X g,x g,0,∆ g,AP g,L g,w g) good prefix is a finite word τ′ = τ1···τ
n
∈ (2AP)∗ suchthatτ′τ′′ |=φ forany τ′′ ∈(2AP)ω. We denoteby Lφ the In words, D(τ˜ ) characterizes the degree of information
pref g
set of all finite good prefixes of scLTL formula φ. leakage for each agent i∈I when executing τ˜ .
g
ForanyscLTLformulaφ,itsgoodprefixesLφ canbeac- Inthesecurity-preservingproblem,weaimtosettheorder
pref
cepted by a deterministic finite automaton (DFA). Formally, forthemult-agentsystem.Forconvenience,welettheindex
a DFA is a 5-tuple A = (Q,q0,Σ,f,Q F), where Q is the of eachagentbe the importanceofthe informationit carries
set of states; q0 ∈ Q is the initial state; Σ is the alphabet; and a smaller index means a more important information.
f:Q×Σ→Q is a transition function; and Q ⊆ Q is the We denote by D the ordering constraint for the multi-agent
F
set of accepting states. The transition function can also be system. Then, formally we have
extendedtof:Q×Σ∗→Qrecursively.Afinitewordτ ∈Σ∗
D ⇔ ∀i≤j :d ≤d (3)
is said to be accepted by A if f(q0,τ) ∈ Q F; we denote i j
by L(A) the set of all accepted words. Then for any scLTL For convenience, we denote by D(τ˜ ) |= D that a path τ˜
g g
formulaφdefinedoverAP,wecanalwaysbuildaDFAover satisfies the above ordering constraints.
alphabet Σ = 2AP, denoted by A
φ
=(Q,q0,2AP,f,Q F),
D. Problem Formulation
such that L(A )=Lφ .
φ pref
Now, we formally present the ordering planning problem
C. Ordering Constraints ofthemulti-agentsystemwithLTLspecificationsasfollows.
In this work, we investigate a security problemwhere the Problem 1 (Ordering Planning Problem): Given a multi-
multi-agent system aims to protect some behaviors that are agent system modeled by a labeling-GTS T˜ g, the task de-
importantanddonotwanttoberevealedbytheadversary.To scribedby an LTL formulaφ, and the orderconstraintgiven
formulate the security requirement, we model the important by D in (3), find a plan τ˜ g ∈Path∗(T˜ g) such that
behaviors by the visit to some secret states X
S
⊂ X. We i) L˜(τ˜ g)|=φ;
also define X
NS
=X\X
S
the set of non-secret states. For ii) D(τ˜ g)|=D; and
each agent, to protectthe security, it should stay in the non- iii) for any other τ˜ g′ ∈Path∗(T˜ g), we have J(τ˜ g)≤J(τ˜ g′).
secretstatesforaslittle timeaspossible.Thenforeachstate Remark 1: Different from the standard multi-agent LTL
x ∈ X ,i ∈ I, we define a secret labeling function l that planningproblem,we addthe orderingconstraintscondition
i i i
assignsl (x )=0ifx ∈X andl (x )=1otherwise.Then, ii), which requires each agent to satisfy. So this allow some
i i i S i i
weobtainthefollowingmodifiedtransitionsystemswiththe situationofinformationleakingbutthesystemwillcompen-
secret information included. sate for it by some “unimportant” agents leaking actively.
Definition 2 (Labeling-GTS): Given a GTS T = Compared to the former that only pursue minimum cost,
g
(X g,x g,0,∆ g,AP g,L g,w g) and a set of secret states X S, our ordering planning problem ensure the confidentiality of
its labeling-GTS T˜ is defined by: important information while maintaining a low cost.
g
Remark 2: In the standard multi-agent LTL planning
T˜ g =(X˜ g,x˜0,g,∆˜ g,AP g,L˜ g,w˜ g) problem, we define the path that satisfies the LTL formulae
withtheminimumcostastheoptimalone.Soinourordering
where
planning problem, we define the path that satisfies the LTL
• X˜ g =X g×{0,1}n; formulaeandtheorderingconstraintswiththeminimumcost
• x˜0,g =x0,g×l1(x1 0,g)×···×l n(xn 0,g); as the optimal one.
• ∆˜ g ⊆ X˜ g ×X˜ g is the transition relation defined by:
for any x˜
g
=(x g,l1(x1 g),...,l n(xn g))∈X˜
g
and y˜
g
= III. PLANNING ALGORITHM
(y g,l1(y g1),...,l n(y gn))∈X˜ g, wehave(x˜ g,y˜ g)∈∆˜
g
if In this section, we proposean efficient algorithmto solve
(x ,y )∈∆ holds; the multi-agent ordering planning problem.
g g g
• L˜ g : X˜ g →2APg is the labeling function defined by: In order to obtain the global path satisfying the LTL task
for any x˜ g = (x g,l1(x1 g),...,l n(xn g)) ∈ X˜ g, we have formula Φ, we propose a way to “encode” automaton A φ
L˜ g(x˜ g)=L g(x g); accepting φ into the solution space of T˜ g, which is detailed
• w˜ g : ∆˜ g → R ≥0 is defined by: for any x˜ g = as follows.
(x g,l1(x1 g),...,l n(xn g)),y˜ g=(y g,l1(y g1),...,l n(y gn))∈ Definition 4 (Product System): Given a labeling-GTS
X˜ g, we have w˜ g(x˜ g,y˜ g)=w g(x g,y g). T˜ g = (X˜ g,x˜0,g,∆˜ g,AP g,L˜ g,w˜ g) and an LTL formula φ
For the multi-agent system, we propose the concept of with the corresponding DFA A φ=(Q,q0,2AP,f,Q F), the
product system is a new transition system
order function that describes the degree of the information
leakage when achieving the LTL tasks.
Definition 3 (Order): Given a labeling-GTS T˜ , for each
T
⊗
=(Π ⊗,π0,∆ ⊗,w ⊗)
g
pathτ˜ ∈Path∗(T˜ ), we define theorderofτ˜ foragenti as where:
g g g
d
i
=|τ˜ Xg|−1
l i(τ˜ gi(j)) (2)
••• ∆πΠ 0⊗ ⊗=⊆ ⊆(xX
˜
Π˜
0
⊗g ,g×
×,q
ΠQ
0)
⊗i is
s
ist th
h
the
e
es
i
tne rt
i at
nio
a
sf
l
its
s
it ota
a
nt te
e
rs
;
e;
lationdefinedby:for
j=0 anyπ =(x,q),π′ =(x′,q′)∈Π ,wehave(π ,π′ )∈
⊗ ⊗ ⊗ ⊗ ⊗
The order of τ˜
g
is defined as D(τ˜ g)=(d1,...,d n). δ
⊗
if (x,x′)∈∆˜
g
and q′ ∈f(q,L˜ g(x′));• w ⊗:∆ ⊗→R ≥0 is the costfunctiondefinedby: forany Algorithm 2: Optimal ordering LTL plan
π ⊗=(x,q),π ⊗′ =(x′,q′)∈Π ⊗,wehavew ⊗(π ⊗,π ⊗′ )= Input: LTL formula φ, labeling-GTS T˜
w˜ (x,x′) if (x,x′)∈∆˜ . g
g g Output: Optimal global plan τ
g
The product system ensures the movement of the multi- 1 Get the T˜ g :(X˜ g,x˜0,g,∆˜ g,AP g,L˜ g,w˜ g)
agent should satisfy the environment constraints while not
2 Convert φ to the corresponding DFA
violating the LTL formula φ. Then we define the set of A φ=(Q,q0,2AP,f,Q F)
accepting states for T as follows:
⊗ 3 Construct the product system
Goal(T )={(x,q)∈Π :q ∈Q }
T
⊗
=(Π ⊗,π0,∆ ⊗,w ⊗)
⊗ ⊗ F 4 Construct the Goal(T ⊗) and get π0 from T ⊗
Based on the construction of T , we know that, a plan 5 if {π0}∩Goal(T ⊗) then
⊗
visiting the set Goal(T ) satisfies the scLTL task φ. 6 return ”no feasible plan”;
⊗
Before presenting the algorithm of the multi-agent order- 7 else
ingplanning,wefirstdefinea“check”functioninAlgorithm 8 while True do
1,whichisusedtodeterminewhetherornottheoptimalpath 9 for π ⊗,F ∈Goal(T ⊗) do
getting from solving the standard multi-agent LTL problem 10 τ pref(π0,π ⊗,F)=shortpath(π0,π ⊗,F)
satisfies the orderconstraints. To be specific, we check each 11 {τ˜ g}={Π g[τ pref(π0,π ⊗∗ ,F)]|
pathbythefunctionandifoneofthemsatisfiesD, thenthis minJ(Π g[τ pref(π0,π ⊗∗ ,F)]}
path will be returned as a feasible one, else we will return 12 Flag, τ˜ g∗ = Check({τ˜ g})
False, indicating that no paths meet the requirements.
13 if Flag == True then
14 return optimal plan τ g∗
Algorithm 1: Order Checker 15 else
Input: set of the path T 16 return to line 9 while {τ˜ g}=
Output: check result (True or False) and optimal {Π g[τ pref(π0,π ⊗,F)|sec−minJ}
global plan τ˜
g
1 for τ˜ g ∈T do
2 calculate D(τ˜ g) and get d i
3 if ∀i≤j,d i ≤d j then
of those bigger than the minimum J. And while continuing,
4 return True, τ˜ g
the cost will be third-min and so on.
5 return False, {⊘} Now we summarize the main result of this work as the
following theorem.
Theorem 1: Given a problem in the form of Problem 1,
Remark 3: In Algorithm 1 there may be more than one
and we solve this problem using the Algorithm 2.It is clear
pathsatisfyingthe orderingLTL task butouralgorithmonly
thatthefinalpathwegetisnotonlyfeasiblebutalsooptimal.
returnstheoneofthemrandomly.However,inordertomake
proof.
our case more practical, we should get the trajectory with
min Pn i=1d
i
while the size of index set of the agent is k. • First we get {π0}∩Goal(T ⊗), which contains all path
This means the least total leakage of the information which
τ˜
g
|=φ;
is defined in Section IV. • Then we use Dijkstra to find all of the minimum cost
path,thatis the secondrequirementof the initialmulti-
ThenwecanformalizetheoverallsolutioninAlgorithm2.
To be specific, line 1 gets the T˜
g
and line 2 converts the agentplanning,foranyotherτ˜ g′ ∈Path∗(X˜ g),wehave
J(τ˜ )≤J(τ˜′), we get the set of plans T;
task specification to the corresponding DFA A φ. Line 3 g g
constructs the product system of T˜ and A . Lines 4-5 aim • As in the finite graph, the path number in T is finite,
g φ
so we can judge whether there is a path satisfying D
to determine whether there exists a path satisfying the task
by traversal method;
specification. If agents can not reach Goal(T ⊗) from π ⊗,0,
return “no feasible plan”, else we will get the shortest paths • If so, we return the path as our result path, because the
costistheminimumanditsatisfiestheorderconstraints,
for all combinations in line 9-12 by utilizing the shortest
the path is optimal;
path algorithm, e.g. the Dijkstra’s algorithm [9]. Then we
will choose the optimal path set with the least cost among • If we can’tfind the path, then return to the second step
but now we let the thresholdof the finding path bigger.
all feasible combinations in line 12. Then line 13-16 will
ThisisbecausetheJ =Σw andw isthevaluediscrete
check whether the line satisfies the order constraints, if so,
function, so we can get the w , and then set J′ =
return the path, else will return to line 9 but change the line min
J +w , and go on.
12 by adding a threshold, which means not only should we min
get the shortest paths in lines 10-12, but also get the second In conclusion, Algorithm 2 is sound and complete in solv-
shortest paths. In line 16, the sec-min J means that we will ing the optimal planning problem with ordering constraints
also get the path whose cost is notminimumbut is the least defined in Problem 1.IV. CASE STUDY
In this section, we provide some typical examples to
demonstrate the feasibility and the application of our algo-
rithm.Andfromnowon,thetaskwithsuperscriptsrepresents
whichagentneedstocompletethetask.Forexample,thea1
means the task a should be accomplished by agent 1. And
our map is a grid map, where each grid represents a state.
We consider a military material transportation scenario,
where a convoy completes a transportation task together,
transporting materials from the initial point to the desti-
Fig. 1. The path for the ordering Fig.2. Thepathfortheminimum
nations individually, during which different vehicles in the
taskplanning costplanning
convoymay pass throughdifferentareas for material supply
or refueling. In the transportation map, there will be one
or several enemy detection points. The importance of dif- the storage machine and working there.
ferent materials varies and different materials transportation Planning objective The global task of all agents
requires specialized vehicles, so the tolerance for exposure {V1,V2,V3,V4} is to deliver the rare source and the normal
of vehicle route information varies. sourcefromtheextractingplaceto thestorehouseseparately
Our requirementfor agents route planning is to minimize and taking the storage machine to the storage place of rare
thelossofthewholeagentsonthe roadasmuchaspossible and ordinary resources. Formally, the overall task specifica-
while completing the task, and to ensure that the more tion can be expressed by the following LTL formula:
important the vehicle information is, the less it is exposed φ=♦a1 ∧♦b1 ∧(¬bUa)∧♦c2 ∧♦d2 ∧(¬dUc)∧♦b3 ∧♦d4
which means the less time it passed by the insecure area.
Here, we consider four agents system with the LTL task. which means the agent 1 must firstly arrive at region a to
So the index of the agents is {1,2,3,4}. take the rare resource and then take it to the storage region
System model Suppose that there are four transportation b, nearly the same as the agent 2. And for agent 3 and 4,
vehicles 1, 2, 3 and 4 working in a 8 × 8 workspace as their task is to deliver the machine from the initial regionto
shown in Fig.1. So we have four vehicles V1, V2, V3 and the storage place b and d.
V4 and they start from their own initial position, the lower- Ordering constraints The agents {V1,V2,V3,V4} must
satisfytheorderingconstraintswhichcanbeinterpretedinto
left corner, the lower-right corner and the upper left corner
of the last two respectively. At each instant,each robot can
the visiting times to grey regions of V1 is less than it of V2,
move left/right/up/down to its adjacent grid or stay at its
V2 is less than V3 and V3 is less than V4, which can be
formulated as:
current grid.And in this case, the cost for moving vertically
or horizontally is fixed as one unit. D ⇔ d1 ≤d2 ≤d3 ≤d4
And each region in the working space has their own
Solution The above setting can be modeled by Problem
special properties:
1. The system model can be constructed in the form of
• theinitialpositions(cyanregion)wheretheforeagentsstay T˜
g
= (X˜ g,x˜0,g,∆˜ g,AP g,L˜ g,w˜ g) and eight grey regions
at time 0. And the red path belongs to V1, the blue path
with label {1}. Therefore the Algorithm 2 in III can be
belongs to V2, the black path shows the trajectory of V3
implementedinthiscaseandthesynthesizedplanisshownin
and the brown path is V4;
Fig.1. Specifically,the paths in the Fig.1 are the actual paths
• insecure areas(grey region) where the label is 1, which executedbyeachrobotthatsatisfyboththetaskspecification
stands for the leakage of the information adding 1 if the
and the order constraints. And the path in the Fig.2 shows
agent visit it for one time;
that if we get the minimum cost J, we will break the order
• mining area of the rare sources(yellow region) where the constraint which means the enemy can easily know some
agent 1 should visit for taking the source. We use a to
key information of our rare source. So that’s why we added
denote it;
ordering constraints into the normal task planning.
• storagelocationforrareresources(greenregion)wherethe Result of the case
agent1 need to visit after it visiting a andwork there.We
use b to denote it; TABLEI
• placesforextractingordinaryresources(pinkregion)where THECOSTANDORDERWITHORDERINGCONSTRAINTSANDWITHOUTIT
agent 2 need to visit for taking the source. We use c to
denote it. costJ d1 d2 d3 d4
• storagelocationfornormalresources(orangeregion)where withorderingconstrainst 29 0 0 0 1
the agent 2 need to visit after it visiting c and work there. withoutorderingconstraints 25 1 0 0 1
We use d to denote it;
• the green region and the orange region for V3 and V4 is It is obvious in Table I that, despite an additional 16 per-
thedestinationwherethevehiclesshouldarriveat,sending centofresourcescomparedtothestandardplanningscenario,the information leakage of our ordering planning satisfies [9] StevenMLaValle. Planningalgorithms. Cambridgeuniversitypress,
the most important requirement of minimizing information 2006.
[10] Zhiliang Li, Mingyu Cai, Shaoping Xiao, and Zhen Kan. Online
leakage, which means that the security of information is
motionplanning withsoftmetricinterval temporal logicinunknown
ensured as much as possible. Therefore, we claim that the dynamic environment. IEEE Control Systems Letters, 6:2293–2298,
multi-agent planning satisfying the ordering constraints has 2022.
a better performance in protecting the security. [11] RuijiaLiu,ShaoyuanLi,andXiangYin.Nngtl:Neuralnetworkguided
optimaltemporallogictaskplanningformobilerobots.arXivpreprint
V. CONCLUSION arXiv:2309.14050, 2023.
[12] Zesen Liu, Meng Guo, and Zhongkui Li. Time minimization and
Inthispaper,wesolvedtheproblemofLTLpathplanning
online synchronization for multi-agent systems under collaborative
for multi-agent systems by introducing a novel ordering temporal logictasks. Automatica,159:111377, 2024.
constraint.Unlike existing constraintsthat focuson absolute [13] NoushinMehdipour,MatthiasAlthoff,RadboudDuintjerTebbens,and
Calin Belta. Formal methods to comply with rules of the road in
values, our new constraint centers on relative comparisons.
autonomousdriving:Stateoftheartandgrandchallenges.Automatica,
We demonstrated the relevance of this new constraint in the 152:110692, 2023.
context of information security considerations and provided [14] WeijieShi,ZhouHe,ZiyueMa,NingRan,andXiangYin. Security-
preserving multi-robot path planning for boolean specification tasks
illustrations through a security-aware path planning case
usinglabeled petrinets. IEEEControlSystemsLetters, 2023.
study.Inthefuture,weaimtofurtherinvestigatethereactive
[15] StephenLSmith,JanaTumova,CalinBelta,andDanielaRus.Optimal
control synthesis problem, taking into account uncertainties path planning for surveillance with temporal-logic constraints. The
in the environment. InternationalJournalofRoboticsResearch,30(14):1695–1708, 2011.
[16] Daiying Tian, Hao Fang, Qingkai Yang, Zixuan Guo, Jinqiang Cui,
REFERENCES WenyuLiang,andYanWu. Two-phasemotionplanningundersignal
temporallogicspecificationsinpartiallyunknownenvironments.IEEE
[1] ChristelBaierandJoost-PieterKatoen. Principlesofmodelchecking. Transactions onIndustrial Electronics, 70(7):7113–7121, 2022.
MITpress,2008. [17] Cristian Ioan Vasile, Xiao Li, and Calin Belta. Reactive sampling-
[2] Raven Beutner and Bernd Finkbeiner. Hyperatl*: A logic for hy- based path planning with temporal logic specifications. TheInterna-
perproperties in multi-agent systems. Logical Methods in Computer tionalJournal ofRoboticsResearch,39(8):1002–1028, 2020.
Science, Volume19,Issue2,May2023.
[18] Matt Webster, Clare Dixon, Michael Fisher, Maha Salem, Joe Saun-
[3] Meng Guo and Dimos V Dimarogonas. Multi-agent plan reconfig-
ders, Kheng Lee Koay, Kerstin Dautenhahn, and Joan Saez-Pons.
uration under local ltl specifications. The International Journal of
Toward reliable autonomous robotic assistants through formal verifi-
Robotics Research,34(2):218–235, 2015.
cation:Acasestudy. IEEETransactionsonHuman-MachineSystems,
[4] Zhiyuan Huang, Weiyao Lan, and Xiao Yu. A formal control
46(2):186–196, 2015.
frameworkofautonomousvehicleforsignaltemporallogictasksand
[19] DamonWischik,MarkHandley,andMarceloBagnuloBraun. There-
obstacle avoidance. IEEETransactions onIntelligent Vehicles,2023.
sourcepoolingprinciple. ACMSIGCOMMComputerCommunication
[5] Yiannis Kantaros, Matthew Malencia, Vijay Kumar, and George J
Review, 38(5):47–52, 2008.
Pappas. Reactive temporal logic planning for multiple robots in
[20] Zhe Xu, Agung Julius, and Joe H Chow. Energy storage controller
unknown environments. In 2020 IEEE International Conference on
Robotics andAutomation(ICRA),pages 11479–11485. IEEE,2020. synthesisforpowersystemswithtemporallogicspecifications. IEEE
[6] Yiannis Kantaros and Michael MZavlanos. Sampling-based optimal Systems Journal,13(1):748–759, 2017.
controlsynthesis formultirobotsystemsunderglobaltemporal tasks. [21] Xiang Yin, Bingzhao Gao, and Xiao Yu. Formal Synthesis of
IEEETransactions onAutomaticControl, 64(5):1916–1931, 2018. Controllers for Safety-Critical Autonomous Systems: Developments
[7] MariusKloetzerandCristianMahulea.Pathplanningforroboticteams andChallenges. AnnualReviews inControl,page100940,2024.
based on LTL specifications and petri net models. Discrete Event [22] Xinyi Yu, Xiang Yin, Shaoyuan Li, and Zhaojian Li. Security-
DynamicSystems,30(1):55–79, 2020. preservingmulti-agentcoordinationforcomplextemporallogictasks.
[8] HadasKress-Gazit,MortezaLahijanian,andVasumathiRaman. Syn- ControlEngineering Practice, 123:105130, 2022.
thesisforrobots:Guaranteesandfeedbackforrobotbehavior. Annual [23] Jianing Zhao, Keyi Zhu, Mingyang Feng, and Xiang Yin. To
Review of Control, Robotics, and Autonomous Systems, 1:211–236, exploreornottoexplore:Regret-basedltlplanninginpartially-known
2018. environments, 2024.