1
Distributed maze exploration using multiple agents
and optimal goal assignment
Manousos Linardakis, Iraklis Varlamis, Georgios Th. Papadopoulos
Abstract—Roboticexplorationhaslongcaptivatedresearchers analyzingtheconstructedmapandselectingthemostefficient
aimingtomapcomplexenvironmentsefficiently.Techniquessuch path forward.
as potential fields and frontier exploration have traditionally
Using multiple agents to explore the maze expedites the
been employed in this pursuit, primarily focusing on solitary
mapping process and enhances the coverage of the resulting
agents. Recent advancements have shifted towards optimizing
exploration efficiency through multiagent systems. However, map. However, this approach introduces challenges, includ-
many existing approaches overlook critical real-world factors, ing the need for effective agent communication to share
such as broadcast range limitations, communication costs, and information and organize exploration to prevent collisions or
coverage overlap. This paper addresses these gaps by proposing
obstructions in their paths [11]–[13]. Additionally, multia-
a distributed maze exploration strategy (CU-LVP) that assumes
gent exploration may lead to revisiting previously explored
constrained broadcast ranges and utilizes Voronoi diagrams for
betterareapartitioning.Byadaptingtraditionalmultiagentmeth- areas, extending total mapping time. Distributing the maze
ods to distributed environments with limited broadcast ranges, exploration task to multiple agents offers a solution to these
this study evaluates their performance across diverse maze problems, as robots can first explore their assigned regions
topologies,demonstratingtheefficacyandpracticalapplicability individually, reducing redundant coverage, the number of col-
of the proposed method. The code and experimental results
lisions, and the need for extensive communication compared
supporting this study are available in the following repository:
https://github.com/manouslinard/multiagent-exploration/. to exploring the entire maze map collectively.
Thereareseveralmethodstopartitionamazeintosub-areas,
Index Terms—Cost-utility, distributed maze exploration, mul-
including clustering algorithms such as K-means, which typ-
tiagent, potential fields, Voronoi partitioning.
ically suffer from local optima and potentially lead to higher
robot dispersion [14]. Other approaches, like the Effective
I. INTRODUCTION Regions of Movement (ERM) [15], [16], are available but
EXPLORATIONofmazeshasinterestedresearchersinthere- require additional information (e.g., agent capacity, density,
centyears,offeringawindowintothecognitivecapabili- and speed), which is not easily acquired when exploring an
tiesofvariousorganisms,suchasmice[1],andmorerecently, unknownmaze.Moreover,ERMisappliedtoknownmapsand
the artificial intelligence capabilities of robotic systems [2], is typically used for enhancing and understanding networks,
[3]. While algorithms specifically designed for single-agent suchasthoseinvolvingcars.Inthispaper,weemployVoronoi
maze exploration are widely utilized [4], [5], the adaptation partitioning [17], [18] centered around each agent, due to its
of these algorithms to multiagent systems [6]–[8] presents suitability for unknown areas. Voronoi partitioning has been
persistent challenges, underscoring the necessity for novel proven effective for segmenting 2D spaces, as demonstrated
solutions. by Wu et al. [19], who compared it with K-means for area
The task of mapping unknown mazes for exploration ne- coverage. Their results showed that Voronoi partitioning was
cessitates strategic methodologies. Robots traverse the maze, consistently faster than K-means across all examined maps.
documentingtheirjourneyandobservationstoconstructamap Our proposed approach, named CU-LVP, is designed to
astheyadvance[9],[10].Byemployingsensors,theyidentify address the distributed maze problem. Experiments detailed
walls and obstacles, enabling them to make informed deci- in Section V showcase the method’s efficiency, low com-
sionsregardingtheirsubsequentmovements.Uponmappinga putational complexity, minimal communication, and reduced
significant portion of the maze, robots strategize their routes repetitive coverage. We compare our method with other state-
towards their objectives, which could be reaching the exit or of-the-arttechniquesadaptedtothedistributedmazeproblem.
locatingspecifictargetswithinthemaze.Thisprocessinvolves To evaluate performance, we conduct extensive experimental
evaluations across a variety of maze topologies, including
Research was possible due to the funding from the European Union’s 30x30randomlygeneratedmazeswithvaryingobstacledensi-
Horizon Europe research and innovation programme under grant agreement
ties. These experiments prove CU-LVP’s efficacy and provide
No101073876(Ceasefire).
Manousos Linardakis is with the Department of Informatics and Telem- a comprehensive assessment of each method’s performance.
atics, Harokopio University of Athens, Athens, Greece (e-mail: manousli- They offer valuable insights into their effectiveness in explor-
nard@gmail.com,it22064@hua.gr).ORCID:0009-0001-7060-848X.
ing distributed mazes and their practical applicability in real-
Iraklis Varlamis is with the Department of Informatics and Telematics,
HarokopioUniversityofAthens,Athens,Greece(e-mail:varlamis@hua.gr). worldroboticsystems.Additionally,byintegratingconstraints
ORCID:0000-0002-0876-8167. on broadcast ranges across all evaluated methods, we aim
Georgios Th. Papadopoulos is with the Department of Informatics
to emulate real-world communication limitations. By incor-
and Telematics, Harokopio University of Athens, Athens, Greece (e-mail:
g.th.papadopoulos@hua.gr).ORCID:0000-0003-1686-421X. porating these constraints, we enhance the robustness of the
4202
yaM
03
]AM.sc[
1v23202.5042:viXra2
exploration strategies, making them more applicable to real- sub-maps due to false overlap detections, leading to inac-
world scenarios. curacies. To combat this, the authors propose a novel lidar-
The main contributions of this paper can be summarized as based approach that intelligently balances sub-map merging
follows: robustness and exploration efficiency. The approach allows
• A detailed review and classification of the recent explo- agents to adaptively repeat each other’s trajectories based on
ration approaches using multiple agents. merging quality, minimizing redundant exploration. Addition-
• An introduction to the novel method CU-LVP, designed ally, it extends a single-agent hierarchical strategy to mul-
for covering distributed mazes efficiently. tiple agents, enhancing exploration efficiency. Experimental
• An extensive implementation of established multiagent results demonstrate efficiency and exploration accuracy over
mazeexplorationtechniques,appliedindistributedmazes baselines, ensuring robust sub-map merging in complex 3D
through the integration of Voronoi diagrams. environments.
• Acomparativeevaluationofthealgorithms,usingvarious Gui et al. [22] tackled the challenge of efficient distributed
metrics that examine different aspects of the exploration explorationforUAVs,particularlyinsearchandrescuescenar-
task (e.g. time, distance, computational and communica- ios.TheypresentanovelcooperativestrategywhereUAVsdy-
tion cost). namically explore distinct regions, enhancing efficiency while
minimizing redundancy. Using a dynamic centroid-based ap-
Section II offers an overview of related work in state-
proach, the 3D space is partitioned for each UAV, enabling
of-the-art multiagent maze and area exploration. Section III
independent target generation within their designated zones.
details the proposed approach and Section IV explains the
They propose a next-best-view method employing a rapidly
experimental evaluation process that we applied. Section V
exploringrandomtree(RRT)tofostercooperativeexploration
examines the achieved results, whereas Section VI presents
and navigate unknown areas. Comparative evaluations against
the main conclusions of this work and future work.
three classical methods underscore the superiority of their
approachinbothsimulationandreal-worldexperiments,mark-
II. RELATEDWORK
ing a significant advancement in swarm UAV capabilities for
Exploring the field of multiagent maze exploration encom-
dynamic environments like search and rescue missions.
passes a variety of innovative strategies and methodologies.
Latifetal.[23]introducedCQLite,adistributedQ-learning
This section categorizes and reviews significant contributions,
technique tailored to address the challenges of coordinating
highlighting the implementation details of each approach.
multiple mobile robots in the autonomous exploration of
We begin with distributed area exploration techniques, which
complexenvironments.Unlikeconventionalapproachesreliant
emphasize on area/maze partition for efficient task allocation
on internal global maps for navigation, CQLite prioritizes
and coordination among agents. Next, we examine potential
minimizing communication and information exchange costs
field methods, where agents use potential/temperature fields
between robots while ensuring swift convergence and cover-
for maze coverage. Finally, we discuss frontier-based explo-
age.Byleveragingadhocmapmergingandselectivelysharing
ration,wheretheexplorationprocessisbasedoncurrentfron-
updated Q-values at newly discovered frontiers, the method
tiers—the unexplored boundaries of the known environment.
significantly reduces communication overhead. Theoretical
Fig. 1 organizes the related work in a hierarchical structure
analysis and numerical validation conducted on simulated
for enhanced clarity and comparison.
indoor maps with multiple robots underscore the efficiency
of the proposed approach.
A. Distributed Area Methods
Lozenguez et al. [20] introduce a method for efficiently
B. Potential Fields Methods
allocating exploration tasks among multiple mobile robots.
In the context of this paper, we will refer to this method Jincheng Yu et al. [24] introduced the Multirobot Multi-
as RMDP. The approach uses a combination of Road-Map target Potential Field (MMPF), a novel approach that uses
techniques and Markovian Decision Processes (MDPs) to potential fields for maze exploration. The robots operate con-
manage the exploration of areas marked by points of interest. currently, utilizing a simultaneous localization and mapping
Byrepresentingspatialknowledgeasadynamicallyadjustable (SLAM)techniquefornavigationandmappingtasks.Notably,
graphofwaypointsandpartitioningthisgraphintoregions,the MMPF does not initially implement any partitioning of the
method enables optimal task assignments based on real-time environment. Instead, the research emphasizes localization,
evaluations. As part of the R-Discover project, this research dispersingagentsacrossdisparateareasoftheenvironment.As
supports the use of UAVs for initial mapping, followed by agents subsequently explore overlapping regions, localization,
ground robots for detailed exploration. Robots operate under and information exchange occur to facilitate comprehensive
a hierarchical control system, with leaders dynamically real- mapping of the area.
locating tasks to maximize efficiency during the mission. Crnkovic et al. [25], [26] proposed HEDAC, a robust
Yanetal.[21]proposedMUI-TAREtoaddresstheintricate algorithm designed for both area and maze exploration. By
task of multiagent exploration in confined 3D spaces with leveraging temperature fields to compute attractive forces,
unknowninitialagentposes.Theirworkfocusesonefficiently HEDAC excels in prioritizing the exploration of unknown
exploring these environments and effectively merging agents’ regions while mitigating collisions. Specifically, it creates a
sub-maps. Traditional strategies often struggle with merging strong attractive force for unexplored areas and a weaker3
Fig.1. HierarchicalStructureoftheRelatedWork(SectionII).Methodinbold(CU-LVP)isourproposedmethod.
forceforobstaclesandotheragents.HEDAChasdemonstrated Marjovi et al. [30] present a cost-utility approach, referred
efficacy in uncertain conditions, such as variations in sensor to here as CU-MNM, which effectively explores mazes while
readingsandunpredictableenvironmentalfluctuations,asdoc- detectingfires.TheutilityfunctioninCU-MNMisdetermined
umented in [27]. by the distance of the frontier from all robots. This decen-
A similar approach to HEDAC that utilizes Voronoi dia- tralized approach promotes communication and collaborative
gramstodivideanareaintosubregionsispresentedbyZheng decision-making among the robots.
et al. [28], which we will refer to as HYC in this paper. Another cost-utility method, introduced by Julia et al. [31],
In HYC, each subregion is explored by an agent using a uses the expected information gain in goal cells as the utility
temperature field-induced control strategy. For our study, we function to facilitate efficient exploration. For this paper, this
haveimplementedHEDACinsteadofHYCbecause,although method will be referred to as CU-JGR.
both methods use temperature fields, HEDAC is specifically Bautin et al. [32] propose a computationally efficient fron-
designed for maze exploration with many or fewer obstacles, tier allocation method, referred to as CU-BSO in this paper,
whereas HYC is not clearly implemented for such scenarios. which encourages a balanced spatial distribution of robots
The tested areas in the HYC paper are described as concave within the environment. This method uses wavefront propa-
regions formed by removing small squares from larger ones, gation [33], originating from each frontier to quickly create a
and the agent trajectories in the provided figures suggest that distance matrix (cost matrix) for all cells, and then selects
the tested areas are largely obstacle-free. Therefore, HEDAC frontiers with fewer nearby robots. The use of wavefront
has been deemed a more suitable choice for our task, given propagationunderscoresreducedcommunicationrequirements
its effectiveness in both high and low-obstacle-density envi- amongrobots.Anexampleofthewavefrontalgorithmapplied
ronments. Additionally, we have modified HEDAC to address to a maze environment is shown in Fig. 2.
the distributed maze problem, incorporating principles from Beyond cost-utility functions, Zhang et al. [34] proposed
the HYC paper, as detailed in Section IV-B. the TOPO exploration method, designed to enhance multia-
gent exploration in communication-constrained environments.
TOPO employs a frontier exploration strategy with a greedy
C. Frontier Methods
approach, calculating the center of existing vertices whenever
Exploring multiagent systems has led to a variety of meth- a new vertex is added. TOPO also constructs topological
ods and algorithms, with the nearest-frontier method being maps as robots navigate through the environment, reduc-
notable for its simplicity and effectiveness. Initially proposed ing the data required for path planning and communication.
byYamauchi[29],thismethodfocusesonfindingtheshortest Unlike traditional methods that depend on occupancy grid
path to the closest frontier. Despite its efficiency, recent maps, TOPO significantly lowers data transfer requirements,
advancements in exploration strategies have introduced more as demonstrated in both simulated and real-world scenarios.
sophisticated techniques, particularly those that use utility When compared to the MMPF method [24], TOPO was
functions to enhance frontier selection. Cost-utility methods, shown to be faster in exploring the area through extensive
for example, improve upon the deterministic nearest-frontier experimentation.
approach by incorporating additional utility functions, thus Our approach (CU-LVP) contributes to the existing lit-
optimizing both exploration efficiency and decision-making erature by introducing an efficient cost-utility method tai-
processes. lored to address the challenges of distributed maze coverage.4
A. Definition of the robotic agent
Inourexperiments,wedefineanagentclassthatrepresents
the behavior of individual agents within a maze environment.
Theagentsarecapableofmovinginfourdirections:up,down,
left, and right. To avoid collisions, they are prohibited from
moving into cells that are already occupied by other agents or
obstacles.Eachagentkeepsapersonalmapoftheareasithas
explored in the maze. This map is continuously updated with
information collected by other agents within broadcast range
in each round. By sharing information about the explored
sections of the maze, we simulate typical multiagent com-
munication and behavior for maze exploration. Additionally,
the agent’s map is updated as it explores new areas within
its sensor range, which, by default, extends two blocks in all
Fig. 2. Wavefront distance calculation for the entire maze. The gray dot
indicatestheagent’sposition,whereaseachemptycellcontainsthedistances orthogonalanddiagonaldirections.Thissimulatesthesensing
fromtheagent.Theblackcellsrepresentobstacles. capabilities of real-world robots, which often have sensors on
all sides. Moreover, the agent maintains a list of coordinates
corresponding to its assigned Voronoi region earmarked for
exploration. During each iteration, the agent employs the
utility function described in Section III-C to choose a goal
exclusively from its unexplored Voronoi coordinates. Once
the agent discovers its designated Voronoi coordinate either
autonomously or through information exchange with other
agents, it redirects its focus to other (unexplored) Voronoi
coordinates, thereby continuing its exploration trajectory.
Fig. 4 (in the bottom) shows an agent’s explored map at
thebeginning,followinginitialinformationexchangebetween
agents. The map is shown with a two-block view range, as
Fig.3. Abstractoverviewofproposedmethodology.Implementationdetails
areprovideedinSectionIII. configured in our experiments. If an obstacle is detected, the
view beyond it is blocked to mimic real-sensor behavior. The
agent class also stores essential parameters for exploration,
Throughrigorousexperimentation,wehavedemonstratedthat including the agent’s goal (marked with a red dot in Fig. 4),
our method outperforms comparative approaches in terms thenextpositionalongtheshortestpathtothetarget(indicated
of speed, achieving faster maze exploration while imposing by a red line), the current position, and the view range. These
minimal communication overhead, computational cost, and parameters allow us to implement realistic agent behavior and
coverage overlap. Section V delves into this balance of met- exploration scenarios.
rics, showcasing results that validate CU-LVP’s effectiveness.
B. Voronoi Partitioning
CU-LVP relies on Voronoi partitioning to divide the maze,
III. PROPOSEDMETHOD with each region centered around an agent. Consequently, the
number of maze sub-regions in our experiments matches the
CU-LVPisacost-utilityapproachthatenhancesfrontierse- number of agents. Agents are then tasked with exploring all
lectionbycombiningmodificationsofpreviouslyimplemented cells within their assigned region. As they navigate the maze
utility functions. It also effectively addresses the distributed using the utility function described in Section III-C, agents
maze problem by selecting frontiers assigned to each agent within the broadcast range share information with each other,
individually through Voronoi partitioning. Specifically, the facilitating collaborative exploration. The broadcast range is
process begins with map partitioning, where the maze is di- defined as 25% of the maximum dimension of the maze.
videdintosubareasusingVoronoidiagrams.Eachagentisthen Furthermore,toexpeditetheexplorationprocess,amechanism
assigned a specific subarea to explore. The next step involves is implemented to merge Voronoi regions when agents come
frontierfinding,wherethebestfrontierisselectedwithineach into broadcast range. This merging facilitates a broader scope
subarea, according to the utility function described in Section of exploration for agents, allowing them to explore the maze
III-C. The shortest path to each frontier is then calculated, more effectively.
ensuring efficient navigation. Fig. 3 provides a high-level An example of the Voronoi partition process and broadcast
overview of our methodology, illustrating its application for range can be found in Fig. 4. On the top image, the starting
distributed maze coverage. Before going into more details of Voronoiregionsaredepicted.Initially,allspaceinthemazeis
theproposedapproachitisnecessarytodefinethemainentity considered as free space, in order for the agents to explore it.
of our method, the agent. The darker gray cells represent the obstacles that the agents5
boring regions to access their next target within their Voronoi
region, overcoming obstacles that might impede progress if
they were to confine their movement solely within their
designated area. Subsequently, they update their exploration
map to reflect their progress. However, the primary focus
remains on achieving complete coverage within the assigned
region.
C. Goal selection
Initially,CU-LVPuseswavefrontpropagation,startingfrom
the agent’s position, to efficiently calculate the shortest path
lengths to the frontiers of its assigned region. Among the
unexplored cells in the agent’s Voronoi partition, the nearest
frontier is selected based on distance. If multiple frontiers
share the same minimum distance, for each frontier a in the
i
nearest frontier list, the utility function described later in this
sectioniscomputed.Thefrontierwiththehighestutilityscore
is chosen as the agent’s next target cell.
CU-LVP also ensures that all agents within the broadcast
range have different goals by excluding frontiers already
assigned to an agent, provided the number of unexplored
frontiers is greater than or equal to the number of agents.
This differentiation is applied when agents share the same
Voronoi region, either due to merging their regions or explor-
ingregionsassignedtootheragentsoncetheyhavecompleted
the exploration of their initial regions. By excluding assigned
frontiers,agentsavoidconvergingtothesamegoals,spreading
out efficiently across different areas. It is also important to
notethatthisdifferentiationcanonlybedetectedwhenagents
are within broadcast range, enabling them to communicate
and share their assigned frontiers, thus avoiding duplication.
Additionally, when agents explore the same (or neighboring)
Fig. 4. Visualization of the initial Voronoi regions for a randomly 30x30 regions, one agent may inadvertently explore a goal intended
generated maze (top image). Agents within broadcast range (bottom image) for another. To encounter this, CU-LVP checks at each round
have merged their Voronoi regions and exchanged information about their
whetheranagent’sgoalhasbeenexploredbyotherswithinits
surroundings.Additionally,onthebottom,theredlinedepictsthewavefront
path(x1,x2)fromanagent(x0)toitsgoal(f)withinitsregion.Theblack broadcast range. If the goal has been explored, the algorithm
cellsrepresenttheagents.ThecoloredcellsdepicttheVoronoiregions,with recalculates the next optimal goal, enhancing overall explo-
each color representing a different partition, whereas the darker gray cells
ration efficiency.
denoteobstacles.
The utility function of CU-LVP combines elements from
the cost-utility function CU-MNM [30] (later referenced as
u ) and the CU-JGR approach [31]. Instead of merely
find along the way. Additionally, in the bottom image, the mnm
considering the neighboring cells (in view range) of the goal
Voronoi regions of two agents (depicted as black cells) within
cell in the cost-utility function, as CU-JGR does, our method
the broadcast range have merged. This merging results in
considerstheneighboringcellsalongthewholewavefrontpath
the region adopting a red hue, signifying consolidation into
from the current position of the agent to its goal cell (later
a single region. Furthermore, the two agents have exchanged
referenced as u ). This comprehensive calculation provides
informationabouttheirrespectivesurroundingswithinasensor jgr
a more accurate estimation of the expected explored cells and
range. It’s worth noting that the agent’s goal (depicted as a
improves the overall efficiency of the maze exploration task,
red dot in the bottom image) lies within its Voronoi region,
as demonstrated in the experimental evaluation. Specifically,
signifying correct code execution.
the formula for this new cost-utility function is as follows:
Throughout the exploration process, agents periodically
transmit their explored maps centrally, without pulling them.
utility(f)=N(u (f))+λ·N(u (f)) (1)
This allows for monitoring of exploration progress and fa- mnm jgr
cilitates experiment termination when the maze is explored. wheref representsthenearestfrontiercellunderexamination
Upon completing the exploration of their designated region, within the agent’s Voronoi region, and N(x) denotes the min-
agents move to the nearest unexplored Voronoi region, which max normalization function, ensuring values fall within the
is decided based on the central map. range [0, 1]. If cell x is the current position of agent x, the
0
Agentsalsopossessthecapabilitytotraversecellsinneigh- path P is the sequence x ,...,x ,...,x of cells that the agent
1 i n6
has to cross in order to reach the target f, which always lies agent is unable to reach the nearest frontier due to obstacles
within the agent’s assigned region. These cells of path P may or blocked paths caused by other agents within broadcast
not all belong to the region assigned to this agent, allowing range, it remains stationary until the obstructing agents move.
theagenttoovercomeobstaclesthatmightimpedeprogressif However, this is a rare occurrence due to the integration of
itwereconfinedsolelywithinitsdesignatedarea.Astheagent Voronoi partitioning. As detailed in Section III-B, agents pri-
follows path P, several unexplored cells within its view range oritize exploring their own Voronoi regions, which effectively
will be explored, enhancing the overall exploration efficiency prevents collisions throughout the experiments. Consequently,
if the agent selects the specific frontier f. collisions may occur only when two or more agents navigate
Moreover, the method incorporates a parameter λ, which through the same Voronoi region.
was determined to be optimal at 0.2 after conducting 100
experiments across maze dimensions of 15x15, 30x30, and IV. EVALUATIONFRAMEWORK
50x50. A more comprehensive comparison of the outcomes ToevaluatetheperformanceofthenewlyproposedCU-LVP
across different λ values is shown in Fig. 5, using Copeland’s and compare it with other state-of-the-art techniques that we
method. Copeland’s method [35]–[37] is a voting technique, adaptedtothedistributedmazeproblem,weconductedexper-
which allows ranking multiple methods that are compared imentsusingrandomlygeneratedmazesandavaryingdensity
on a set of experiments with varying parameters (e.g. maze of obstacles. Several metrics were used to evaluate the per-
sizes,numberofagentsorpartitions,etc.)toprovideaunified formance of different methods under various conditions. The
ranking. The technique involves pairwise comparisons of the experimentsran500timesandtheaveragescoresarereported.
average scores obtained across the experiments for each λ The code and results of our experiments are available in a
value. Based on the results, we can determine which λ code repository (https://github.com/manouslinard/multiagent-
value consistently received more votes, thereby establishing exploration/).
its superiority across the experiments.
A. Maze Generation
For generating mazes, we adapted the methodology de-
scribed in [38]. This method involves moving an agent ran-
domly in orthogonal directions (up, down, left, and right)
within a grid to construct the maze. Also, we extended this
approach by introducing a probability factor for each obstacle
cell, determining whether an obstacle should remain or be
converted to empty space, thus allowing for the creation of
mazes with varying levels of complexity. The function also
permits the specification of maze dimensions.
The mazeis represented asa 2D arraywith four cellstates:
unexplored cells (-1), free space (0), obstacles (1), and agent
Fig.5. CopelandComparisonfordifferentλvaluesofCU-LVPacross100
cells (2). When an agent views its surroundings, cells within
experimentsinvariousmazesizes(namely15x15,30x30,and50x50).
itsrangearemarkedusing0forfreespaceand1forobstacles.
The first utility score of the utility function (1), u , for For our experiments, we generated 30x30 mazes with vary-
mnm
the (nearest) frontier cell f is defined as: ing obstacle probabilities to create environments of differing
complexities, set at 85% and 15%. This range enabled a
n
(cid:88) thorough evaluation of the algorithms’ performance under
u (f)= dist[(X ,Y ),(X ,Y )] (2)
mnm f f ri ri differentconditions.Anobstacleprobabilityof85%simulates
i=1
acomplex,maze-likestage,whereas15%resemblesasparsely
where, x 0 = (X ri,Y ri) represents the position of agent i, obstructed area. To ensure robustness in our evaluation, new
x n = (X f,Y f) denotes the position of frontier f within its mazes were generated for each experiment, providing fresh
Voronoi region, and n signifies the number of agents. Also, scenarios to test the efficiency of the algorithms. Fig. 6 shows
u jgr for the frontier cell f is defined as: two randomly generated 30x30 mazes, one with an obstacle
probabilityof15%andtheotherwith85%,demonstratingthe
(cid:88)
u (f)= Unex(x ,r) (3) diversity in maze complexity examined in our experiments.
jgr i
xi∈P
where Unex(x,r) represents the number of unexplored cells B. Baseline methods
within the agent’s view range at cell x. x denotes the The baseline methods used to compare CU-LVP are de-
i
individual elements (cells) of the path, designated as the scribed in Table I. Each method has been implemented from
wavefrontpath,guidingtheagenttowardsthetargetfrontierf. scratch based on the corresponding papers and adapted to
Onceagain,thefrontier(s)f consideredarewithintheagent’s the distributed maze problem using Voronoi partitioning. The
currently assigned Voronoi region. specifics of the modifications for adapting these methods
CU-LVP also incorporates collision avoidance strategies to to partitioned mazes are detailed in Section IV-B1, whereas
navigate around other agents or obstacles. Specifically, if an parameter tuning is discussed in Section IV-B2.7
Fig. 6. Randomly generated 30x30 mazes from the experiments. The left
maze has an obstacle probability of 15%, whereas the right maze has an
obstacleprobabilityof85%.
TABLEI Fig. 7. Copeland Comparison for different λjgr values of CU-JGR across
METHODSUSEDFORCOMPARATIVEANALYSISINDISTRIBUTEDMAZE 100experimentsinvariousmazesizes(namely15x15,30x30,and50x50).
EXPLORATION.
Name Description experimentation in distributed mazes, we found that setting
HEDAC Utilizespotentialfieldstoexplorethemaze[25].
this parameter to 100 yielded the best results. Lower values
Nearest-Front Selectstheclosestfrontiertotheagent[29].
CU-BSO Useswavefrontpropagation&selectsthefrontierwith caused agents to become trapped in local minima, impeding
lessrobotsnearit[32]. exploration progress, whereas higher values significantly in-
CU-MNM Cost-utilitymethodconsideringthedistancesoffron-
creased computation time. Additionally, HEDAC includes a
tiersfromallagents[30].
CU-JGR Cost-utility method estimating the expected explored parameter denoted a, which we found to perform optimally
cellsinthetargetcell[31]. whensetto10.Furthermore,theanti-collision(AC)condition
outlined in the original HEDAC paper is set to ON in our
experiments. This means that if an agent has information that
1) VoronoiPartitioningforBaselineMethods: Thebaseline
one of the other agents is currently standing on one of its
methodswereadaptedtothedistributedmazeproblem.Specif-
neighboringnodes,theagentdoesnotconsiderthisnodeforits
ically, frontier exploration methods like CU-MNM, CU-JGR,
nextposition.WealsoextendedtheoriginalHEDACapproach
CU-BSO, and Nearest Frontier follow the same principles for
by setting the agent’s view range to two blocks.
Voronoi integration as CU-LVP, as discussed in Section III-B.
The CU-JGR algorithm also requires tuning of the pa-
This is due to the fact that they are similar to CU-LVP, since
rameter λ . Through experimentation in partitioned mazes,
jgr
CU-LVP is also a frontier exploration method.
we determined that setting λ to 0.8 resulted in more
jgr
HEDAC on the other hand differs in its adaptation for
efficient maze exploration. Fig. 7 shows the results obtained
thedistributedmazeproblem.Specifically,HEDACconstrains for different λ values, using Copeland’s method.
jgr
the agent’s movements within its designated Voronoi region,
similartoHYC[28].Thisdistinctionarisesfromthecharacter-
C. Evaluation metrics
istic of temperature/potential field methods, which select one
neighboring cell at a time. To ensure navigation solely within To compare the methods, we utilized evaluation metrics
the agent’s Voronoi region, we consider only cells within that proposed by Yan et al. [39]. Additionally, we tracked the
region, treating all other unexplored cells outside of it as number of exploration rounds to measure the repetition of the
obstacles for accurate potential field calculations. exploration process. A metric for estimating the communica-
However, this approach may encounter challenges in maze tion cost between agents was also developed. The evaluation
environments, where obstacles hinder progress, potentially metrics used in this study include: i) Exploration Time, ii)
causing the agent to become trapped and unable to explore its Exploration Rounds, iii) Exploration Cost, iv) Exploration
entireVoronoiregion.Tomitigatethis,werefinedtheHEDAC Efficiency, v) Map Quality, and vi) Communication Cost.
algorithm. Once the agent has explored all reachable cells, 1) ExplorationTime: Theexplorationtimemetricmeasures
we enhance the attraction force along the wavefront path, the total time required for a robot fleet to complete an
guiding the robot toward the nearest frontier. Consequently, exploration mission. The timer starts when at least one robot
the agent can navigate situations where its Voronoi region beginsexploringandstopswhenthefleetcollectivelyachieves
becomes inaccessible due to limited movement within it and 100% terrain exploration. This metric is measured in wall-
thepresenceofobstacles,effectivelyaddressingthedistributed clock time, reflecting the duration in days, hours, minutes,
maze problem. and seconds spent on the exploration task.
2) Parameter Tuning for Baseline Methods: Certain base- In our experiments, exploration time measures the com-
line methods require specific parameter settings to achieve putational time for each method, as the movement time is
optimalperformance.Forexample,inHEDAC,the“iterations” instantaneous. This is because the agents move within a
parameter, as described in the original paper [25], determines simulated grid (a 2D array), where we simply change the
how many times the attractive force should be recalculated cell value from 0 (free space) to 2 (occupied by an agent) to
to produce the final attractive force for each cell. Through signify agent movement. Specifically, the (exploration) time8
is calculated by finding the average time of each round and 6) CommunicationCost: Thecommunicationcostrefersto
multiplying it by the number of rounds. Since the agents thecellstransferredfromoneagenttootherswithinrangedur-
operate sequentially (one agent after the other performs a ingcommunicationintervals.Duringeach(exploration)round,
step in each round), we calculate the average round time by an agent shares its entire explored stage with other agents
dividing the time needed for all agents to make a step to the withinitscommunicationrange.Consideringthefourpossible
number of agents: cell states (-1, 0, 1, and 2), we require 2 bits to represent
each cell. Additionally, since each communication exchange
explorationTime(n)=
(cid:80)n
i=1t si ·R (4) occurs bidirectionally between two agents, the equation for
n calculating the communication cost is formulated as follows:
where t si is the time needed for an agent to make a step. commCost=4·rows·columns (8)
2) Exploration Rounds: Exploration rounds (R) represent
Here, the factor of 4 accounts for the 2 bits needed per cell
the iterative cycles of the exploration process, including both
multiplied by 2, representing the number of communicating
information exchange among agents and the algorithm’s rep-
agents. The variables rows and columns denote the dimen-
etition until maze completion. These iterations measure the
sions of the maze, as the agent transmits its entire explored
number of times the agents have communicated with each
stage during each communication cycle. For instance, in a
other, as information sharing occurs in each round for agents
30x30 maze, both the number of rows and columns is 30.
within broadcast range. Exploration iterations conclude when
the entire maze has been fully explored.
3) Exploration Cost: The exploration cost is based on user D. Hardware description
specifications, including factors such as energy consumption The final experiments were conducted on a PC running
by computational resources (e.g., CPU, RAM, and network LinuxequippedwithanIntel(R)Core(TM)i5-1235UCPU.To
bandwidth) and robot-related expenses like acquisition, han- optimizecomputationalefficiency,thePythonmultiprocessing
dling, and maintenance costs. Their definition of the explo- library was employed, utilizing all available processing cores.
ration cost metric requires summing the distances traveled by Detailed results of these experiments are presented in Section
each robot during the collaborative maze exploration. This V.
metric can also be utilized to measure repetitive coverage, as
it is calculated using the following formula:
V. EXPERIMENTALRESULTS
n Theresultsconsistof500experimentrepetitionsconducted
(cid:88)
explorationCost(n)= d (5) with varying numbers of agents; specifically 1, 2, 4, 6, 8,
i
i=1 10, 15, and 20. Each agent configuration explored mazes of
dimensions 30x30 with obstacle probabilities set at 85% and
where n is the number of robots in the fleet, and d is the
i 15%. These experiments included both baseline methods and
distance traveled by robot i.
thenewlyproposedCU-LVP,asdepictedintheresultingplots.
4) Exploration Efficiency: Exploration efficiency relates to
Fig. 8 (refer to Section IV-C for details on the metrics) shows
the amount of environmental information acquired, inversely
the average scores and standard deviations obtained from the
proportional to the costs incurred by the robot fleet. It is
experiments for each agent group and exploration method.
described by the following formula:
For the final evaluation, we employed the Composite Index
Scoring method [40], [41]. This method is a powerful and
M popular tool for providing an overall measure of a subject (in
explorationEfficiency(n)= (6)
explorationCost(n) ourcase,amethod)bysummarizingagroupofmeasurements
(componentindices)ofdifferentaspectsofthesubject/method.
wherenisthenumberofrobotsinthefleetandM isthetotal
Itiswidelyusedineconomics,finance,policyevaluation,per-
explored cells.
formance ranking, and many other fields. According to [40],
5) Map Quality: The map quality is defined as the overlap
the most widely used approach is to use a linear combination
of the explored map and the ground truth map as a ratio to
of the component indices with specified weights. In our case,
the total area of the ground truth map P:
the components are the metrics defined in Section IV-C, and
theweightsareallsetto1,asallmetricsareequallyimportant.
M −A(mapError)
mapQuality = (7) Specifically,weproducedtheCompositeIndexScoringplot
P
by normalizing all the metrics for each agent group using
where M are the total explored cells, P is the total area of min-maxscaling.Thismeans,forexample,thatthemaximum
thegroundtruthmap,andA(mapError)istheareaoccupied value of the min-max scaling for a setup with N agents is the
by error cells. Error cells are those in the explored map that largest (average) metric value (for the 500 repetitions) for the
differinvaluefromthecorrespondingcellsinthegroundtruth N-agents’ setup only (and similarly for the minimum value).
map.Inourexperiments,themapQuality metricconsistently We ranked each method in each agent group for all metrics
reaches 100% due to the efficiency of the algorithms and the based on these normalized values. Then, we summed these
designofthemazes,whichfacilitateagents’accesstoallareas rankings using equal weights to create the final Composite
for exploration. Index Scoring plot. The resulting Composite Index plot is9
to CU-LVP in complex mazes (85% obstacles). However, in
simpler mazes (15% obstacles) and with more than 4 agents,
CU-LVP proves to be more efficient. Other methods like
CU-MNM, CU-BSO, and HEDAC are more computationally
expensive,leadingtolongerexplorationtimes.Thisefficiency
is attributed to CU-LVP’s use of wavefront propagation to
find the nearest frontiers, resulting in faster utility function
calculations and overall algorithm performance.
The second row of Fig. 8 shows the Exploration Rounds
Metric. In mazes with dense (i.e. 85%) obstacles, CU-LVP
performs comparably to other methods except for CU-JGR,
whichhasthehighestnumberofexplorationrounds.Inmazes
withfew(i.e.15%)obstacles,CU-LVPgenerallyrankssecond
to HEDAC when there are fewer agents. As the number
of agents increases, performance across methods becomes
similar, except for CU-JGR, which consistently performs the
worst, exhibiting the highest exploration rounds in both maze
scenarios.
The third row presents the Exploration Cost results, which
can also be interpreted asrepetitive coverage results. CU-JGR
againperformstheworstinbothscenarios.Similarly,HEDAC
falls short compared to other methods in the dense obstacle
setting, gradually ranking as the second-worst in exploration
cost as the number of agents increases. CU-LVP remains
competitive in complex mazes, improving its performance as
the number of agents increases. In simpler mazes, CU-LVP
typically ranks second to HEDAC with fewer agents, but this
disparity diminishes as the number of agents rises, eventually
achieving parity with HEDAC.
The fourth row displays Exploration Efficiency perfor-
mance. CU-JGR has the lowest efficiency in both maze
conditions, followed by HEDAC in 85% obstacle probability
mazes. CU-LVP’s efficiency is comparable to other cost-
utility methods in dense mazes. In simpler mazes, HEDAC
is the most efficient, followed by CU-LVP, with both methods
performing equally well as the number of agents increases.
The fifth and final row shows Communication Cost results.
CU-JGR consistently has the highest communication cost in
all maze topologies. Communication costs increase for all
methods as the number of agents rises. CU-LVP maintains
one of the lowest communication costs overall, especially in
simpler mazes where it consistently ranks first. This is likely
Fig.8. Resultsof500experiments,utilizingthemetricsdescribedinSection
due to the effective dispersion of robots by CU-LVP, reducing
IV-CforCU-LVPandbaselinemethods.
communication overhead.
displayed in Fig. 9 and detailed in Section V-B. Greater
B. Composite Index Scoring
values in the Composite Index Scoring denote better method
performance. Examining the Composite Index depicted in Fig. 9, it be-
comesevidentthatCU-LVPachievedthehighestoverallscore
in both maze topologies. Particularly, it outperforms all other
A. Results of Metrics
methods in complex mazes (with 85% obstacle probability)
The results of the metrics showcase the overall efficiency andexcelswhenmorethan4agentsareusedintheexploration
of CU-LVP. The first row of plots in Fig. 8 displays the of simpler mazes. However, for 1 and 2 agents in less
Exploration Time results on a logarithmic scale for better complicated mazes, HEDAC exhibits superior performance.
visibility. CU-LVP is among the least computationally ex- TheadvancementofCU-LVPoverotherbaselinesstemsfrom
pensive methods across both maze topologies, comparable to its competitive results across all maze settings in metrics such
Nearest-Frontier, i.e. the simplest baseline method. CU-JGR, as Exploration Rounds, Exploration Cost, Communication,
another computationally efficient method, performs similarly andEfficiency,whilemaintainingsignificantlylowercomputa-10
REFERENCES
[1] A.-K.Kraeuter,P.C.Guest,andZ.Sarnyai,“They-mazeforassessment
ofspatialworkingandreferencememoryinmice,”Pre-clinicalmodels:
Techniquesandprotocols,pp.105–111,2019.
[2] S. Alamri, H. Alamri, W. Alshehri, S. Alshehri, A. Alaklabi, and
T. Alhmiedat, “An autonomous maze-solving robotic system based on
anenhancedwall-followerapproach,”Machines,vol.11,no.2,p.249,
2023.
[3] S. Alamri, S. Alshehri, W. Alshehri, H. Alamri, A. Alaklabi, and
T. Alhmiedat, “Autonomous maze solving robotics: Algorithms and
systems,”InternationalJournalofMechanicalEngineeringandRobotics
Research,vol.10,no.12,pp.668–675,2021.
[4] A. Kamalova, K. D. Kim, and S. G. Lee, “Waypoint mobile robot
exploration based on biologically inspired algorithms,” IEEE Access,
vol.8,pp.190342–190355,2020.
[5] O.DoukhiandD.J.Lee,“Deepreinforcementlearningforautonomous
map-lessnavigationofaflyingrobot,”IEEEAccess,vol.10,pp.82964–
82976,2022.
[6] A.Dorri,S.S.Kanhere,andR.Jurdak,“Multi-agentsystems:Asurvey,”
IEEEAccess,vol.6,pp.28573–28593,2018.
[7] S. Li, S. He, Y. Zhang, X. Shi, G. He, and T. Jiang, “Edge intelli-
Fig.9. CompositeIndexScoresacrossdifferentmethods. genceenabledheterogeneousmulti-robotnetworks:Hybridframework,
communicationissues,andpotentialsolutions,”IEEENetwork,vol.36,
no.6,pp.108–115,2022.
[8] G.T.Papadopoulos,M.Antona,andC.Stephanidis,“Towardsopenand
tionalcomplexitycomparedtootherbaselines,exceptNearest
expandablecognitiveaiarchitecturesforlarge-scalemulti-agenthuman-
Frontier, i.e. the simplest frontier exploration method. robot collaborative learning,” IEEE Access, vol. 9, pp. 73890–73909,
2021.
[9] F. Amigoni, J. Banfi, and N. Basilico, “Multirobot exploration of
VI. CONCLUSIONS communication-restricted environments: A survey,” IEEE Intelligent
Systems,vol.32,no.6,pp.48–57,2017.
This work introduced CU-LVP, a novel method for mul-
[10] J. P. Queralta, J. Taipalmaa, B. Can Pullinen, V. K. Sarker,
tiagent maze exploration in distributed mazes, which demon- T.NguyenGia,H.Tenhunen,M.Gabbouj,J.Raitoharju,andT.Wester-
stratescompetitiveresultsacrossvariousmetrics.Notably,CU- lund,“Collaborativemulti-robotsearchandrescue:Planning,coordina-
tion,perception,andactivevision,”IEEEAccess,vol.8,pp.191617–
LVP exhibits exceptional performance in Exploration Time
191643,2020.
(computational complexity), showcasing its efficiency by re-
[11] P.MazdinandB.Rinner,“Distributedandcommunication-awarecoali-
quiring minimal computations to explore mazes effectively. tion formation and task assignment in multi-robot systems,” IEEE
The effectiveness of CU-LVP is further evidenced in the Access,vol.9,pp.35088–35100,2021.
[12] D. Cai, S. Wu, and J. Deng, “Distributed global connectivity mainte-
Composite Index plot, where it emerges as the top performer
nance and control of multi-robot networks,” IEEE Access, vol. 5, pp.
acrossbothcomplicatedandsimplermazes,strikingabalance 9398–9414,2017.
between swift exploration, low computational overhead, min- [13] Y.Wu,X.Ren,H.Zhou,Y.Wang,andX.Yi,“Asurveyonmulti-robot
coordinationinelectromagneticadversarialenvironment:Challengesand
imized communication between agents, and reduced coverage
techniques,”IEEEAccess,vol.8,pp.53484–53497,2020.
overlap. [14] H.Li,H.He,andY.Wen,“Dynamicparticleswarmoptimizationand
Moving forward, our research endeavors will focus on in- k-meansclusteringalgorithmforimagesegmentation,”Optik,vol.126,
no.24,pp.4817–4822,2015.
tegrating successful elements from other methodologies, such
[15] E.R.Magsino,“Homogeneousmappartitioningemployingtheeffective
as HEDAC, into the utility function to enhance performance
regions of movement method,” in Pervasive Computing and Social
in simpler mazes with fewer agents. Additionally, we plan Networking:ProceedingsofICPCSN2022. Springer,2022,pp.271–
to incorporate cutting-edge techniques in the baseline meth- 284.
[16] E.R.MagsinoandI.W.-H.Ho,“Anenhancedinformationsharingroad-
ods, such as the recently introduced reinforcement learning
sideunitallocationschemeforvehicularnetworks,”IEEETransactions
methodCQlite[23],whichsharessimilaritieswithCU-LVPin onIntelligentTransportationSystems,vol.23,no.9,pp.15462–15475,
emphasizing frontier exploration in distributed mazes. More- 2022.
[17] F. Aurenhammer and R. Klein, “Voronoi diagrams.” Handbook of
over, the application of these methods in real-world settings
computationalgeometry,vol.5,no.10,pp.201–290,2000.
holds promise for providing invaluable insights into their [18] H. Moulinec, “A simple and fast algorithm for computing discrete
performance and efficiency when confronted with practical voronoi, johnson-mehl or laguerre diagrams of points,” Advances in
EngineeringSoftware,vol.170,p.103150,2022.
complexities.Suchinsightswillfuelfurtheradvancementsand
[19] M.Garc´ıa,D.Puig,L.Wu,andA.Sole´,“Voronoi-basedspacepartition-
adaptations, enabling broader applicability. ingforcoordinatedmulti-robotexploration,”JoPha:JournalofPysical
Agents, ISSN 1888-0258, Vol. 1, Nº. 1, 2007, pags. 37-44, vol. 1, 01
2007.
ACKNOWLEDGMENT
[20] G.Lozenguez,L.Adouane,A.Beynier,P.Martinet,andA.-I.Mouaddib,
The research leading to these results has received funding “Map partitioning to approximate an exploration strategy in mobile
robotics,” in Advances on Practical Applications of Agents and Mul-
from the European Union’s Horizon Europe research and
tiagentSystems:9thInternationalConferenceonPracticalApplications
innovation programme under grant agreement No 101073876 ofAgentsandMultiagentSystems. Springer,2011,pp.63–72.
(Ceasefire). This publication reflects only the authors views. [21] J. Yan, X. Lin, Z. Ren, S. Zhao, J. Yu, C. Cao, P. Yin, J. Zhang,
and S. Scherer, “Mui-tare: Cooperative multi-agent exploration with
The European Union is not liable for any use that may be
unknowninitialposition,”IEEERoboticsandAutomationLetters,vol.8,
made of the information contained therein. no.7,pp.4299–4306,2023.11
[22] J.Gui,T.Yu,B.Deng,X.Zhu,andW.Yao,“Decentralizedmulti-uav ManousosLinardakisiscurrentlyanundergraduate
cooperative exploration using dynamic centroid-based area partition,” studentattheDepartmentofInformaticsandTelem-
Drones,vol.7,no.6,p.337,2023. atics,HarokopioUniversityofAthens.Hehascon-
[23] E.LatifandR.Parasuraman,“Communication-efficientmulti-robotex- ducted research in multirobot exploration and hand
ploration using coverage-biased distributed q-learning,” IEEE Robotics gesturerecognitionandhasexperienceinmanaging
andAutomationLetters,vol.9,no.3,pp.2622–2629,2024. laboratorysystems,implementingDevOpspractices,
[24] J.Yu,J.Tong,Y.Xu,Z.Xu,H.Dong,T.Yang,andY.Wang,“Smmr- and developing decision support software. He also
explore:Submap-basedmulti-robotexplorationsystemwithmulti-robot has participated in the Google Summer of Code
multi-targetpotentialfieldexplorationmethod,”in2021IEEEInterna- as an open-source developer. His research interests
tional Conference on Robotics and Automation (ICRA). IEEE, 2021, includedatascience,machinelearning,robotics,and
pp.8779–8785. multiagentsystems.
[25] B. Crnkovic´, S. Ivic´, and M. Zovko, “Fast algorithm for centralized
multi-agentmazeexploration,”arXivpreprintarXiv:2310.02121,2023.
[26] S. Ivic´, B. Crnkovic´, and I. Mezic´, “Ergodicity-based cooperative
multiagent area coverage via a potential field,” IEEE Transactions on
Cybernetics,vol.47,no.8,pp.1983–1993,2017.
[27] S.Ivic´,“Motioncontrolforautonomousheterogeneousmultiagentarea
search in uncertain conditions,” IEEE Transactions on Cybernetics,
vol.52,no.5,pp.3123–3135,2020.
[28] Y. Zheng and C. Zhai, “Distributed coverage control of multi-agent
systemsinuncertainenvironmentsusingheattransferequations,”arXiv
preprintarXiv:2204.09289,2022.
[29] B. Yamauchi, “Frontier-based exploration using multiple robots,” in
Proceedings of the second international conference on Autonomous Iraklis Varlamis (Member, IEEE) received the
agents,1998,pp.47–53. M.Sc. degree in information systems engineering
[30] A. Marjovi, J. G. Nunes, L. Marques, and A. de Almeida, “Multi- fromtheUniversity ofManchesterInstituteof Sci-
robot exploration and fire searching,” in 2009 IEEE/RSJ International ence and Technology, Manchester, U.K., and the
ConferenceonIntelligentRobotsandSystems,2009,pp.1929–1934. Ph.D. degree from the Athens University of Eco-
[31] M. Julia´, A. Gil, and O. Reinoso, “A comparison of path planning nomics and Business, Athens, Greece. He is cur-
strategies for autonomous exploration and mapping of unknown envi- rentlyaProfessorofdatamanagementwiththeDe-
ronments,”AutonomousRobots,vol.33,pp.427–444,2012. partment of Informatics and Telematics, Harokopio
[32] A. Bautin, O. Simonin, and F. Charpillet, “Towards a communication UniversityofAthens(HUA),Kallithea,Greece.He
free coordination for multi-robot exploration,” in 6th National confer- hasmorethan250articlespublishedininternational
enceoncontrolarchitecturesofrobots,2011,pp.8–p. journals and conferences and more than 5000 ci-
[33] J. Barraquand, B. Langlois, and J.-C. Latombe, “Numerical potential tations on his work. He holds a patent from the Greek Patent Office for
fieldtechniquesforrobotpathplanning,”IEEEtransactionsonsystems, a system that thematically groups web documents using content and links.
man,andcybernetics,vol.22,no.2,pp.224–241,1992. His research interests include data mining and social network analytics to
[34] Z. Zhang, J. Yu, J. Tang, Y. Xu, and Y. Wang, “Mr-topomap: Multi- recommendersystemsforsocialmediaandreal-worldapplications.Heisthe
robotexplorationbasedontopologicalmapincommunicationrestricted Scientific Coordinator for HUA in several EU (H2020, ECSEL, REC) and
environment,”IEEERoboticsandAutomationLetters,vol.7,no.4,pp. Qatar(QNFR)projectsaswellasinnationalprojects.
10794–10801,2022.
[35] G. Al-Sharrah, “Ranking using the copeland score: a comparison with
the hasse diagram,” Journal of chemical information and modeling,
vol.50,no.5,pp.785–791,2010.
[36] D.G.SaariandV.R.Merlin,“Thecopelandmethod:I.:Relationships
andthedictionary,”Economictheory,vol.8,pp.51–76,1996.
[37] S.Lestari,T.B.Adji,andA.E.Permanasari,“Performancecomparison
ofrankaggregationusingbordaandcopelandinrecommendersystem,”
in 2018 international workshop on big data and information security
(iwbis). IEEE,2018,pp.69–74.
[38] M. Gold, “Python maze creation,” 2023.
[Online]. Available: https://medium.com/@msgold/ Georgios Th. Papadopoulos (M) is an Assistant
using-python-to-create-and-solve-mazes-672285723c96 Professor in the area of Computer Graphics and
[39] Z. Yan, L. Fabresse, J. Laval, and N. Bouraqadi, “Metrics for perfor- Computational Vision at the Department of Infor-
mance benchmarking of multi-robot exploration,” in 2015 IEEE/RSJ matics and Telematics of the Harokopio University
International Conference on Intelligent Robots and Systems (IROS).
ofAthensinGreece.HereceivedtheDiplomaand
IEEE,2015,pp.3407–3414. Ph.D. degrees in electrical and computer engineer-
[40] R.Chen,Y.Ji,G.Jiang,H.Xiao,R.Xie,andP.Zhu,“Compositeindex ing from the Aristotle University of Thessaloniki
construction with expert opinion,” Journal of Business & Economic (AUTH), Thessaloniki, Greece. He has worked as
Statistics,vol.41,no.1,pp.67–79,2022.
a Post-doctoral Researcher at the Foundation For
[41] S.N.Chakrabartty,“Compositeindex:methodsandproperties,”Journal Research And Technology Hellas / Institute of
ofAppliedQuantitativeMethods,vol.12,no.2,pp.25–33,2017.
Computer Science (FORTH/ICS) and the Centre
for Research and Technology Hellas / Information Technologies Institute
(CERTH/ITI). He has published over 70 peer-reviewed research articles
in international journals and conference proceedings. His research interests
includecomputervision,artificialintelligence,machine/deeplearning,human
action recognition, human-computer interaction and explainable artificial
intelligence. Dr. Papadopoulos is a member of the IEEE and the Technical
ChamberofGreece.