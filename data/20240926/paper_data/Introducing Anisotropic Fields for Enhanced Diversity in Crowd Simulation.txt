Introducing Anisotropic Fields for Enhanced
Diversity in Crowd Simulation
Yihao Li1, Junyu Liu1, Xiaoyu Guan1, Hanming Hou1,
Tianyu Huang1*
1Key Laboratory of Digital Performance and Simulation Technology,
Beijing Institute of Technology, Zhong Guan Cun South Street, 100081,
Beijing, China.
*Corresponding author(s). E-mail(s): huangtianyu@bit.edu.cn;
Contributing authors: lyh@bit.edu.cn;
Abstract
Large crowds exhibit intricate behaviors and significant emergent properties,
yet existing crowd simulation systems often lack behavioral diversity, resulting
in homogeneous simulation outcomes. To address this limitation, we propose
incorporating anisotropic fields (AFs) as a fundamental structure for depict-
ing the uncertainty in crowd movement. By leveraging AFs, our method can
rapidly generate crowd simulations with intricate behavioral patterns that bet-
ter reflect the inherent complexity of real crowds. The AFs are generated either
through intuitive sketching or extracted from real crowd videos, enabling flexi-
ble and efficient crowd simulation systems. We demonstrate the effectiveness of
our approach through several representative scenarios, showcasing a significant
improvementinbehavioraldiversitycomparedtoclassicalmethods.Ourfindings
indicatethatbyincorporatingAFs,crowdsimulationsystemscanachieveamuch
higher similarity to real-world crowd systems. Our code is publicly available at
https://github.com/tomblack2014/AF Generation.
Keywords:CrowdSimulation,Animation,AnisotropicFields,CrowdSystems
1 Introduction
The utilization of computer algorithms for simulating and modeling human crowds
has diverse applications across various fields, including social sciences, virtual reality,
1
4202
peS
42
]AM.sc[
1v13851.9042:viXraFig.1 Potentialimpactofanisotropicfieldsonagentmotioninasimulatedscenario.(a):simulated
scene.(b):illustrationofanagent’sbehavioraldiversityviaAFsviatwosimulationiterations.Only
onebehavioroccursintheactualsimulation;theresultisuncertain.
visual effects, and game entertainment [1–3]. Currently, research focused on simulat-
ing crowd behavior, though established for over 20 years, still faces challenges and
opportunitiesforfurtherdevelopment,withmanystudiesutilizingartificiallydesigned
scenarios as a primary guiding force [4–6]. Specifically, most crowd simulation studies
employ a two-layered model that integrates global path planning and local naviga-
tion [7]. The former identifies broad global routes and imparts behavioral semantics
for crowds on a macroscopic level. Meanwhile, the latter entails mapping out intri-
catelocalbehaviors,supplyingimmediateandlocalizedmotionstatesforcrowds.This
approach is efficient in highly deterministic scenarios such as evacuation, formation,
and marching [3, 8, 9]. However, genuine crowds are complex and emergent, and tra-
ditional workflows struggle to achieve realistic, general, and effective results owing to
the insufficient incorporation of uncertainty modeling within crowd behavior.
Despite the multitude of related studies conducted over the past two decades,
several significant issues persist within the previously mentioned modeling frame-
work. First, while global path planning achieves macro-level planning through global
information routing, its implementation relies heavily on users’ definition of crowd
behavioral semantics at a macro level. Consequently, the simulated crowd behavior
tends to converge significantly, posing a challenge to achieve complex and emergent
crowdsimulationatthesystemlevel.Second,thedeterministicnatureoflocalnaviga-
tionleadstosimilarbehavioralpatternsamonggroupsplacedinsimilarenvironments,
making it challenging to capture the complexities observed in real crowds. A con-
siderable portion of previous research employing identical parameters has often led
to the replication of nearly identical group motion results. To address these issues,
priorresearchhasintroducedcrowdsimulationsystems,includingcrowdmotionusing
2patch-based fragmentation [10–12], data-driven crowd trajectory prediction [13, 14],
and vector field models that incorporate fluid dynamics [15]. However, a common
hurdle encountered is that virtual crowds in simulations are typically limited to exe-
cuting single and simplistic behavior patterns. Achieving more complex patterns of
behaviorrequiresdetailedmanualgrouping,whichisbothinefficientandyieldsunnat-
ural results. Consequently, traditional methods can only effectively simulate crowds
with simple and deterministic behavior patterns, such as crowds marching or evacu-
atingthroughcrowdedcorridors[16,17].Hence,itbecomesnecessarytointroducean
appropriate degree of uncertainty into simulation methods and establish a meaning-
ful connection between macro and micro-level instructions to generate intelligent and
diverse results.
Our inspiration stems from the weak correlation observed between individual
behavioral patterns and their respective environments. This observation underscores
the fact that crowds manifest diverse behavioral patterns in different areas, and even
within the same area, different individuals display distinct behavioral patterns. To
address the deficiency of diversity semantics in both global path planning and local
navigation, we propose the integration of anisotropic fields (AFs) as an anisotropic
layer within the crowd system. In contrast to the simple and deterministic macro-
level behavioral semantics defined by the navigation field [15], our model introduces
a substantial level of uncertainty into the crowd’s motion behavior within the scene,
as illustrated in Figure 1. The challenge lies in suppressing the dispersion of the
simulation results through the innovative introduction of behavioral inertia, thereby
enabling the new structure to generate highly complex crowd motion patterns. Fur-
thermore, we have devised a mechanism for generating and self-updating AFs. This
mechanism permits the field to be continuously updated using real-time simulation
results or data sourced from the real world. Consequently, our work focuses on gener-
ating flexible crowd simulation systems that consist of human-like agents capable of
exhibiting a wide range of behavioral motion patterns. This approach diverges from
the conventional approach of merely directing crowds to perform predefined tasks.
Our primary contributions are summarized as follows:
1. We introduce a novel anisotropic layer within crowd simulation systems, which
is a new structure and does not belong to any classical structure, such as global path
planning or local navigation. This addition addresses the absence of behavioral diver-
sity in traditional crowd systems. At its core, our approach utilizes AFs to effectively
representthepotentialmotiontendenciesofcrowdswithinthesceneusingprobability
distributions.
2. We design a series of user interfaces that enable real-time modifications to AFs
through virtual brush strokes. This user-friendly approach empowers users to cre-
ate crowd simulation systems that align with their expectations through intuitive
sketching.
3.Wepresentamethodformeasuringthesimilaritybetweencrowdsystemsbased
on AFs and information entropy. Through experiments, we validate the similarity
relationship between the simulated crowd systems generated using our approach and
the original real crowd systems.
3Theremainderofthispaperisstructuredasfollows:Section2providesanoverview
of relevant research in various fields related to our study. Section 3 presents the core
method based on probabilistic vector fields for crowd simulation and various imple-
mentationdetails.Section4describestheexperimentalquantificationmethodsusedin
this study. Section 5 details the designed experiments and results. Finally, in Section
6, we summarize the study and discuss potential avenues for future research.
2 Related Work
Theconceptofcrowdsimulationemergedfromearlycomputerresearchonsimulating
group behavior patterns [18]. Over the past few decades, crowd simulation methods
have become increasingly complex. Reviews and books [1, 2, 19] provided compre-
hensive overviews of agent navigation and crowd simulation. Our research focuses on
simulating virtual crowds at the macro level using fields with high degrees of freedom
and emergent behavior. In the following sections, we discuss the research status in
related fields from four perspectives.
2.1 Field-based Crowd Simulation
In simulating virtual crowds, researchers often aim to control the movement of large
crowdsmacroscopicallytoachievecertainbehavioralpatterns,inadditiontoexplicitly
computingthebehaviorandroutesofeachagent.Inspiredbyvelocityfieldsystemsin
fluidmechanicsresearch,researchershaveextensivelyexploredsimulationmethodsfor
crowdflowbehaviorpatternsbasedonvectorfieldsoverthepast20years.Earlyworks
such as flow tiles proposed by Chenney et al. [20] and an interactive algorithm based
onnavigationfieldsbyPatiletal.[15]filledthegapleftbymicro-levelalgorithmslike
force and velocity-based methods, serving as a supplement at the macro level.
Inrecentyears,field-basedcrowdsimulationmethodshaveshownexcellentresults
in various specifictasks.Toll et al.[8, 21] conducted fluid dynamics modeling inhigh-
densitycrowds,improvingtheirstabilitywhileretainingsomeagentcharacteristicsand
achieving easier replication of wave-propagation effects. Montana et al. [22] built on
the work by Patil et al.[15] by implementing the simulation and rendering thousands
of agents in real-time using the Unreal Engine. Colas et al. [3] introduced interaction
fields bound to the agent rather than the scene, to generate a new type of crowd-
steeringbehavior,resultinginenhancedcrowdbehaviorbasedonagent-basedmethods
in various scenarios.
Real crowds are complex systems that often exhibit high levels of chaos and com-
plexity during operation. Our proposed system based on AFs fully incorporates the
ideasofthenavigationfieldsmentionedabove.However,thekeydifferenceisthatour
AFs introduce a significant amount of uncertainty into the process to generate emer-
gent results. Simultaneously, our method exhibits similar macroscopic characteristics
to the aforementioned methods, resulting in high computational efficiency.
42.2 Data-driven Crowd Simulation
Implementingcrowdsimulationusingrealcrowddatathroughdata-drivenapproaches
isaneffectivetechnique.Thismethodsimulatesvirtualcrowdsbylearningthebehav-
ioral patterns of real crowds [4, 9]. It has the advantage of saving considerable
parametertuningworkincrowdsystems[23–25].Renetal.[5]combinedphysics-based
simulationmethodswithdata-drivenapproachestoachieveageneralmulti-agentsys-
tems simulation method. However, this method is not ideal for simulating rapidly
changing crowds. Ju et al. [26] proposed a groundbreaking approach that generates
simulated crowds by blending intermediate states of real crowd behavioral patterns.
Zhao et al. [27] used clustering to find similar behavioral patterns and employed
artificial neural networks to classify agent-perceived input states and generate cor-
responding outputs. Liu et al. [6] introduced a velocity-based crowd energy metric
to measure the similarity between the simulated agent’s velocity and given velocity
samples, achieving a new framework for data-driven optimization in crowd simula-
tion. Yin et al. [28] utilized virtual reality (VR) to capture the user’s movement in
the virtual space, thereby realizing the construction of crowd behavior data. Through
experiments,theyverifiedthatrealisticgroupbehaviorcannaturallyemergefromthe
virtual crowd data generated by their method. Data-driven approaches generally rely
onthecompletenessandreliabilityofdatasources[29],andcurrentdatasetsstruggleto
achieve reliable crowd simulation results regarding sample size and scenario diversity.
2.3 Sketch-based Control of Crowds
As mentioned in Section 2.1, flow control is based on the definition and manipulation
of vector fields. Sketch-based methods provide an intuitive way to achieve this. Vec-
tor field generation for crowd simulation mostly relies on sketching. Kang et al. [30]
designed detailed stroke-based flow fields and gradient vector flow generation tech-
niques,achievingefficientgenerationofcrowdsimulations.Andreaetal.[31]proposed
areal-timecrowdmotioncreationmethodbasedonimmersivesketchinginVRscenes,
expanding the application of sketching from 2D to 3D space. Sketch-based methods
explicitlyinfluencethegenerationofscenes[32],globalroutes[33,34],navigationgrids
[35], and other factors through user-drawn sketches, guiding the generation of crowd
simulationresults.Additionally,manystudies[3,15,22]havegeneratedfieldsthrough
sketching.
Sketch-based methods for crowd control are generally characterized by high com-
putational efficiency and intuitive interaction. However, owing to the limitations of
sketches themselves, these methods produce results that often exhibit fixed and pat-
terned tasks[36], making it difficult to represent the complexity exhibited by real
crowds.
2.4 Construction of Crowd Simulation Systems and Parameter
Tuning
FromtheearlygreatbreakthroughsofclassiccrowdsimulationsystemssuchasSocial
ForceModel(SFM)andReciprocalVelocityObstacle(RVO)[37,38],theoptimization
of computer crowd simulation systems has focused on collision avoidance [39–42] and
5pathfinding[43–45]ofagentsinlocalspaces,ratherthanonthemacro-levelbehavioral
semantics of crowds. The effectiveness of these systems frequently relies on extensive
parametertuning,whichcanhaveimpliciteffectsontheresults.Currently,industrial-
level crowd simulation software and crowd formation control systems exist [46, 47].
Their usage depends on the expertise of simulation system designers, and the design
cycle for a large-scale crowd simulation can take months. To address this issue, some
studies [31, 48] offer real-time interactive interfaces for parameter editing to achieve
instantfeedback.Anotherapproachinvolvesautomaticallyadjustingparametersbased
on text descriptions [49], controlling randomization [50, 51], and utilizing other meth-
ods.Additionally,mathematicianshaveintroducedanisotropyintopedestriansystems
toanalyzethe“optimal”directionofflow-likepedestriansinscenes[52].Theirmethod
provides a computational model for crowd simulation rather than a modeling method
itself.However,theresultscannotdescribethebehavioraldiversityofcomplexsystems
from a crowd perspective. Some latest works[53–55] have achieved the heterogeneous
construction of agent behaviors through reinforcement learning, generating remark-
able effects. However, they did not establish a connection between the agent and the
environment,whichisthecorepurposeoftheanisotropiclayerproposedinthispaper.
In summary, existing crowd simulation systems encounter challenges in describ-
ing the complex motion and behavioral semantics of more realistic virtual crowds.
Achieving a balance between the precise semantic definition of agents, which requires
significant manual effort, and the convergence of simplistic behavioral patterns
is difficult. Operators often resort to mastering parameter tuning techniques and
constructing simulation environments to achieve simulation designs tailored to spe-
cific patterned goals.[56] Our study establishes an anisotropic layer within crowd
simulation, addressing the absence of behavioral diversity typically lacking in the
deterministic path generation of traditional global path planning. This innovative
approacheffectivelyrepresentsthemacroscopicbehavioralsemanticsofcrowdmotion
using the core concept of AFs and realize the crowd replication in the system level.
3 Method
Thissectionpresentstherepresentativemethodforcapturingthemacroscopicbehav-
ioral semantics of crowds, which we refer to as the anisotropic layer. We discuss the
fundamental properties and operational mechanisms of the core concept of AFs, as
well as various approaches to achieving the automated generation of AFs.
3.1 Anisotropic Layer
The anisotropic layer introduced in this study functions differently from both the
global path planning and local navigation process in traditional crowd simulation
workflows. Within the anisotropic layer, agents display anisotropic behavior steered
byaguidingstructureinthescene,charaterizedbyitsnon-deterministicnature.This
process is neither focused on moving agents to specific destinations nor on achieving
efficient collision avoidance. The main purpose of the anisotropic layer is to present
a deterministic behavioral pattern at the macroscopic level without specifying the
precisemotionbehaviorofindividualagents.Figure2illustratesthethree-layermodel
6Fig. 2 Three-layer crowd simulation system after anisotropic layer addition. (a): overview. (b):
detailsofanisotropiclayer.
of crowd simulation with the inclusion of the anisotropic layer. The anisotropic layer,
as proposed, utilizes AFs to enable the execution of its fundamental mechanism.
3.2 Definition of AFs
In this study, anisotropy, in the context of materials science [57, 58], refers to a prop-
erty that allows it to change or assume different properties in different directions, as
opposed to isotropy. The motion behaviors of agents in a crowd simulation system
exhibit properties such as the following: an agent at the same location in a scene may
exhibit different movement tendencies, and different agents at the same location in
the scene may also exhibit different movement tendencies. This is intuitive. Drawing
on previous studies on crowd navigation fields [15] and to address the challenge of
motion pattern convergence (resembling isotropic behavior), we propose AFs. An AF
is bound to the navigable regions in the scene, covering all reachable area Ω in the
simulation scene. It is discretized to facilitate computation using grid-based division,
whereΩ=G ∪G ∪...∪G .G andnrepresentthei-thcellandthetotalnumberof
1 2 n i
cells, respectively. In contrast to navigation fields, AFs set a probability distribution
P(G) within each cell instead of a single navigation direction. Figure 3 illustrates the
maindifferencebetweenAFsandnavigationfields.Bydefault,P(G)followsauniform
distribution, as shown in the green box in the top-left corner of the AF examples in
Figure 3. Theoretically, AFs are applicable to navigation in spaces of any dimension.
In this study, we discuss a two-dimensional case for simplicity.
An AF describes the underlying motion tendencies of agents within the covered
grids. Its domain is [0◦,360◦), which corresponds to the directional tendencies of
agentsinatwo-dimensionalscene.Figure4(a)andFigure4(b)illustratetwodifferent
representations of the probability distribution for the same position in AF.
TheAFsrepresentthepotentialmotiontendenciesofagentsinthevirtualscenario
of the simulation system. Agents are influenced and alter their motion states based
7Fig. 3 Difference between navigation fields and AFs. (a): In traditional navigation fields, agents
executedeterministicmotionbasedonthespecifiednavigationdirections.(b):InAFs,agentsexhibit
uncertaintyintheirmovement.
on the AFs. In each simulation clock cycle of the system, agents in the scene make
direction selections by sampling the distribution corresponding to their G in the AF:
i
P(G =θ). The selected result θ represents the motion tendency. For example, based
i
on the distribution shown in Figure 4, an agent is likely to exhibit a motion tendency
in either region II or IV, near 180◦ or 270◦. In polar coordinates, using θ as the angle
and a constant ρ as the radian, we can compose the acceleration a :
AF
a =(θ,ρ) (1)
AF
In the two-dimensional space. The impact of the AFs on agent motion can be
combined with classical Euler integration and other models:
o←o+v∆t
(cid:88) (2)
v ←v+(k a + k a )∆t
AF AF i i
i
Here, o represents the position coordinates of the agent in the environment, v is
theinstantaneousvelocityoftheagent,∆tistheclockcycleofthesystemsimulation,
a is the motion tendency vector generated based on the AF, and a is the vector
AF i
representing other influences on the agent, such as tendency or obstacle avoidance.
Both a and a affect the movement of the agent in the form of acceleration. k
AF i AF
andk areproportionalitycoefficients.Thevalueoficanbezero,whichmeansagents
i
are only driven by the AFs. We establish the definition of agent speed magnitude by
focusing on the agent itself rather than the AF, as in crowd simulation, the pace of
movementisoftencorrelatedwiththeagent’sroleattributes.Forinstance,theelderly
or ill individuals tend to move significantly slower than average young adults.The
diversity of agent speed can be determined by a threshold value, denoted as v ,
prop
8where each agent has an individual v . When |v| ̸= v , the magnitude of |v| is
prop prop
adjusted (without changing its direction) based on a coefficient l:
|v|←(1−l)·|v|+l·v (3)
prop
Based on these rules, the AFs can achieve the property described at the begin-
ning of this section, where agents at the same position in a scene can display diverse
motion tendencies, even when comparing different agents at that position. Compared
tofixedvectorfieldsintraditionalmethods,theAFscangeneratemorecomplexcrowd
behavior, making them applicable to a wider range of crowd simulation problems.
Fig.4 (a)GraphicalAFexample,(b)Probabilityfunction.Agentstendtomovetowarddirections
IIorIVinthisAFregion.
3.3 Behavior Inertia of AFs
The proposed AF introduces a wide range of possibilities by introducing randomness
thataffectsanobject’smovement.However,thiscanresultinfrequentfluctuationsin
crowd behavior within the simulation system because the motion states of agents are
updated in each clock cycle to simulate their behavior. For instance, an agent on an
east-west road may move eastward in one clock cycle but randomly switch to a west-
ward motion tendency in the next cycle. This erratic behavior leads to unacceptable
behavioral jitters.
To address this issue, we propose behavior inertia as a solution and promote the
convergence of agent behavior. As depicted in Figure 5, when an agent calculates its
motiontendencyusingAF,ittemporarilymodifiestheoriginalprobabilitydistribution
based on its current motion direction v:
p′(θ)=p(θ)|cos(θ−θ )|δ (4)
v
Here, p(θ) represents the probability density of AF in the direction θ, and p′(θ)
represents the updated probability density resulting from the adjustment influenced
bybehaviorinertia.θ ∈[0◦,360◦).θ representsthescalarangleoftheagent’scurrent
v
motion direction v. δ is a constant used to control the influence of behavior inertia,
9where a larger δ represents a stronger influence. Given that δ weakens θ which devi-
ates greatly from θ , δ is typically greater than one and theoretically has no upper
v
bound. Through behavior inertia, when agents generate motion tendencies using AF,
they tend to actively respond to tendencies that align with their current motion
statewhiledisregardingconflictingtendencies,whichcaneffectivelysolvethepossible
behavioral fluctuation when the agent switches between grids of adjacent AFs. This
characteristic also ensures high coherency in agent behavior within the model, while
still allowing diverse and reasonable behavioral variations in scenes that necessitate
it, such as intersections. The “temporary” adjustment influenced by behavioral iner-
tia does not directly affect the original AF in the scene but exclusively applies to the
agent.Behaviorinertiaalsocorrespondstothecharacteristicthatdifferentagentsmay
exhibit different movement tendencies even when occupying the same location.
Fig. 5 Behavioralinertiamechanism.
3.4 Sketch-based Generation of AFs
Similartopreviouswork[3,22,30],theproposedAFscanbegeneratedusingabrush
toolforusersketchingeachcurve,denotedasc.Eachcurvehasanassociatedinfluence
weight µ and influence range ρ . The values of µ and ρ are both between 0 and
c c c c
1. During the sketching session, the user creates a set of curves C = {c ,c ,...} to
1 2
indicate the desired probability distribution of AFs at various positions within the
target scene. Each curve c can be further divided into multiple sub-segments c =
j j
{l1 ,l2 ,...}. These sub-segments are very short, allowing them to be approximated as
cj cj
vector differentials, denoted as ∆v, located at the starting point of each sub-segment.
For any ∆v, the influence factor τ on any cell G within its influence range can be
calculated as follows:
τ =µ D−φ (5)
c E
Here, µ represents the influence weight of the curve c to which ∆v belongs, D
c E
is the Euclidean distance between ∆v and p, and φ is a constant that determines the
proportionofD ’sinfluenceonτ.Tomakeτ andD negativelycorrelated,thevalue
E E
of φ needs to exceed 1. In this study, we set φ = 1.5. The algorithm for generating
AFs based on sketches is Algorithm 1:
The sketches may sometimes be “self-contradictory”. Therefore, the peak of the
motion tendency probability distribution calculated based on the sketch at the same
10Algorithm 1 Generate AFs at a certain position G based on the sketch lines
Input: line set C
Output: AF probability distribution P(G) at position X
1: for c i in C do
2: for l cj
i
in c i do
3: if length(l cj i, p) <ρ ci then
4: θ = angle(l cj i)
5: P(X|θ) += τ(l cj i, X)
6: end if
7: end for
8: end for
9: Normalize P(G)
position, can be distributed in opposite directions. This phenomenon is consistent
with our daily experience. For instance, on an east-west road, people can move both
eastward and westward, rather than only in one direction. Our probabilistic-based
model naturally excels at generating more realistic and natural virtual crowds.
Fig. 6 Process of AFs generated by crowd video. AFs are represented using the color space-based
methodmentionedinSection4.1.
3.5 Data-driven AF Generation
Byextractingasegmentofreal-worldpedestriansurveillancefootage,weemploycom-
puter vision techniques (such as optical flow [59]) to derive the motion vectors of
pedestrians in each frame of the scene. The optical flow vector (u,v) of the element
motion in the video can be calculated as follows:
I u+I v+I =0 (6)
x y t
Here, I(x,y,t) is the target pixel, I = ∂I, I = ∂I, I = ∂I. The optical flow
x ∂x y ∂y t ∂t
vector of agents and the user’s hand-drawn markings on the AFs are identical and
can be explicitly converted between each other. This process can be calculated using
the same method as described in Section 3.4. Figure 6 shows the process of the AF
generationmethodintroducedinthissection.TherepresentationmethodofAFdiffers
from the previous one. This color space-based representation method is introduced in
11Section 4.1. By utilizing the aforementioned method, we generate superimposed AFs
or a sequence of AFs that dynamically change with the video. Although we calculate
theopticalflowandgenerateAFsintheareaswherenoonewalksinthevideo(suchas
walls or pillars), we filter these areas through masks before the actual simulation. In
the next section, where we describe our experiments, we demonstrate the significance
ofutilizingthismethodtoextractgeneratedAFsandgeneratecrowdsimulationsthat
closely resemble reality.
4 Evaluation
4.1 Quantification of AFs Based on Information Entropy
AF can be considered an abstract probabilistic representation of the crowd system,
and its distribution characteristics can be effectively characterized using information
entropy:
(cid:88)
H =− p(θ)logp(θ) (7)
θ∈Θ
Here, Θ represents the complete set of angles in the two-dimensional polar coordi-
natesystem,θ isanarbitraryelement,andp(θ)representstheweightedproportionof
θ in the complete set. Using information entropy, we can calculate the characteristic
information of AFs at different locations in the scene. Subsequent visualization and
crowd model evaluation are based on the information entropy of AFs.
Fig. 7 SelectcolorsfromthecolorspacereferencetosymbolicallyrepresenttheAFs
Intwo-dimensionalEuclideanspace,AFsaredistributionson[0,2π).Toeffectively
visualize AFs in the subsequent experiments, a color space reference was used to
display AFs in different directions, as depicted in the middle of Figure 7. For any
positioninknownAFs,thecolorinthecolorspacereferencecorrespondingtoitspolar
coordinates (θ′,ρ′) represents the information of that position:
12θ′ =max(P(θ))
H
ρ′ =1−
H (8)
min
1
H =−log
min k
Here, θ′ represents the maximum value of the distribution of the AF in various
directions at that position. H is the information entropy at that position, and H
min
representstheminimumvalueoftheoreticalinformationentropy(underthecondition
of uniform distribution). Finally, ρ′ is inversely correlated with H, and ρ′ = 0 when
H =H . While this visualization method may lose some information, it intuitively
min
represents the main information in AFs through the color space, assisting readers in
gaining a clearer understanding of AFs’ operational mechanism in most cases.
4.2 Comparison of Macroscopic Similarity in Crowd Systems
AFsserveasmacroscopicabstractexpressionthatnotonlydrivestheoperationofthe
crowd system but also represent characteristics of the crowd system evolved from it.
WedefinethesimilarityD tocharacterizethecorrelationbetweendifferentAFsas
1 (cid:88) p(θ) 1 (cid:88) p′(θ)
D = p(θ)log + p′(θ)log (9)
2 p′(θ) 2 p(θ)
θ∈Θ θ∈Θ
Equation 9 calculates the Jensen-Shannon divergence[60] of the same position in
two crowd systems based on Equation 7, where p′(θ) represents the probability distri-
butionintheθdirectionatthesamepositioninanothercrowdsystemtobecompared
with p(θ).
5 Experiments and Results
Thissectionpresentstwodifferentexamplescenarios,namelymulti-intersectionchan-
nelanddata-drivensimulationfromrealcrowds,todemonstratetheuniqueroleplayed
by AFs in crowd simulation. For each scenario, the virtual environment was divided
into a grid of 10 cm x 10 cm cells, and AFs were distributed in each cell to influ-
encethemovementofthecrowd.Toreflectthedifferencesamongvariousagents,each
agent’s v is assigned a random value set between 1 m/s and 2 m/s. All visualiza-
prop
tions in the experiments were implemented in Unreal Engine 5.0, and the system ran
on a computer with the following configuration: Intel(R) Core(TM) i9-10900KF CPU
3.70 GHz, NVIDIA GeForce RTX 3080 GPU, and 64 GB of RAM.
5.1 Calculation Efficiency
Figure 8 illustrates the relationship between the computational resource consumption
ratiooftheproposedmethodcombinedwiththeSFM[37]andthenumberofsimulated
agents in crowd simulation. As the count of agents escalates, the proportion of AF in
thetotalcomputationalresourceconsumptiongraduallydecreases.Whenthenumber
ofagentsexceeded10k,thecomputationalresourceconsumptionoutsideofAFreached
13approximately 95%. In practical applications, if only the macroscopic movement of
the crowd is of interest, the proposed method can be used to calculate the crowd
movement without running SFM, RVO[37, 38], or other obstacle avoidance methods.
With a regular PC, frame rates of over 60FPS can be achieved in crowd simulations
at the 10k level.
Fig. 8 ProportionofresourceconsumptioninAFvs.SFMwithincreasingsimulationagents.∆tis
thetimeconsumedbythealgorithmrunningforoneclockcycle.
5.2 Multi-Intersection Channel Scenario
A channel with multiple intersections is a common scenario in crowd simulation. To
highlight the uniqueness of our method, we designed a channel scene with multiple
crossroads, as shown in Figure 9. We set up 400 agents in the environment, with a
simulation time of two minutes.
Weestablishedtwodistinctcrowdmovement“criteria”forthisenvironment,which
were created through a combination of automatic and manual annotations, as shown
inFigure10.Inthefreemovementscenario,AFwassuperimposedacrossallpositions
within the channel in alignment with the channel’s extension. For example, if the
channelextendedfromeasttowest,thecorrespondingpositionsoftheAFexhibitedan
equalprobabilitydistributioninboththeeastandwestdirections.Atintersections,the
AF was uniformly distributed among the different directions based on the number of
intersections.Owingtotwoopposingdistributionsatthesamepositionandthemanual
annotations, the AF in the Figure 9(b) exhibited a zebra-like striped distribution. It
features yellow and blue colors indicating the left-right direction and green and red
colors representing the up-down direction (refer to the color space reference in the
middle of Figure 7). In the free movement scenario (upper portion of Figure 10), all
agentsmovedforwardorbackwardwithintheclosed-loopchannel,irrespectiveoftheir
14Fig.9 Closed-loopchannelstructure(4T-shapedintersections,5intersections).(a):Structurevisu-
alization;(b):FreemoveAFsdistribution(c):Right-keepingmoveAFsdistribution.Theradarchart
representationsofAFsinspecificpositionsaregiven.
positions within the channel. Consequently, a chaotic crowd movement reminiscent
of a bustling marketplace was created. By contrast, the keep-right scenario separated
the two directions of AF superimposed along the channel, with all AF distributed on
the right side of the channel (consistent with traffic rules in countries such as China,
theUnitedStates,andGermany).Thus,intheexampleshowninthelowerportionof
Figure 10, all agents moved towards the right side within the channel, resulting in a
moreorderlycrowdsystemresemblingwell-structuredurbantraffic.Theperformance
comparison of two strategies are shown in Table 1. The experimental results verify
that large-scale crowd moving on the same side of the road can effectively improve
the overall motion efficiency of the whole system. These experimental outcomes were
attainable by generating AFs based on real crowd data, and the AF-driven crowd
system effectively embodied implicit rules within the crowd system.
Table 1 Performancecomparisonoftwostrategiesobtainedbysimulation
Strategy collision ↓ velocity variance ↓ intersection pass ↑
Free move 218 0.0177 1212
Right-keeping move 87 0.0080 1441
5.3 Data-Driven AF Generation and Crowd Simulation
InadditiontogeneratingAFsthroughmanualannotation,apivotalapplicationofthis
study is the creation of AF-driven parallel simulations of virtual crowds that closely
resemble real crowds, using crowd-monitoring video data. We leveraged the crowd
video dataset from the MOT20 challenge [61] as our data source to achieve a parallel
simulationofthecrowdwithinthemonitoredenvironment.Initially,weextractedAFs
fromthecrowd-monitoringvideosusingthemethodinSection3.5.Thevideocontent
isshownintheFigure11(a)andFigure11(d).BasedontheextractedAF(Figure11(c)
and Figure 11(f)), we constructed a proportional simulation environment in Unreal
and placed iconic facilities, in the same positions as in the original environment. In
thissimulationenvironment,werandomlyplacedagentswithadensitysimilartothat
15in the original video and drove their movement using AF. The results are shown in
Figure 11(b) and Figure 11(e).
Fig.10 SimulationofcrowdbehaviorinachannelenvironmentusingAFswithtwodifferentstrate-
gies. (a)(b)(c): free movement case; (d)(e)(f): right rule case.The AFs corresponding to the two
strategiesareshowninFigure9.
Fig. 11 AFsgeneratedfromMOT20videoandappliedtogeneratecrowdsystems.(a)(d):Original
videos(approximately90s,from[62]);(b)(e):AFs-drivenvirtualcrowdsystems;(c)(f):AFsgenera-
tionfromextractedaccumulatedcontent.TheradarchartrepresentationsofAFsinspecificpositions
aregiven.
16Fig.12 Comparisonbetweenproposedmethodandnavigationfieldbasedcrowdsystemasthesimu-
lationtimeincreasesbasedontheDvalue(Equation9)oftheoriginalcrowdvideofrom(a)MOT20-03
and(b)MOT20-04data.
We used the method proposed in Section 4.2 to measure the relationship between
the source crowd system and the generated crowd system in Figure 11. Figure 12
presents a comparison of the results implemented by the four combinations of
NF+SFM,NF+RVO,AF+SFMandAF+RVO.Thetwogroupsofresultscorrespond
to MOT20-03 and MOT20-04 respectively. NF refers to the most classic navigation
field[15] method and we designed and used it as specified in the original paper. It was
observed that as the simulation time increased, the crowd system implemented using
our method gradually approached the crowd system in the original video. After 180
iterations,theAFusedtorepresentthetwosystemsbecamesimilar,withthedistance
D decreasing below 0.2(reduced by over 50% compared to the initial value).It can be
observedthattheiterativelyoptimizedAFrepresentationofthesimulatedcrowd(the
reddashedboxinFigure12)demonstratearemarkablesimilaritytotheAFextracted
fromthesourcevideo(Figure11(c)and(f)).However,thecrowdsystembasedonNF
17exhibitedrelativelyinvariantdivergenceininformationentropyasthesimulationpro-
gressed, resulting in a relatively larger difference in similarity (D) compared with the
crowd system in the original video. Performance comparison are shown in Table 2. It
can be observed that our method, while achieving better performance, exhibits com-
parable runtime speed and shorter build time compared to classical approaches. The
crowd simulation method based on field always relies on the manual work of design-
ers. The automated generation method based on video data proposed in this paper
can achieve significant improvement in efficiency. Furthermore, another recent related
work[3]ischallengingtoachieveheterogeneouscontroloverhundredsofagentsinthis
context due to its reliance on agent-based field modeling and the lack of automation
tools.Therefore,tothebestofourknowledge,noneofthecurrentmethodscanachieve
the same effect at the macroscopic system level as demonstrated in this experiment.
Table 2 PerformancecomparisonbetweenAFandNFonbuildingcrowdsystems
Field Scenario D ↓ FPS ↑ Build Time (s) ↓
MOT20-03 0.269 60+ 1500 (manual)
NF[15]
MOT20-04 0.531 60+ 1800 (manual)
MOT20-03 0.165 58 20 (automatic)
AF
MOT20-04 0.192 56 20 (automatic)
5.4 Comparison to similar works
We have employed seven distinct features to evaluate AFs and compare it with the
latest similar work[3] and the most classic work[15], as summarized in Table 3. While
all three methodologies exhibit advantages in terms of computational efficiency and
integration with steering techniques, the method introduced in this paper stands out
with its unique capabilities in utilizing data (including videos and trajectories) for
achievingsystem-levelreplication.Thisdistinctiveaspectunderscoresthepotentialof
our approach in addressing complex system replication tasks.
Table 3 Judgedbysomefearures
Feature NF[15] IF[3] AF
Sketch-based ✓ ✓ ✓
Integratable ✓ ✓ ✓
Efficient ✓ ✓ ✓
Stackable ✓ ✓
Data-driven ✓
System Replication ✓
Heterogeneous ✓
186 Conclusion and Future Work
This study introduced the use of AFs as a novel approach to describe the random-
ness and emergent behavior within crowds. This approach serves as a complementary
methodtotraditionalagent-basedmethodsforsimulatingcrowdsystems,anditmain-
tains backward compatibility with the navigation fields from which it was inspired.
AFs are generated through intuitive sketches, empowering users to design crowd
systems with specific characteristics. Alternatively, AFs can be derived from crowd
trajectory data extracted from videos, resulting in the creation of digital crowd twins
thatcloselyresemblereal-worldbehavior.Unlikeconventionalmethods,thesimulated
crowd systems in this study do not rely on precise mathematical modeling of indi-
vidual entities. Instead, they mimic real crowds at a macro level, where even subtle
or absent changes in initial conditions can lead to entirely distinct simulation out-
comes—aphenomenonakintothebutterflyeffectobservedinchaoticsystems[63].In
scenarioswiththousandsormoreagents,theproposedmethodhasspecialadvantages
in generating groups of agents with certain behavioral patterns, such as replicating
the crowd dynamics in a park.
However, there are limitations to the approach presented here. Although AFs
complement navigation fields and significantly broaden the scope of simulation pro-
cesses and outcomes, they remain approximations rather than exact representations
of objective reality. Additionally, the simulation system proposed in this study does
not account for individual differences or the cognitive agency of agents. Instead, it
focuses on comparing and approximating crowd systems at a macroscopic level. In
future work, we will focus on advancing the application of AFs within machine learn-
ing generative models, such as generative adversarial networks and diffusion models,
by harnessing their capability to generate crowd systems based on real crowds.
References
[1] Lemonari, M., Blanco, R., Charalambous, P., Pelechano, N., Avraamides, M.,
Pettr´e, J., Chrysanthou, Y.: Authoring virtual crowds: A survey. Computer
Graphics Forum 41(2), 677–701 (2022) https://doi.org/10.1111/cgf.14506
[2] Toll,W.,Pettr´e,J.:Algorithmsformicroscopiccrowdsimulation:Advancements
in the 2010s. Computer Graphics Forum 40(2), 731–754 (2021) https://doi.org/
10.1111/cgf.142664
[3] Colas, A., Toll, W., Zibrek, K., Hoyet, L., Olivier, A.-H., Pettr´e, J.: Interaction
fields: Intuitive sketch-based steering behaviors for crowd simulation. Computer
Graphics Forum 41(2), 521–534 (2022) https://doi.org/10.1111/cgf.14491
[4] Shafiee, N., Padir, T., Elhamifar, E.: Introvert: Human trajectory prediction via
conditional 3d attention. In: 2021 IEEE/CVF Conference on Computer Vision
and Pattern Recognition (CVPR), pp. 16810–16820. IEEE Computer Society,
LosAlamitos,CA,USA(2021).https://doi.org/10.1109/CVPR46437.2021.01654
. https://doi.ieeecomputersociety.org/10.1109/CVPR46437.2021.01654
19[5] Ren, J., Xiang, W.,Xiao, Y., Yang, R., Manocha,D., Jin, X.: Heter-sim: Hetero-
geneous multi-agent systems simulation by interactive data-driven optimization.
IEEE Transactions on Visualization and Computer Graphics 27(3), 1953–1966
(2021) https://doi.org/10.1109/TVCG.2019.2946769
[6] Liu, P., Chao, Q., Huang, H., Wang, Q., Zhao, Z., Peng, Q., Yip, M., Liu,
E., Jin, X.: Velocity-based dynamic crowd simulation by data-driven opti-
mization. The Visual Computer 38, 3499–3512 (2022) https://doi.org/10.1007/
s00371-022-02556-5
[7] Mathew,C.D.T.,Benes,B.,Aliaga,D.:Interactiveinversespatio-temporalcrowd
motion design. In: Symposium on Interactive 3D Graphics and Games. I3D ’20.
Association for Computing Machinery, New York, NY, USA (2020). https://doi.
org/10.1145/3384382.3384528 . https://doi.org/10.1145/3384382.3384528
[8] Toll,W.,Braga,C.,Solenthaler,B.,Pettr´e,J.:Extreme-densitycrowdsimulation:
Combiningagentswithsmoothedparticlehydrodynamics.In: Proceedings ofthe
13th ACM SIGGRAPH Conference on Motion, Interaction and Games. MIG
’20. Association for Computing Machinery, New York, NY, USA (2020). https:
//doi.org/10.1145/3424636.3426896 . https://doi.org/10.1145/3424636.3426896
[9] Mohamed, A., Qian, K., Elhoseiny, M., Claudel, C.: Social-stgcnn: A social
spatio-temporal graph convolutional neural network for human trajectory pre-
diction. In: 2020 IEEE/CVF Conference on Computer Vision and Pattern
Recognition (CVPR), pp. 14412–14420. IEEE Computer Society, Los Alami-
tos, CA, USA (2020). https://doi.org/10.1109/CVPR42600.2020.01443 . https:
//doi.ieeecomputersociety.org/10.1109/CVPR42600.2020.01443
[10] Jordao, K., Charalambous, P., Christie, M., Pettr´e, J., Cani, M.-P.: Crowd art:
Density and flow based crowd motion design. In: Proceedings of the 8th ACM
SIGGRAPHConferenceonMotioninGames.MIG’15,pp.167–176.Association
forComputingMachinery,NewYork,NY,USA(2015).https://doi.org/10.1145/
2822013.2822023 . https://doi.org/10.1145/2822013.2822023
[11] Jordao, K., Pettr´e, J., Christie, M., Cani, M.-P.: Crowd sculpting: A space-time
sculptingmethodforpopulatingvirtualenvironments.ComputerGraphicsForum
33(2), 351–360 (2014) https://doi.org/10.1111/cgf.12316
[12] Yersin, B., Ma¨ım, J., Pettr´e, J., Thalmann, D.: Crowd patches: Populating
large-scale virtual environments for real-time applications. In: Proceedings of
the 2009 Symposium on Interactive 3D Graphics and Games. I3D ’09, pp. 207–
214. Association for Computing Machinery, New York, NY, USA (2009). https:
//doi.org/10.1145/1507149.1507184 . https://doi.org/10.1145/1507149.1507184
[13] Lerner, A., Chrysanthou, Y., Lischinski, D.: Crowds by example. Computer
Graphics Forum 26(3), 655–664 (2007) https://doi.org/10.1111/j.1467-8659.
2007.01089.x
20[14] Gupta, A., Johnson, J., Fei-Fei, L., Savarese, S., Alahi, A.: Social gan:
Socially acceptable trajectories with generative adversarial networks. In: 2018
IEEE/CVF Conference on Computer Vision and Pattern Recognition (CVPR),
pp. 2255–2264. IEEE Computer Society, Los Alamitos, CA, USA (2018). https:
//doi.org/10.1109/CVPR.2018.00240 . https://doi.ieeecomputersociety.org/10.
1109/CVPR.2018.00240
[15] Manocha,D.,Lin,M.C.,Berg,J.,Curtis,S.,Patil,S.:Directingcrowdsimulations
using navigation fields. IEEE Transactions on Visualization &amp; Computer
Graphics 17(02), 244–254 (2011) https://doi.org/10.1109/TVCG.2010.33
[16] Lee, J., Won, J., Lee, J.: Crowd simulation by deep reinforcement learning.
In: Proceedings of the 11th ACM SIGGRAPH Conference on Motion, Interac-
tion and Games. MIG ’18. Association for Computing Machinery, New York,
NY, USA (2018). https://doi.org/10.1145/3274247.3274510 . https://doi.org/10.
1145/3274247.3274510
[17] Li,Y.,Chen,M.,Dou,Z.,Zheng,X.,Cheng,Y.,Mebarki,A.:Areviewofcellular
automata models for crowd evacuation. Physica A: Statistical Mechanics and its
Applications 526, 120752 (2019) https://doi.org/10.1016/j.physa.2019.03.117
[18] Reynolds, C.W.: Flocks, herds and schools: A distributed behavioral model.
In: Proceedings of the 14th Annual Conference on Computer Graphics and
Interactive Techniques. SIGGRAPH ’87, pp. 25–34. Association for Computing
Machinery, New York, NY, USA (1987). https://doi.org/10.1145/37401.37406 .
https://doi.org/10.1145/37401.37406
[19] Yang, S., Li, T., Gong, X., Peng, B., Hu, J.: A review on crowd simulation and
modeling.GraphicalModels111,101081(2020)https://doi.org/10.1016/j.gmod.
2020.101081
[20] Chenney, S.: Flow tiles. In: Proceedings of the 2004 ACM SIGGRAPH/Euro-
graphicsSymposiumonComputerAnimation.SCA’04,pp.233–242.Eurograph-
ics Association, Goslar, DEU (2004). https://doi.org/10.1145/1028523.1028553 .
https://doi.org/10.1145/1028523.1028553
[21] van Toll, W., Chatagnon, T., Braga, C., Solenthaler, B., Pettr´e, J.: Sph crowds:
Agent-based crowd simulation up to extreme densities using fluid dynamics.
Computers & Graphics 98, 306–321 (2021) https://doi.org/10.1016/j.cag.2021.
06.005
[22] Montana,L.R.,Maddock,S.:Sketchingforreal-timecontrolofcrowdsimulations.
In: Proceedings of the Conference on Computer Graphics & Visual Computing.
CGVC ’17, pp. 81–88. Eurographics Association, Goslar, DEU (2017). https://
doi.org/10.2312/cgvc.20171282 . https://doi.org/10.2312/cgvc.20171282
[23] Bulbul, A., Dahyot, R.: Populating virtual cities using social media. Computer
21Animation and Virtual Worlds 28(5), 1742 (2017) https://doi.org/10.1002/cav.
1742 . e1742 cav.1742
[24] Li, Y., Christie, M., Siret, O., Kulpa, R., Pettr´e, J.: Cloning crowd motions. In:
Proceedings of the ACM SIGGRAPH/Eurographics Symposium on Computer
Animation.SCA’12,pp.201–210.EurographicsAssociation,Goslar,DEU(2012)
[25] Kim, S., Bera, A., Best, A., Chabra, R., Manocha, D.: Interactive and adaptive
data-driven crowd simulation. In: 2016 IEEE Virtual Reality (VR), pp. 29–38.
IEEE Computer Society, Los Alamitos, CA, USA (2016). https://doi.org/10.
1109/VR.2016.7504685 . https://doi.ieeecomputersociety.org/10.1109/VR.2016.
7504685
[26] Ju,E.,Choi,M.G.,Park,M.,Lee,J.,Lee,K.H.,Takahashi,S.:Morphablecrowds.
ACM Trans. Graph. 29(6) (2010) https://doi.org/10.1145/1882261.1866162
[27] Zhao, M., Turner, S.J., Cai, W.: A data-driven crowd simulation model based
on clustering and classification. In: Proceedings of the 2013 IEEE/ACM 17th
InternationalSymposiumonDistributedSimulationandRealTimeApplications.
DS-RT ’13, pp. 125–134. IEEE Computer Society, USA (2013). https://doi.org/
10.1109/DS-RT.2013.21 . https://doi.org/10.1109/DS-RT.2013.21
[28] Yin, T., Hoyet, L., Christie, M., Cani, M., Pettre, J.: The one-man-crowd: Single
user generation of crowd motions using virtual reality. IEEE Transactions on
Visualization &amp; Computer Graphics 28(05), 2245–2255 (2022) https://doi.
org/10.1109/TVCG.2022.3150507
[29] Sheng, B., Li, P., Zhang, Y., Mao, L., Chen, C.L.P.: Greensea: Visual soccer
analysisusingbroadlearningsystem.IEEETransactionsonCyberneticsPP(99),
1–15 (2020)
[30] Kang, S.J., Kim, S.-K.: Crowd control with vector painting. Journal of research
and practice in information technology 46, 119–131 (2014)
[31] B¨onsch,A.,Barton,S.J.,Ehret,J.,Kuhlen,T.W.:Immersivesketchingtoauthor
crowd movements in real-time. In: Proceedings of the 20th ACM International
Conference on Intelligent Virtual Agents. IVA ’20. Association for Comput-
ing Machinery, New York, NY, USA (2020). https://doi.org/10.1145/3383652.
3423883 . https://doi.org/10.1145/3383652.3423883
[32] Savenije, N., Geraerts, R., Hu¨rst, W.: Crowdar table an ar system for real-time
interactivecrowdsimulation.In:2020IEEEInternationalConferenceonArtificial
Intelligence and Virtual Reality (AIVR), pp. 57–59 (2020). https://doi.org/10.
1109/AIVR50618.2020.00021
[33] Oshita, M., Ogiwara, Y.: Sketch-based interface for crowd animation. In:
Proceedings of the 10th International Symposium on Smart Graphics. SG
22’09, pp. 253–262. Springer, Berlin, Heidelberg (2009). https://doi.org/10.1007/
978-3-642-02115-2 22 . https://doi.org/10.1007/978-3-642-02115-2 22
[34] Ulicny,B.,Ciechomski,P.d.H.,Thalmann,D.:Crowdbrush:Interactiveauthoring
of real-time crowd scenes. In: Proceedings of the 2004 ACM SIGGRAPH/Euro-
graphicsSymposiumonComputerAnimation.SCA’04,pp.243–252.Eurograph-
ics Association, Goslar, DEU (2004). https://doi.org/10.1145/1028523.1028555 .
https://doi.org/10.1145/1028523.1028555
[35] Montana, L., Maddock, S.: A sketch-based interface for real-time control of
crowd simulations that use navigation meshes. In: 14th International Joint Con-
ference on Computer Vision, Imaging and Computer Graphics Theory and
Applications (VISIGRAPP 2019), pp. 41–52 (2018). https://doi.org/10.5220/
0007344200410052
[36] Aouaidjia, K., Sheng, B., Li, P., Kim, J., Feng, D.D.: Efficient body motion
quantification and similarity evaluation using 3-d joints skeleton coordinates.
IEEETransactionsonSystems,Man,andCybernetics:Systems51(5),2774–2788
(2021) https://doi.org/10.1109/TSMC.2019.2916896
[37] Helbing, D., Molnar, P.: Social force model for pedestrian dynamics, vol. 51 5,
pp. 4282–4286 (1995)
[38] Berg, J., Lin, M., Manocha, D.: Reciprocal velocity obstacles for real-time
multi-agent navigation. In: 2008 IEEE International Conference on Robotics
and Automation, pp. 1928–1935 (2008). https://doi.org/10.1109/ROBOT.2008.
4543489
[39] Toll, W., Grzeskowiak, F., Gand´ıa, A.L., Amirian, J., Berton, F., Bruneau,
J., Daniel, B.C., Jovane, A., Pettr´e, J.: Generalized microscropic crowd simu-
lation using costs in velocity space. In: Symposium on Interactive 3D Graph-
ics and Games. I3D ’20. Association for Computing Machinery, New York,
NY, USA (2020). https://doi.org/10.1145/3384382.3384532 . https://doi.org/10.
1145/3384382.3384532
[40] Cabrero-Daniel, B., Marques, R., Hoyet, L., Pettr´e, J., Blat, J.: Dynamic com-
bination of crowd steering policies based on context. Computer Graphics Forum
41(2), 209–219 (2022) https://doi.org/10.1111/cgf.14469
[41] Wu, W., Li, J., Yi, W., Zheng, X.: Modeling crowd evacuation via behavioral
heterogeneity-based social force model. IEEE Transactions on Intelligent Trans-
portation Systems 23(9), 15476–15486 (2022) https://doi.org/10.1109/TITS.
2022.3140823
[42] Wu, W., Chen, M., Li, J., Liu, B., Zheng, X.: An extended social force model
viapedestrianheterogeneityaffectingtheself-drivenforce.IEEETransactionson
Intelligent Transportation Systems 23(7), 7974–7986 (2022) https://doi.org/10.
231109/TITS.2021.3074914
[43] vanToll,W.,Pettr´e,J.:Synchronizingnavigationalgorithmsforcrowdsimulation
via topological strategies. Computers & Graphics 89, 24–37 (2020) https://doi.
org/10.1016/j.cag.2020.04.003
[44] Dong, H., Zhou, M., Wang, Q., Yang, X., Wang, F.-Y.: State-of-the-art pedes-
trian and evacuation dynamics. IEEE Transactions on Intelligent Transportation
Systems 21(5), 1849–1866 (2020) https://doi.org/10.1109/TITS.2019.2915014
[45] Lu, Y., Ruan, X., Huang, J.: Deep reinforcement learning based on social spa-
tial–temporalgraphconvolutionnetworkforcrowdnavigation.Machines10,703
(2022) https://doi.org/10.3390/machines10080703
[46] Li, Y., Huang, T., Liu, Y., Chang, X., Ding, G.: Anchor-based crowd forma-
tiontransformation.ComputerAnimationandVirtualWorlds33(5),2111(2022)
https://doi.org/10.1002/cav.2111
[47] He, W., Pan, G., Wang, X., Chen, J.X.: Real-time crowd formation control in
virtual scenes. Simulation Modelling Practice and Theory 122, 102662 (2023)
https://doi.org/10.1016/j.simpat.2022.102662
[48] McIlveen, J., Maddock, S., Heywood, P., Richmond, P.: PED: Pedestrian Envi-
ronment Designer. In: Turkay, C., Wan, T.R. (eds.) Computer Graphics and
Visual Computing (CGVC). The Eurographics Association, ??? (2016). https:
//doi.org/10.2312/cgvc.20161304
[49] Normoyle, A., Likhachev, M., Safonova, A.: Stochastic activity authoring with
directusercontrol.In:Proceedingsofthe18thMeetingoftheACMSIGGRAPH
Symposium on Interactive 3D Graphics and Games. I3D ’14, pp. 31–38. Associa-
tion for Computing Machinery, New York, NY, USA (2014). https://doi.org/10.
1145/2556700.2556714 . https://doi.org/10.1145/2556700.2556714
[50] Chen, C.-Y., Wong, S.-K., Liu, W.-Y.: Generation of small groups with rich
behaviors from natural language interface. Computer Animation and Virtual
Worlds 31(4-5), 1960 (2020) https://doi.org/10.1002/cav.1960
[51] Liu, W.-Y., Wong, S.-K., Chen, C.-Y.: A natural language interface with casual
users for crowd animation. Computer Animation and Virtual Worlds 31(4-5),
1965 (2020) https://doi.org/10.1002/cav.1965
[52] Cartee, E., Vladimirsky, A.: Anisotropic challenges in pedestrian flow modeling.
Communications in Mathematical Sciences 16 (2017) https://doi.org/10.4310/
CMS.2018.v16.n4.a7
[53] Rempe,D.,Luo,Z.,Peng,X.B.,Yuan,Y.,Kitani,K.,Kreis,K.,Fidler,S.,Litany,
24O.:Traceandpace:Controllablepedestriananimationviaguidedtrajectorydiffu-
sion.In:IEEEConferenceonComputerVisionandPatternRecognition(CVPR)
(2023)
[54] Charalambous, P., Pettre, J., Vassiliades, V., Chrysanthou, Y., Pelechano, N.:
Greil-crowds: Crowd simulation with deep reinforcement learning and examples.
ACM Trans. Graph. 42(4) (2023) https://doi.org/10.1145/3592459
[55] Hu, K., Haworth, B., Berseth, G., Pavlovic, V., Faloutsos, P., Kapadia, M.:
Heterogeneous crowd simulation using parametric reinforcement learning. IEEE
Transactions on Visualization and Computer Graphics 29(4), 2036–2052 (2023)
https://doi.org/10.1109/TVCG.2021.3139031
[56] Yan, D., Ding, G., Huang, K., Huang, T.: Generating natural pedestrian crowds
by learning real crowd trajectories through a transformer-based gan. The Visual
Computer, 1–18 (2024) https://doi.org/10.1007/s00371-024-03385-4
[57] Newnham, R.E.: Properties of Materials: Anisotropy, Symmetry, Struc-
ture. Oxford University Press, ??? (2004). https://doi.org/10.1093/oso/
9780198520757.001.0001 . https://doi.org/10.1093/oso/9780198520757.001.0001
[58] Hosford, W.F.: Mechanical Behavior of Materials. Cambridge University Press,
??? (2005). https://doi.org/10.1017/CBO9780511810930
[59] Barron, J., Fleet, D., Beauchemin, S.: Performance of optical flow techniques.
International Journal of Computer Vision 12, 43–77 (1994) https://doi.org/10.
1007/BF01420984
[60] Nielsen, F.: On a variational definition for the jensen-shannon symmetrization of
distancesbasedontheinformationradius.Entropy23(4)(2021)https://doi.org/
10.3390/e23040464
[61] Sundararajan, D.: Morphological Image Processing, pp. 217–256 (2017). https:
//doi.org/10.1007/978-981-10-6113-4 8
[62] Dendorfer, P., Rezatofighi, H., Milan, A., Shi, J., Cremers, D., Reid, I., Roth, S.,
Leal-Taix´e, L.: Mot20: A benchmark for multi object tracking in crowded scenes
(2020)
[63] Lorenz, E.N.: Section of planetary sciences: The predictability of hydrodynamic
flow*,†. Transactions of the New York Academy of Sciences 25(4 Series II), 409–
432 (1963) https://doi.org/10.1111/j.2164-0947.1963.tb01464.x
25