Multi-Agent Obstacle Avoidance using Velocity Obstacles
and Control Barrier Functions
Alejandro Sa´nchez Roncero, Rafael I. Cabral Muchacho and Petter O¨gren
Abstract—VelocityObstacles(VO)methodsformaparadigm
for collision avoidance strategies among moving obstacles and
agents. While VO methods perform well in simple multi-agent
environments,theydon’tguaranteesafetyandcanshowoverly
conservative behavior in common situations. In this paper, we
propose to combine a VO-strategy for guidance with a CBF-
approach for safety, which overcomes the overly conservative
behavior of VOs and formally guarantees safety. We validate
our method in a baseline comparison study, using 2nd order
integrator and car-like dynamics. Results support that our
method outperforms the baselines w.r.t. path smoothness, col-
lision avoidance, and success rates.
I. INTRODUCTION
InthispaperweproposeanewcombinationVOandCBF
formulti-agentcollisionavoidance.WeusetheclassicalCBF
formulationofcontinuouslysolvinganoptimizationproblem Fig.1. AnillustrationofhowVOtermsinthestrictCBFconstraintcan
to get a control input that is close to a desired one, while leadtoveryconservativebehavior.Thetrajectoriesoftworedagentsaiming
to reach a desired position are compared when subject to a strict (right)
still guaranteeing safety. But instead of treating the VO as
or a relaxed (left) Velocity Obstacle inequality constraint. The initial VO
a constraint in this optimization, as [1], we move it into the inducedbytheblueagentisillustratedasthelightgrayregions.Therelaxed
objective function, as suggested in [2], while keeping a less constraintallowstheredagentonthelefttopursueamoredirecttrajectory
towardsthedestination,whilethestrictconstraintsmakesitimpossiblefor
restrictive CBF in the constraint to guarantee safety.
theredagentontherighttoturninfrontoftheblueagent,sincetheturn
Multi-agent collision avoidance is a well studied problem atsomepointincludesavelocitythatwouldleadtoaacollisionifitwas
with important applications in automated warehouses, au- keptconstant.Insteadtheredagentontherighthastopassbehindtheblue
agent.Inascenariowithmoreagents,similarconcernscanleadtoavery
tonomous driving and airborne drone delivery systems. The restrictedsetofoptions.
idea of VO was first proposed in [3], with a number of
refinements in e.g. [4], [2], [1], and a nice recent survey
in [5]. The key idea is to make the assumption that all other to collisions. This problem is underlined by the numerical
agents, at least temporarily, will keep a constant velocity, investigations of [6], where none of the VO approaches
makesureyourownvelocityissuchthatnocollisionsoccur, manages to avoid collisions in all scenarios.
and keep repeating this as the world changes. This family of
An efficient tool for guaranteeing safety in autonomous
approaches have been shown to be very efficient in handling
roboticsisCBFs[7].ThecentralideainCBFsistoformulate
challenging scenarios with many agents involved. However,
the safety constraint in terms of a scalar function, and then
as was noted in [2], the approach might be overly conserva-
control the time derivative of that function, in a way similar
tive in some scenarios, where it leads to the conclusion that
to control Lyapunov functions [8], so that the system never
there are no admissible velocity choices left.
reaches the un-safe region.
A standard way of resolving this is to introduce a time
Combining VO and CBFs is a natural idea, and has been
horizon, where only potential collisions within that horizon
investigated in [1], [9], [10]. In these papers, the VO was
are considered. This might lead to sudden changes in the
included in the constraints of the CBF. However, as noted
control, and it was argued in [2] that it makes more sense
by [2], see above, this might exclude a large part of the
to move the VO into the objective of an optimization,
available control options in a scenario with many agents.
whereactionsleadingtocollisionsarepenalized,withhigher
The main contribution of this paper is that we combine
weight given to more urgent cases. However, none of the
the ideas of [1] and [2] by merging CBFs and VO, but not
classical VO papers include safety guarantees with respect
by adding the VO as a hard constraint, but by using a slack
variable to bring the VO into the objective function, while
This work was partially supported by the Wallenberg AI, Autonomous
Systems and Software Program (WASP) funded by the Knut and Alice keeping another, less restrictive CBF constraint to guarantee
WallenbergFoundation.TheauthorsarewiththeRobotics,Perceptionand safety.
Learning Lab., School of Electrical Engineering and Computer Science,
The outline of the paper is as follows. In Section II we
Royal Institute of Technology (KTH), SE-100 44 Stockholm, Sweden
petter@kth.seDigitalObjectIdentifier(DOI):seetopofthispage. provide a brief background on CBFs and VO, and related
4202
peS
61
]OR.sc[
1v71101.9042:viXrawork witin the area can be found in Section III. Then,
in Section IV we present the proposed approach and the
theoretical safety guarantees. The simulation results can
be found in Section V, and conclusions can be found in
Section VI.
II. BACKGROUND
In this section we will describe the two approaches that
weseektocombine.FirstwereviewthecoreresultofCBFs,
and then the VO approach. Finally, we briefly describe the
motion models used in the examples.
A. Control Barrier Functions
CBFshavetheirrootsinLyapunovTheory[8],andanice
overview can be found in [7]. Let the system dynamics be
control affine, i.e.,
Fig.2. IllustrationofthekeyideaandnotationinVO.IfagentAchooses
x˙ =f(x)+g(x)u, (1) avelocityoutsidethedarkcone,itwillnotcollidewithagentB.
wherex∈Rn,u∈Rm,f :Rn →Rn andg:Rn →Rn×m.
Let the safe set be given by C ={x:h(x)≥0}, where h think of the lower tip as a collision at t = ∞). Note that
dependsonlyonthestateandhastosatisfysomeproperties. the dark cone extends infinitely upwards (but this is hard to
Then, given the system dynamics f(x,u), if the set illustrate in a figure).
dh Formally the concept above gets a bit messy, but we can
K ={u∈U : (f(x)+g(x)u)≥−α(h(x))}, (2) describeitasfollows(allowingarbitraryshapesforAandB
dx
byusingthe⊕-notation).Firstwedefinesomesetoperations
is non-empty for all x, and if we choose controls u inside
for A,B ⊂Rn and p,v∈Rn.
K, we are guaranteed to stay in the safe set x ∈ C, see
[7]. Above, α is a so-called class K function, that is α : A⊕B ={a+b|a∈A,b∈B}, (6)
R →R ,α(0)=0 and α is strictly monotonic increasing,
+ + −A={−a|a∈A} (7)
see Theorem 2 in [7]. Also note that sometimes the Lie-
τ(p,v)={p+tv|t≥0}, (8)
derivative notation is used, where
dh dh where τ(·) maps a state (p,v) to its future trajectory
x˙ = (f(x)+g(x)u)=L h(x)+L h(x)u. (3)
dx dx f g assuming constant velocity. Let two agents have positions
p ,p and velocities v ,v , all in Rn. The velocity
If some desired control is given by u = k(x), we A B A B
des
obstacle caused by B from the perspective of A is thus
can formulate the following optimization problem to find a
VOA(v )={v |τ(p ,v −v )∩B⊕−A̸=∅}.
control u that is close to k(x) while still inside K, thereby B B A A A B
keeping the state inside the safe set C, [7] C. Vehicle motion models used in the simulations
1
u(x)=argmin ||u−k(x)||2 (4) Herewedescribethedifferentmodeldynamicsconsidered
u 2 in this work. It should be noted that other models might
s.t. u∈K. (5) equally work and have not been considered here.
For the double integrator in 2 dimensions we have x =
Thekeyobservationabouttheproblemaboveisthatitisa
(p ,p ,v ,v )T ∈R4 and u∈R2, giving the affine form
so-calledQuadraticProgramming(QP)problem(Linearcon- 1 2 1 2
straintsandquadraticobjectivefunction)whichcanbesolved x˙ =f(x)+g(x)u, (9)
to optimality very efficiently, allowing the QP-solution to be
part of a closed control loop. with
   
v 0 0
1
B. Velocity Obstacles f(x)= v 2
,
g(x)= 0 0
. (10)
TheideaofVelocityObstacles(VO)wasintroducedin[3]
0 1 0
0 0 1
and refined in e.g. [4], [2], [1]. The key idea is illustrated in
Figure 2. If agent B is moving with fixed velocity, we can
For the car we have
study the avoidance problem from the perspective of agent
A. If agent A chooses the same velocity as agent B (at the p˙ 1 =vcosθ (11)
lower tip of the darker cone) the relative distance will not p˙ =vsinθ (12)
2
change. If a component is then added moving towards B, θ˙ =v/Ltanϕ (13)
there will be a collision at some point. The higher up in the
v˙ =a, (14)
dark cone, the sooner the collision will happen (we mightwhere p 1,p
2
is the position, θ represents the orientation of IV. METHOD
thecar,v isthespeed,Listhewheelbasedistance,tan(ϕ)is
Instead of using velocity obstacles to directly ensure
thesteeringcontrolandaistheaccelerationcontrol.Writing
safety, we employ them for guidance through a relaxed
the above in the affine form x˙ = f(x)+g(x)u, with x =
inequality constraint, and use a valid CBF to guarantee the
(p ,p ,θ,v), and u=(tanϕ,a) we get
1 2 safe behavior of agents, asuming that all agents seek to
   
vcosθ 0 0 avoid collisions and that environments are non-degenerate.
vsinθ  0 0 Altogether the optimization problem is formulated as
f(x)= , g(x)= . (15)
 0  v/L 0
0 0 1 n (cid:88)obs
u =argmin k ∥u −u ∥2+k w λ2 (16)
i u i ref,i vo ij ij
Note that we treat tanϕ as the control variable to avoid ui
j=1
having a nonlinear expression in u. s.t. h˙ +α (h )≥λ (17)
vo,ij vo vo,ij ij
III. RELATEDWORK h˙ +α (h )≥0 (18)
c,ij c c,ij
Collision avoidance in multi-agent systems is a huge field
u∈U, (19)
in itself, with subfields such as path planning [11], model
predictive control (MPC) [12], [13] and artificial potential where U = {u ∈ Rm | ∥u∥ ≤ u } represents the valid
max
functions [14]. This paper is about merging the ideas of VO input set. In this section we describe in detail the functions
and CBFs so we will focus the description of related work and variables composing the above optimization problem,
in these two areas. starting with the objective function and then finishing with
The idea of velocity obstacles was introduced in [3] and the constraints guaranteeing safety.
extended in a number of papers [15], [16], [4], [17], that
haverefinedanddevelopedtheconceptsince.Oneidentified A. Objective Function
issuewithVOwastheoscillationproblem.Iftwoagentsare
The objective function for each agent is composed by
facing each other, then they might first select a velocity not
a goal attractive component J and a velocity-obstacle
goal
leading to collision. But in the next timestep, they might
guidance component J . The goal attractive component is
vo
conclude that no collision is imminent, given the current
defined as the squared norm of the difference between the
velocity of the other agent, and then (both) turn back to
optimization variable to a reference input
their initial velocities. This will create an oscillation, and
works such as the Reciprocal Velocity Obstacle (RVO) [15] J =∥u −u ∥2, (20)
goal,i i ref,i
were proposed to resolve it. The RVO was later extended
into the Hybrid RVO by [16] reducing the problem further, where the reference input u ref is given or computed by
by making the velocity obstacles asymmetric, and built a known and state-dependent policy. In a scenario that is
upon in [4], [17] where the problem is reduced to a linear challenging with respect to the static obstacles, this would
programming problem that can be efficiently solved. In a include planning a path that leads to the goal, and then
paperoncombiningVOwithMPC[13],theideaofincluding tracking this path. The path tracking control would then be
VO as constraints in the short horizon motion planning u ref.
problem was explored. The velocity obstacle component is inspired by the VO-
The work that lies closest to our approach within the VO CBF constraint [9]
literature is [2], where a VO term is used as part of the
h (x,t)=pTv +∥p ∥∥v ∥cos(γ ) (21)
objective. We believe that this is a very good design choice, vo,ij ij ij ij ij ij
butourapproachgoesbeyond[2]inthesensethatweinclude h˙ ≥−α (h ), (22)
vo,ij vo vo,ij
a CBF element (not relying on VO) that guarantees safety.
CBFs area toolfor guaranteeingsafety incontrol system. where p ij = p j − p i and v ij = v j − v i represent the
Early works include [18], with an overview in [7], and an relative position and velocity vectors from agent i to j
extension to higher order systems in [19]. In connection to respectively, the angle γ is the semi-angle of the velocity
avoidance of static obstacles, the connection between CBFs obstacle cone with cos(γ ij)=pˆT ijˆℓ ij, where hat denotes the
and artificial potential functions was explored in [20]. normalized vector. The vector ℓ ij points from the i object’s
The work closest to ours within the CBF literature is center, to a point on the augmented j object’s surface and
[10] and [1], where the idea of combining CBFs and VO on the corresponding cone. The notation is also visualized
is proposed. However, in both papers the authors add the in Figure 2. The time derivative of h vo,ij, in (21), removing
VO as a hard constraint, which can be overly restrictive, as object subscripts, is given by
observed in [2] and illustrated in Fig. 1. Thus our approach
h˙ =p˙Tv+pTv˙ +v˙TvˆpTˆℓ+∥v∥p˙Tˆℓ+∥v∥pTˆℓ˙
goes beyond [10], [1] in the sense that the VO constraint is vo
relaxed, and thereby essentially moved into the objective of =uT(p+vˆpTˆℓ)+∥v∥(vTˆℓ+pTˆℓ˙
+∥v∥), (23)
theoptimization,whileanother(non-VO)collisionavoidance
component is added to the CBF to provide the safety which is linear in acceleration u for the double integrator
guarantees. system.Intuitively,theconeCBFconstraint(22)keepstherelative
Parameter 2ndIntegrator CarDynamics
vectorv outsideoftheVelocityObstaclecone.Thus,satis-
ji
fying(22)keepsthesystemsafe,butitisoverlyconstraining Simulationtime 60s 60s
Timestep 10ms 10ms
in many real scenarios, as pointed out in [2], and illustrated
αvo 10 10
inFigure1.Ascanbeseen,thisproblemissignificantinthe αc 10 10
case of a single obstacle, and gets even worse with multiple ku 1 1
obstacles around, potentially making it very difficult to find
kvo 1000 1
Preferredvelocity(v pref) 1m/s -
a velocity outside of the joint set of Velocity Obstacles. The Maximumvelocity(vmax) 2m/s 10m/s
basic formulation used in [10] would result in the agent not Maximumacceleration(umax) 1m/s2 3m/s2
Maximumsteering(tan(ϕ)) - 2
finding any solution to the set of inequalities (other than the
Geometrictolerance 10% 10%
trivial 0 if its velocity is 0). To overcome this problem, we Goalpositiontolerance 0.5m 1m
incorporate the VO as part of the objective by introducing AgentRadii 0.5m 1m
Car’scharacteristiclength(L) 1m 1m
an auxiliary (slack) variable λ in Equation (22), giving
Pcoefficient 1 0.2
h˙ +α (h )≥λ . (24) Dcoefficient 0.5 -
vo,ij vo vo,ij ij Nsamplingpoints 250 -
ktp,k vd,c1,c2 2,1,1,1 -
and then penalizing this slack variable in the objective as
TABLEI
J vo,ij =λ2 ij. (25) MAINPARAMETERSOFTHESIMULATION.
Thetotalobjectivefunctionnowbecomesaweightedsum
of the objective components,
ν <0, we obtain the derivative
m ij
(cid:88)
J i =k uJ goal,i+k vo w ijJ vo,ij, (26) h˙ =d˙ − ν ij (uTpˆ +vTpˆ˙ ) (30)
j=1 c,ij ij u max ij ij ij ij
with constant positive scaling factors k ,k ∈ R. The and the corresponding linear inequality constraint
u vo
weightsarecomputedasafunctionofanapproximate(linear h˙ (u )+α (h )≥0, (31)
c,ij ij c c,ij
extrapolation of positions) time-to-collision T between
col,ij
objects i and j where α c is a class K function. The case where ν ij = 0
arises only with a non-increasing distance between objects,
1
w = . (27) and therefore the inequality constraint (31) is fulfilled for
ij T
col,ij any acceleration.
If objects i and j don’t collide according to the used model,
V. EXPERIMENTS
then T →∞ and we set w =0. When using a linear
col,ij ij
In this section, we evaluate our method in multi-agent
model for extrapolation, the time-to-collision and therefore
scenarios, through a baseline comparison study and in a
theweightsaresymmetric,i.e.,w =w .Thechoiceofan
ij ji
validation scenario with car-like dynamics. We show that
inversetime-to-collisionforweightingencodesthatanagent
should dedicate more effort to avoid objects with which it 1) the formal safety guarantee translates into safe agent
would collide sooner if no further action is taken. behavior in practice,
2) the VO-based component successfully guides the
B. Safety-Critical Constraint agents through the tasks,
3) our method outperforms baselines w.r.t. path smooth-
The safety of agents is formally guaranteed by a CBF
ness, collision avoidance, and success rates.
based on position and velocity for collision avoidance [21],
[22].Thefunctionh implicitlydescribessafestatesasstates
c A. Setup
atwhichthedistancetoanobstacleishigherthanthebraking
Our approach is implemented in MATLAB and
distance at maximum acceleration or braking effort.
Simulink3D. For simplicity, agents are modeled as
Thevariabled representstheminimumdistancebetween
ij
spheres with constant radii. We evaluate both 2nd-
the i and j objects. We assume objects are convex, and
order integrator dynamics and car-like dynamics, given
therefore each of their distance functions is continuously
by Equations (10), (15) respectively. We assume full
differentiable. A valid CBF for double integrator systems
knowledge of the environment, including the positions,
with saturated input ∥u∥≤u is
max
velocities,anddimensionsoftheagents.Whiletheapproach
ν2 can be extended to handle more general agent shapes or
h =d −δ− ij (28)
c,ij ij 2u uncertainties in position and velocity, see [16], we focus
max
v =min(cid:0) 0,vTpˆ (cid:1) , (29) here on deterministic settings.
ij ij ij
We run simulations with fixed timesteps, with the control
with the safety margin δ ≥ 0. The time derivative of the output calculated for each agent at each step. The states are
function (28) is linear on the acceleration. In the case where updated simultaneously for all agents. For our model, weFig.3. Visualizationoftheresultingtrajectoriesinthebaselinecomparisonstudy.Thearrowsineachcorrespondingcolordescribesthedirectionofmotion
ofeachagent.Ourmethod(left-mostcolumn)remainsstableandcomputessmoothtrajectoriesforallevaluatedscenarios.ThehVOmethodencountered
infeasibility(noavailablesafevelocities)inthescenarioswith8and12agents.Theaspectratioisequalforbothdimensionsandthescaleisgivenby
thebottomleftreference.
define constraints and solve the optimization problem using where ktp balances deviating from the VO cone and fol-
kvd
MATLAB’s linear least-squares solver at each timestep. The lowing the desired control input, and c , c are constants.
1 2
acceleration is constrained during optimization, and forward d and t represent the clearance and pass time, closely re-
v p
Euler integration is used to propagate the resulting accelera- lated to a separation between obstacles and time-to-collision
tions to compute velocities and positions. Further details on respectively (we refer the reader to [2] for further details).
the simulation setup are provided in Table I. We recover the hVO formulation by setting k and the
cone
slack variables (λ ) to 0 while removing the safety-critical
B. Comparison to Baselines i
constraints.
1) Setup: Asbaselines,weusedVelocityObstacles(VO),
The time-to-collision (TTC) is computed assuming con-
Reciprocal Velocity Obstacles (RVO), Collision Cone CBF
stant velocity, solving for the time t such that
(hVO),andOptimalVelocityselectionusingVelocityObsta-
cle (OVVO). For implementation, we followed the method- τ(p ,v′ −v )∩B⊕−A (VO) (34)
A A B
ology outlined in [15], [2], while focusing on the 2nd- τ(p ,2·v′ −v −v )∩B⊕−A (RVO), (35)
A A A B
order integrator dynamics. To handle the fact that the other
approaches had no explicit motion model, with control u, where v′ is the desired velocity for agent A. The selected
A
wedidasfollows.Ateachtimestep,wedefineandsamplea velocityisdividedbythetimesteptoobtainthecontrolinput.
setofadmissiblevelocitiesbasedonthemaximumallowable All models’ parameters are manually tuned with minimal
acceleration and timestep. For VO and RVO, we select the effort to evaluate qualitative performance. No optimization
one that minimizes (analogous to (16)) the penalty is applied. The control scheme is PD-based, using position
error as the input to guide the agents toward their goals.
1
J VO,RVO = TTC +||v−v des||, (32) We evaluate our method in a circular formation scenario
to compare its performance against the baselines. Agents
where TTC is the minimum TTC among obstacles. For
are equidistantly positioned on a circle with zero initial
OVVO, the penalty is expressed as
velocity,andtheirgoalistoreachthediametricallyopposite
J =k d−c1t−c2 +k ||v−v ||, (33) point. This naturally creates conflicting trajectories, leading
OVVO tp v p vd desto potential collisions. As the system is deterministic, we
add noise to the initial position to compute statistics. We
examine cases with 2, 4, 8, and 12 agents, all governed by
2nd-orderintegratordynamics.Eachscenarioisrun10times
and statistics are reported.
2) Results: Results are summarized in Table II and vi-
sualized in Figure 3. Qualitatively, our method produces
smoother trajectories compared to the baselines. While all
methods perform well with few agents, increasing the num-
ber of agents resulted in greater challenges, particularly for
VO, hVO, and OVVO, leading to numerous collisions or
Fig.4. Trajectorieswhenapplyingtheproposedapproachtocars.
low success rates. RVO performs better than the others, but
still could not completely avoid collisions, as seen in the
Simulation Computation
12-agent case. In contrast, our approach consistently yielded N.A Method S.R. Collisions
Time(s) Time(ms)
zero collisions, as predicted by the safety guarantees.
Ours 1 0.00±0.00 15.28±0.06 4.86±1.09
In terms of success rate, hVO fails at 8 and 12-agent
VO 1 0.00±0.00 15.18±0.08 3.84±0.70
scenarios. At the start of the simulations, all agents are in 2 RVO 1 0.00±0.00 15.13±0.08 3.64±0.50
a safe state with 0 velocity. This leads them to choose a hVO 1 0.00±0.00 15.25±0.08 5.00±0.00
OVVO 1 0.00±0.00 17.66±0.34 13.86±1.11
velocity towards their goals. Thus, at the next timestep all
of them are facing each other with colliding velocities, and Ours 1 0.00±0.00 17.39±0.76 4.98±0.76
VO 1 0.00±0.00 17.31±1.36 10.82±0.60
sincethescenarioiscrowdedandaccelerationisconstrained,
4 RVO 1 0.00±0.00 15.77±0.84 10.32±0.72
nofeasiblesolutionisfoundtotheproblemwithoutrelaxing hVO 0.8 0.00±0.00 14.45±6.17 5.60±0.00
theconstraints.Intermsofcompletiontime,RVOperformed OVVO 1 0.00±0.00 30.62±8.22 28.24±2.30
best, with our approach second, but never needing more that Ours 1 0.00±0.00 21.2±0.82 4.96±0.81
VO 1 0.80±1.40 27.28±7.78 12.70±4.73
10% extra time to finish.
8 RVO 1 0.00±0.00 19.76±1.40 18.11±0.70
Regarding computation time, solving the quadratic pro- hVO 0 0.00±0.00 0.73±0.22 6.99±0.26
gramming problem in our method proved faster and more OVVO 0.6 3.50±4.50 29.69±16.43 48.09±3.13
efficient than the random sampling process used by the Ours 1 0.00±0.00 25.38±1.91 6.18±0.06
baselines. However, our approach did incur some overhead VO 1 15.00±6.78 33.24±5.37 17.30±6.37
12 RVO 1 0.30±0.95 23.43±1.98 24.94±1.12
due to the need to compute constraints for all agents.
hVO 0 0.00±0.00 0.65±0.11 7.90±0.60
Thus, while our method is similar to RVO in overall OVVO 0 13.80±5.63 29.80±26.06 70.40±3.68
performance, it provides safety guarantees. Moreover, the
TABLEII
smoother trajectories might provide less wear and tear in
RESULTSOFTHEEXPERIMENTS.THEENTRIESMARKEDINREDHAVE
hardware over time.
SIGNIFICANTFAILURESINTERMSOFEITHERSUCCESSRATE(S.R.,
RVO,whilefaster,assumesadegreeofcooperationamong
REACHINGTHEGOAL)ORCOLLISIONS.OUTOFTHENON-REDROWS,
agents, whereas our method is more general and can be
THEBESTINTERMSOFSIMULATIONTIMEANDCOMPUTATIONTIME
employed in decentralized systems. Since the constraints
AREWRITTENINBOLDFONT.N.A–NUMBEROFAGENTS.SIMULATION
are linear, we get a Quadratic Programming problem (QP),
TIME–AVERAGETOTALEPISODELENGTH.COMPUTATIONTIME–PER
keepingcomputationalcomplexityunchanged—animportant
ITERATIONSOLVEANDSAMPLINGTIME,RESPECTIVELY.
advantage for scaling to larger problems.
C. Car Dynamics Example
Weextendtheexperimentstocar-likedynamics,seeEqua-
VOs as hard constraints. The simulation comparisons show
tion (15), maintaining the same methodology. Two scenarios
that the proposed approach goes beyond the existing ones in
are evaluated: one with 4 agents and another with 8 agents,
terms of path smoothness, success rates and collision rates.
where the agents are tasked to reach the diametrically-
opposite location. The results are consistent with the 2nd- REFERENCES
order integrator dynamics. As can be seen in Figure 4,
the resulting trajectories are smooth, and the non-holonomic [1] M.Tayal,R.Singh,J.Keshavan,andS.Kolathaya,“ControlBarrier
Functions in Dynamic UAVs for Kinematic Obstacle Avoidance: A
agents successfully adapted to each other.
Collision Cone Approach,” in 2024 American Control Conference
(ACC). Toronto,ON,Canada:IEEE,Jul.2024,pp.3722–3727.
VI. CONCLUSION [2] M. Kim and J.-H. Oh, “Study on optimal velocity selection using
velocity obstacle (OVVO) in dynamic and crowded environment,”
In this paper we have shown how to combine CBFs
AutonomousRobots,vol.40,no.8,pp.1459–1470,Dec.2016.
with VO in a way that guarantees safety, makes use of the [3] P.FioriniandZ.Shiller,“MotionPlanninginDynamicEnvironments
potential efficiency provided by the VO by including it in Using Velocity Obstacles,” The International Journal of Robotics
Research,vol.17,no.7,pp.760–772,Jul.1998.
the objective of the optimization, overcoming the downside
[4] J. Van Den Berg, Ming Lin, and D. Manocha, “Reciprocal Velocity
of being overly conservative that results from considering Obstacles for real-time multi-agent navigation,” in 2008 IEEE Inter-national Conference on Robotics and Automation. Pasadena, CA, mulationinrobotcontrol,”inAdaptiveandLearningSystems:Theory
USA:IEEE,May2008,pp.1928–1935. andApplications. Springer,1986,pp.367–377.
[5] F. Vesentini, R. Muradore, and P. Fiorini, “A survey on Velocity [15] J. Van Den Berg, S. J. Guy, M. Lin, and D. Manocha, “Reciprocal
Obstacle paradigm,” Robotics and Autonomous Systems, vol. 174, p. n-bodycollisionavoidance,”inRoboticsResearch:The14thInterna-
104645,Apr.2024. tionalSymposiumISRR. Springer,2011,pp.3–19.
[6] J. A. Douthwaite, S. Zhao, and L. S. Mihaylova, “Velocity Obstacle [16] J.Snape,J.VanDenBerg,S.J.Guy,andD.Manocha,“Thehybrid
Approaches for Multi-Agent Collision Avoidance,” Unmanned Sys- reciprocalvelocityobstacle,”IEEETransactionsonRobotics,vol.27,
tems,vol.07,no.01,pp.55–64,Jan.2019. no.4,pp.696–706,2011.
[7] A.D.Ames,S.Coogan,M.Egerstedt,G.Notomista,K.Sreenath,and [17] J.Alonso-Mora,A.Breitenmoser,M.Rufli,P.Beardsley,andR.Sieg-
P.Tabuada,“ControlBarrierFunctions:TheoryandApplications,”in wart, “Optimal reciprocal collision avoidance for multiple non-
201918thEuropeanControlConference(ECC),Jun.2019,pp.3420– holonomicrobots,”inDistributedAutonomousRoboticSystems:The
3431. 10thInternationalSymposium. Springer,2013,pp.203–216.
[8] S. Sastry, Nonlinear Systems: Analysis, Stability, and Control. [18] A.D.Ames,X.Xu,J.W.Grizzle,andP.Tabuada,“ControlBarrier
SpringerScience&BusinessMedia,2013,vol.10. Function Based Quadratic Programs for Safety Critical Systems,”
[9] M. Tayal and S. Kolathaya, “Polygonal Cone Control Barrier Func- IEEE Transactions on Automatic Control, vol. 62, no. 8, pp. 3861–
tions(PolyC2BF)forSafeNavigationinClutteredEnvironments,”in 3876,Aug.2017.
2024EuropeanControlConference(ECC),Jun.2024,pp.2212–2217. [19] W. Xiao and C. Belta, “Control Barrier Functions for Systems with
[10] P.Thontepu,B.G.Goswami,M.Tayal,N.Singh,S.S.PI,S.S.MG, High Relative Degree,” in 2019 IEEE 58th Conference on Decision
S.Sundaram,V.Katewa,andS.Kolathaya,“CollisionConeControl andControl(CDC). Nice,France:IEEE,Dec.2019,pp.474–479.
Barrier Functions for Kinematic Obstacle Avoidance in UGVs,” in [20] A. Singletary, K. Klingebiel, J. Bourne, A. Browning, P. Tokumaru,
2023NinthIndianControlConference(ICC). Visakhapatnam,India: andA.Ames,“ComparativeAnalysisofControlBarrierFunctionsand
IEEE,Dec.2023,pp.293–298. ArtificialPotentialFieldsforObstacleAvoidance,”in2021IEEE/RSJ
[11] V.R.DesarajuandJ.P.How,“Decentralizedpathplanningformulti- International Conference on Intelligent Robots and Systems (IROS),
agentteamswithcomplexconstraints,”AutonomousRobots,vol.32, Sep.2021,pp.8129–8136.
pp.385–403,2012. [21] A.Ghaffari,I.Abel,D.Ricketts,S.Lerner,andM.Krstic´,“Safetyver-
[12] J.V.Frasch,A.Gray,M.Zanon,H.J.Ferreau,S.Sager,F.Borrelli, ificationusingbarriercertificateswithapplicationtodoubleintegrator
and M. Diehl, “An auto-generated nonlinear MPC algorithm for withinputsaturationandzero-orderhold,”in2018AnnualAmerican
real-time obstacle avoidance of ground vehicles,” in 2013 European ControlConference(ACC). IEEE,2018,pp.4664–4669.
ControlConference(ECC). IEEE,2013,pp.4136–4141. [22] Y.Chen,M.Jankovic,M.Santillo,andA.D.Ames,“Backupcontrol
[13] N. Piccinelli, F. Vesentini, and R. Muradore, “MPC Based Motion barrier functions: Formulation and comparative study,” in 2021 60th
Planning For Mobile Robots Using Velocity Obstacle Paradigm,” in IEEEConferenceonDecisionandControl(CDC). IEEE,2021,pp.
2023EuropeanControlConference(ECC),Jun.2023,pp.1–6. 6835–6841.
[14] O. Khatib, “The potential field approach and operational space for-