July19,2024 arxiv main
Temporal Representation Learning for Stock
Similarities and Its Applications in Investment
Management
Yoontae Hwang1, Stefan Zohren2, and Yongjae Lee1
1Ulsan National Institute of Science and Technology, Ulsan, Republic of Korea 2University of
Oxford, Oxford, UK
(June 17, 2024)
In the era of rapid globalization and digitalization, accurate identification of similar stocks has become
increasingly challenging due to the non-stationary nature of financial markets and the ambiguity in
conventionalregionalandsectorclassifications.Toaddressthesechallenges,weexamineSimStock,anovel
temporalself-supervisedlearningframeworkthatcombinestechniquesfromself-supervisedlearning(SSL)
and temporal domain generalization to learn robust and informative representations of financial time
seriesdata.Theprimaryfocusofourstudyistounderstandthesimilaritiesbetweenstocksfromabroader
perspective, considering the complex dynamics of the global financial landscape. We conduct extensive
experiments on four real-world datasets with thousands of stocks and demonstrate the effectiveness of
SimStockinfindingsimilarstocks,outperformingexistingmethods.Thepracticalutilityof SimStockis
showcasedthroughitsapplicationtovariousinvestmentstrategies,suchaspairstrading,indextracking,
and portfolio optimization, where it leads to superior performance compared to conventional methods.
Our findings empirically examine the potential of data-driven approach to enhance investment decision-
making and risk management practices by leveraging the power of temporal self-supervised learning in
the face of the ever-changing global financial landscape.
Keywords: Representation learning, Self-supervised learning, Temporal domain generalization,
Financial time series, Stock similarity, Pairs trading, Index tracking, Portfolio optimization
JEL Classification: C45, C58, C67, G11, G17
1. Introduction
The identification of similar stocks is an essential task in finance, with far-reaching implications for
portfoliodiversificationandriskmanagement.Traditionally,thesimilaritybetweenstockshasbeen
determined based on factors such as industry sector, geographical location, and market capitaliza-
tion.However,intheeraofrapidglobalizationanddigitization,theseconventionalapproacheshave
become increasingly inadequate in capturing the complex dynamics of the global financial land-
scape. The rapid pace of globalization has led to the emergence of intricate relationships among
companies across different sectors and regions. Multinational corporations now operate in multiple
countries, blurring the lines between traditional sector classifications. Additionally, the rise of digi-
tal technologies has given birth to new industries and business models that transcend geographical
boundaries. As a result, the similarities between stocks can no longer be accurately captured by
Correspondingauthor.Email:stefan.zohren@eng.ox.ac.uk
Correspondingauthor.Email:yongjaelee@unist.ac.kr
1
4202
luJ
81
]PC.nif-q[
1v15731.7042:viXraJuly19,2024 arxiv main
relying solely on regional or sector-based classifications. Moreover, the non-stationary nature of
financial markets poses significant challenges to the identification of similar stocks. The statistical
properties of financial time series, including returns and correlations, are subject to change over
time, a phenomenon known as concept drift or temporal shift (Lu et al. 2018, Bai et al. 2022).
Consequently, similarity measures based on historical data may become unreliable and fail to cap-
ture the evolving dynamics of the market. Indeed, (Wan et al. 2021) showed that news data can
be useful for modelling evolving company relationships.
Recent advances in deep learning-based methods in finance domain have shown promise in pre-
dicting the desired parameters from the given data (Zhang et al. 2020). However, financial time
seriesdatapresentsuniquechallenges.Theparametersofinterest,suchasexpectedreturns,arenot
only difficult to predict due to the presence of excessive noise, but also the labels that can help the
model extract hidden patterns in the data are often not well-defined. Moreover, the complex inter-
actions among various financial assets and the impact of external factors, such as macroeconomic
variables and market sentiment, further complicate the estimation process.
Onepromisingsolutiontotacklethesechallengesistoleveragerepresentationlearningtechniques
toextractmeaningfulembeddingsfromunlabeledfinancialtimeseriesdata,takingintoaccountfor
temporaldistributionshifts.Bylearningrobustandinformativerepresentations,wecancapturethe
complex relationships between different assets and exploit the inherent structure in the data. Self-
supervised learning (SSL) has emerged as a powerful paradigm for learning such representations
from unlabeled data, with successful applications in various domains, including computer vision
(Chen et al. 2020, He et al. 2020) and natural language processing (Devlin et al. 2018, Yang et al.
2019). SSL enables the model to learn meaningful representations by solving pretext tasks that do
not require explicit labels, making it particularly suitable for scenarios where labeled data is scarce
or expensive to obtain. However, while these methods are useful for exploiting inductive biases in
data used in any domain, their use for financial time series data has been less explored.
Time series data exhibits distinct characteristics, such as seasonality, trend, and interaction
between stocks, which require careful consideration when designing SSL frameworks. Furthermore,
the non-stationary nature of financial markets necessitates the development of techniques that can
adapt to distribution shifts and generalize well to future time periods. Most existing SSL methods
focus on learning invariant representations (Chen et al. 2020, He et al. 2020), assuming that the
data distribution remains stationary. However, this assumption does not hold in the context of
financial markets, where the underlying dynamics can change over time.
To address these challenges, we combine techniques from SSL and the field of temporal do-
main generalization. Our approach aims to learn general model representations that can adapt to
temporal shifts over time, thereby enhancing the accuracy and robustness of financial parameter
estimation using learned embeddings. By incorporating temporal domain generalization into the
SSL framework, we enable the model to learn representations that are not only informative but
also resilient to distribution shifts.
The main contributions of this paper are as follows:
• We examine a novel temporal Self-Supervised Learning (SSL) framework, SimStock, that
combines SSL with temporal domain generalization to learn robust and informative repre-
sentations of financial time series data. SimStock leverages the power of SSL to capture the
complex relationships between different financial assets while accounting for temporal shifts
in the data distribution;
• We introduce a new corruption method for SSL of stock data, termed dimension corruption,
which integrates temporal patterns into the corruption process. By corrupting the input data
along different dimensions, such as time, asset, and feature, SimStock learns representations
that are robust to noise and non-stationarity in the data;
• We conduct extensive experiments on four real-world benchmarks with thousands of stocks
to demonstrate the effectiveness of SimStock in finding similar stocks. Our results show that
SimStock achieves state-of-the-art performance, outperforming existing methods in terms of
2July19,2024 arxiv main
accuracy and robustness. We showcase the practical utility of SimStock in simplifying the
process of screening potential investment opportunities;
• We demonstrate the practical utility of SimStock in various financial applications, including
pairstrading,indextracking,andportfoliooptimization.Weshowthatusingthesimilarstocks
identified by SimStock leads to superior performance compared to conventional methods in
theseapplications,highlightingthepotentialofourapproachtoenhanceinvestmentstrategies
and risk management.
2. Related work
This section explores relevant research in two key areas: Self-Supervised Learning (SSL) for time
seriesdataandtheestimationoffinancialparametersfromhistoricaldata.Wediscussthechallenges
and limitations of applying SSL techniques to time series and review various approaches aimed at
improving the robustness and accuracy of parameter estimation in finance.
2.1. Self-supervised learning for time series data
Self-Supervised Learning (SSL) has emerged as a promising paradigm for learning robust and
generalizable representations from unlabeled data, with successful applications in both computer
vision and natural language processing (NLP) (Chen et al. 2020, Jing and Tian 2020, Zhai et al.
2019, Lee et al. 2019, Qiu et al. 2020, Ruder and Plank 2018, Song et al. 2020). SSL methods
aim to overcome the limitations of traditional supervised learning, which requires large amounts of
manuallylabeleddataandcanproducemodelsthatarenon-robustandsensitivetosmallvariations
in the inputs.
First and foremost, in the field of NLP, Self-Supervised Learning (SSL) methods, such as BERT
(Devlin et al. 2018), GPT (Radford et al. 2019), and their variants (Mann et al. 2020, Touvron
et al. 2023, Jiang et al. 2024), have achieved state-of-the-art results earlier than in other fields by
pre-training on large corpora of unlabeled text data to learn to predict masked words or generate
realistictextsequences.OnereasonforthesuccessofSSLinNLPistheabundanceofunlabeledtext
data. Later, SSL techniques were proposed to learn useful visual features by solving pre-tasks on
unlabeled images, such as predicting the relative positions of image patches or identifying distorted
versions of an image, in order to alleviate the label requirements and enable powerful feature
extractionincomputervisionaswell(Weiet al.2022,Fanget al.2022).Thissequentialadaptation
is not only due to the abundance of unlabeled text data in NLP, but also because language data
is discrete and structured (i.e., words), while image data is high-dimensional, continuous, and
amorphous, as discussed by (He et al. 2020), the success of SSL methodologies in NLP followed by
success in computer vision is a natural result.
In the temporal domain, recent research on SSL methods has predominantly concentrated on
video understanding (Jenni et al. 2020) or action classification (Qian et al. 2021). Video-based
data is particularly suitable for SSL approaches because of the high correlation between frames,
despite its temporal nature. Also, the temporal coherence and continuity present in videos provide
a rich source of information that can be exploited to learn meaningful representations without
the need for extensive manual labeling. Therefore, methodologies used in computer vision, such
as contrastive learning and predictive modeling, can be easily adapted to the video domain. For
instance, recent research leverage SSL techniques to learn patch-level (Yun et al. 2022, Caron
et al. 2021) or region-level (Xiao et al. 2021) representations from videos. These approaches aim
to capture the inherent structure and relationships within video frames, enabling the learning
of meaningful features without relying on explicit labels. By exploiting the temporal coherence
and spatial consistency present in videos, these self-supervised methods can discover emergent
properties and capture rich semantic information.
3July19,2024 arxiv main
However, limited research has been conducted regarding the application of such techniques to
financial data reflecting its temporal characteristics. One of the main reasons for this is the chal-
lenge of generating different views (both positive and negative), which play a key role in self-
supervised representation, in non-stationary time-series data. In the case of financial price data,
it is not straightforward to generate meaningful positive and negative views that capture the in-
herent temporal dependencies and preserve the essential characteristics of the original time series.
Unlike images or text, where various augmentation techniques can be applied to create different
views (e.g.,cropping,flipping,maskingorwordsubstitution)withoutsignificantlyalteringthecore
information, financial time series data is highly sensitive to temporal order and contextual rela-
tionships. Previous studies have applied various methods to generate views for time series data in
order to solve this problem. The work in (Yue et al. 2022) utilized timestamp masking and random
cropping, while (Choi and Kang 2023) employed scaling and permutation techniques. However,
these approaches may not be suitable for time series data that require fine-grained representations.
Next, multivariate time series, which are common in most time series data, present a unique
challenge for Self-Supervised Learning (SSL) methods. Although these time series contain multi-
ple dimensions, the relevant and informative patterns are often confined to a limited number of
dimensions. Consequently, directly applying SSL techniques that have been successful with other
data types to extract meaningful information from time series data becomes difficult, as the sparse
nature of useful information in multivariate time series hinders the effectiveness of these methods.
Third,timeseriesdatapossessdistinctcharacteristics,includingseasonality,trend,andfrequency
domain information (Wen et al. 2020, Wu et al. 2021a). Considering how SSL works, in sequential
data, the hidden patterns of the data are used based on the ”current time” that the data is
being learned. In other words, this assumes that these characteristics will apply the same in the
future. However, the non-stationary nature of time series data poses a significant challenge for SSL
methods. The underlying patterns and relationships in the data can change over time, leading to a
phenomenon known as concept drift or temporal shift. This means that the representations learned
bySSLmethodsbasedonhistoricaldatamaynotgeneralizewelltofuturetimeperiods.Toaddress
this issue, techniques from the field of Domain Generalization (DG) can be employed. DG aims to
learn general model representations that can adapt to temporal shifts over time. To improve the
generalization ability of the model when there is temporal change, methodologies such as DRAIN
(Bai et al. 2022) have been proposed, but they are only applicable to supervised learning.
Thisworkextendsanearlierprototypeof SimStockwhichwasintroducedin(Hwangetal.2023a)
and explored the possibility of using SSL for identifying similar stocks based on their temporal
dynamics. Here we show that such an architecture indeed finds applicability and effectiveness
across various financial tasks, such as pairs trading, index tracking, and portfolio optimization, by
conducting rigorous comparative analyses of different models within this framework.
2.2. Parameter estimation in non-stationary financial markets
Inthefieldofinvestmentmanagement,estimatingfuturereturnsandriskisafundamentalchallenge
due to the inherent uncertainty and non-stationary nature of financial markets. Traditionally,
researchersandpractitionershavereliedonhistoricalfinancialdatatoestimatevariousparameters,
such as expected returns, volatility, and covariance matrices, which are crucial inputs for portfolio
optimization, risk management, and asset pricing models.
One common approach is to use a rolling window of historical returns to estimate the expected
returns and covariance matrix of a set of financial assets. For instance, in the classic mean-variance
portfolio optimization (MVO) framework proposed by (Markowitz 1952), the optimal portfolio
weights are determined based on the estimated expected returns and covariance matrix using a
sample of historical returns. See (Kim et al. 2021) for more explanations. Similarly, the Capital
Asset Pricing Model (CAPM) (Sharpe 1964, Lintner 1975) and the Fama-French factor models
(Fama and French 1993, 2015) rely on historical data to estimate the beta coefficients and factor
premiums.
4July19,2024 arxiv main
However, using historical data for parameter estimation has several limitations. First, financial
markets are known to exhibit non-stationarity, meaning that the statistical properties of the data,
such as the mean and variance, can change over time (Cont 2001, Lo 2017). This implies that the
estimates based on historical data may not be representative of the future. Second, the sample size
of historical data is often limited, leading to estimation errors and potential over-fitting (Kan and
Zhou 2004, 2007). For instance, in the context of portfolio optimization, an inherent drawback of
MVO is the high sensitivity of the optimal portfolio to estimation errors in the input parameters
(Michaud 1989), particularly in the expected returns (Chopra and Ziemba 2013) and correlations
(Chung et al. 2022). Small changes in the estimated expected returns can lead to significant shifts
in the optimal portfolio weights, resulting in portfolios that may be suboptimal or unstable out-
of-sample.
To mitigate these issues, researchers have proposed various techniques to improve the robustness
and accuracy of parameter estimation. One popular approach is the shrinkage method, which
combines the sample estimates with a structured estimator to reduce the estimation error (Ledoit
and Wolf 2003, 2004b,a) Another technique is the use of robust estimators, such as the minimum
covariancedeterminant(MCD)estimator(RousseeuwandDriessen1999)andtheminimumvolume
ellipsoid (MVE) estimator (Van Aelst and Rousseeuw 2009), which are less sensitive to outliers
and heavy-tailed distributions. More recently, (Gerber et al. 2021) proposed the Gerber statistic
for estimating the covariance matrix between assets, a robust co-movement measure that extends
Kendall’s Tau by counting the proportion of simultaneous co-movements when their amplitudes
exceed data-dependent thresholds, capturing meaningful co-movements while being insensitive to
extreme values and noise.
In addition to these techniques, researchers have also explored various approaches to extrapolate
past data and model future market dynamics. For example, (Barberis 2000) proposed a Bayesian
approach that combines the sample estimates with prior beliefs about the asset returns to improve
the out-of-sample performance of portfolio optimization. (Rapach et al. 2010) employed combi-
nation forecasts, which aggregate individual forecasts based on different predictors, to enhance
the accuracy of out-of-sample stock return predictions. Also, (Welch and Goyal 2008) found that
the historical average excess returns of stocks over bonds, which is often used as an estimate of
the equity premium, is sensitive to the choice of the sample period and the assumptions about
survivorship bias. Moreover, they showed that this historical average is a poor predictor of future
returns, as the equity premium exhibits substantial time-variation and mean-reversion.
Despite these advancements, the fundamental challenge of estimating future returns and risk
from historical data remains. The assumption that future behavior will be similar to the past is
often violated in practice, as financial markets are subject to regime shifts, structural breaks, and
extreme events (Ang and Bekaert 2002, Guidolin and Timmermann 2007). See (Lee et al. 2023)
for more detailed review of machine learning for asset management.
3. SimStock
Inthissection,weintroduceSimStock1,anovelSSLframeworkthatincorporatestemporaldomain
generalization to learn robust and comprehensive representations of financial time series data. The
various components of the model are graphically illustrated in fig. 1.
3.1. Preliminaries
We consider a self-supervised task where the stock data distribution evolves over time. In the
trainingphase,wearegivenT observedsourcedomainsD = {D ,D ,...,D },whicharesampled
1:T 1 2 T
1Itsearlierprototypeintroducedin(Hwanget al.2023a).
5July19,2024 arxiv main
Dimension
Feature Tokenizer Corruption Representation Triplet Loss
𝐓𝐊𝐄𝒔 ∈ℝ(𝑑𝑚𝑘+𝟏)×𝒅 𝐇 𝐩𝐬
𝐨𝐬
𝑓 𝜃𝑠 𝐒𝐓 p𝑠 os
ST
Shared weight
𝐇𝒔
Special token
Feature Tokenizer Layer 𝐇 𝐧𝐒 𝐞𝐠 𝑓 𝐒𝐓 n𝑠 eg
𝜃𝑠
Self Supervised Learning
T F Vee aam rt iup anro e tr a l 𝐇𝒔 ∈ℝ𝑑𝑚𝑘 Noise g n id o ceD Encoding (L dS omTM ain (𝑔 s+𝜙 1) )
OHLCV 1𝑠 OHLCV 2𝑠 … OHLCV k𝑠 Embed(𝑐𝑠) L (S doT mM
a
i( n𝑔 1𝜙 )) … L (S dT omM
a
i( n𝑔 𝜙 s))
Temporal Domain Generalization
Price features 𝒙𝒔 Static metadata 𝒄𝒔
Figure 1. SimStock combines self-supervised learning framework with temporal domain generalization for more
robust and comprehensive stock representations.
from distributions at T different time points t ≤ t ≤ ... ≤ t . Each source domain is denoted
1 2 T
as D s = {xs i,cs i}N i=s 1, for s = 1,2,...,T, where xs ∈ Rd m represent the d m-dimensional temporal
features, cs ∈ Rd n is d n-dimensional static metadata, and N s is the sample size at timestamp t s.
We have omitted the sample index i for simplicity. The model will only be tested on a target
domain in the future, i.e., D where t ≥ t .
T+1 T+1 T
Our goal is to proactively capture the drift from temporal domains to find stock representations
that are robust with respect to temporal distribution shifts. We presume that the representation
model, denoted as f , is characterized by a deep neural network with function parameters θ at
θ s
s
timestamp t . Consequently, we can get the representation embedding z = f (xs,cs), where z
s s θ s
s
represent both temporal and static features of stock data. In the next section, we show that the
representation model serves as a mapping function during training, which predicts the dynamics
across the parameter θ = {θ ,θ ,..,θ } at each domain D for s = 1,2,...,T.
1:T 1 2 T s
3.2. Training Dynamics of Temporal Domain Generalization
We are motivated by DRAIN (Bai et al. 2022), which first proposed the concept of temporal
domain generalization. In each temporal domain D , the representation network f can be trained
s θ
s
by maximizing the conditional probability P(θ |D ). Here, θ represents the state of the model
s s s
parameters at timestamp t . Given the dynamic nature of D , the conditional probability P(θ |D )
s s s s
will also change over time. The objective, in the context of temporal domain generalization, is to
estimate θ utilizing all the training data from D . From a probabilistic perspective, we can
T+1 1:T
express this as:
(cid:90)
P(θ |D ) = P(θ |θ ,D )·P(θ |D )dθ , (1)
T+1 1:T T+1 1:T 1:T 1:T 1:T 1:T
Ω
where Ω denotes the space for model parameters θ . In eq. (1), the first term inside the integral
1:T
P(θ |θ ,D ) represents the inference phase, which is the process of predicting the future
T+1 1:T 1:T
state of the target representation network (i.e., θ ) given all historical states (i.e., θ ,D ).
T+1 1:T 1:T
The second term P(θ |D ) signifies the training phase, which involves leveraging all training
1:T 1:T
data D to ascertain the state of the model on each source domain. More specifically, the training
1:T
phase can decomposed as follows:
6July19,2024 arxiv main
T
(cid:89)
P(θ | D ) = P(θ | θ ,D )
1:T 1:T s 1:s−1 1:s
s=1
(2)
T
(cid:89)
= P(θ | D ) P(θ | θ ,D ).
1 1 s 1:s−1 1:s
s=2
This formula breaks down the training process into T steps, where the first step corresponds to
learning the model parameter on the first domain D , and each subsequent step corresponds to
1
learning the model parameter on the new domain D conditional on parameter statuses from the
s
previous domains and training data, i.e., P(θ | θ ,D ),∀s ∈ {2,...,T}.
s 1:s−1 1:s
Supposethatweareattimet .Inordertoeffectivelyaddressthetemporaldriftpresentacrossthe
s
domain, the next parameters θ need to be updated on the current and previous domains D .
s+1 1:s
The main problem is how to actually update θ . In this regard, DRAIN introduces a sequential
s+1
learning process using a LSTM (Hochreiter and Schmidhuber 1997) to describe the stochastic
process of θ . Within the LSTM, each unit g defined by its parameters φ is used to generate θ
s φ s+1
while taking into consideration the preceding context D and θ . This process is illustrated with
1:s 1:s
yellow boxes in fig. 1.
3.3. Temporal Representation Learning
Ourultimategoalistolearnarepresentationmodel,f ,whichcapturesthestockdatadistribution
θ
s
that evolves over time. To achieve this, we develop an SSL framework for temporal representation
learning of stock data.
Temporal feature variant. Let xs ∈ Rd m be the price feature of a stock, where d m is the
dimension of the feature. The time-varying patterns of stock prices are essential for identifying
short- and long-term characteristics of stocks. To learn more rich representations, the price feature
xs isprocessedbyatemporaltransformationmoduleµ.Specifically,thepricefeaturexs isprovided
with k variations, denoted as:
µ(xs) = CONCAT(µ 1(xs),µ 2(xs),...,µ k(xs)) ∈ Rd mk, (3)
where d mk = d m ×k, and each µ i : Rd m → Rd m for i ∈ {1,2,...,k} is a temporal transformation
function from the collection U. In other words, µ ,µ ,...,µ ∈ U, where U denotes the collection
1 2 k
of temporal transformations. This module is used to create temporal features that incorporate
various time intervals. For example, µ (xs) and µ (xs) would reflect temporal patterns within a
1 2
day and a week. Various methods, such as the moving average (Woo et al. 2022, Wu et al. 2021b),
Fouriertransform(Zhouet al.2022),movingaverageconvergence/divergence(MACD)featuresfor
momentum (Lim et al. 2019) and mixtures of experts (Zhou et al. 2022), can be utilized to create
these temporal features. In this study, we use moving average, which is the most common choice.
More specifically, for each temporal transformation µ , we calculate the moving average of the
i
price feature xs over a window of size w :
i
w −1
1 (cid:88)i
µ (xs) = xs , i = 1,2,...,k. (4)
i w t−j
i
j=0
where w is the window size for the i-th transformation, and xs denotes the price feature at time
i t−j
t−j in domain s. In our implementation, we use five different window sizes: w = 5, w = 10,
1 2
7July19,2024 arxiv main
w = 15, w = 20, and w = 25. These window sizes correspond to weekly, bi-weekly, tri-weekly,
3 4 5
four-weekly, and monthly moving averages, respectively.
Combined embedding with static metadata. In our framework, static metadata cs, which
can include a variety of data such as firm description, 3-statement financial information, and more,
is handled in the static embedding layer. However, for the purpose of this study, we have only
included sector information in cs. As a result, an embedding Embed(cs) ∈ Rd mk is obtained. Next,
wecreateacombinedembeddingthatincorporatesboththetemporalfeaturevariantµ(xs)andthe
embedded static metadata Embed(cs). The resulting combined embedding is denoted as follows:
Hs = µ(xs)+Embed(cs) ∈ Rd mk. (5)
Feature Tokenizer module. We draw inspiration from the tokenizer approach Gorishniy et al.
(2021), which transforms input features into token embeddings to obtain more meaningful repre-
sentations. This method Gorishniy et al. (2021) do not reflect the temporal aspect, but we utilize
temporal feature variants in the Feature Tokenizer module to capture the time-varying patterns
in the stock price data. The feature-wise token embeddings TKEs for a given feature index j are
j
computed as follows:
TKEs = bs+HsWs (6)
j j j j
where bs ∈ Rd is the j-th feature bias term and Ws ∈ Rd is the weight vector for the j-th feature.
j j
Consequently, the token embeddings TKEs ∈ Rd c×d can be obtained by stacking all of the feature
embeddings and adding a special [ST] token, which is known to possess the essence of information
after training. This is represented as:
TKEs = STACK([ST],TKEs,...,TKEs ) (7)
1 d
mk
whereRd c×d =R(d mk+1)×d denotesthedimensionofthecombinedtokenembeddingsTKEs.There-
fore, the feature tokenizer plays a crucial role in learning meaningful temporal representations by
transforming combined embedding.
Dimension corruption. In self-supervised learning, the main objective is to learn an embed-
ding space where positive pairs (or views) remain close to each other, while negative pairs (or
views) are far apart. When generating views, mixup (Zhang et al. 2017) or cutmix (Yun et al.
2019) methods are most commonly used. These methods are suitable for invariant augmentation
of static data (e.g., images), however, these are not suitable for time-series data (e.g., stocks).
We generate views for temporal variants on the same instance, unlike conventional SSL methods
that use invariant augmentation by using different instances together. For time-series data, mixing
different sequences would break the entire temporal structure. Therefore, we propose a dimension
corruption method for the augmentation of temporal data.
First,wecreatepositiveandnegativeviews,Hs andHs ,byrandomlyshufflingthedimensions
pos neg
within the token embeddings TKEs. Here, we define two permutation matrices, Ps and Ps ,
pos neg
both of size d×d. 1
Hs = λTKEs+(1−λ)TKEsPs
pos pos
(8)
Hs = (1−λ)TKEs+λTKEsPs
neg neg
In this case, the formula (8Temporal Representation Learningequation.3.8) generates positive
and negative views for self-supervised learning.
1Apermutationmatrixisasquare0-1matrixthathasexactlyoneentryof1ineachrowandeachcolumnand0selsewhere.
8July19,2024 arxiv main
y
𝑠 𝐓𝑠 𝑜 𝑃 y a d y a d y a d a d 1 y a d
𝐒 2 1 .. K- K
𝐇𝑠
𝑝𝑜𝑠
y
T S y a d
1
y a d
2
y a d
..
a d K1
-
y a d
K
𝐓𝐊𝐄𝒔 𝑠 𝐓 𝐒𝑔 𝑒 𝑛 y a Kd y a d … y a d K1 - y a d
1
y a d
2
𝐇𝑠
𝑛𝑒𝑔
Figure2. Dimensioncorruptionmethodforgeneratingpositiveandnegativeviewsfromtokenembeddings(TKEs).
The positive view Hs is created by applying a small perturbation in dimension order to the original TKE, while
pos
the negative view Hs is generated with a larger perturbation in dimension order, preserving more of the original
neg
temporal structure in the positive view compared to the negative view.
The degree of this perturbation in both views is determined by the mixing parameter λ. With
λ > 0.5, the positive view Hs has minor perturbations, maintaining much of the original token
pos
embedding. The negative view Hs is more altered, with greater dimension shuffling, deviating
neg
more from the original. More specifically, as shown in fig. 2, the positive view corrupted less vari-
ation in temporal features, while the negative view corrupted more variation in temporal features.
These views allow the model to consider the chronological order when obtaining embeddings. We
set λ = 0.7 as the default value in this study. An ablation study on the impact of different values
of λ can be found in Appendix A.
Representation module.Therepresentationmodulef aimstocharacterizetheshiftbetween
θ
s
different domains by refining the parameters θ through the process described in Section 3.2. In
s
order to effectively reflect temporal patterns of corrupted token embeddings (Hs and Hs ), we
pos neg
use the self-attention mechanism (Vaswani et al. 2017). The self-attention mechanism aggregates
corrupted token embeddings with normalized importance as follows:
(cid:18) QKT(cid:19)
Attention(Q,K,V) = Softmax √ V. (9)
d
Here, Q = Hs ∗W Q ∈ Rd×d k, K = Hs ∗W K ∈ Rd×d k and V = Hs ∗W V ∈ Rd×d v represent queries, keys,
and values, respectively. Note that Hs represents token embeddings (either positive or negative),
∗
while W , W , and W are learnable matrices that share weights between positive and negative
Q K V
token embeddings. The output, which has a dimension of d , is then transformed back into an
v
embedding of dimension d through a fully connected layer. Finally, the outputs STs and STs
neg pos
are obtained.
Triplet loss. For SimStock, we train it to minimize a triplet loss (Balntas et al. 2016), which
is a popular choice in SSL. The key idea behind triplet loss is the use of triplets, each of which
consists of an anchor, and positive and negative views. Here, the anchor is the embeddings for the
unperturbed combined embedding.
For the triplet (STs ,STs ,Hs), where STs is the positive view, STs is the negative view,
pos neg pos neg
and Hs is the combined embedding (anchor), the triplet loss is defined as follows:
L = max(0,sim(Hs,STs )−sim(Hs,STs )+α) (10)
triplet pos neg
In the above equation, sim(·,·) denotes a similarity measure (e.g., cosine similarity or Euclidean
distance), and α > 0 is a margin that is introduced to separate positive pairs from negative pairs.
9July19,2024 arxiv main
The intuition behind this loss function is that we want to ensure that the anchor point gets closer
to the positive sample than to the negative sample by at least the margin α.
Inference phase. In our framework, the inference phase is particularly important. Unlike most
existing contrastive representation learning studies (Chen et al. 2020, Grill et al. 2020), our model
is specifically designed to be robust with respect to temporal distribution shifts. The inference
phase consists of passing the target domain D through the embedding module to obtain the
s+1
combined embedding Hs+1 and further processed by the feature tokenizer module to obtain the
token embeddings TKEs+1. The stock representation is then obtained by feeding TKEs+1 into
the representation model f , which is updated with the optimal parameters θ generated by
θ s+1
s+1
the TDG method described in Section section 3.2
4. Experiment
Now we present experiment results to thoroughly demonstrate the performance of SimStock on
real-world benchmark datasets. Our code and configurations will be publicly available on GitHub.
4.1. Implementation details
We present the details of tasks, datasets, baseline models, hyperparameter selection, evaluation
metrics, and the experiment setting.
4.1.1. Tasks. We conduct four main experiments to assess the effectiveness of SimStock in
various financial applications:
• Finding similar stocks: We evaluate how well SimStock can identify stocks that exhibit
similar price movements, compared to baseline methods. Given a query stock, we consider
bothsameexchange(findingsimilarstockswithinthesameexchange)anddifferentexchanges
(finding similar stocks in a different exchange from the query stock) scenarios;
• Pairs trading: We evaluate the effectiveness of pairs trading based on the similar stocks
identifiedby SimStock.Weformpairsofstocksthatarefoundtobesimilar,andthenexecute
a pairs trading strategy;
• Indextracking:GivenanETFasthequery,wefindabasketofsimilarstocksusingSimStock
and assess the performance of using these stocks for index tracking. The goal is to see if the
selected stocks can closely mimic the returns of the target ETF;
• Portfolio optimization: We investigate whether SimStock embeddings can enhance port-
folio optimization. Specifically, we replace the correlation matrix of stock returns using the
SimStock embedding as a similarity measure for mean-variance portfolio optimization. We
compare the performance of the resulting portfolios with those obtained using conventional
methods for estimating.
4.1.2. Datasets. We collect daily stock price features (Open, High, Low, Close, and Volume)
and sector information from Yahoo Finance for stocks listed on five major exchanges: NYSE (New
York Stock Exchange), NASDAQ (National Association of Securities Dealers Automated Quo-
tations), SSE (Shanghai Stock Exchange), SZSE (Shenzhen Stock Exchange), and TSE (Tokyo
Stock Exchange). In our study, we combine NYSE and NASDAQ stocks (4,231 in total) and refer
to them as the US exchange, while treating SSE (1,407 stocks), SZSE (1,696 stocks), and TSE
(3,882 stocks) separately. The data spans three periods: a training period from January 1, 2018,
to December 31, 2021; a reference period from January 1, 2022, to December 31, 2022; and a test
periodfromJanuary1,2023,toDecember31,2023.Thistimelineallowsustoverifywhetherstocks
10July19,2024 arxiv main
identified as similar in the reference period maintain their similarity in the subsequent one-year
test period.
Our dataset is less susceptible to survivor bias because the source domain is organized as a
sequence of domains {D ,D ,...,D } over time. Each source domain D consists of a distinct set
1 2 T s
of stocks that existed at time step s. This allows the model to reflect the realistic entry and exit
of stocks at each time step. For example, D will contain stocks that existed at time s−1, but
s−1
may not contain all stocks from D if some were delisted. Similarly, D can include newly added
s s
stocks that were not present in D . Furthermore, the price data used for each stock is adjusted
s−1
to account for corporate actions such as splits and dividends.
We generate normalized input features describing the trend of a stock on day t. The variables
z , z and z represent the comparison values of the opening, highest, and lowest prices,
Open High Low
respectively, relative to the closing price of the same day. Also, z and z represent the
Close Volume
comparativevaluesoftheclosingpricesandthevolumevaluescomparedwithdayt−1,respectively.
Refer to table 1 for the formulas used to calculate each feature. In addition, we calculated stock
pricefeaturesfor5,10,15,20,25,and30-dayintervalsforthetemporalfeaturevariantasdiscussed
in section 3.3.
Price features Description
zOpen Open t/Closet−1
z
High
High t/Closet−1
zLow Lowt/Closet−1
z
Close
Closet/Closet−1−1
z
Volume
Volumet/Volumet−1−1
Table 1. Normalized temporal price features.
4.1.3. Baselinemodels. Forthetaskoffindingsimilarstocks,indextrackingandpairstrading
task, we compare SimStock with the following baselines:
• Corr1: Calculates the correlation of stock returns using the past one-year returns (i.e., from
January 1, 2022 to December 31, 2022).
• Corr2: Calculates the correlation of stock returns using returns from the beginning of the
test period (i.e., from January 1, 2018 to December 31, 2022).
• Peer: Uses the list of similar stocks provided by Financial Modeling Prep.1
• TS2VEC (Yue et al. 2022): A state-of-the-art method based on self-supervised learning for
finding similar time-series data.
For the portfolio optimization task, we compare the performance of portfolios constructed using
the SimStock similarity matrix with those constructed using the following conventional correlation
matrices:
• Historical covariance matrix(HC) (Jobson and Korkie 1980): The sample correlation
matrix of the most recent past stock returns.
• Shrinkage method(SM) (Ledoit and Wolf 2004a): A shrinkage estimator of the covariance
matrix proposed by (Ledoit and Wolf 2004a).
• Gerber statistic(GS) (Gerber et al. 2021): A robust correlation measure that counts the
proportion of simultaneous co-movements between assets when their amplitudes exceed data-
dependent thresholds.
1https://site.financialmodelingprep.com/
11July19,2024 arxiv main
4.2. Can SimStock find similar stocks?
In this section, we explore two distinct scenarios for identifying similar stocks using our proposed
model: the same exchange scenario and the different exchanges scenario. The same exchange sce-
nariofocusesonfindingsimilarstockswithinthesameexchangegivenaquerystock.Thisapproach
allows for the identification of stocks with comparable characteristics and behaviors within a spe-
cific market. On the other hand, the different exchanges scenario involves finding similar stocks
within another exchange given a query stock. This scenario leverages the concept of transfer learn-
ing, where the trained weights of a model from one exchange are applied to stock data from a
different exchange. Transfer learning is a machine learning technique that leverages the knowledge
gained from a model trained on a source task to improve the performance of a model on a related
target task (Pan and Yang 2009). In our study, we apply transfer learning by utilizing a model
trained on one stock exchange (source domain) to identify similar stocks in another exchange (tar-
get domain). For example, models trained on the US exchange can be used to find similar stocks
in the SSE, SZSE, or TSE exchanges. Notice that the query is not restricted to individual stocks.
It can be either sector indices or ETFs.
4.2.1. Evaluation metrics. To evaluate the performance of models in finding similar stocks
compared to other models, we employ two widely used metrics: Correlation and Dynamic Time
Warping(DTW).DTWisameasureformeasuringthesimilaritybetweentwotemporalsequences,
allowing for non-linear alignments and capturing the similarities in the overall patterns of stock
price movements (Berndt and Clifford 1994). Consider two time-series sequences X = {x ,...,x }
1 m
and Y = {y ,...,y }. The DTW between X and Y is defined as:
1 n
(cid:115)
(cid:88)
DTW(X,Y) = (cid:107)x −y (cid:107)2. (11)
i j
(i,j)∈π
Here, an alignment path π of length K is a sequence of K index pairs (i,j) , where max(m,n) ≤
K
K ≤ m + n − 1. Also, ||.|| is the Euclidean distance. DTW uses global path constraints while
comparing two time-series sequences X and Y. That is, the pairs i and j are constrained so that
|i−j| ≤ r, where r is a predefined radius, in the case of the Sakoe–Chiba band.
To assess the effectiveness of our approach in capturing similarities and predicting future stock
behaviors, we evaluate the model’s performance using an out-of-sample period. The dataset used
for inference is the year immediately preceding the out-of-sample period. By finding similar stocks
in the previous year and comparing their performance to the target stock in the out-of-sample
period,wemeasurethemodel’sperformanceusingCorrelationandDynamicTimeWarping(DTW)
measures. We consider the top 9, 7, 5, 3, and 1 similar stocks (namely, TOP@9, TOP@7, TOP@5,
TOP@3, and TOP@1) for evaluation.
4.2.2. Quantitative evaluation: same exchange scenario. The diagonal plots in fig. 3
and fig. 4 illustrate the performance (Correlation and DTW) of different models in same exchange
scenario. The diagonal plots show that our proposed SimStock consistently outperforms the base-
lines (Corr1, Corr2, Peer, and TS2VEC) in finding similar stocks within the same exchange, across
allfourstockmarkets(US,SSE,SZSE,andTSE).Forexample,intheUStoUSscenario,SimStock
achieves a correlation of around 0.8 for the top similar stock (TOP@1), substantially higher than
the 0.6 correlation of the best performing TS2VEC.
Similarly, for the SSE to SSE and TSE to TSE scenarios, SimStock consistently shows superior
performancecomparedtothebaselines,withcorrelationscloseto0.8forTOP@1,butSimStockand
TS2VEC gave equivalent results in SZSE to SZSE. Note that the performances of all the baseline
modelswerenotmuchdifferent.Itisinterestingthatthepeerstockspickedbyinvestmentplatforms
12July19,2024 arxiv main
(Peer) were not quite close to the query stocks in terms of DTW. The DTW results also indicate
that SimStock identifies more similar stocks, as evidenced by the lower DTW distances compared
to the baselines. These findings demonstrate that our SimStock method effectively captures the
underlying patterns and dynamics of stock price movements, enabling it to find highly similar
stocks within the same exchange.
4.2.3. Quantitative evaluation: different exchanges scenario. The off-diagonal plots in
fig. 3 and fig. 4 represents the outcomes of identifying for similar stocks in exchanges different from
the exchange of the query stock. Note that Peer is not available for this scenario, because most
tradingplatformsdonotprovideinformationonsimilarstocksinotherexchanges.Theoff-diagonal
plots demonstrate that SimStock outperforms the baselines in all different exchanges scenarios,
indicating its effectiveness in leveraging temporal domain generalization to identify similar stocks
across different markets. For instance, in the US to SSE, US to SZSE and US to TSE scenarios,
SimStockachievescorrelationsaround0.3forTOP@1,surpassingtheperformanceofCorr1,Corr2,
and TS2VEC. Similarly, for the SSE to US, SSE to SZSE and SSE to TSE scenarios, SimStock
exhibits higher correlations compared to the baselines, showcasing its ability to capture similarities
between stocks in these closely related exchanges.
However, it is important to note that the overall performance of all models in the different ex-
changes scenarios is lower compared to the same exchange scenario. This can be attributed to
the inherent differences in market dynamics, regulations, and economic factors across different ex-
changes. Despite these challenges, SimStock consistently outperforms the baselines in all cases,
highlighting its robustness and adaptability in finding similar stocks across diverse market condi-
tions.
The DTW results in the off-diagonal plots further support the superiority of SimStock in iden-
tifying similar stocks across exchanges. The DTW approach is a more suitable alternative to the
correlation metric when considering different timestamps. SimStock consistently achieves lower
DTW distances compared to the baselines, indicating its ability to capture the overall patterns
and similarities in stock price movements, even when applied to different markets. These findings
underline the potential of SimStock in enabling investors and analysts to identify similar stocks
across different exchanges.
13July19,2024 arxiv main
US to US US to SSE US to SZSE US to TSE
0.8 0.3 0.3 0.3
0.6 0.2 0.2 0.2
0.4 0.1 0.1 0.1
0.0
TOP@9 TOP@7 TOP@5 TOP@3 TOP@1 TOP@9 TOP@7 TOP@5 TOP@3 TOP@1 TOP@9 TOP@7 TOP@5 TOP@3 TOP@1 TOP@9 TOP@7 TOP@5 TOP@3 TOP@1
SSE to US SSE to SSE SSE to SZSE SSE to TSE
0.3 0.8 0.3
0.5 0.2
0.2 0.6
0.4 0.1
0.1 0.4
0.3 0.0
TOP@9 TOP@7 TOP@5 TOP@3 TOP@1 TOP@9 TOP@7 TOP@5 TOP@3 TOP@1 TOP@9 TOP@7 TOP@5 TOP@3 TOP@1 TOP@9 TOP@7 TOP@5 TOP@3 TOP@1
SZSE to US SZSE to SSE SZSE to SZSE SZSE to TSE
0.8 0.2
0.2 0.5
0.6 0.1
0.4
0.1
0.3 0.4 0.0
0.0
TOP@9 TOP@7 TOP@5 TOP@3 TOP@1 TOP@9 TOP@7 TOP@5 TOP@3 TOP@1 TOP@9 TOP@7 TOP@5 TOP@3 TOP@1 TOP@9 TOP@7 TOP@5 TOP@3 TOP@1
TSE to US TSE to SSE TSE to SZSE TSE to TSE
0.2 0.2
0.6
0.2 0.1
0.0 0.0 0.4
0.0 0.2
TOP@9 TOP@7 TOP@5 TOP@3 TOP@1 TOP@9 TOP@7 TOP@5 TOP@3 TOP@1 TOP@9 TOP@7 TOP@5 TOP@3 TOP@1 TOP@9 TOP@7 TOP@5 TOP@3 TOP@1
Corr1 Corr2 Peer SimStock TS2VEC
Figure 3. Performance of models in same exchange (diagonal) and different exchanges (off-diagonal) scenarios for
finding similar stocks. The performance is evaluated using TOP@k Correlation metrics, where k = 9, 7, 5, 3, and 1.
Each data point represents the average correlation between the target stock and the top k similar stocks identified
by the respective model.
US to US US to SSE US to SZSE US to TSE
50
45.0 45
30
42.5 45
20 40.0 40 40
37.5
TOP@9 TOP@7 TOP@5 TOP@3 TOP@1 TOP@9 TOP@7 TOP@5 TOP@3 TOP@1 TOP@9 TOP@7 TOP@5 TOP@3 TOP@1 TOP@9 TOP@7 TOP@5 TOP@3 TOP@1
SSE to US SSE to SSE SSE to SZSE SSE to TSE
45.0 30 32.5 45
42.5
40.0 20 23 70 .. 50 40
37.5 25.0 35
TOP@9 TOP@7 TOP@5 TOP@3 TOP@1 TOP@9 TOP@7 TOP@5 TOP@3 TOP@1 TOP@9 TOP@7 TOP@5 TOP@3 TOP@1 TOP@9 TOP@7 TOP@5 TOP@3 TOP@1
SZSE to US SZSE to SSE SZSE to SZSE SZSE to TSE
30 45
45 30
40 25 20 40
TOP@9 TOP@7 TOP@5 TOP@3 TOP@1 TOP@9 TOP@7 TOP@5 TOP@3 TOP@1 TOP@9 TOP@7 TOP@5 TOP@3 TOP@1 TOP@9 TOP@7 TOP@5 TOP@3 TOP@1
TSE to US TSE to SSE TSE to SZSE TSE to TSE
50 40
45 45 45 30
40
40 40 20
35
TOP@9 TOP@7 TOP@5 TOP@3 TOP@1 TOP@9 TOP@7 TOP@5 TOP@3 TOP@1 TOP@9 TOP@7 TOP@5 TOP@3 TOP@1 TOP@9 TOP@7 TOP@5 TOP@3 TOP@1
Corr1 Corr2 Peer SimStock TS2VEC
Figure 4. Performance of models in same exchange (diagonal) and different exchanges (off-diagonal) scenarios for
findingsimilarstocks.TheperformanceisevaluatedusingTOP@k DTWmetrics,wherek =9,7,5,3,and1.Each
datapointrepresentstheaveragecorrelationbetweenthetargetstockandthetopk similarstocksidentifiedbythe
respective model.
14July19,2024 arxiv main
4.2.4. Qualitative evaluation. The similarity between stocks should not be measured only
on time-series distances. Similar stocks may be in different industries, but they should have similar
fundamentalinformation.Unfortunately,however,itisalmostimpossibletomeasuresuchsimilarity
in a quantitative way. Therefore, we provide a qualitative analysis of those results.
To assess the effectiveness of SimStock in identifying fundamentally similar stocks, we conduct
a nuanced analysis by examining the actual stocks recommended by each method for a diverse
set of query stocks from various sectors (table 2). We compare the top@3 similar stocks identified
by SimStock with those of the baseline methods, including TS2VEC, Corr1, Corr2, and Peer,
to evaluate whether SimStock captures relevant business characteristics, financial attributes, and
industry-specific similarities better than the baselines.
When we begin by examining the technology sector, SimStock identifies highly relevant similar
stocks for query stocks such as Apple (AAPL), Microsoft (MSFT), and Meta (META). For AAPL,
SimStock’s top@k similar stocks include Microsoft (MSFT), Tyler Technologies (TYL), and Intuit
(INTU), all well-established companies in the software and technology domain. In contrast, the
baseline methods identify a mix of technology and non-technology companies, such as Amazon
(AMZN) for TS2VEC and Corr2, and Thermo Fisher Scientific (TMO) for Corr1. Similarly, for
MSFT,SimStockidentifiesCadenceDesignSystems(CDNS),ManhattanAssociates(MANH),and
Tyler Technologies (TYL) as similar stocks, while the baselines include manufacturing companies
like Danaher (DHR) for Corr1.
Next, we analyze the healthcare sector, where SimStock identifies relevant similar stocks for
query stocks such as Pfizer (PFE) and Centene (CNC). For PFE, SimStock’s top similar stocks
include BioNTech (BNTX), Moderna (MRNA), and Johnson & Johnson (JNJ), all major players
in the pharmaceutical and biotechnology industries. The baseline methods, however, identify less
relevant stocks, such as NantKwest (NKNG) for TS2VEC and Metrocity Bankshares (MCBS) for
Corr1. For CNC, SimStock identifies other health insurance and financial services companies like
BankofMontreal(BMO)andMorganStanley(MS),whilethebaselinesincludelessrelatedstocks,
such as Humana (HUM) for TS2VEC and Stericycle (SRCL) for Corr2.
In the energy sector, SimStock identifies industry-specific similar stocks for the query stock
Exxon-Mobil(XOM),suchasMarathonOil(MRO),CenovusEnergy(CVE),andHessCorporation
(HES). The baseline methods also identify some relevant energy stocks, such as MRO for TS2VEC
and Murphy Oil Corporation (MUR) for Corr1 and Marathon Petroleum (MPC) for Corr2. That
is, all methods successfully identified stocks that are similar to XOM.
Finally, we examine the financial sector, where SimStock identifies relevant similar stocks for
query stocks such as Wells Fargo (WFC) and Visa (V). For WFC, SimStock’s top similar stocks
include Bank of America (BAC), Fifth Third Bancorp (FITB), and F.N.B. Corporation (FNB),
all well-known banking institutions. Similar, the baseline methods also identify relevant banking
stocks, such as BAC for Corr2, JPMorgan Chase (JPM) for TS2VEC and Berkshire Hills Bancorp
(BHLH) for Corr1. For V, SimStock identifies Mastercard (MA), Stifel Financial (SF), and Inter-
continental Hotels Group (IHG) as similar stocks, while the baselines include less related stocks,
such as Planet Fitness (PLNT) for Corr2.
The above provides further reassurance that SimStock robustly identifies relevant companies as
similar to each other in a way intuitive to most human market participants.
4.3. Application to pairs trading
In this section, we investigate the practical application of the similar stocks identified by SimStock
in the context of pairs trading. Pairs trading is a market-neutral trading strategy that exploits
the relative mispricing between two highly correlated securities (Gatev et al. 2006). The strategy
involves simultaneously buying the relatively underpriced security and selling the relatively over-
priced security, with the expectation that the prices will converge to their long-term equilibrium.
We assess the profitability of pairs trading using the top@k similar stocks identified by SimStock
and compare its performance with benchmark models, namely TS2VEC, Corr1, and Corr2. We
15July19,2024 arxiv main
Query TOP@3similarstocks Query TOP@3similarstocks
Method Method
Stock First Second Third Stock First Second Third
SimStock MSFT TYL INTU SimStock BNTX MRNA JNJ
TS2VEC AMZN WTM AMD TS2VEC NKNG DJCO ESGR
AAPL Corr1 TMO SNPS CNDS PFE Corr1 ICL MCBS PTSI
Corr2 GLOB AMZN TYL Corr2 RMR NVS BUD
Peer MSFT NVDA ASML Peer LLY ABBV NVO
SimStock AMZN MANH MSFT SimStock CMG INTU MANH
TS2VEC NVR USLM NEU TS2VEC AAPL F PLPC
CMG Corr1 DHR DSGX PCTY AMZN Corr1 ACMR ADBE FIVN
Corr2 PAYC PCTY MANH Corr2 TEAM LYV GENE
Peer HLT RACE AZO Peer TSLA BKNG SBUX
SimStock CDNS MANH TYL SimStock IVZ SPR UAA
TS2VEC GOOG GOOGL MA TS2VEC LPL NNI FCX
MSFT Corr1 DHR TMO FAST BA Corr1 NCLH SPR SOHO
Corr2 GOOGL GOOGL DAVA Corr2 RVSB ENVA STT
Peer AAPL NVDA ASML Peer NOC CNI WM
SimStock BAC FITB FNB SimStock SPOT PYPL FORM
TS2VEC JPM C MA TS2VEC UHAL MAR MSFT
WFC Corr1 BHLH WNEB RVSB META Corr1 CVNA GREE INDP
Corr2 BAC WBS CFG Corr2 SKYW JAGX CTHR
Peer CHTR NTES ATVI Peer MCD LOW TM
SimStock MA SF IHG SimStock V BKNG IHG
TS2VEC MA MSFT KO TS2VEC V KO NUE
V Corr1 MA TDY ROP MA Corr1 V TDY FICO
Corr2 MA PLNT RELX Corr2 V GES RTO
Peer MA ADBE CSCO Peer JPM BAC V
SimStock MRO CVE HES SimStock CNC BMO MS
TS2VEC MRO CVX NUE TS2VEC HUM VNR BKNG
XOM Corr1 MUR MRO EOG CVS Corr1 CCB CHRD RJF
Corr2 MPC HES ERF Corr2 SRCL MLM NMFC
Peer CVX SHEL TTE Peer ANTM MDT GSK
Table2. Top@3similarstocksidentifiedby SimStockandbaselinemethods(TS2VEC,Corr1,Corr2,andPeer)for
a diverse set of query stocks from the technology, healthcare, energy, and financial sectors.
added Cointegration method (Coint) (Nelson and Plosser 1982, Enders 2004) to the benchmark
model, which selected 3 stocks from the US exchange that exhibited the strongest cointegration
relationships, as determined by their p-values in descending order.
4.3.1. Pairs trading procedure. Weemploythepriceratioapproachforpairstrading,which
involves constructing a spread between two securities by computing the ratio of their prices. The
spread is then normalized by its historical mean and standard deviation to obtain the Z-score,
which measures the deviation of the current spread from its historical average in terms of standard
deviations. The Z-score is calculated as follows:
PR = P /P
t q,t s,t
(12)
Z t = (µP 1R t −µP 2R t)/σ 2PR t
where P and P are the prices of the query stock and similar stock in the pair at time t, and µ ,
q,t s,t 1
µ , and σ are the rolling mean and standard deviation of the price ratio up to time t, calculated
2 2
using lookback periods of L and L trading days, respectively.
1 2
Trading signals are generated based on the Z-score, with the opening of a long-short position
when the Z-score exceeds a pre-specified threshold of ±1.25 SD, indicating a significant deviation
from the long-term equilibrium. Specifically, when Z > 1.25 SD, we sell the overpriced security
t
andbuytheunderpricedsecurity.Conversely,whenZ < −1.25 SD,webuytheoverpricedsecurity
t
and sell the underpriced security. The position is closed when the Z-score reverts back within the
range[−0.5 SD,0.5 SD],suggestingpriceconvergence.Tolimitpotentiallosses,astop-loss(Hwang
et al. 2023b) mechanism is implemented, whereby positions are closed if the portfolio value drops
below a predetermined threshold L of 500 USD.
stop
To determine optimal values for the hyperparameters L and L , we perform a grid search over
1 2
the training period from 2022-01-01 to 2022-12-31. Different L and L values are determined
1 2
for each query stock paired with each of its top 3 similar stocks identified by SimStock and the
benchmark models (TS2VEC, Corr1, Corr2), resulting in 3 pairs per query stock per model. Pairs
trading is applied independently to each pair, with overall performance for each query stock and
model calculated as the average wealth across the 3 pairs, starting with an initial trading capital
16July19,2024 arxiv main
of 10,000 USD. For all trades executed in this study, a fixed proportional transaction cost of 10
basis points (0.1%) is applied.
4.3.2. Evaluation of pairs trading performance. table 3 presents the average terminal
wealth and maximum drawdown (MDD) achieved by applying pairs trading to the top@3 similar
stocks identified by SimStock and the benchmark models (TS2VEC, Corr1, Corr2, Coint) for each
query stock. The results of pair trading between query stock and TOP@1 stock can be found in
Appendix B.
SimStock achieves the highest average terminal wealth for 6 out of the 12 query stocks (AAP,
CMG,MSFT,WFC,BAandCVS).Cointperformsbestfor2querystocks(XOMandPFE),while
Corr1, Corr2 and TS2VEC each perform best for 1 query stock (MA, AMZN and V respectively).
For the remaining query stocks, SimStock ranks second in terms of wealth for 4 cases (V, XOM,
META and MA).
Regarding maximum drawdown, SimStock exhibits the lowest MDD for 7 out of the 12 query
stocks (AAPL, CMG, MSFT, WFC, PFE, META and MA), indicating better risk management.
TS2VEC, Corr1, Corr2 and Coint achieve the lowest MDD for 1 query stock each (AMZN, V,
CVS and XOM respectively). For the remaining 5 query stocks (V, XOM, AMZN, BA and CVS),
SimStock has the second-lowest MDD. The ability to generate higher returns while maintaining
lower drawdowns suggests the robustness of the pairs identified by SimStock.
It is important to note that TS2VEC, Corr2, and Coint failed to generate buy/sell signals for
certain stocks. Specifically, TS2VEC and Coint were unable to generate signals for AAPL and
WFC, while Corr2 failed to do so for WFC. SimStock, on the other hand, generated a buy/sell
signal for one out of the three stocks, specifically META.
The results demonstrate the superior performance of SimStock in identifying profitable pairs
for trading compared to the benchmark models. SimStock’s ability to achieve the highest average
terminal wealth for the majority of query stocks while maintaining the lowest maximum drawdown
for most cases highlights its effectiveness in capturing meaningful similarities between stocks that
translate into successful pairs trading strategies.
4.4. Application to index tracking of thematic ETFs
ThematicETFshavegainedpopularityamongretailinvestorswhowishtoinvestinspecificthemes
or trends, such as innovative technologies. These ETFs are composed of assets that share a com-
mon theme, providing a contrast to traditional sector-based classifications, which can be slow and
ambiguous in reflecting technological advancements and innovations. As thematic ETFs aim to
identify innovative tech companies, many investors are interested in tracking these ETFs.
Inthissection,wecomparetheperformanceof SimStockandotherbaselinesinidentifyingstocks
to track four popular thematic ETFs. Our goal is to find similar stocks from the US, SSE, SZSE,
and TSE exchanges that can effectively track the performance of these thematic ETFs. In other
words, we use the thematic ETFs as queries to find similar stocks in each model.
For this analysis, we selected the four popular thematic ETFs: ARK Innovation ETF (ARKK),
First Trust Cloud Computing ETF (SKYY), Global X Robotics & AI ETF (BOTZ), and Global
X Lithium & Battery Tech ETF (LIT). The in-sample and out-of-sample periods are the same as
those used in section 4.1.
4.4.1. Evaluation metrics. To evaluate the performance of SimStock and the baselines in
tracking thematic ETFs, we first find the top k similar stocks based on the thematic ETF queries.
We then create equal-weighted portfolios using these similar stocks to track the thematic ETFs.
We use two metrics to assess the tracking performance: Tracking Error (TE) and Tracking Error
Volatility (TEV). (Focardi and Fabozzi 2004).
17July19,2024 arxiv main
Query Wealth
Stock SimStock TS2VEC Corr1 Corr2 Coint
AAPL 959.96 ±473.76 NaN∗∗ 234.53±1164.22 915.16±338.61 NaN∗∗
CMG 545.81 ±722.54 282.17±713.52 -1069.43±721.61 -1098.98±892.15 -856.49±2964.75
MSFT 754.51 ±69.73 497.55±784.46 477.31±1650.20 -305.99±2111.35 454.68±857.63
WFC 567.80 ±169.84 -777.72±1123.20 390.84±736.03 NaN∗∗ -1309.26±2141.77
V 354.24±116.60 23.66±226.45 329.23±99.14 406.00 ±164.55 240.39±1067.06
XOM 403.26±265.92 364.02±248.26 -1.24±166.4 13.54±1014.40 1184.00 ±2526.09
PFE -413.02±674.64 113.17±2265.54 192.04±1656.18 -162.91±1543.09 419.17 ±210.61
AMZN 120.90±244.16 380.26±1304.23 -597.30±1002.48 2045.12 ±2088.20 -1183.58±3522.64
BA 572.25 ±2255.81 14.50±850.40 -1209.89±657.74 -652.71±1337.71 143.38±724.86
META 1343.46±NaN∗ -597.33±1276.49 1819.52 ±1901.72 -1694.84±3247.40 326.92±1266.86
MA 123.06±66.54 -98.50±267.16 246.91 ±69.16 -245.95±954.56 -576.08±893.63
CVS 1101.66 ±536.96 -618.20±753.38 981.67±753.47 794.88±370.08 -209.44±1313.68
Query Maximum Drawdown (%)
Stock SimStock TS2VEC Corr1 Corr2 Coint
AAPL -1.91 ±0.67 NaN∗∗ -6.05±3.47 -3.4±2.00 NaN∗∗
CMG -2.98 ±2.54 -6.37±2.22 -14.96±6.38 -15.52±10.36 -20.03±15.47
MSFT -3.79 ±0.21 -5.66±0.24 -7.12±4.72 -12.89±12.54 -13.23±2.96
WFC -2.2 ±3.77 -9.16±8.29 -5.75±4.53 NaN∗∗ -23.95±13.75
V -2.22±2.55 -2.38±2.77 -0.43 ±0.75 -3.17±4.47 -7.46±5.87
XOM -3.38±0.44 -3.02 ±2.95 -4.71±1.42 -6.61±7.06 -9.29±7.58
PFE -7.84 ±7.41 -10.03±13.49 -9.99±9.43 -10.43±5.06 -9.03±5.56
AMZN -5.05±4.99 -4.67 ±2.33 -15.12±9.38 -8.96±4.15 -31.90±13.12
BA -12.09±11.57 -5.87 ±2.13 -15.46±8.62 -12.86±3.26 -14.43±7.32
META -4.91 ±NaN∗ -8.75±8.98 -11.58±4.95 -33.98±25.84 -25.40±11.24
MA -2.18 ±2.51 -5.01±5.19 -2.58±2.72 -6.85±7.23 -11.51±4.66
CVS -3.01±1.84 -9.08±8.32 -4.58±4.59 -2.92 ±1.37 -19.85±17.02
Note:NaN**valuesinboththeterminalwealthandMDDindicatethatthemethodfailedtogeneratebuy/sellsignalsforallthree
stocksinthepair.NaN*valuesonlyinthestandarddeviationindicatethatthemethodfailedtogeneratebuy/sellsignalsfortwo
outofthethreestocksinthepair.Forallothervalues,allmethodgeneratedbuy/sellsignalsforallthreestocksinthepair.
Table 3. Average terminal wealth (first row) and maximum drawdown (MDD) (second row) achieved by applying
pairs trading to the top@3 similar stocks identified by SimStock, TS2VEC, Corr1, Corr2, coint for each query
stock. he best performing method is highlighted in bold, while the second best is in underline.
The end-of-the-period tracking error (TE) is calculated as follows:
(cid:118)
(cid:117) n
TE = (cid:117) (cid:116)1 (cid:88) (RI −RP)2 (13)
n j j
j=1
where RI and RP are the cumulative returns of the query ETF and the tracking portfolio at period
j j
j, respectively, and n is the number of periods.
Tracking Error Volatility (TEV) measures the volatility of the difference in returns between the
tracking portfolio and the target ETF. It is calculated as the standard deviation of the difference
in returns:
(cid:118)
(cid:117) n
TEV = (cid:117) (cid:116)1 (cid:88) (RI −RP −E[RI −RP])2 (14)
n j j
j=1
where E[RI −RP] is the mean difference in returns between the target ETF and the tracking
portfolio over the n periods. For each thematic ETF, we find the top@k similar stocks on each
exchange (US, SSE, SZSE, TSE) using SimStock and the baseline methods. We then create equal-
weighted portfolios using these similar stocks to track the performance of the thematic ETFs.
4.4.2. Quantitative evaluation. In this subsection, we quantitatively evaluate the perfor-
mance of SimStock and the baseline methods in tracking the four thematic ETFs. table 4 report
the tracking error (TE) for each ETF using the top@k similar stocks identified by each method
18July19,2024 arxiv main
across the four exchanges. The best performing method for each k and exchange is highlighted
in bold, while the second best is in underline. The results of the evaluation with Tracking Error
Volatility (TEV) can be found in Appendix B.
A clear pattern emerges from the results: SimStock consistently achieves the best (bold) or
second lowest (underline) tracking error for the majority of k values across three of the four ETFs
(ARKK,SKYY,andBOTZ)andexchanges.Thisstrongperformancedemonstratesthatthesimilar
stocks identified by SimStock are highly effective at tracking these thematic ETFs. In contrast to
SimStock, while the Corr1 and Corr2 baselines show reasonable performance in some cases, they
lack consistency across different scenarios. TS2VEC, on the other hand, generally exhibits higher
tracking errors, indicating that the stocks it identifies do not track the ETFs as closely.
Notably, SimStock’s performance on the US exchange is particularly impressive for ARKK,
SKYY, and BOTZ. It substantially outperforms the other methods, especially for lower values of
k (e.g., top 10-20 similar stocks), suggesting that SimStock excels at identifying a concentrated
set of the most relevant stocks for tracking these ETF themes. SimStock’s ability to identify
highly relevant stocks in this market, even with a smaller number of stocks (low top@k values), is a
testamenttoitseffectivenessandprecisionincapturingthekeycomponentsdrivingthesethematic
ETFs. While the performance gap between SimStock and the other methods is less pronounced on
the other exchanges, SimStock still achieves the best or second-best performance in most cases for
ARKK, SKYY, and BOTZ. However, SimStock’s performance in tracking the Global X Lithium
& Battery Tech ETF (LIT) is relatively weaker compared to the other ETFs.
Inadditiontothequantitativeevaluationusingtrackingerrorandtrackingerrorvolatility,wecan
alsovisuallyassesstheperformanceof SimStockandthebaselinemethodsintrackingthethematic
ETFs by examining their cumulative return curves. fig. 5 showcases the cumulative return curves
foreachthematicETF(ARKK,SKYY,BOTZ,andLIT)andthecorrespondingtrackingportfolios
created using the top@10 similar stocks identified by each method on the US exchange.
The cumulative return curves provide a clear visual representation of how closely the tracking
portfolios match the performance of their respective thematic ETFs over time. For ARKK, SKYY,
and BOTZ, the SimStock portfolio (shown in blue) closely follows the trajectory of the thematic
ETF (shown in dotted black), indicating that the top 10 stocks identified by SimStock effectively
capture the performance of these ETFs. In contrast, the portfolios based on the other methods
(TS2VEC in purple, Corr1 in green, and Corr2 in red) exhibit larger deviations from the ETF
curves, suggesting that their selected stocks are less effective at tracking the ETFs.
The cumulative return curves represent SimStock’s ability to identify a concentrated set of
stocks that effectively track the performance of thematic ETFs, particularly for ARKK, SKYY,
and BOTZ, based on the top@10 similar stocks from the US exchange.
19July19,2024 arxiv main
ARK Innovation ETF (ARKK)
Exchange Methods
TOP@10 TOP@15 TOP@20 TOP@25 TOP@30 TOP@35
Corr1 0.2828 0.1363 0.0746 0.0822 0.0649 0.0592
Corr2 0.4264 0.2431 0.1132 0.1455 0.0963 0.1149
US
TS2VEC 0.4752 0.5772 0.5321 0.4887 0.3723 0.3046
SimStock 0.1934 0.0764 0.0975 0.1785 0.1822 0.2414
Corr1 0.4014 0.4244 0.4191 0.4250 0.4333 0.4365
Corr2 0.2753 0.2651 0.2739 0.2883 0.2681 0.2747
SSE
TS2VEC 0.3813 0.3815 0.3748 0.4037 0.4030 0.4142
SimStock 0.3064 0.3133 0.2778 0.2774 0.2754 0.3069
Corr1 0.3745 0.3843 0.3607 0.4006 0.3843 0.3923
Corr2 0.2302 0.2063 0.2138 0.2208 0.2380 0.2547
SZSE
TS2VEC 0.2793 0.2843 0.3132 0.3074 0.2993 0.3010
SimStock 0.1621 0.1643 0.1959 0.2252 0.2354 0.2272
Corr1 0.3965 0.3214 0.2694 0.2533 0.2591 0.2573
Corr2 0.1458 0.1707 0.1850 0.1846 0.1869 0.2002
TSE
TS2VEC 0.2712 0.2940 0.2574 0.2856 0.2841 0.2790
SimStock 0.1440 0.1322 0.1310 0.1328 0.1262 0.1321
First Trust Cloud Computing ETF (SKYY)
Exchange Methods
TOP@10 TOP@15 TOP@20 TOP@25 TOP@30 TOP@35
Corr1 0.1502 0.1968 0.2064 0.1937 0.1310 0.1235
Corr2 0.3643 0.2941 0.2130 0.2137 0.1673 0.1482
US
TS2VEC 0.2525 0.2370 0.2104 0.2377 0.2262 0.2263
SimStock 0.0939 0.0366 0.0645 0.0814 0.0603 0.0596
Corr1 0.2990 0.3471 0.3612 0.3715 0.3757 0.3872
Corr2 0.1865 0.1961 0.1941 0.1554 0.1647 0.1760
SSE
TS2VEC 0.2939 0.3475 0.3857 0.3616 0.3572 0.3240
SimStock 0.1607 0.1291 0.1688 0.1615 0.1748 0.1912
Corr1 0.4157 0.4014 0.3893 0.3915 0.3771 0.3603
Corr2 0.1329 0.1390 0.1532 0.1617 0.1679 0.1771
SZSE
TS2VEC 0.2388 0.2789 0.2616 0.2598 0.2690 0.2499
SimStock 0.1230 0.1543 0.1731 0.1651 0.1559 0.1455
Corr1 0.1363 0.1822 0.1756 0.2212 0.2206 0.2300
Corr2 0.1118 0.1489 0.1232 0.1389 0.1321 0.1261
TSE
TS2VEC 0.2220 0.2395 0.2384 0.2276 0.2290 0.2369
SimStock 0.0940 0.0733 0.0734 0.0660 0.0593 0.0691
Global X Robotics & AI ETF (BOTZ)
Exchange Methods
TOP@10 TOP@15 TOP@20 TOP@25 TOP@30 TOP@35
Corr1 0.2847 0.1581 0.0981 0.0881 0.0784 0.0897
Corr2 0.0946 0.1526 0.1249 0.1216 0.1448 0.1373
US
TS2VEC 0.1890 0.3221 0.3368 0.2763 0.2833 0.3247
SimStock 0.0364 0.0647 0.0946 0.0910 0.0890 0.0818
Corr1 0.2912 0.2870 0.2831 0.2738 0.2745 0.2815
Corr2 0.0863 0.1205 0.1198 0.1179 0.1220 0.1382
SSE
TS2VEC 0.2512 0.2535 0.2638 0.2955 0.2646 0.2696
SimStock 0.1471 0.1520 0.1514 0.1573 0.1509 0.1283
Corr1 0.2259 0.2063 0.2329 0.2466 0.2645 0.2763
Corr2 0.1016 0.1142 0.1143 0.1144 0.1242 0.1169
SZSE
TS2VEC 0.1842 0.1516 0.1527 0.1387 0.1376 0.1694
SimStock 0.0812 0.1289 0.1171 0.1246 0.1331 0.1366
Corr1 0.1646 0.1420 0.1457 0.1454 0.1411 0.1236
Corr2 0.0951 0.0916 0.0863 0.0844 0.0910 0.0895
TSE
TS2VEC 0.2155 0.2343 0.1943 0.1952 0.1959 0.1843
SimStock 0.0639 0.0730 0.0712 0.0797 0.0802 0.0764
Global X Lithium & Battery Tech ETF (LIT)
Exchange Methods
TOP@10 TOP@15 TOP@20 TOP@25 TOP@30 TOP@35
Corr1 0.2167 0.2819 0.2512 0.2638 0.2732 0.2465
Corr2 0.1424 0.2337 0.2234 0.2195 0.2512 0.1669
US
TS2VEC 0.0838 0.1094 0.0859 0.0924 0.1080 0.1070
SimStock 0.0446 0.0557 0.0647 0.0666 0.0694 0.0703
Corr1 0.1756 0.1671 0.1485 0.1431 0.1354 0.1294
Corr2 0.1159 0.1061 0.0983 0.0923 0.0899 0.0905
SSE
TS2VEC 0.0715 0.0798 0.0772 0.0790 0.0817 0.0803
SimStock 0.1003 0.1355 0.1084 0.1009 0.1161 0.1211
Corr1 0.1562 0.1431 0.1676 0.1676 0.1700 0.1730
Corr2 0.2638 0.2566 0.2073 0.1906 0.1838 0.1690
SZSE
TS2VEC 0.1504 0.1236 0.1138 0.1090 0.0997 0.0962
SimStock 0.2861 0.3187 0.2833 0.2892 0.2734 0.2412
Corr1 0.1839 0.2430 0.2477 0.2769 0.2600 0.2242
Corr2 0.3249 0.3030 0.2580 0.2457 0.2826 0.2662
TSE
TS2VEC 0.1563 0.1537 0.1642 0.1727 0.1502 0.1768
SimStock 0.2557 0.2794 0.2763 0.2866 0.2861 0.2735
Table 4. Tracking errors (TE) of SimStock and baseline methods for tracking the performance of four thematic
ETFs (ARKK, SKYY, BOTZ, and LIT) using top k similar stocks from the US, SSE, SZSE, and TSE exchanges.
The best performing method for each k and exchange is highlighted in bold, while the second best is in underline.
20July19,2024 arxiv main
Cumulative Returns of ARKK Index and Portfolios (equally weighted)
2.5
2.0
1.5
1.0
2023-01 2023-03 2023-05 2023-07 2023-09 2023-11 2024-01
Cumulative Returns of SKYY Index and Portfolios (equally weighted)
1.4
1.2
1.0
0.8
2023-01 2023-03 2023-05 2023-07 2023-09 2023-11 2024-01
Cumulative Returns of BOTZ Index and Portfolios (equally weighted)
2.00
1.75
1.50
1.25
1.00
2023-01 2023-03 2023-05 2023-07 2023-09 2023-11 2024-01
Cumulative Returns of LIT Index and Portfolios (equally weighted)
1.4
1.2
1.0
0.8
2023-01 2023-03 2023-05 2023-07 2023-09 2023-11 2024-01
Thematic Index SimStock TS2VEC Corr1 Corr2
Figure 5. Cumulative return curves of the four thematic ETFs (ARKK, SKYY, BOTZ, and LIT) and their cor-
responding tracking portfolios constructed using the top 10 similar stocks identified by SimStock and the baseline
methods (TS2VEC, Corr1, and Corr2) from the US exchange. The closer a portfolio’s curve follows the respective
ETF curve (dotted black line), the better the tracking performance.
4.4.3. Qualitative evaluation. For the ARK Innovation ETF (ARKK), which focuses on
disruptiveinnovation,SimStockidentifiesstocksofcompaniesinvolvedincutting-edgetechnologies
such as 3D computing (MLTS, DDD), a fintech (SQ), and artificial intelligence (SHOP) company.
Similarly, for the First Trust Cloud Computing ETF (SKYY), SimStock finds stocks of leading
cloud computing (NET, DBX, TYL, GWRE and GLOB) and software-as-a-service (INTU, ESTC
and PAYC) providers. The qualitative assessment of SimStock’s similar stock selections for all
thematic ETFs can be found in Appendix C.
4.5. Application to portfolio optimization
In this section, we investigate whether SimStock embeddings can enhance portfolio optimization.
Specifically, we construct the correlation matrix using the SimStock embedding as a similarity
measure, and use it as an input for portfolio optimization. We compare the portfolio performance
using the SimStock embedding with other covariance estimators. Notice that SimStock is designed
to identify stocks with similar behavior, but it does not actively search for stocks that exhibit com-
pletely different dynamics compared to a given stock. This may limit its ability to ensure optimal
portfolio diversification. While our approach uses deep learning to estimate the covariance matrix
(Σ) for portfolio optimization, it differs from existing deep learning-based portfolio optimization
methods. Most existing deep learning approaches for portfolio optimization focus on predicting
optimal portfolio weights (Zhang et al. 2021, Uysal et al. 2023) or estimating portfolio parameters,
particularly the expected returns (µ) (Butler and Kwon 2023, Costa and Iyengar 2023). To the
best of our knowledge, no prior deep learning-based portfolio research has specifically targeted the
21July19,2024 arxiv main
estimation of the covariance matrix (Σ). Our study aims to fill this gap by proposing a deep learn-
ing method to estimate Σ and comparing its performance with conventional covariance estimators
in traditional portfolio optimization.
4.5.1. Optimization formulation. We consider the Mean-Variance Optimization (MVO)
framework(Markowits1952)forportfoliooptimization.TheMVOapproachdeterminestheoptimal
asset weights (ω ) in a portfolio, subject to constraints on risk and return, assuming the expected
i
return (µ ), variance (σ2), and covariance (σ ) of each asset are known. This study adopts the
i ii ij
experimental design and methodology established by (Gerber et al. 2021). We randomly sampled
the asset classes 100 times with 10, 30 and 50 stocks each from the S&P500 and JPX Prime 150.
The long-only MVO problem, accounting for transaction costs, is formulated as:
Maximize: wTµ−ψ1T|w−w |
0
(15)
Subject to: wTΣw ≤ σ2 , wT1 = 0, 0 ≤ w ≤ 1,∀k = 1,2,··· ,N.
target k
The objective function seeks to maximize the portfolio’s expected return (ωTµ) while minimiz-
ing transaction costs, represented by the term ψ1T|ω−ω |. Here, ψ denotes the fixed proportional
0
transaction cost, set to 10 basis points (0.1%) in this study, and ω represents the previous port-
0
folio weights. By including this term, we penalize deviations from the previous weights, effectively
controlling portfolio turnover and reducing trading costs.
The optimization is subject to three constraints: (1) the portfolio variance must not exceed a
predetermined risk target (σ2 ), (2) the sum of portfolio weights must equal unity, and (3)
target
individual asset weights must be non-negative and not exceed one, prohibiting short selling. By
solving this constrained optimization problem, we obtain the optimal portfolio weights ω∗ for a
given risk target σ and transaction cost ψ. The set of optimal portfolios across various risk
target
levels constitutes the efficient frontier, with each point representing the highest achievable return
for a specific level of risk.
We estimate the expected return µ for asset i at time t using the sample mean of its historical
ti
returnsoveraT-monthlookbackwindow.ForthecovariancematrixΣ,wecomparetheperformance
of historical covariance (HC), shrinkage method (SM) (Ledoit and Wolf 2004a), Gerber statistic
(GS) (Gerber et al. 2021), TS(TS2VEC) (Yue et al. 2022) embedding and SimStock embedding
(SS).
4.5.2. Backtesting procedure. To evaluate the performance of the different covariance es-
timators in the context of portfolio optimization, we employ the following backtesting procedure.
Starting from Jan 2021, at the beginning of each month, we use the monthly returns of the current
asset universe over the previous T = 12 months to estimate the expected return vector µ and the
covariance matrix Σ.
We then apply a quadratic optimizer to solve for the optimal portfolio weights ω∗ given a specific
risk target σ for MVO and the optimal portfolio weights w∗ that minimize the portfolio
target
variance for MVP. The previous portfolio is rebalanced according to the new optimal weights, and
this optimized portfolio is held for one month. At the end of the month, the realized portfolio
return is calculated as w∗Tr˜, where r˜represents the vector of realized asset returns for that month.
Thisprocessisrepeatedbyrollingthein-sampleperiodforwardbyonemonthandcomputingthe
updated efficient portfolio for the next month. The rolling-window approach allows the portfolios
to adapt to structural changes in the market and mitigates data mining bias. As the initialization
of the first portfolio requires two years of monthly returns, our performance evaluation covers the
period from Jan 2022 to Feb 2024.
22July19,2024 arxiv main
S&P500 | 10 Stocks JPX Prime 150 | 10 Stocks
16
7
15
14
6
13
26 28 30 32 26 28 30 32 34
S&P500 | 30 Stocks JPX Prime 150 | 30 Stocks
22
12
21
20
11
19
10 18
17
9 16
28 30 32 34 36 26 28 30 32 34 36
S&P500 | 50 Stocks JPX Prime 150 | 50 Stocks
22
13
21
20
12
19
11 18
17
10
16
9
28 30 32 34 36 38 26 28 30 32 34 36 38
Annualized Volatility (%) Annualized Volatility (%)
SS HC SM GS TS
Figure 6. Ex-post efficient frontiers displaying annualized return and volatility of portfolios optimized for different
risk targets. The black vertical dotted lines represent the average volatility of the S&P500 and JPX Prime 150,
respectively.
4.5.3. Efficient frontiers. In this subsection, to evaluate the performance of portfolios opti-
mized using the SimStock embedding covariance matrix (Σ ), we compare their ex-post efficient
SS
frontiers with those of portfolios constructed using traditional covariance estimators, namely the
historical covariance (HC), shrinkage method (SM), Gerber statistic (GS) and TS2VEC (TS), de-
noted as Σ , Σ , Σ and Σ , respectively. To obtain the covariance matrix Σ using the
HC SM GS TS SS
TS2VEC and SimStock embedding, we first compute the pairwise L2 distances between the em-
beddings of each stock pair. These distances are then scaled to the range [-1, 1] using max-min
normalization, which brings the stocks closer to 1 in the correlation matrix for smaller L2 dis-
tances, indicating greater similarity between stocks. The resulting normalized distances are used
to populate the correlation matrix, represents the correlation coefficient between stocks i and j as
estimated by embeddings. We then compute the covariance matrix Σ and Σ . The analysis is
TS SS
conducted on portfolios of varying sizes (10, 30, and 50 stocks) from both the S&P500 and JPX
23
)%(
nruteR
dezilaunnA
)%(
nruteR
dezilaunnA
)%(
nruteR
dezilaunnAJuly19,2024 arxiv main
Prime 150 universes, across different risk targets.
As shown in fig. 6, the SimStock embedding approach slightly outperforms the other covariance
estimators across all portfolio sizes and risk levels in both the S&P500 and JPX Prime 150 uni-
verses. The portfolios constructed using Σ achieve higher annualized returns for a given level of
SS
annualized volatility compared to those based on Σ , Σ , Σ and Σ . This outperformance is
HC SM GS TS
slightly more evident for smaller portfolio sizes (10 and 30 stocks), where the SimStock embedding
method demonstrates an advantage in capturing meaningful relationships between assets, leading
to superior risk-adjusted performance. While our approach did not aim to take into account the
correlation coefficients between all stocks, these results suggest that SimStock has the potential
to slightly improve portfolio optimization results in portfolio construction settings. The results
showing robustness to potential other choices to construct the covariance from SimStock can be
found in Appendix F.
The underperformance of TS2VEC is particularly noticeable when compared to the SimStock
(SS) embedding approach, which consistently outperforms all other methods. The gap between the
TS and SS curves is most evident for the smaller portfolio sizes (10 and 30 stocks), suggesting
that the TS2VEC embeddings may struggle to capture the nuanced relationships between assets
in these more concentrated portfolios.
4.5.4. Detailed investment performances. This section compares the performance of five
portfolio construction methods (Simstock embedding, Historical Covariance, Shrinkage Method,
Gerber Statistic, and TS2VEC embedding) for MVO, using 30-stock portfolios from the S&P 500
and JPX Prime 150 universes. See Appendix E for results for 10 and 50 stocks.
table 5 and table 6 present the performance metrics for the target risk optimizations in the
S&P500 and JPX Prime 150 universes, respectively, at four different risk target levels (24%, 27%,
30%, and 33%). See Appendix E for results for 10 and 50 stocks.
In the S&P500 universe (table 5), the Simstock embedding (SS) method produced the highest
returns at all risk target levels while maintaining risk measures comparable to the other methods.
Returns and risk measures increased for all methods as the risk target rose. The Historical Covari-
ance (HC), Shrinkage Method (SM), and Gerber Statistic (GS) methods performed similarly to
each other, but slightly worse than SS, particularly at higher risk levels. For example, at the 24%
risk target, SS achieved an 11.31% arithmetic return compared to 10.04%, 9.61%, and 10.14% for
HC, SM, and GS respectively. At the 33% risk target, SS’s return increased to 13.33%, while HC,
SM and GS saw returns of 12.50%, 12.85% and 12.69%. The TS2VEC embedding (TS) method
consistently underperformed the others, with a 9.40% return at the 24% risk level and 11.49% at
the 33% level, below all other methods.
The JPX Prime 150 universe (table 6) showed similar patterns, with SS producing the best
returns, followed by HC, GS, SM and TS in that order across risk levels. SS achieved a 20.12%
return at the 24% risk target and 22.47% at the 33% target. In contrast, TS had the lowest returns
at 14.60% and 18.45% for those risk levels. The HC, GS, and SM methods produced returns that
were higher than TS but lower than SS at each corresponding risk level.
Despite potentially higher volatility which is evident in the ex-post efficient frontiers in fig. 6,
the performance of the SS method highlights its potential as a meaningful and effective stock
embedding technique for portfolio optimization.
24July19,2024 arxiv main
25
)%33(ytilitaloVtegraT
)%03(ytilitaloVtegraT
)%72(ytilitaloVtegraT
)%42(ytilitaloVtegraT
skcotS03—005P&S
ST
SG
MS
CH
SS
ST
SG
MS
CH
SS
ST
SG
MS
CH
SS
ST
SG
MS
CH
SS
dohteMecnairavoC
94.11
96.21
58.21
05.21
33.31
68.01
79.11
30.21
66.11
48.21
15.01
50.11
20.11
57.01
22.21
04.9
41.01
16.9
40.01
13.11
)%(nruteRcitemhtirA
73.01
23.11
15.11
81.11
88.11
65.9
38.01
769.01
75.01
06.11
34.9
71.01
12.01
68.9
851.11
91.8
34.9
79.8
03.9
93.01
)%(nruteRcirtemoeG
64.43
50.24
95.24
72.14
81.44
35.13
16.93
039.93
44.83
46.24
40.13
94.63
36.63
04.53
45.04
46.62
04.33
06.13
70.33
63.73
)%(nruteRevitalumuC
62.23
45.23
94.23
71.23
52.33
73.13
97.03
326.03
85.03
27.13
42.03
09.82
66.82
29.82
42.03
45.92
00.72
16.62
72.72
28.82
)%(DSdezilaunnA
42.0-
32.0-
22.0-
22.0-
22.0-
12.0-
02.0-
191.0-
02.0-
81.0-
12.0-
61.0-
61.0-
71.0-
41.0-
71.0-
221.0-
21.0-
51.0-
21.0-
ssenwekSdezilaunnA
39.2
82.3
33.3
33.3
72.3
88.2
82.3
343.3
33.3
72.3
68.2
42.3
92.3
82.3
22.3
18.2
161.3
32.3
22.3
71.3
sisotruKdezilaunnA
74.62-
80.82-
75.72-
36.72-
02.82-
46.62-
75.62-
179.52-
44.62-
96.62-
39.52-
40.52-
75.42-
63.52-
56.52-
95.52-
95.32-
74.32-
69.32-
09.42-
)%(nwodwarDmumixaM
2.21-
65.11-
84.11-
04.11-
27.11-
96.11-
10.11-
129.01-
59.01-
91.11-
83.11-
25.01-
35.01-
36.01-
77.01-
11.11-
50.01-
99.9-
22.01-
44.01-
)%(RaV%59ylhtnoM
63.0
34.0
44.0
34.0
54.0
53.0
34.0
744.0
24.0
64.0
13.0
34.0
34.0
14.0
64.0
13.0
24.0
93.0
04.0
44.0
oitaReprahS
68.7
45.8
15.8
75.8
76.8
99.7
65.8
295.8
45.8
37.8
40.8
94.8
65.8
84.8
96.8
29.7
63.8
94.8
93.8
86.8
revonruTdezilaunnA
,)CH(
ecnairavoc
lacirotsih
,)SS(
gniddebme
kcotsmiS
:005P&S
eht
ni
sdohtem
noitcurtsnoc
oiloftrop
ruof
rof
scirtem
ecnamrofrep
eht
stneserp
elbat
sihT
.5
elbaT
dna
,%03
,%72
,%42
:slevel
tegrat
ksir
tnereffid
ruof rof
dezimitpo
erew
soiloftrop
ehT
.)ST(
gniddebme
CEV2ST
dna
)SG(
citsitats
rebreG
,)MS(
dohtem
egaknirhs
eerf-ksir
eht
sa
desu
saw
etar
lliB
yrusaerT
.S.U
htnom-3
ehT
.4202
yraurbeF
ot
2202
yraunaJ
morf
doirep
gnitset
lluf
eht
revo
detaulave
saw
ecnamrofrep
ehT
.%33
.tneve
gnicnalaber
hcae
rof
emulov
dedart
eht
fo
stniop
sisab
01
sa deledom
erew
stsoc
noitcasnarT
.snoitaluclac
ecnamrofrep
rof
etar
)%33(ytilitaloVtegraT
)%03(ytilitaloVtegraT
)%72(ytilitaloVtegraT
)%42(ytilitaloVtegraT
skcotS03—051emirPXPJ
ST
SG
MS
CH
SS
ST
SG
MS
CH
SS
ST
SG
MS
CH
SS
ST
SG
MS
CH
SS
dohteMecnairavoC
54.81
69.12
05.22
07.12
74.22
38.61
15.02
04.12
56.02
07.12
76.51
02.91
20.02
87.91
58.02
06.41
08.71
16.81
20.91
21.02
)%(nruteRcitemhtirA
97.61
41.02
75.02
09.91
26.02
91.51
09.81
85.91
10.91
69.91
52.41
87.71
04.81
13.81
42.91
69.21
26.61
42.71
27.71
36.81
)%(nruteRcirtemoeG
23.95
03.97
73.18
78.77
76.18
58.25
09.27
72.67
32.37
59.77
21.94
32.76
52.07
65.96
23.47
61.44
55.16
06.46
35.66
51.17
)%(nruteRevitalumuC
66.03
64.13
95.13
02.13
33.13
26.92
96.92
38.92
95.92
99.92
93.82
47.72
47.72
88.72
15.82
91.72
17.52
65.52
61.62
38.62
)%(DSdezilaunnA
31.0
02.0
32.0
91.0
23.0
61.0
12.0
32.0
91.0
43.0
51.0
81.0
12.0
71.0
23.0
11.0
31.0
71.0
61.0
82.0
ssenwekSdezilaunnA
27.2
61.3
22.3
21.3
15.3
37.2
90.3
71.3
60.3
94.3
76.2
10.3
80.3
20.3
34.3
96.2
29.2
99.2
49.2
73.3
sisotruKdezilaunnA
03.42-
41.32-
92.32-
82.32-
91.22-
75.22-
69.12-
51.22-
90.22-
61.12-
98.22-
26.02-
58.02-
98.02-
73.02-
78.12-
44.91-
25.91-
36.91-
71.91-
)%(nwodwarDmumixaM
57.01-
04.01-
13.01-
64.01-
97.9-
92.01-
09.9-
97.9-
59.9-
14.9-
29.9-
63.9-
02.9-
64.9-
00.9-
68.9-
28.8-
94.8-
98.8-
25.8-
)%(RaV%59ylhtnoM
17.0
88.0
09.0
78.0
29.0
76.0
78.0
09.0
78.0
29.0
56.0
68.0
09.0
98.0
39.0
36.0
68.0
19.0
29.0
69.0
oitaReprahS
91.8
45.8
45.8
85.8
58.8
92.8
95.8
65.8
95.8
18.8
51.8
26.8
75.8
25.8
38.8
12.8
45.8
05.8
83.8
18.8
revonruTdezilaunnA
ecnairavoc
lacirotsih
,)SS(gniddebme
kcotsmiS
:051 emirP
XPJ
eht
ni
sdohtem
noitcurtsnoc
oiloftrop
ruof
rof
scirtem
ecnamrofrep
eht
stneserp
elbat
sihT
.6
elbaT
,%03
,%72
,%42
:slevel
tegrat
ksir
tnereffid
ruof
rof dezimitpo
erew
soiloftrop
ehT
.)ST(
gniddebme
CEV2ST
dna
)SG(
citsitats
rebreG
,)MS(
dohtem
egaknirhs
,)CH(
eht
sa
desu
saw
etar
lliB
yrusaerT
.S.U
htnom-3
ehT
.4202
yraurbeF
ot
2202
yraunaJ
morf
doirep
gnitset
lluf
eht
revo
detaulave
saw
ecnamrofrep
ehT
.%33
dna
.tneve
gnicnalaber
hcae
rof
emulov
dedart
eht
fo stniop
sisab
01
sa
deledom
erew
stsoc
noitcasnarT
.snoitaluclac
ecnamrofrep
rof
etar
eerf-ksirJuly19,2024 arxiv main
4.5.5. Characteristics of SimStock similarity matrix. To investigate what distinguishes
the SimStock embedding method from other portfolio optimization methods, we can compare the
correlation matrices generated by different methodologies. Specifically, we propose the following
mapping:
(cid:13)
(cid:13)
MD−RCfuture(cid:13)
(cid:13)
F ≤ 1 (16)
(cid:13)
(cid:13)
MD−RCpast(cid:13)
(cid:13)
F
Here, MD refers to the correlation matrix obtained using a specific methodology (e.g., SS, SM,
GS or TS), while RCfuture and RCpast represent the realized correlation matrices for the future and
past periods, respectively.
If the value of this mapping is less than or close to 1, it implies that
(cid:13)
(cid:13)
MD−RCfuture(cid:13)
(cid:13) ≤
F
(cid:13)
(cid:13)
MD−RCpast(cid:13)
(cid:13) . This means that the current methodology is tracking the future correlation
F
matrix well, as the Frobenius distance between the method’s correlation matrix and the future
realized correlation matrix is smaller than the distance between the method’s correlation matrix
and the past correlation matrix.
S&P500 JPX Prime 150
2.25
2.0 2.00
1.75
1.5 1.50
1.25
1.0
1.00
Feb-2021 Mv as
r
-F 2e 0b 2- 12 A0 v ps2 r2 -M 2a 0r 2- M12 a0 v y2 s
-
2 2A 0p 2r- 1 2 Jv0 s
u
2 n2 -M 2a 0y- 22 1 0 Jv2 s
u
2 lJ -u 2n 0- 22 A1 0 uv2 g-s2 2J 0ul 2- 1 2 Sv0 es2 p2 -A 2u 0g 2- 12 0 Ov c2 s
t
2 -S 2e 0p 2- 1 N2 o0 v v2 s
-
2 2O 0ct 2- 1 2 Dv0 es2 c-2 N 2o 0v 2- 12 J0 v as2 n2 -D 2e 0c- 22 2
F
0 ev2 bs 2 -J 2a 0n 2- 22 0 v2 s 3 Feb-2023 Feb-2021 Mv as
r
-F 2e 0b 2- 12 A0 v ps2 r2 -M 2a 0r 2- M12 a0 v y2 s
-
2 2A 0p 2r- 1 2 Jv0 s
u
2 n2 -M 2a 0y- 22 1 0 Jv2 s
u
2 lJ -u 2n 0- 22 A1 0 uv2 g-s2 2J 0ul 2- 1 2 Sv0 es2 p2 -A 2u 0g 2- 12 0 Ov c2 s
t
2 -S 2e 0p 2- 1 N2 o0 v v2 s
-
2 2O 0ct 2- 1 2 Dv0 es2 c-2 N 2o 0v 2- 12 J0 v as2 n2 -D 2e 0c- 22 2
F
0 ev2 bs 2 -J 2a 0n 2- 22 0 v2 s 3 Feb-2023
SS SM GS TS
Figure7. ComparisonofFrobeniusdistancesbetweencorrelationmatricesgeneratedbydifferentmethodologies(SS:
SimStockembedding,SM:shrinkagemethod,GS:Gerberstatistic)andrealizedcorrelationmatricesforconsecutive
years in the S&P500 and JPX Prime 150 universes. Lower values indicate better tracking of the future correlation
matrix. The SS method consistently exhibits lower Frobenius distances compared to the SM , GS and TS methods
across most month pairs in both universes, suggesting its superior ability to capture future asset correlations.
fig. 7 illustrates the Frobenius distances for different methodologies in the S&P500 and JPX
Prime 150 universes. The figure compares the correlation matrices between the same months in
consecutive years (e.g., Feb-2021 vs Feb-2022, Mar-2021 vs Mar-2022, etc.). For example, “Feb-
2021 vs Feb-2022” means that the correlation series for the period from February 2021 to January
2022 is compared to the correlation series for the period from February 2022 to January 2023,
representing the current year and the future year, respectively.
For the S&P500, the Frobenius distances for the SimStock embedding method (SS) are con-
sistently lower than those of the shrinkage method (SM), Gerber statistic (GS) and TS2VEC
embedding (TS) across all month pairs. This suggests that the SS method is better at tracking the
future correlation matrix compared to the SM and GS methods.
Similarly, in the JPX Prime 150 universe, the SS method generally exhibits lower Frobenius
distances than the SM, GS and TS methods for most month pairs. This indicates that the SS
method is more effective at capturing the future correlation structure of the assets compared to
the other methodologies.
26
ecnatsiD
suineborFJuly19,2024 arxiv main
The ability of the SimStock embedding method to better track the future correlation matrix can
be attributed to its unique approach, temporal representation learning, which effectively captures
the time-varying patterns in stock price data. This improved understanding of the underlying asset
dynamics could enable the SS method to generate correlation matrices that more closely resemble
the future realized correlations, thereby providing an advantage edge in portfolio optimization.
5. Conclusion
Inthispaper,weexamineSimStock,anoveltemporalself-supervisedlearningframeworkthataims
tolearnrobustandinformativerepresentationsoffinancialtimeseriesdata.Byincorporatingtech-
niquesfromSSLandtemporaldomaingeneralization,SimStockcapturesthecomplexrelationships
between different financial assets while accounting for temporal shifts in the data distribution. The
proposed dimension corruption method integrates temporal patterns into the corruption process,
enabling SimStock to learn representations that are robust to noise and non-stationarity in the
data.
We conduct extensive experiments on four real-world benchmarks with thousands of stocks to
demonstratetheeffectivenessof SimStockinfindingsimilarstocks.OurresultsshowthatSimStock
consistentlyoutperformsexistingmethodsinbothsameexchangeanddifferentexchangesscenarios,
achieving state-of-the-art performance in terms of accuracy and robustness. A qualitative analysis
further highlights the ability of SimStock to identify stocks with similar fundamental character-
istics and industry-specific similarities, simplifying the process of screening potential investment
opportunities.
The practical utility of SimStock is demonstrated through various financial applications, includ-
ingpairstrading,indextracking,andportfoliooptimization.Inthepairstradingexperiment,using
the similar stocks identified by SimStock leads to superior profitability compared to traditional
methods.Forindextracking,SimStockexhibitslowertrackingerrorsandbetteralignmentwiththe
underlying themes of thematic ETFs, particularly for ARKK, SKYY, and BOTZ. Finally, in port-
folio optimization, the SimStock embedding approach slightly outperforms traditional covariance
estimators, achieving higher risk-adjusted returns across different portfolio sizes and risk levels.
However, our current analysis does not examine the stability of the embedding space over time.
While recent generative models (Kim et al. 2024) and large language models (LLMs) (Rho et al.
2024,Nieet al.2024)haveinvestigatedsuchissues,thecaseofcontinuoustimeseriesremainsunex-
plored. To address this gap, future research could focus on a theoretical analysis of the embedding
space in the context of financial time series. This analysis could potentially incorporate notions of
regime change (Wood et al. 2023) to better understand how the embedding space evolves over time
and adapts to different market conditions. Also, this study primarily focused on time series data,
utilizing sector information as the only static data input. Future research could expand on this
approach by incorporating additional textual data, such as firm descriptions, news articles, and
financial statements, to develop a more comprehensive representation model for stock data. This
expanded approach has the potential to provide a deeper understanding of the complex dynamics
between stocks.
References
Ang, A. and Bekaert, G., International asset allocation with regime shifts. The review of financial studies,
2002, 15, 1137–1187.
Bai, G., Ling, C. and Zhao, L., Temporal Domain Generalization with Drift-Aware Dynamic Neural Net-
works. arXiv preprint arXiv:2205.10664, 2022.
Balntas, V., Riba, E., Ponsa, D. and Mikolajczyk, K., Learning local feature descriptors with triplets and
shallow convolutional neural networks.. In Proceedings of the Bmvc, Vol. 1, p. 3, 2016.
27July19,2024 arxiv main
Barberis, N., Investing for the long run when returns are predictable. The Journal of Finance, 2000, 55,
225–264.
Berndt, D.J. and Clifford, J., Using dynamic time warping to find patterns in time series.. In Proceedings of
the KDD workshop, Vol. 10, pp. 359–370, 1994.
Butler, A. and Kwon, R.H., Integrating prediction in mean-variance portfolio optimization. Quantitative
Finance, 2023, 23, 429–452.
Caron,M.,Touvron,H.,Misra,I.,J´egou,H.,Mairal,J.,Bojanowski,P.andJoulin,A.,Emergingproperties
inself-supervisedvisiontransformers.InProceedingsoftheProceedingsoftheIEEE/CVFinternational
conference on computer vision, pp. 9650–9660, 2021.
Chen, T., Kornblith, S., Norouzi, M. and Hinton, G., A simple framework for contrastive learning of visual
representations. In Proceedings of the International conference on machine learning, pp. 1597–1607,
2020.
Choi, H. and Kang, P., Multi-task self-supervised time-series representation learning. arXiv preprint
arXiv:2303.01034, 2023.
Chopra, V.K. and Ziemba, W.T., The effect of errors in means, variances, and covariances on optimal
portfolio choice. In Handbook of the fundamentals of financial decision making: Part I, pp. 365–373,
2013, World Scientific.
Chung, M., Lee, Y., Kim, J.H., Kim, W.C. and Fabozzi, F.J., The effects of errors in means, variances, and
correlations on the mean-variance framework. Quantitative Finance, 2022, 22, 1893–1903.
Cont, R., Empirical properties of asset returns: stylized facts and statistical issues. Quantitative finance,
2001, 1, 223.
Costa,G.andIyengar,G.N.,Distributionallyrobustend-to-endportfolioconstruction.QuantitativeFinance,
2023, 23, 1465–1482.
Devlin, J., Chang, M.W., Lee, K. and Toutanova, K., Bert: Pre-training of deep bidirectional transformers
for language understanding. arXiv preprint arXiv:1810.04805, 2018.
Enders,W.,Cointegrationanderror-correctionmodels.Appliedeconometricstimeseries,2004,pp.319–386.
Fama, E.F. and French, K.R., Common risk factors in the returns on stocks and bonds. Journal of financial
economics, 1993, 33, 3–56.
Fama, E.F. and French, K.R., A five-factor asset pricing model. Journal of financial economics, 2015, 116,
1–22.
Fang, Y., Dong, L., Bao, H., Wang, X. and Wei, F., Corrupted image modeling for self-supervised visual
pre-training. arXiv preprint arXiv:2202.03382, 2022.
Focardi, S.M. and Fabozzi, F.J., A methodology for index tracking based on time-series clustering. Quanti-
tative Finance, 2004, 4, 417–425.
Gatev, E., Goetzmann, W.N. and Rouwenhorst, K.G., Pairs trading: Performance of a relative-value arbi-
trage rule. The Review of Financial Studies, 2006, 19, 797–827.
Gerber,S.,Markowitz,H.,Ernst,P.,Miao,Y.,Sargen,P.etal.,TheGerberstatistic:Arobustco-movement
measureforportfoliooptimization.NoandSargen,Paul,TheGerberStatistic:ARobustCo-Movement
Measure for Portfolio Optimization (July 4, 2021), 2021.
Gorishniy, Y., Rubachev, I., Khrulkov, V. and Babenko, A., Revisiting deep learning models for tabular
data. Advances in Neural Information Processing Systems, 2021, 34, 18932–18943.
Grill, J.B., Strub, F., Altch´e, F., Tallec, C., Richemond, P., Buchatskaya, E., Doersch, C., Avila Pires, B.,
Guo, Z., Gheshlaghi Azar, M. et al., Bootstrap your own latent-a new approach to self-supervised
learning. Advances in neural information processing systems, 2020, 33, 21271–21284.
Guidolin, M. and Timmermann, A., Asset allocation under multivariate regime switching. Journal of Eco-
nomic Dynamics and Control, 2007, 31, 3503–3544.
He,K.,Fan,H.,Wu,Y.,Xie,S.andGirshick,R.,Momentumcontrastforunsupervisedvisualrepresentation
learning.InProceedingsoftheProceedingsoftheIEEE/CVFconferenceoncomputervisionandpattern
recognition, pp. 9729–9738, 2020.
Hochreiter, S. and Schmidhuber, J., Long short-term memory. Neural computation, 1997, 9, 1735–1780.
Hwang, Y., Lee, J., Kim, D., Noh, S., Hong, J. and Lee, Y., SimStock: Representation Model for Stock
Similarities. In Proceedings of the Proceedings of the Fourth ACM International Conference on AI in
Finance, pp. 533–540, 2023a.
Hwang, Y., Park, J., Lee, Y. and Lim, D.Y., Stop-loss adjusted labels for machine learning-based trading of
risky assets. Finance Research Letters, 2023b, 58, 104285.
Jenni, S., Meishvili, G. and Favaro, P., Video representation learning by recognizing temporal transforma-
28July19,2024 arxiv main
tions. In Proceedings of the Computer Vision–ECCV 2020: 16th European Conference, Glasgow, UK,
August 23–28, 2020, Proceedings, Part XXVIII 16, pp. 425–442, 2020.
Jiang, A.Q., Sablayrolles, A., Roux, A., Mensch, A., Savary, B., Bamford, C., Chaplot, D.S., Casas, D.d.l.,
Hanna, E.B., Bressand, F. et al., Mixtral of experts. arXiv preprint arXiv:2401.04088, 2024.
Jing, L. and Tian, Y., Self-supervised visual feature learning with deep neural networks: A survey. IEEE
transactions on pattern analysis and machine intelligence, 2020, 43, 4037–4058.
Jobson,J.D.andKorkie,B.,EstimationforMarkowitzefficientportfolios.JournaloftheAmericanStatistical
Association, 1980, 75, 544–554.
Kan, R. and Zhou, G., Optimal estimation for economic gains: Portfolio choice with parameter uncertainty.
Washington University, St. Louis, 2004.
Kan, R. and Zhou, G., Optimal portfolio choice with parameter uncertainty. Journal of Financial and
Quantitative Analysis, 2007, 42, 621–656.
Kim, J.H., Lee, Y., Kim, W.C. and Fabozzi, F.J., Mean-variance optimization for asset allocation. Journal
of Portfolio Management, 2021, 47, 24–40.
Kim, P.J., Jang, Y., Kim, J. and Yoo, J., TopP&R: Robust Support Estimation Approach for Evaluating
FidelityandDiversityinGenerativeModels.AdvancesinNeuralInformationProcessingSystems,2024,
36.
Kornblith, S., Norouzi, M., Lee, H. and Hinton, G., Similarity of neural network representations revisited.
In Proceedings of the International conference on machine learning, pp. 3519–3529, 2019.
Ledoit, O. and Wolf, M., Improved estimation of the covariance matrix of stock returns with an application
to portfolio selection. Journal of empirical finance, 2003, 10, 603–621.
Ledoit,O.andWolf,M.,Honey,IShrunktheSampleCovarianceMatrix.Journal of Portfolio Management,
2004a, 30, 110.
Ledoit,O.andWolf,M.,Awell-conditionedestimatorforlarge-dimensionalcovariancematrices.Journal of
multivariate analysis, 2004b, 88, 365–411.
Lee, K., Chang, M.W. and Toutanova, K., Latent retrieval for weakly supervised open domain question
answering. arXiv preprint arXiv:1906.00300, 2019.
Lee, Y., Thompson, J.R., Kim, J.H., Kim, W.C. and Fabozzi, F.A., An overview of machine learning for
asset management. The Journal of Portfolio Management, 2023, 49, 31–63.
Lim,B.,Zohren,S.andRoberts,S.,Enhancingtimeseriesmomentumstrategiesusingdeepneuralnetworks.
arXiv preprint arXiv:1904.04912, 2019.
Lintner,J.,Thevaluationofriskassetsandtheselectionofriskyinvestmentsinstockportfoliosandcapital
budgets. In Stochastic optimization models in finance, pp. 131–155, 1975, Elsevier.
Lo, A., Adaptive markets: Financial evolution at the speed of thought, 2017, Princeton University Press.
Lu, J., Liu, A., Dong, F., Gu, F., Gama, J. and Zhang, G., Learning under concept drift: A review. IEEE
transactions on knowledge and data engineering, 2018, 31, 2346–2363.
Mann,B.,Ryder,N.,Subbiah,M.,Kaplan,J.,Dhariwal,P.,Neelakantan,A.,Shyam,P.,Sastry,G.,Askell,
A., Agarwal, S. et al., Language models are few-shot learners. arXiv preprint arXiv:2005.14165, 2020.
Markowits, H.M., Portfolio selection. Journal of Finance, 1952, 7, 71–91.
Markowitz, H., Portfolio Selection. The Journal of Finance, 1952, 7, 77–91.
Michaud, R.O., The Markowitz optimization enigma: Is ‘optimized’optimal?. Financial analysts journal,
1989, 45, 31–42.
Nelson, C.R. and Plosser, C.R., Trends and random walks in macroeconmic time series: some evidence and
implications. Journal of monetary economics, 1982, 10, 139–162.
Nie, Y., Kong, Y., Dong, X., Mulvey, J.M., Poor, H.V., Wen, Q. and Zohren, S., A Survey of Large
Language Models for Financial Applications: Progress, Prospects and Challenges. arXiv preprint
arXiv:2406.11903, 2024.
Pan,S.J.andYang,Q.,Asurveyontransferlearning.IEEETransactionsonknowledgeanddataengineering,
2009, 22, 1345–1359.
Qian, R., Meng, T., Gong, B., Yang, M.H., Wang, H., Belongie, S. and Cui, Y., Spatiotemporal contrastive
videorepresentationlearning.InProceedings of the Proceedings of the IEEE/CVF Conference on Com-
puter Vision and Pattern Recognition, pp. 6964–6974, 2021.
Qiu, X., Sun, T., Xu, Y., Shao, Y., Dai, N. and Huang, X., Pre-trained models for natural language pro-
cessing: A survey. Science China Technological Sciences, 2020, 63, 1872–1897.
Radford,A.,Wu,J.,Child,R.,Luan,D.,Amodei,D.,Sutskever,I.etal.,Languagemodelsareunsupervised
multitask learners. OpenAI blog, 2019, 1, 9.
29July19,2024 arxiv main
Rapach,D.E.,Strauss,J.K.andZhou,G.,Out-of-sampleequitypremiumprediction:Combinationforecasts
and links to the real economy. The Review of Financial Studies, 2010, 23, 821–862.
Rho,S.,Smith,L.,Li,T.,Levine,S.,Peng,X.B.andHa,S.,LanguageGuidedSkillDiscovery.arXivpreprint
arXiv:2406.06615, 2024.
Rousseeuw, P.J. and Driessen, K.V., A fast algorithm for the minimum covariance determinant estimator.
Technometrics, 1999, 41, 212–223.
Ruder, S. and Plank, B., Strong baselines for neural semi-supervised learning under domain shift. arXiv
preprint arXiv:1804.09530, 2018.
Sharpe, W.F., Capital asset prices: A theory of market equilibrium under conditions of risk. The journal of
finance, 1964, 19, 425–442.
Song, K., Tan, X., Qin, T., Lu, J. and Liu, T.Y., Mpnet: Masked and permuted pre-training for language
understanding. Advances in Neural Information Processing Systems, 2020, 33, 16857–16867.
Touvron, H., Lavril, T., Izacard, G., Martinet, X., Lachaux, M.A., Lacroix, T., Rozi`ere, B., Goyal, N.,
Hambro, E., Azhar, F. et al., Llama: Open and efficient foundation language models. arXiv preprint
arXiv:2302.13971, 2023.
Uysal,A.S.,Li,X.andMulvey,J.M.,End-to-endriskbudgetingportfoliooptimizationwithneuralnetworks.
Annals of Operations Research, 2023, pp. 1–30.
VanAelst,S.andRousseeuw,P.,Minimumvolumeellipsoid.WileyInterdisciplinaryReviews:Computational
Statistics, 2009, 1, 71–82.
Vaswani, A., Shazeer, N., Parmar, N., Uszkoreit, J., Jones, L., Gomez, A.N., Kaiser, L(cid:32) . and Polosukhin, I.,
Attention is all you need. Advances in neural information processing systems, 2017, 30.
Wan, X., Yang, J., Marinov, S., Calliess, J.P., Zohren, S. and Dong, X., Sentiment correlation in financial
news networks and associated market movements. Scientific reports, 2021, 11, 3062.
Wei, C., Fan, H., Xie, S., Wu, C.Y., Yuille, A. and Feichtenhofer, C., Masked feature prediction for self-
supervised visual pre-training. In Proceedings of the Proceedings of the IEEE/CVF Conference on
Computer Vision and Pattern Recognition, pp. 14668–14678, 2022.
Welch, I. and Goyal, A., A comprehensive look at the empirical performance of equity premium prediction.
The Review of Financial Studies, 2008, 21, 1455–1508.
Wen,Q.,Zhang,Z.,Li,Y.andSun,L.,FastRobustSTL:Efficientandrobustseasonal-trenddecomposition
for time series with complex patterns. In Proceedings of the Proceedings of the 26th ACM SIGKDD
International Conference on Knowledge Discovery & Data Mining, pp. 2203–2213, 2020.
Woo, G., Liu, C., Sahoo, D., Kumar, A. and Hoi, S., Etsformer: Exponential smoothing transformers for
time-series forecasting. arXiv preprint arXiv:2202.01381, 2022.
Wood, K., Kessler, S., Roberts, S.J. and Zohren, S., Few-Shot Learning Patterns in Financial Time-Series
for Trend-Following Strategies. arXiv preprint arXiv:2310.10500, 2023.
Wu, H., Xu, J., Wang, J. and Long, M., Autoformer: Decomposition transformers with auto-correlation
for long-term series forecasting. Advances in neural information processing systems, 2021a, 34, 22419–
22430.
Wu, H., Xu, J., Wang, J. and Long, M., Autoformer: Decomposition transformers with auto-correlation for
long-term series forecasting. Advances in Neural Information Processing Systems, 2021b, 34, 22419–
22430.
Xiao, T., Reed, C.J., Wang, X., Keutzer, K. and Darrell, T., Region similarity representation learning. In
Proceedings of the Proceedings of the IEEE/CVF International Conference on Computer Vision, pp.
10539–10548, 2021.
Yang,Z.,Dai,Z.,Yang,Y.,Carbonell,J.,Salakhutdinov,R.R.andLe,Q.V.,Xlnet:Generalizedautoregres-
sive pretraining for language understanding. Advances in neural information processing systems, 2019,
32.
Yue,Z.,Wang,Y.,Duan,J.,Yang,T.,Huang,C.,Tong,Y.andXu,B.,Ts2vec:Towardsuniversalrepresen-
tationoftimeseries.InProceedingsoftheProceedingsoftheAAAIConferenceonArtificialIntelligence,
Vol. 36, pp. 8980–8987, 2022.
Yun, S., Han, D., Oh, S.J., Chun, S., Choe, J. and Yoo, Y., Cutmix: Regularization strategy to train strong
classifiers with localizable features. In Proceedings of the Proceedings of the IEEE/CVF international
conference on computer vision, pp. 6023–6032, 2019.
Yun, S., Lee, H., Kim, J. and Shin, J., Patch-level representation learning for self-supervised vision trans-
formers.InProceedingsoftheProceedingsoftheIEEE/CVFconferenceoncomputervisionandpattern
recognition, pp. 8354–8363, 2022.
30July19,2024 arxiv main
Zhai,X.,Oliver,A.,Kolesnikov,A.andBeyer,L.,S4l:Self-supervisedsemi-supervisedlearning.InProceed-
ings of the Proceedings of the IEEE/CVF international conference on computer vision, pp. 1476–1485,
2019.
Zhang,C.,Zhang,Z.,Cucuringu,M.andZohren,S.,Auniversalend-to-endapproachtoportfoliooptimiza-
tion via deep learning. arXiv preprint arXiv:2111.09170, 2021.
Zhang, H., Cisse, M., Dauphin, Y.N. and Lopez-Paz, D., mixup: Beyond empirical risk minimization. arXiv
preprint arXiv:1710.09412, 2017.
Zhang, Z., Zohren, S. and Roberts, S., Deep learning for portfolio optimization. arXiv preprint
arXiv:2005.13665, 2020.
Zhou, T., Ma, Z., Wen, Q., Wang, X., Sun, L. and Jin, R., Fedformer: Frequency enhanced decomposed
transformerforlong-termseriesforecasting.InProceedingsoftheInternationalConferenceonMachine
Learning, pp. 27268–27286, 2022.
31July19,2024 arxiv main
Appendix
Appendix A: Ablation sutdy
In this appendix, we present an ablation study on the impact of different values of the mixing
parameter λ on the model’s performance. We evaluate the model using the correlation coefficient
and dynamic time warping (DTW) distance across four stock market indices (US, SSE, SZSE, and
TSE). The results are presented in table A.1 and table A.2.
table A.1 shows that the highest correlationcoefficientsfor eachindex are obtained withλ = 0.7,
indicating the best performance in terms of the correlation between the model’s predictions and
the actual stock market data. Similarly, table A.2 demonstrates that the lowest DTW distances for
each index are achieved with λ = 0.7, suggesting the best performance in terms of the similarity
between the model’s predictions and the actual stock market data.
US TOP@1 TOP@3 TOP@5 TOP@7 TOP@9 SSE TOP@1 TOP@3 TOP@5 TOP@7 TOP@9
λ=0.1 0.7576 0.6179 0.5601 0.5267 0.5058 λ=0.1 0.7193 0.5483 0.4811 0.4396 0.4137
λ=0.3 0.7723 0.6212 0.5638 0.5283 0.5052 λ=0.3 0.7618 0.6048 0.5502 0.5150 0.4890
λ=0.5 0.7876 0.6580 0.6056 0.5744 0.5542 λ=0.5 0.8029 0.6513 0.5894 0.5559 0.5314
λ=0.7 0.8128 0.6905 0.6414 0.6119 0.5923 λ=0.7 0.8088 0.6691 0.6207 0.5879 0.5633
λ=0.9 0.8104 0.6870 0.6374 0.6088 0.5892 λ=0.9 0.8054 0.6759 0.6222 0.5883 0.5642
SZSE TOP@1 TOP@3 TOP@5 TOP@7 TOP@9 TSE TOP@1 TOP@3 TOP@5 TOP@7 TOP@9
λ=0.1 0.7548 0.6286 0.5707 0.5404 0.5173 λ=0.1 0.6337 0.4802 0.4127 0.3805 0.3549
λ=0.3 0.7252 0.5838 0.5222 0.4872 0.4624 λ=0.3 0.6482 0.4871 0.4258 0.3926 0.3711
λ=0.5 0.6888 0.5463 0.4880 0.4506 0.4281 λ=0.5 0.6772 0.5203 0.4644 0.4347 0.4161
λ=0.7 0.7951 0.6768 0.6298 0.5961 0.5737 λ=0.7 0.7668 0.6483 0.5964 0.5651 0.5476
λ=0.9 0.7873 0.6713 0.6180 0.5873 0.5644 λ=0.9 0.7811 0.6644 0.6143 0.5862 0.5686
Table A.1. Correlation coefficient results for different values of λ across four stock market indices. The best result
for each index is in bold, while the second best is underlined.
US TOP@1 TOP@3 TOP@5 TOP@7 TOP@9 SSE TOP@1 TOP@3 TOP@5 TOP@7 TOP@9
λ=0.1 14.3211 22.0003 24.9902 26.6191 27.6328 λ=0.1 13.9537 21.7294 24.7087 26.5307 27.7407
λ=0.3 13.6924 21.9408 24.8712 26.6015 27.6861 λ=0.3 12.6262 20.9044 23.637 25.2049 26.3574
λ=0.5 13.1073 20.4898 23.3020 24.8633 25.8934 λ=0.5 11.0089 19.5019 22.5511 24.0833 25.0604
λ=0.7 12.2124 19.4629 22.1019 23.5986 24.6195 λ=0.7 11.2685 19.009 21.5380 23.1172 24.2082
λ=0.9 12.3086 19.5703 22.2254 23.6872 24.6773 λ=0.9 11.5052 18.752 21.5877 23.1732 24.2119
SZSE TOP@1 TOP@3 TOP@5 TOP@7 TOP@9 TSE TOP@1 TOP@3 TOP@5 TOP@7 TOP@9
λ=0.1 13.2464 19.705 22.2434 23.6564 24.7304 λ=0.1 19.4737 27.5245 31.0088 32.5306 33.7523
λ=0.3 14.1484 21.0873 23.8357 25.2652 26.2770 λ=0.3 18.5924 26.811 29.9655 31.7022 32.7707
λ=0.5 15.0496 21.9856 24.4632 26.0794 27.0110 λ=0.5 17.7066 26.0258 28.8961 30.4193 31.3618
λ=0.7 12.0045 18.4121 20.7238 22.1577 23.1457 λ=0.7 14.6179 21.4850 24.2952 25.8992 26.7530
λ=0.9 12.399 18.4378 21.0680 22.4532 23.3963 λ=0.9 14.1545 21.0788 23.8008 25.3369 26.2443
Table A.2. DTW distance results for different values of λ across four stock market indices. The best (smallest)
result for each index is in bold, while the second best is underlined.
32July19,2024 arxiv main
Appendix B: Pairs trading results for query stock and TOP@1 similar Stock
In this section, we present the pairs trading results obtained by applying the trading strategy to
the query stock and its top@1 similar stock identified by SimStock and the benchmark models
(TS2VEC, Corr1, Corr2, and Coint).
table B.1 shows the terminal wealth and maximum drawdown (MDD) achieved for each query
stock and its top@1 similar stock. The best-performing model for each query stock is highlighted
in bold, while the second-best model is underlined.
SimStock achieves the highest terminal wealth for 3 out of the 12 query stocks (AAPL, CMG,
and BA). Coint outperforms for 5 query stocks (V, XOM, AMZN, META and MA), while Corr1
outperformsfor2querystocks(CVSandWFCforCorr1)andCorr2achievesthehighestwealthfor
PFE. TS2VEC achieves the highest wealth for MSFT. For the query stocks V and MA, SimStock,
TS2VEC, Corr1, and Corr2 yield the same results.
In terms of maximum drawdown, SimStock achieves the lowest MDD for 8 out of the 12 query
stocks (CMG, MSFT, WFC, V, BA, META, MA and CVS). TS2VEC exhibits the lowest MDD
for 4 query stocks (AAPL, V, AMZN and MA), while Corr1 outperforms for 2 query stocks (V and
MA). Corr2 achieves the lowest MDD for WFC, V and MA, and Coint outperforms for XOM.
TS2VEC fails to generate buy/sell signals for the query stock PFE and WFC, resulting in NaN
values for wealth and MDD. Similarly, Corr1 fails to generate signals for one of the occurrences
of the MSFT query stock. These instances show limitations in the consistency of the benchmark
models in identifying tradable opportunities.
SimStock achieves competitive performance in terms of terminal wealth and MDD for a signifi-
cant number of query stocks, indicating its effectiveness in capturing meaningful similarities that
translate into profitable trading strategies.
Query Wealth Maximum Drawdown (%)
Stock SimStock TS2VEC Corr1 Corr2 Coint SimStock TS2VEC Corr1 Corr2 Coint
AAPL 1506.88 1302.67 -797.21 766.51 NaN -2.20 -2.11 -8.55 -5.70 NaN
CMG 372.84 -541.61 -1203.23 -1502.99 -59.03 -5.18 -8.53 -13.60 -21.10 -8.63
MSFT 802.21 1275.91 847.28 509.61 1209.71 -3.82 -5.41 -7.59 -5.89 -10.76
WFC 751.44 NaN 1236.13 751.44 -2725.64 -0.04 NaN -6.82 -0.04 -31.51
V 240.25 240.25 240.25 240.25 691.54 0.00 0.00 0.00 0.00 -2.77
XOM 113.28 113.28 -192.12 -1147.63 1102.32 -3.07 -3.07 -5.47 -14.73 -1.39
PFE -309.74 NaN 296.56 1499.64 442.02 -7.48 NaN -9.35 -5.61 -7.02
AMZN 372.84 1224.03 -1741.79 660.63 2622.29 -5.18 -2.12 -22.62 -5.58 -27.15
BA 1320.62 117.68 -920.97 891.91 93.45 -3.66 -6.70 -11.95 -9.10 -22.77
META 532.60 -2046.25 1617.05 1060.88 1788.35 -1.29 -17.95 -16.03 -12.04 -26.08
MA 197.88 197.88 197.88 197.88 405.87 0.00 0.00 0.00 0.00 -6.13
CVS 727.14 -1421.22 1486.60 438.36 -1638.88 -1.38 -18.53 -9.88 -4.44 -39.44
Table B.1. Pairs trading results for the query stock and its top@1 similar stock identified by SimStock, TS2VEC,
Corr1, Corr2 and Coint. The table presents the terminal wealth and maximum drawdown (MDD) achieved for each
query stock and method combination. The best-performing method for each query stock is highlighted in bold,
while the second-best method is underlined. NaN values indicate instances where the method failed to generate
buy/sell signals.
33July19,2024 arxiv main
Appendix C: Application to index tracking of thematic ETFs
Qualitative evaluation
In this subsection, to provide a comprehensive qualitative evaluation, we examine the overlapping
and non-overlapping tickers for each model and ETF combination, along with their respective
industries, as illustrated in fig. C.1. This analysis enables us to assess the extent to which the
models capture the underlying themes of the ETFs. The experimental setup involves selecting 10
stocks to track each ETF on the US exchange, as shown in fig. 5.
For the ARKK ETF, which focuses on disruptive innovation, SimStock identifies several relevant
stocks across various sectors. The overlapping tickers include ROKU (Roku Inc., a company that
provides streaming media devices and services), SHOP (Shopify Inc., an e-commerce platform
provider), and SQ (Square Inc., a financial technology company). The non-overlapping tickers
selectedbySimStockalsoalignwiththedisruptiveinnovationtheme,includingcompaniesfrom3D
printing(MTLS:MaterialiseNV;DDD:3DSystemsCorp.),biotechnology(EDIT:EditasMedicine
Inc.), ande-commerce (MELI: MercadoLibre Inc.). Incontrast, the baselinemodels (TS2VEC,and
Corr1) either have no overlapping tickers or include stocks from less relevant industries, such as
insurance (WTM: White Mountains Insurance Group Ltd.), sports (MANU: Manchester United
plc), and real estate (FLJ: FLJ Group Ltd.).
FortheSKYYETF,whichtracksthecloudcomputingindustry,SimStockidentifiesNET(Cloud-
flareInc.,acontentdeliverynetworkandDDoSmitigationcompany),cloudstorage(DBX:Dropbox
Inc.), financial software (INTU: Intuit Inc.), Elasticsearch (ESTC: Elastic N.V.) and PAYC (Pay-
com Software Inc., a provider of human capital management software) as overlapping tickers. The
non-overlappingstocksselectedby SimStockalsoshowastrongconnectiontothecloudcomputing
theme such as software compnay (TYL: Tyler Technologies Inc.; GWRE: Guidewire Software, Inc.;
GLOB: Globant S.A.). The baseline models, however, include stocks from a wider range of indus-
tries that are less directly related to cloud computing, such as automotive (F: Ford Motor Co.),
retail (W: Wayfair Inc.), and real estate (LAMR: Lamar Advertising Co.), biotechnology (LIFE:
aTyr Pharma Inc.; VBIV: VBI Vaccines Inc.), and agriculture (VFF: Village Farms International
Inc.).
For the BOTZ ETF, which focuses on robotics and artificial intelligence, SimStock identifies
NVDA (NVIDIA Corp.) as an overlapping ticker. While the non-overlapping stocks selected by
SimStock include some companies from other sectors, such as asset management (AMG: Affiliated
Managers Group Inc.; GAM: General American Investors Co. Inc.) and building materials (MLM:
MartinMariettaMaterialsInc.),themodelalsoidentifiesseveralcompaniesfromthesemiconductor
industry (QRVO: Qorvo Inc.; ASML: ASML Holding N.V.; LSCC: Lattice Semiconductor Corp.),
which is a key enabler of robotics and AI. The baseline models, TS2VEC and Corr1, include stocks
fromadiverserangeofindustriesthatarelessdirectlyrelatedtotheroboticsandAItheme,suchas
animal healthcare (IDXX: IDEXX Laboratories Inc.), insurance (AEG: Aegon N.V.), and electric
vehicles (HYLN: Hyliion Holdings Corp.).
For the LIT ETF, which tracks the lithium and battery tech industry, SimStock identifies three
overlapping tickers: ALB (Albemarle Corp.), ALTM (Altus Midstream Co.) and LAAC (Lithium
Americas (Argentina) Corp), both of which are involved in lithium mining. However, the non-
overlapping stocks selected by SimStock come from various other industries, such as asset man-
agement (AB: AllianceBernstein Holding L.P.; APAM: Artisan Partners Asset Management Inc.;
BLK: BlackRock Inc.; KKR: KKR & Co. Inc.) and software (BB: BlackBerry Ltd.), which are
less directly related to the lithium and battery tech theme. The baseline models also struggle to
identify relevant stocks for this ETF, with no overlapping tickers and selections from industries
such as insurance (WTM: White Mountains Insurance Group Ltd.; ERIE: Erie Indemnity Co.;
ASR: Grupo Aeroportuario del Sureste, S. A. B. de C. V.), automotive (F: Ford Motor Co.; SUZ:
Suzuki Motor Corp.), and engineering & construction (MYRG: MYR Group Inc.; FRHC: Freedom
Holding Corp.).
34July19,2024 arxiv main
This qualitative analysis represent that SimStock’s top@10 stocks for each ETF generally align
better with the respective themes compared to the baseline models, particularly for the ARKK,
SKYY, and BOTZ ETFs. Howevere, the baseline models, TS2VEC and Corr1, include stocks from
a diverse range of industries that are less directly related to the specific themes of the ETFs. Corr2
shows some improvement over the other baselines, with a few overlapping tickers for ARKK and
BOTZ, but it still lags behind SimStock in terms of capturing the underlying themes of the ETFs.
Similar stocks to ARKK Similar stocks to SKYY
AAPL ADBE
ALGN ASC
AA AMM
ZZ
OD
N
CAA VSS NXR
A
CYRX
BTBT DBX
CAAS DDD DDD
CRNC ESTC
CVNA CVNA F
ED DD ID T DDD GG LA OM B FFIV
FLJ GWRE
FVRR FVRR FVRR HIVE
GLOB IAC
GREE INTU
HHS KPLT
LIN PD ROP LAMR KRNT
LIFE
MANU MULN
MELI MUSA
MTLS NET
NCTY PAYC
PAYC RH
ROKU PSNL TRSE EX SWKS
SE TYL
SHOP VBIV
SQ SQ VFF
TPL VRNS
TWLO T T TW W XL S GO T WW TM
YETI
WD
W ZBRA
WTM ZUO
SimStock TS2VEC Corr1 Corr2 SimStock TS2VEC Corr1 Corr2
Similar stocks to BOTZ Similar stocks to LIT
AEG AB AB
ALGN ALB
AMG ALTM
ANSS ANSS APAM
ASML BKNG CA GPA NM X BB NB L GB K O AA ZSR O BB
CMCO CVNA
CRNC CYRX
DDD ERIE
EBAY ETN
FBIN F
FVRR FRHC
GAM HYLN
GGG INFY
H IDY XL XN GREE LK AK AR
C
KAI KOSS
JHG MGIC
LSCC MPWR
MLM MS
MSFT MULN
MT MYRG
MTLS NIO
MXL PRSO
NVDA NVDA SNCR
QR SQVO US BQ
S
SWKS SQ WRV KO S S TU PLZ TFII TT WAS ST
T
VRT UFPT
VUZI URI
WULF VRTS
YETI WTM
SimStock TS2VEC Corr1 Corr2 SimStock TS2VEC Corr1 Corr2
Figure C.1. Top@10 stocks selected by each model to track the four thematic ETFs (ARKK, SKYY, BOTZ, and
LIT) on the US exchange. The overlapping tickers between the model selections and the actual ETF holdings are
shown in red, while the non-overlapping tickers are shown in white. SimStock demonstrates a higher number of
overlapping tickers with the ETF holdings compared to the baseline models, particularly for ARKK, SKYY, and
BOTZ, indicating its ability to identify stocks that align with the underlying themes of these ETFs.
35July19,2024 arxiv main
Appendix D: Tracking Error Volatility (TEV) Results
In this section, we present the Tracking Error Volatility (TEV) results to complement the Tracking
Error (TE) analysis discussed in the main text. TEV measures the volatility of the difference in
returns between the tracking portfolio and the target ETF, providing information into the stability
and consistency of the tracking performance.
We computed the TEV for each combination of the four thematic ETFs (ARK Innovation ETF
(ARKK), First Trust Cloud Computing ETF (SKYY), Global X Robotics & AI ETF (BOTZ),
and Global X Lithium & Battery Tech ETF (LIT)) and the four exchanges (US, SSE, SZSE, and
TSE). The TEV values were calculated for the top k similar stocks (k = 10, 15, 20, 25, 30, 35)
identified by SimStock and the baseline methods (Corr1, Corr2, TS2VEC).
table D.1 present the TEV results for ARKK, SKYY, BOTZ, and LIT, respectively. In each
table, the best performing method for each k and exchange is highlighted in bold, while the second
best is in underline. The TEV results are consistent with the findings from the TE analysis in the
main text. SimStock achieves the lowest (bold) or second lowest (underline) TEV values for the
majorityofkvaluesandexchanges,particularlyforARKK,SKYY,andBOTZ.Thisindicatesthat
the similar stocks identified by SimStock not only closely track the performance of these ETFs but
also exhibit lower volatility in the tracking error, resulting in more stable tracking portfolios.
The performance of SimStock in terms of both TE and TEV demonstrates its effectiveness in
identifying stocks that can accurately and consistently track the performance of thematic ETFs,
especially for ARKK, SKYY, and BOTZ. The lower TEV values achieved by SimStock suggest
thatitstrackingportfoliosarelesspronetolargedeviationsfromthetargetETFreturns,providing
investors with more reliable and stable tracking options.
36July19,2024 arxiv main
ARK Innovation ETF (ARKK)
Exchange Methods
TOP@10 TOP@15 TOP@20 TOP@25 TOP@30 TOP@35
Corr1 0.1524 0.0893 0.0720 0.0630 0.0540 0.0474
Corr2 0.1669 0.1141 0.1018 0.1061 0.0894 0.1042
US
TS2VEC 0.1884 0.2225 0.1852 0.1701 0.1460 0.1292
SimStock 0.1934 0.0764 0.0975 0.1785 0.1822 0.2414
Corr1 0.1747 0.1864 0.1820 0.1824 0.1833 0.1839
Corr2 0.1513 0.1414 0.1417 0.1435 0.1394 0.1406
SSE
TS2VEC 0.1633 0.1618 0.1527 0.1629 0.1637 0.1655
SimStock 0.1414 0.1419 0.1352 0.1366 0.1358 0.1429
Corr1 0.1747 0.1824 0.1709 0.1845 0.1800 0.1815
Corr2 0.1399 0.1376 0.1355 0.1382 0.1394 0.1394
SZSE
TS2VEC 0.1495 0.1456 0.1489 0.1463 0.1410 0.1415
SimStock 0.1436 0.1411 0.1410 0.1449 0.1397 0.1350
Corr1 0.1969 0.1759 0.1430 0.1388 0.1387 0.1358
Corr2 0.1165 0.1129 0.1213 0.1172 0.1149 0.1141
TSE
TS2VEC 0.1309 0.1335 0.1262 0.1279 0.1312 0.1251
SimStock 0.1117 0.1116 0.1118 0.1125 0.1076 0.1074
First Trust Cloud Computing ETF (SKYY)
Exchange Methods
TOP@10 TOP@15 TOP@20 TOP@25 TOP@30 TOP@35
Corr1 0.1150 0.1406 0.1379 0.1245 0.1058 0.0993
Corr2 0.2410 0.2298 0.2011 0.1916 0.1586 0.1455
US
TS2VEC 0.1849 0.1655 0.1407 0.1397 0.1387 0.1330
SimStock 0.0616 0.0364 0.0561 0.0653 0.0541 0.0521
Corr1 0.1699 0.1929 0.1993 0.2014 0.2035 0.2134
Corr2 0.1490 0.1386 0.1303 0.1118 0.1133 0.1188
SSE
TS2VEC 0.1897 0.1975 0.2151 0.2074 0.2013 0.1871
SimStock 0.1106 0.0921 0.1128 0.1072 0.1074 0.1167
Corr1 0.2248 0.2183 0.2123 0.2156 0.2106 0.2042
Corr2 0.1103 0.1143 0.1164 0.1122 0.1212 0.1239
SZSE
TS2VEC 0.1642 0.1796 0.1684 0.1689 0.1702 0.1594
SimStock 0.1103 0.1130 0.1157 0.1105 0.1047 0.1020
Corr1 0.1308 0.1363 0.1239 0.1429 0.1450 0.1472
Corr2 0.0723 0.0846 0.0762 0.0871 0.0818 0.0810
TSE
TS2VEC 0.1066 0.1142 0.1153 0.1136 0.1108 0.1215
SimStock 0.0842 0.0703 0.0704 0.0640 0.0570 0.0625
Global X Robotics & AI ETF (BOTZ)
Exchange Methods
TOP@10 TOP@15 TOP@20 TOP@25 TOP@30 TOP@35
Corr1 0.1599 0.1030 0.0744 0.0758 0.0729 0.0774
Corr2 0.0807 0.0971 0.0872 0.0892 0.0951 0.0865
US
TS2VEC 0.1023 0.1464 0.1458 0.1218 0.1221 0.1338
SimStock 0.0359 0.0360 0.0465 0.0535 0.0551 0.0548
Corr1 0.1326 0.1354 0.1379 0.1337 0.1315 0.1348
Corr2 0.0810 0.0846 0.0814 0.0819 0.0846 0.0887
SSE
TS2VEC 0.1274 0.1204 0.1196 0.1315 0.1251 0.1225
SimStock 0.0664 0.0745 0.0760 0.0828 0.0782 0.0755
Corr1 0.1236 0.1143 0.1193 0.1250 0.1333 0.1369
Corr2 0.0910 0.0884 0.0868 0.0836 0.0837 0.0808
SZSE
TS2VEC 0.0914 0.0812 0.0855 0.0815 0.0804 0.0890
SimStock 0.0808 0.0875 0.1083 0.1030 0.1044 0.0991
Corr1 0.0688 0.0680 0.0729 0.0757 0.0724 0.0643
Corr2 0.0773 0.0890 0.0837 0.0830 0.0864 0.0818
TSE
TS2VEC 0.0970 0.0926 0.0834 0.0861 0.0804 0.0814
SimStock 0.0604 0.0730 0.0711 0.0792 0.0794 0.0764
Global X Lithium & Battery Tech ETF (LIT)
Exchange Methods
TOP@10 TOP@15 TOP@20 TOP@25 TOP@30 TOP@35
Corr1 0.1548 0.1744 0.1605 0.1708 0.1805 0.1706
Corr2 0.0935 0.1440 0.1450 0.1433 0.1677 0.1246
US
TS2VEC 0.0819 0.1091 0.0858 0.0869 0.1051 0.0996
SimStock 0.0389 0.0513 0.0501 0.0492 0.0560 0.0536
Corr1 0.0840 0.0752 0.0729 0.0701 0.0724 0.0714
Corr2 0.0843 0.0837 0.0804 0.0843 0.0883 0.0901
SSE
TS2VEC 0.0702 0.0781 0.0764 0.0788 0.0817 0.0803
SimStock 0.0945 0.1193 0.1031 0.0942 0.1060 0.1114
Corr1 0.0565 0.0567 0.0617 0.0609 0.0622 0.0679
Corr2 0.2148 0.1898 0.1643 0.1509 0.1512 0.1399
SZSE
TS2VEC 0.0629 0.0661 0.0704 0.0723 0.0773 0.0821
SimStock 0.2200 0.2361 0.2102 0.2057 0.1963 0.1817
Corr1 0.1522 0.1718 0.1704 0.1839 0.1713 0.1556
Corr2 0.1768 0.1807 0.1603 0.1575 0.1851 0.1771
TSE
TS2VEC 0.1488 0.1372 0.1444 0.1447 0.1318 0.1426
SimStock 0.1580 0.1750 0.1715 0.1808 0.1837 0.1772
Table D.1. Tracking errors volatility(TEV) of SimStock and baseline methods for tracking the performance of four
thematic ETFs (ARKK, SKYY, BOTZ, and LIT) using top k similar stocks from the US, SSE, SZSE, and TSE
exchanges. The best performing method for each k and exchange is highlighted in black, while the second best is in
underscore.
37July19,2024 arxiv main
Appendix E: Application to Portfolio optimization I
Performance Statistics of Major Stock Indices
In this section, we presents the performance statistics of four major stock indices: S&P 500, JPX
Prime 150, SSE 100, and SZSE 100 in table E.1. The evaluation period spans from January 2023 to
Feb 2024. The S&P 500 and JPX Prime 150 indices exhibited positive returns during this period,
while the SSE 100 and SZSE 100 indices experienced negative returns.
The S&P 500 index, which represents the U.S. stock market, generated an arithmetic return
of 4.87% and a geometric return of 2.71%. The cumulative return over the evaluation period was
13.02%.Theannualizedstandarddeviationof30.84%indicatesthehighvolatilityoftheindex.The
maximumdrawdownof-31.32%highlightsthesubstantialdeclinetheindexexperiencedduringthe
period. The monthly 95% Value at Risk (VaR) of -11.9% indicates the potential loss that could be
incurred with a 95% confidence level. The Sharpe ratio of 0.06 suggests a low risk-adjusted return
for the S&P 500 index.
The JPX Prime 150 index, representing the Japanese stock market, outperformed the other
indices with an arithmetic return of 13.69% and a geometric return of 11.61%. The cumulative
return over the evaluation period was 49.59%. The annualized standard deviation of 27.18% was
lowerthanthatoftheS&P500index,indicatingrelativelylowervolatility.Theannualizedskewness
and kurtosis values of -0.04 and 2.89, respectively, were similar to those of the S&P 500 index. The
maximum drawdown of -23.73% was less severe compared to the other indices. The monthly 95%
VaR of -9.94% was also lower than that of the S&P 500 index. The Sharpe ratio of 0.58 indicates
a higher risk-adjusted return for the JPX Prime 150 index compared to the S&P 500 index.
The SSE 100 and SZSE 100 indices, representing the Chinese stock market, experienced negative
returns during the evaluation period. The SSE 100 index had an arithmetic return of -5.36% and a
geometric return of -6.99%, resulting in a cumulative return of -11.16%. The SZSE 100 index had
an arithmetic return of -7.81% and a geometric return of -9.86%, resulting in a cumulative return
of -21.02%. Both indices exhibited higher volatility compared to the S&P 500 and JPX Prime 150
indices, with annualized standard deviations of 39.13% and 37.39%, respectively. The annualized
skewness and kurtosis values were close to zero and slightly higher than three, respectively, indi-
cating a relatively symmetric return distribution with slightly heavier tails compared to a normal
distribution. The maximum drawdowns of -45.08% and -46.1% for the SSE 100 and SZSE 100
indices, respectively, were more severe compared to the S&P 500 and JPX Prime 150 indices. The
monthly 95% VaR values of -16.24% and -16.16% were also higher, indicating a higher potential
loss. The Sharpe ratios of -0.35 and -0.48 for the SSE 100 and SZSE 100 indices, respectively,
suggest poor risk-adjusted returns during the evaluation period.
EvaluationMethod Exchange
CovarianceMethod S&P500 JPXPrime150 SSE100 SZSE100
ArithmeticReturn(%) 4.87 13.69 -5.36 -7.81
GeometricReturn(%) 2.71 11.61 -6.99 -9.86
CumulativeReturn(%) 13.02 49.59 -11.16 -21.02
AnnualizedSD(%) 30.84 27.18 39.13 37.39
AnnualizedSkewness -0.03 -0.04 0.04 0.01
AnnualizedKurtosis 2.81 2.89 3.12 3.24
MaximumDrawdown(%) -31.32 -23.73 -45.08 -46.1
Monthly95%VaR(%) -11.9 -9.94 -16.24 -16.16
SharpeRatio 0.06 0.58 -0.35 -0.48
Table E.1. Performance statistics of major stock indices from January 2023 to February 2024. The table presents
various return and risk measures for the S&P 500, JPX Prime 150, SSE 100, and SZSE 100 indices. The S&P 500
and JPX Prime 150 indices exhibited positive returns, while the SSE 100 and SZSE 100 indices experienced
negative returns during the evaluation period.
38July19,2024 arxiv main
Performance Metrics for Portfolio Optimization with 10 and 50 Stocks
This appendix presents the performance metrics for MVO with 10 and 50 stocks in the S&P 500
and JPX Prime 150 universes. The four portfolio construction methods evaluated are Simstock
Embedding (SS), Historical Covariance (HC), Shrinkage Method (SM), and Gerber Statistic (GS).
We investigate the performance of the four covariance estimation methods (SS, HC, SM, GS,
TS) for constructing portfolios with 10 and 50 stocks in the S&P 500 and JPX Prime 150 universes
at different target risk levels (24%, 27%, 30%, and 33%).
Tables C.3 and table E.3 present the performance metrics for 10-stock portfolios in the S&P
500 and JPX Prime 150, respectively. In both universes, the SS method generally outperforms the
other methods across all risk target levels, achieving higher returns while maintaining similar risk
measures. As the risk target level increases, the returns and risk measures for all methods also
increase.
Tables C.5 and table E.5 show the performance metrics for 50-stock portfolios in the S&P 500
and JPX Prime 150, respectively. Similar to the 10-stock portfolios, the SS method demonstrates
superior performance compared to the other methods across all risk target levels in both universes.
The HC method has the second-best performance, followed by the SM, GS and TS methods. As
the risk target level increases, the returns and risk measures for all methods increase.
The consistent outperformance of the Simstock Embedding (SS) method in terms of returns for
both 10-stock and 50-stock portfolios in the S&P 500 and JPX Prime 150 universes highlights its
potential as an effective stock embedding technique for portfolio optimization.
39July19,2024 arxiv main
40
)%33(ytilitaloVtegraT
)%03(ytilitaloVtegraT
)%72(ytilitaloVtegraT
)%42(ytilitaloVtegraT
skcotS01—005P&S
ST
SG
MS
CH
SS
ST
SG
MS
CH
SS
ST
SG
MS
CH
SS
ST
SG
MS
CH
SS
dohteMecnairavoC
36.7
31.8
72.8
21.8
48.8
36.7
17.7
8.7
17.7
65.8
20.6
72.7
72.7
53.7
83.8
82.5
79.6
48.6
58.6
49.7
)%(nruteRcitemhtirA
05.6
77.6
89.6
58.6
13.7
5.6
15.6
86.6
16.6
81.7
48.4
52.6
43.6
14.6
1.7
36.3
11.6
80.6
50.6
87.6
)%(nruteRcirtemoeG
87.02
35.52
3.62
17.52
25.72
87.02
93.42
50.52
37.42
97.62
42.51
91.32
94.32
37.32
62.62
92.11
23.22
11.22
11.22
36.42
)%(nruteRevitalumuC
55.92
29.82
76.82
44.82
49.92
55.92
97.72
74.72
13.72
11.92
23.82
94.62
11.62
60.62
81.82
33.72
60.52
75.42
86.42
22.72
)%(DSdezilaunnA
21.0-
80.0-
80.0-
80.0-
01.0-
21.0-
80.0-
70.0-
80.0-
90.0-
11.0-
60.0-
60.0-
70.0-
80.0-
90.0-
30.0-
30.0-
60.0-
60.0-
ssenwekSdezilaunnA
39.2
51.3
51.3
51.3
51.3
39.2
11.3
11.3
21.3
21.3
59.2
70.3
70.3
80.3
90.3
89.2
40.3
40.3
60.3
40.3
sisotruKdezilaunnA
72.62-
58.72-
64.72-
94.72-
95.82-
72.62-
39.62-
14.62-
25.62-
39.72-
57.62-
37.52-
32.52-
82.52-
31.72-
19.62-
4.42-
40.42-
22.42-
70.62-
)%(nwodwarDmumixaM
45.11-
58.01-
67.01-
7.01-
82.11-
45.11-
94.01-
63.01-
03.01-
00.11-
12.11-
60.01-
39.9-
29.9-
26.01-
9.01-
75.9-
93.9-
34.9-
42.01-
)%(RaV%59ylhtnoM
42.0
32.0
42.0
32.0
42.0
42.0
22.0
32.0
32.0
52.0
61.0
22.0
32.0
32.0
52.0
70.0
32.0
32.0
22.0
42.0
oitaReprahS
09.6
62.7
42.7
12.7
32.7
09.6
52.7
12.7
51.7
22.7
27.6
51.7
90.7
00.7
13.7
45.6
49.6
88.6
18.6
51.7
revonruTdezilaunnA
ecnairavoc
lacirotsih
,)SS(gniddebme
kcotsmiS
:051
emirP
XPJ
eht
ni
sdohtem
noitcurtsnoc
oiloftrop
ruof
rof
scirtem
ecnamrofrep
eht
stneserp
elbat
sihT
.2.E
elbaT
ehT
.%33
dna
,%03
,%72
,%42
:slevel
tegrat
ksir
tnereffid
ruof
rof
dezimitpo
erew
soiloftrop
ehT
.)SG(
citsitats
rebreG
dna
,)MS(
dohtem
egaknirhs
,)CH(
rof
etar
eerf-ksir
eht
sa
desu
saw
etar
lliB
yrusaerT
.S.U
htnom-3
ehT
.4202
yraurbeF
ot
2202
yraunaJ
morf
doirep
gnitset
lluf
eht
revo
detaulave
saw
ecnamrofrep
.tneve
gnicnalaber
hcae
rof
emulov
dedart
eht
fo stniop
sisab
01
sa
deledom
erew
stsoc
noitcasnarT
.snoitaluclac
ecnamrofrep
)%33(ytilitaloVtegraT
)%03(ytilitaloVtegraT
)%72(ytilitaloVtegraT
)%42(ytilitaloVtegraT
skcotS01—051emirPMPJ
ST
SG
MS
CH
SS
ST
SG
MS
CH
SS
ST
SG
MS
CH
SS
ST
SG
MS
CH
SS
dohteMecnairavoC
16.31
55.71
24.71
4.71
46.71
30.31
7.61
47.61
34.61
95.61
93.31
55.51
76.51
34.51
91.61
46.21
4.41
15.41
14.41
36.51
)%(nruteRcitemhtirA
90.31
23.51
71.51
23.51
43.51
84.11
17.41
86.41
6.41
55.41
63.21
68.31
29.31
88.31
82.41
07.11
60.31
1.31
71.31
49.31
)%(nruteRcirtemoeG
56.44
66.16
90.16
1.16
72.16
35.83
20.85
89.75
99.65
99.65
48.14
42.35
44.35
40.35
90.55
73.93
96.84
58.84
21.94
35
)%(nruteRevitalumuC
13.92
59.03
98.03
16.03
79.92
88.82
72.92
81.92
98.82
56.82
58.72
12.72
90.72
10.72
43.72
56.62
90.52
8.42
50.52
39.52
)%(DSdezilaunnA
81.0
23.0
43.0
23.0
42.0
22.0
3.0
33.0
23.0
42.0
81.0
72.0
3.0
82.0
12.0
51.0
12.0
42.0
52.0
81.0
ssenwekSdezilaunnA
49.2
35.3
85.3
15.3
96.3
89.2
54.3
25.3
64.3
37.3
50.3
83.3
34.3
83.3
46.3
80.3
3.3
33.3
3.3
55.3
sisotruKdezilaunnA
76.42-
63.52-
42.52-
87.42-
44.42-
98.32-
90.42-
98.32-
83.32-
83.32-
86.22-
6.22-
92.22-
22-
73.22-
35.22-
88.02-
65.02-
25.02-
1.12-
)%(nwodwarDmumixaM
22.01-
75.01-
5.01-
64.01-
81.01-
86.9-
1.01-
01-
79.9-
87.9-
83.9-
84.9-
92.9-
14.9-
53.9-
89.8-
18.8-
16.8-
67.8-
38.8-
)%(RaV%59ylhtnoM
35.0
26.0
26.0
36.0
46.0
74.0
36.0
36.0
36.0
46.0
05.0
46.0
46.0
46.0
66.0
25.0
56.0
66.0
56.0
86.0
oitaReprahS
04.7
16.7
36.7
86.7
57.7
84.7
56.7
46.7
17.7
75.7
23.7
36.7
95.7
76.7
54.7
74.7
35.7
74.7
65.7
82.7
revonruTdezilaunnA
ecnairavoc
lacirotsih
,)SS(gniddebme
kcotsmiS
:051
emirP
XPJ
eht
ni
sdohtem
noitcurtsnoc
oiloftrop
ruof
rof
scirtem
ecnamrofrep
eht
stneserp
elbat
sihT
.3.E
elbaT
ehT
.%33
dna
,%03
,%72
,%42
:slevel
tegrat
ksir
tnereffid
ruof
rof
dezimitpo
erew
soiloftrop
ehT
.)SG(
citsitats
rebreG
dna
,)MS(
dohtem
egaknirhs
,)CH(
rof
etar
eerf-ksir
eht
sa
desu
saw
etar
lliB
yrusaerT
.S.U
htnom-3
ehT
.4202
yraurbeF
ot
2202
yraunaJ
morf
doirep
gnitset
lluf
eht
revo
detaulave
saw
ecnamrofrep
.tneve
gnicnalaber
hcae
rof
emulov
dedart
eht
fo stniop
sisab
01
sa
deledom
erew
stsoc
noitcasnarT
.snoitaluclac
ecnamrofrepJuly19,2024 arxiv main
41
)%33(ytilitaloVtegraT
)%03(ytilitaloVtegraT
)%72(ytilitaloVtegraT
)%42(ytilitaloVtegraT
skcotS05—005P&S
ST
SG
MS
CH
SS
ST
SG
MS
CH
SS
ST
SG
MS
CH
SS
ST
SG
MS
CH
SS
dohteMecnairavoC
71.31
75.31
87.31
30.31
78.31
66.21
76.21
7.21
1.21
28.21
36.11
95.11
83.11
51.11
68.11
56.01
45.01
28.9
72.01
14.01
)%(nruteRcitemhtirA
23.11
72.21
74.21
37.11
75.21
62.11
65.11
66.11
10.11
47.11
93.01
17.01
75.01
42.01
29.01
49.8
48.9
91.9
5.9
95.9
)%(nruteRcirtemoeG
59.73
67.44
44.54
54.24
6.54
57.73
17.14
39.14
14.93
3.24
45.43
60.83
5.73
72.63
41.93
92.92
94.43
60.23
94.33
51.43
)%(nruteRevitalumuC
31.33
25.33
74.33
70.33
29.33
82.23
46.13
45.13
83.13
43.23
90.13
85.92
24.92
76.92
6.03
13.03
35.72
2.72
39.72
92
)%(DSdezilaunnA
91.0-
92.0-
13.0-
92.0-
62.0-
91.0-
62.0-
72.0-
72.0-
32.0-
12.0-
32.0-
42.0-
52.0-
2.0-
71.0-
81.0-
91.0-
22.0-
71.0-
ssenwekSdezilaunnA
79.2
3.3
83.3
63.3
42.3
78.2
13.3
4.3
73.3
42.3
48.2
72.3
63.3
53.3
81.3
38.2
91.3
23.3
82.3
21.3
sisotruKdezilaunnA
75.62-
58.72-
43.72-
86.72-
92.72-
51.62-
35.62-
49.52-
6.62-
33.62-
81.62-
79.42-
66.42-
44.52-
97.52-
40.62-
44.32-
53.32-
63.42-
4.52-
)%(nwodwarDmumixaM
04.21-
97.11-
8.11-
86.11-
60.21-
22.21-
92.11-
3.11-
2.11-
46.11-
38.11-
28.01-
87.01-
97.01-
82.11-
83.11-
81.01-
51.01-
63.01-
69.01-
)%(RaV%59ylhtnoM
64.0
74.0
74.0
44.0
84.0
54.0
64.0
64.0
34.0
64.0
04.0
54.0
44.0
24.0
44.0
63.0
34.0
93.0
14.0
93.0
oitaReprahS
28.7
45.8
55.8
36.8
7.8
40.8
6.8
76.8
66.8
48.8
12.8
75.8
47.8
36.8
9.8
01.8
5.8
96.8
75.8
49.8
revonruTdezilaunnA
ecnairavoc
lacirotsih
,)SS(gniddebme
kcotsmiS
:051
emirP
XPJ
eht
ni
sdohtem
noitcurtsnoc
oiloftrop
ruof
rof
scirtem
ecnamrofrep
eht
stneserp
elbat
sihT
.4.E
elbaT
ehT
.%33
dna
,%03
,%72
,%42
:slevel
tegrat
ksir
tnereffid
ruof
rof
dezimitpo
erew
soiloftrop
ehT
.)SG(
citsitats
rebreG
dna
,)MS(
dohtem
egaknirhs
,)CH(
rof
etar
eerf-ksir
eht
sa
desu
saw
etar
lliB
yrusaerT
.S.U
htnom-3
ehT
.4202
yraurbeF
ot
2202
yraunaJ
morf
doirep
gnitset
lluf
eht
revo
detaulave
saw
ecnamrofrep
.tneve
gnicnalaber
hcae
rof
emulov
dedart
eht
fo
stniop
sisab
01
sa
deledom
erew
stsoc
noitcasnarT
.snoitaluclac
ecnamrofrep
)%33(ytilitaloVtegraT
)%03(ytilitaloVtegraT
)%72(ytilitaloVtegraT
)%42(ytilitaloVtegraT
skcotS05—051emirPMPJ
ST
SG
MS
CH
SS
ST
SG
MS
CH
SS
ST
SG
MS
CH
SS
ST
SG
MS
CH
SS
dohteMecnairavoC
48.51
52.12
39.12
39.02
94.32
64.51
22.02
2.12
43.02
47.22
23.51
99.81
97.91
30.02
3.12
96.51
55.71
6.81
7.91
3.02
)%(nruteRcitemhtirA
47.41
68.91
43.02
25.91
89.12
28.31
69.81
86.91
40.91
72.12
61.41
8.71
83.81
97.81
98.91
00.41
15.61
13.71
25.81
9.81
)%(nruteRcirtemoeG
40.15
24.57
72.87
12.47
49.58
44.74
98.07
67.47
7.17
1.28
77.84
15.56
66.86
44.07
16.57
51.84
9.95
97.36
2.96
79.07
)%(nruteRevitalumuC
52.03
34.13
24.13
56.13
10.33
82.92
20.03
89.92
52.03
25.13
23.82
43.82
80.82
77.82
98.92
58.62
45.62
41.62
73.72
31.82
)%(DSdezilaunnA
30.0-
70.0-
20.0-
60.0-
30.0
80.0-
10.0-
20.0
30.0-
30.0
90.0-
10.0
20.0
30.0-
20.0
01.0-
10.0-
10.0-
00.0
30.0-
ssenwekSdezilaunnA
26.2
19.2
19.2
19.2
9.2
36.2
88.2
39.2
88.2
98.2
66.2
78.2
09.2
88.2
88.2
26.2
97.2
38.2
68.2
98.2
sisotruKdezilaunnA
90.52-
76.32-
76.32-
93.42-
97.32-
49.42-
54.22-
45.22-
21.32-
99.22-
43.32-
16.12-
85.12-
99.12-
14.22-
95.32-
46.02-
74.02-
75.02-
74.12-
)%(nwodwarDmumixaM
15.11-
81.11-
38.01-
53.11-
22.11-
99.01-
15.01-
22.01-
8.01-
47.01-
95.01-
78.9-
55.9-
32.01-
52.01-
71.01-
72.9-
9.8-
86.9-
37.9-
)%(RaV%59ylhtnoM
26.0
88.0
19.0
58.0
59.0
26.0
88.0
29.0
78.0
69.0
46.0
68.0
19.0
9.0
39.0
86.0
58.0
19.0
39.0
39.0
oitaReprahS
08.8
09.8
79.8
89.8
68.8
67.8
39.8
00.9
10.9
19.8
75.8
99.8
80.9
19.8
00.9
76.8
69.8
89.8
77.8
99.8
revonruTdezilaunnA
ecnairavoc
lacirotsih
,)SS(gniddebme
kcotsmiS
:051
emirP
XPJ
eht
ni
sdohtem
noitcurtsnoc
oiloftrop
ruof
rof
scirtem
ecnamrofrep
eht
stneserp
elbat
sihT
.5.E
elbaT
ehT
.%33
dna
,%03
,%72
,%42
:slevel
tegrat
ksir
tnereffid
ruof
rof
dezimitpo
erew
soiloftrop
ehT
.)SG(
citsitats
rebreG
dna
,)MS(
dohtem
egaknirhs
,)CH(
rof
etar
eerf-ksir
eht
sa
desu
saw
etar
lliB
yrusaerT
.S.U
htnom-3
ehT
.4202
yraurbeF
ot
2202
yraunaJ
morf
doirep
gnitset
lluf
eht
revo
detaulave
saw
ecnamrofrep
.tneve
gnicnalaber
hcae
rof
emulov
dedart
eht
fo
stniop
sisab
01
sa
deledom
erew
stsoc
noitcasnarT
.snoitaluclac
ecnamrofrepJuly19,2024 arxiv main
Appendix F: Application to Portfolio optimization II
Robustness of SimStock covariance construction for portfolio optimization
To assess the robustness of the SimStock embedding approach for constructing the covariance
matrix in portfolio optimization, we compare the ex-post efficient frontiers of portfolios based on
differentchoicesforcomputingthecovariancematrixfromtheembeddings.Specifically,weconsider
the following methods:
• L2:PairwiseL2distancesbetweenstockembeddings,scaledtotherange[-1,1]usingmax-min
normalization (the method used in the main text).
• L1:PairwiseL1distancesbetweenstockembeddings,scaledtotherange[-1,1]usingmax-min
normalization.
• CORR: Pearson correlation coefficients between stock embeddings.
• CKA(Kornblithet al.2019):CenteredKernelAlignment(CKA)withalinearkernelbetween
stock embeddings.
fig.F.1presentstheex-postefficientfrontiersforportfoliosofvarioussizes(10,30,and50stocks)
from both the S&P500 and JPX Prime 150 universes, constructed using the different covariance
matrixcomputationmethods.fig.F.1presentstheex-postefficientfrontiersforportfoliosofvarious
sizes (10, 30, and 50 stocks) from both the S&P500 and JPX Prime 150 universes, constructed
using the different covariance matrix computation methods.
The results show that the choice of method for constructing the covariance matrix from the
SimStock embeddings does impact the overall portfolio optimization performance. In most cases,
the L2 distance method (used in the main text) achieves the best performance, followed by the L1
distance, CKA, and CORR methods. The superiority of the L2 and L1 distance methods suggests
that capturing the dissimilarity between stock embeddings is more effective for constructing the
covariance matrix than directly using correlation coefficients or kernel alignment.
42July19,2024 arxiv main
S&P500 | 10 Stocks JPX Prime 150 | 10 Stocks
8 16
15
7
14
6
13
26 27 28 29 30 31 32 33 26 28 30 32 34
S&P500 | 30 Stocks JPX Prime 150 | 30 Stocks
13
22
12 21
20
11
19
10
18
9 17
28 30 32 34 36 28 30 32 34 36 38
S&P500 | 50 Stocks JPX Prime 150 | 50 Stocks
16
22
15
21 14
13 20
12
19
11
18
10
30 32 34 36 38 28 30 32 34 36 38
Annualized Volatility (%) Annualized Volatility (%)
L2 L1 CORR CKL
Figure F.1. Ex-post efficient frontiers displaying annualized return and volatility of portfolios optimized using dif-
ferent methods for computing the covariance matrix from SimStock embeddings.
43
)%(
nruteR
dezilaunnA
)%(
nruteR
dezilaunnA
)%(
nruteR
dezilaunnA