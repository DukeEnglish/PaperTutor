NeuralDEM – Real-time Simulation of
Industrial Particulate Flows
BenediktAlkin†,∗,1,2 TobiasKronlachner†,∗,1,3 SamuelePapa†,‡,1,4,5
StefanPirker3 ThomasLichtenegger1,3 JohannesBrandstetter@,1,2
1NXAIGmbH,Linz,Austria
2ELLISUnitLinz,InstituteforMachineLearning,JKULinz,Austria
3DepartmentofParticulateFlowModelling,JKULinz,Austria
4UniversityofAmsterdam,Amsterdam,Netherlands
5TheNetherlandsCancerInstitute,Amsterdam,Netherlands
Abstract
Advancementsincomputingpowerhavemadeitpossibletonumericallysimulate
large-scale fluid-mechanical and/or particulate systems, many of which are inte-
gral to core industrial processes. Among the different numerical methods avail-
able,thediscreteelementmethod(DEM)providesoneofthemostaccuraterep-
resentationsofawiderangeofphysicalsystemsinvolvinggranularanddiscontin-
uousmaterials. Consequently,DEMhasbecomeawidelyacceptedapproachfor
tackling engineering problemsconnected to granular flows and powder mechan-
ics. Additionally, DEM can be integrated with grid-based computational fluid
dynamics (CFD) methods, enabling the simulation of chemical processes taking
place,e.g.,influidizedbeds.However,DEMiscomputationallyintensivebecause
oftheintrinsicmultiscalenatureofparticulatesystems, restrictingeitherthedu-
rationofsimulationsorthenumberofparticlesthatcanbesimulated. Moreover,
thenon-trivialrelationshipbetweenmicroscopicDEMandmacroscopicmaterial
parametersnecessitatesextensivecalibrationprocedures. Towardsthisend,Neu-
ralDEMpresentsafirstend-to-endapproachtoreplaceslowandcomputationally
demandingnumericalDEMroutineswithfast,adaptabledeeplearningsurrogates.
NeuralDEM is capable of picturing long-term transport processes across differ-
entregimesusingmacroscopicobservableswithoutanyreferencetomicroscopic
modelparameters.First,NeuralDEMtreatstheLagrangiandiscretizationofDEM
as an underlying continuous field, while simultaneously modeling macroscopic
behavior directly as additional auxiliary fields. Second, NeuralDEM introduces
multi-branchneuraloperatorsscalabletoreal-timemodelingofindustrially-sized
scenarios–fromslowandpseudo-steadytofastandtransient.Suchscenarioshave
previously posed insurmountable challenges for deep learning models. Notably,
ourlargestNeuralDEMmodelisabletofaithfullymodelcoupledCFD-DEMflu-
idizedbedreactorsof160kCFDcellsand500kDEMparticlesfortrajectoriesof
28s which amounts to 2800 machine learning timesteps. NeuralDEM will open
manynewdoorstoadvancedengineeringandmuchfasterprocesscycles.
Projectpage: https://nx-ai.github.io/NeuralDEM/.
Thisworkisapreprint.
†corecontributor, ∗equalcontribution, ‡workdoneduringinternshipatNXAI.
@Correspondenceto:brandstetter@ml.jku.at, johannes.brandstetter@nx-ai.com
4202
voN
41
]GL.sc[
1v87690.1142:viXraContents
1 Introduction 3
2 Background 5
2.1 Discreteelementmethod . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 5
2.1.1 Coupledparticle-fluidsimulations . . . . . . . . . . . . . . . . . . . . . . 6
2.2 Neuraloperatorslearningforscientificandengineeringapplications . . . . . . . . 7
2.2.1 Discretizationconvergence . . . . . . . . . . . . . . . . . . . . . . . . . . 8
2.2.2 Deeplearningforparticulatesystems . . . . . . . . . . . . . . . . . . . . 8
3 NeuralDEM 8
3.1 Physicsrepresentation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 9
3.2 Multi-branchneuraloperators . . . . . . . . . . . . . . . . . . . . . . . . . . . . 10
3.3 Scalarparameterconditioning . . . . . . . . . . . . . . . . . . . . . . . . . . . . 11
3.4 Flexiblemodelarchitectureforvariablesimulationuse-cases. . . . . . . . . . . . . 12
4 Numericalexperiments 13
4.1 Simulationsetupandproblemscale . . . . . . . . . . . . . . . . . . . . . . . . . 13
4.2 Hopper . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 14
4.2.1 Multi-branchneuraloperatorarchitectureforhopperexperiments . . . . . 16
4.2.2 Flowregimeandvisualizationviaoccupancyandtransportfield . . . . . . 16
4.2.3 Outflowrate,drainagetime,andresidualmaterialviaoccupancyfield . . . 16
4.2.4 Residencetime . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 17
4.2.5 Generalizationcapabilities . . . . . . . . . . . . . . . . . . . . . . . . . . 18
4.2.6 Macroscopicparameterconditioning. . . . . . . . . . . . . . . . . . . . . 18
4.2.7 Refillingoperationmode . . . . . . . . . . . . . . . . . . . . . . . . . . . 20
4.2.8 Runtime: NeuralDEMenablesreal-timesimulations . . . . . . . . . . . . 20
4.3 Fluidizedbedreactors . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 21
4.3.1 Multi-branchneuraloperatorarchitectureforfluidizedbedreactorexperiments 21
4.3.2 Modelingthedynamicsofthesystem . . . . . . . . . . . . . . . . . . . . 21
4.3.3 Physicsevaluation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 23
4.3.4 Mixingbehavior . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 24
4.3.5 Runtime: NeuralDEMenablesreal-timesimulations . . . . . . . . . . . . 25
5 Discussion 25
5.1 Conclusion . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 25
5.2 Existingmodelinglimitations . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 25
5.3 Futurework . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 26
6 Acknowledgements 26
2Particle-based

numerical simulation
NeuralDEM field-based

physics representation
Multi-physics (CFD-DEM)

NeuralDEM simulation of fluid velocity
numerical simulation
NeuralDEM

framework NeuralDEM simulation of particle mixing
Particle simulation
 Fluid simulation

(500k particles) (160k cells)
Figure1: NeuralDEMpresentsanend-to-endapproachtoreplacediscreteelementmethod(DEM)
routines and coupled multiphysics simulations with deep learning surrogates. Top: Hopper simu-
lations. NeuralDEM treats inputs and outputs as continuous fields, while modeling macroscopic
behaviordirectlyasadditionalauxiliaryfields. Bottom: Fluidizedbedreactors. NeuralDEMisbuilt
tomodelcomplexmultiphysicssimulations,i.e.,scenarioswhichnecessitatetheinteractionofDEM
andcomputationalfluiddynamics(CFD).Forfluidizedbedreactors,airentersthedomainfromthe
bottomplane(CFDproblem)andpushestheparticlesup(DEMproblem). Bothpartsandtheinter-
actionthereofismodeledviathenewmulti-branchneuraloperatorapproachofNeuralDEM.
1 Introduction
Inrecentyears,real-timenumericalsimulations[2,20,34,41,100],haveemergedasnewmodeling
paradigm,enablingimmediateanalysisanddecision-makingbasedonlivedataandconditions. Un-
liketraditionalsimulations,whichmaytakehoursorevendaystorun,real-timesimulationsprovide
instantaneousfeedback,allowinguserstointeractwithandadjustparametersonthefly. Moreover,
inengineering,fastsimulationsaredrivingthedesignofsaferandmoreefficientstructuresandma-
chinesbyaccuratelypredictingtheirbehaviorunderdifferentconditions,therebyallowingextensive
scansofvastparameterspaces,andeliminatingtheneedforexpensivephysicalprototypes.
3Especiallyfornumericallyexpensiveproblemsasfound,e.g.,incomputationalparticlemechanics
and/or fluid dynamics (CFD), selecting the appropriate numerical simulation tool requires weigh-
ingaccuracyagainstspeed. Amongthedifferentnumericalmethodsavailable,thediscreteelement
method(DEM)[23]providesoneofthemostaccuraterepresentationsofawiderangeofphysical
systemsinvolvingparticulatematter,bytrackingandcomputingthebehaviorofeachgrain. Conse-
quently,DEMhasbecomeawidelyacceptedapproachfortacklingengineeringproblemsconnected
todisperseanddiscontinuousmaterials,particularlyingranularflowsandpowdermechanics. Typ-
icaltargetareascompriseminingandmineralprocessing[7,71,103],steelmaking[4,5,61],phar-
maceutics [11, 29, 33], agriculture and food processing [92, 99, 106], and additive manufacturing
andpowderbedfusion[17,73,104].
However,theinherentmultiscalenatureofparticulatesystemsmakesDEMcomputationallycostly
inseveralwell-knownregards. (i)Large-scalegranularflowsconsistofahugenumberofparticles,
eachinteractingwiththesurroundingones. Foreverygrain,itsequationofmotion(EOM)needsto
be solved in a coupled fashion. Current DEM studies dealing with process-relevant problems use
many100k[24,53]orevenafewmillion[25]particles,while,e.g.,anindustrialshaftfurnaceorflu-
idizedbedreactorcontainsseveralordersofmagnitudemore. AlthoughGPU-basedcodes[28,32]
canhandlemoregrainsthanthoseonCPUsandaresignificantlyfasterforthesameproblemsize,
theyarestillfarawayfromconvenientruntimesfordemandingindustrialprocesses,especiallyifa
fluidphaseisinvolved[65,101]. (ii)Thehighmaterialstiffnessofsolidparticlesseverelylimitsthe
numerical timestep that can be used in the solution procedure of the EOMs. Often, its value is in
therangeofmicroseconds,whereasprocess-relevantdurationsmaybeminutesorhours. (iii)There
is no straightforward relationship between the microscopic DEM parameters and macroscopically
observedbehavior.Instead,optimizationtechniquesneedtobeusedtofindasetofDEMparameters
thatreproducescertaincharacterizationmeasurements(e.g.,angleofreposeandshearcellmeasure-
ments). Such a calibration routine [22] needs to be performed for any type of material before the
actualsimulationofinterestcanbeapproached. Anychangeinthematerialproperties(e.g.,dueto
differentsizedistribution,degradation,moistureuptake)requiresanewcalibration.
Issue(i)isusuallymitigatedbyemployingcoarse-grainingtechniquesthatreplacemanysmallpar-
ticleswithalargeparcel[13,81]. Iftheinteractionparametersoftheseparcelsarechosenappro-
priately–eitherusingscalingrulesoracalibrationroutine–theaccuracyimpairmentscomparedto
thefine-grainedgroundtruthareoftenacceptable. However, thelimitationofsmalltimestepsand
theneedforparametercalibrationpersistandmakeDEMslowandsometimestoocumbersomefor
aquickapplicationwithinengineeringworkflows.
WepresentNeuralDEM,thefirstend-to-enddeeplearningalternativeformodelingindustrialpro-
cesses. NeuralDEM introduces multi-branch neural operators inspired by multi-modal diffusion
transformers(MMDiT)[27]andisscalabletoreal-timemodelingofindustrially-sizedrelevantsce-
narios. In NeuralDEM, we introduce two key components. The first is modeling the Lagrangian
discretization given by DEM simulations directly from a compressed Eulerian perspective, i.e., a
field-basedpointofview. Ourmethod–throughmodelconditioning–cangeneralizeacrossmacro-
scopic quantities such as inflow velocity or internal friction angle, addressing issue (iii). Inter-
estingly, this new modeling point of view aligns well with recent findings that a DEM-simulated
system’s effective degrees of freedom are orders of magnitude less than the microscopic degrees
of freedom [59]. This has the benefit of allowing direct modeling of macroscopic processes, e.g.,
mixing or transport processes, via additional auxiliary continuous fields. The second key compo-
nent is multi-physics modeling via repeated interactions between physics phases. Multi-physics is
prevalentwhenmodelingtheinteractionoffluiddynamicsandparticulatesystemsinfluidizedbed
simulations. NeuralDEM,additionally,learnstostablysimulatethesystemusinglongertimesteps,
addressingissue(ii). Together,thesepropertiesallowtacklingallcommonissueswithDEM,mak-
ing systems with large numbers of particles computationally feasible, allowing the use of longer
timesteps,andenablingdirectconditioningonmacroscopiccharacterizationmeasurements,without
theneedforfine-tuningthemicroscopicDEMparameters.
WetestNeuralDEManddemonstrateitscapabilitytopicturevarioustransportprocesses,e.g.,mass,
species,residencetime,ormixing,intwoscenarios,bothofwhicharesimulatedwithseveral100k
DEMparticles:(i)slowandpseudo-steadyhopperswithvaryinghopperangles,internalfrictionan-
glesandflowregimes,and(ii)fastandtransientfluidizedbedreactorswithvaryinginflowvelocities.
Inallscenarios,weinvestigatethecorrectphysicsmodelingof,e.g.,outflowratios,residencetime,
mixing ratio, and others. We observe that NeuralDEM generalizes to unseen parameter choices,
4and, that NeuralDEM produces faithful physics simulations for long time horizons. Most notably,
our largest NeuralDEM model is able to physically-correctly model coupled CFD-DEM fluidized
bedreactorsof160kCFDcellsand500kDEMparticlesfortrajectoriesof28s,whichamountsto
2800machinelearningtimesteps*.Thesefindingswillopenmanynewdoorstoadvancedengineer-
ingandmuchfasterprocesscycles.
2 Background
Inthissection,weintroducetherelevantcorephenomenaofDEM.Amorein-depthexplanationcan
befound,e.g.,inthereviewarticleform Blaisetal.[14]orthetextbookfrom Norouzietal.[75].
Further,weintroduceneuraloperatorsanddiscusstheirapplicabilitytomodelparticulatesystems.
2.1 Discreteelementmethod
F(pc)
F(pc)
F(ext)
F(pf)
Figure 2: Discrete element method. The force on a particle consists of particle-particle contacts
F(pc),theexternalforceF(ext),andtheinteractionwithasurroundingfluidphaseF(pf).
i i i
Inasystemofsolidparticleswithmassesm ,radiir ,positionsr ,andvelocitiesv ,eachofthem
i i i i
hastoobeyNewton’ssecondlaw
d
m v =F(ext)+F(pc)+F(pf). (1)
dt i i i i i
Particleiexperiencesforcesofexternalorigin,mostimportantgravityF(ext) ≈m g,contactforces
i i
withthenearbygrainsandwallsF(pc) =(cid:80) F ,andtheinfluenceofasurroundingfluidphase
i j̸=i i,j
F(pf)ifpresentandrelevant.
i
The contact force between solid particles i and j is commonly approximated with spring-dashpot
modelsforboththenormalF(n)andtangentialcomponentF(t),
i,j i,j
F(n) =−k(n)δ(n)n +γ(n)v(n) (2)
i,j i,j i,j i,j
(cid:104) (cid:105)
F(t) =min −k(t)δ(t)t +γ(t)v(t),µ|F(n)|t , (3)
i,j i,j i,j i,j i,j i,j
where the tangential force is limited by Coulomb’s friction law. Material properties enter these
expressionsintermsofthespringstiffnessesk(n,t),dampingcoefficientsγ(n,t)andslidingfrictionµ.
k(n,t) giverisetothereactionagainstnormalandtangentialoverlapδ(n,t) betweentwograinsinthe
i,j
respective directions n and t , and γ(n,t) account for viscous dissipation caused by the normal
i,j i,j
andtangentialrelativevelocitiesv(n,t)duringcontact.Whilesimplegeometricshapessuchasperfect
i,j
*Seehttps://nx-ai.github.io/NeuralDEM/forqualitativecomparisonsoffullsequences.
5spheresallowcomputingvaluesforthematerialparametersfrommeasurablepropertieslikeYoung’s
and shear modulus [42], actual, imperfect grains necessitate calibration towards characterization
experiments[22].
The magnitude of the numerical timestep to solve Equation (1) is limited by the requirement to
properlyresolvecontactsbetweengrains. Morespecifically, thetimestepneedstobesignificantly
smallerthanthedurationofcontactofcollidingparticles(“Hertztime”)andthetimeittakesdensity
wavesgenerateduponimpacttotraveloverthegrainsurface(“Rayleightime”). Forstiffmaterials,
thisoftenamountstostepsintherangeofmicroseconds.
2.1.1 Coupledparticle-fluidsimulations
Particles will also experience a force from a surrounding fluid phase. While it may be neglected
ifnosignificantrelativevelocitiesoccur,itcanbeacrucialfactorforparticledynamicsotherwise.
The dominant contributionsare usually caused bygradients of the pressure andby the drag force,
i.e.,theresistanceagainstrelativevelocitybetweenfluidandgrain,sothat
F(pf) ≈−V ∇p+β(cid:0) u −v (cid:1) . (4)
i i f i
The drag coefficient β depends on the particle size and the local flow conditions. A multitude of
empirical correlations can be found in the literature to take into account the impact of Reynolds
number,particlevolumefractionα ,sizedistribution,etc.[44].
p
ThefluidvelocityitselfisgovernedbythefilteredNavier-Stokesequations[6]
∂
α +∇·αu =0 (5)
∂t f f f
∂
αu +∇·αuu =∇·σ −f(pf) (6)
∂t f f f f f f
whichdifferfromtheirsingle-phasecounterpartintworegards. Thepresenceofparticlesreduces
thelocallyavailablevolumetoafractionα =1−α ,andthedensityofforceEquation(4)exerted
f p
bythefluidontheparticlesisfeltbythefluidinoppositedirectionbecauseofNewton’sthirdlaw.
The coupled solution of the CFD Equations (5) and (6) and the DEM Equation (1) gives rise to
CFD-DEMsimulations.
Foraproperdefinitionofthefieldquantitiesα andf(pf),Lagrangianparticleinformationneedsto
p
bemappedontoEulerianfields. Tothisend,afilterfunctiong (r),e.g.,aGaussianwithwidthl,is
l
employedintermsof
(cid:88)
α (r)≡ g (|r−r |)V (7)
p l i i
i
(cid:80) g (|r−r |)V F(pf)
f(pf)(r)≡ i l i i i . (8)
(cid:80)
g (|r−r |)V
i l i i
An analogous definition as Equation (8) can be invoked to define the spatial field distribution of
any particle property. As a matter of fact, the target quantities of most particle simulations are
notnecessarilyconnectedtosingle-particlepropertieslocatedexactlyatthepositionsofeachgrain.
Instead,onemightbeinterestedinthespatialdistributionof,e.g.,particlevolumefraction,residence
timeortemperature. Twostrategiesareavailabletoobtainthesefields: (i)OnecarriesoutaDEM
simulationandpostprocessesparticledataaccordingtoEquation(8). Thetrajectoryandproperties
of each grain are only needed as an intermediate step for the DEM simulation. (ii) One can try
to directly formulate particle EOMs in an Eulerian fashion by filtering the Lagrangian ones and
solving them disregarding discrete properties. As demonstrated by the two-fluid model [30], this
cansignificantlyreducecomputationalcostsbutcancomewithaseriousdegreeofuncertainty[18]
because not all particle properties lend themselves to a straight-forward formulation in terms of
fields.
Eveniftheresultinginaccuraciesareacceptable,suchsimulationsarestillcumbersomebecauseof
the restriction to small timesteps (which is also present in an Eulerian formulation) and the lack
of a direct relationship between macroscopic behavior and microscopic parameters. An attractive
solutiontothispredicamentmightbeofferedbyneuraloperatorsthatcanbetrainedwithdetailed
particledatatopredictanyunderlyingfieldquantitiesinahighlyefficientway.
62.2 Neuraloperatorslearningforscientificandengineeringapplications
In recent years, deep learning tools have been extensively integrated into scientific modeling, and
haveresultedinbreakthroughsin,e.g.,proteinfolding[1,43],materialdiscovery[9,10,69,102],
orweathermodeling[12,15,52,74,76]. DrivenbyapplicationsinCFD[35,36,48,56,91],deep
neuralnetworkbasedsurrogates,mostimportantlyneuraloperators[50,56,66],haveemergedasa
computationallyefficientalternative[105]. Inadditiontocomputationalefficiency,neuraloperators
offerthepotentialtointroducegeneralizationcapabilitiesacrossphenomena,aswellasgeneraliza-
tionacrosscharacteristicssuchasboundaryconditionsorcoefficients[39,68].
Neuraloperators[50,54,56,66]areformulatedwiththeaimoflearningamappingbetweenfunc-
tionspaces,enablingoutputsthatremainconsistentacrossvaryinginputsamplingresolutions. Fol-
lowing the framework of Kovachki et al. [50], we assume U,V to be Banach spaces of functions
definedoncompactdomainsX ⊂ Rdx orY ⊂ Rdy, respectively, whichmapintoRdu orRdv. A
neuraloperatorGˆ:U →V approximatesthegroundtruthoperatorG :U →V.
WhentraininganeuraloperatorGˆ,awidelyadoptedapproachistoconstructadatasetofN discrete
datapairs(u ,v ), i = 1,...,N,whichcorrespondtou andv evaluatedatspatiallocations
i,j i,j′ i i
j = 1,...,K and j′ = 1,...,K′, respectively. Note that K and K′ can, but need not be equal,
andcanvaryfordifferenti,whichweomitfornotationalsimplicity. Figure3(firstrow)showsthe
operatorlearningproblem,i.e.,themappingofaninputfunctionu toanoutputfunctionv viaan
i i
operatorG. ThefunctionsaregivenviaK andK′ discretizedinputandoutputpoints,respectively.
On this dataset, Gˆis trained to map u to v via supervised learning, as sketched in Figure 3
i,j i,j′
(bottomrow),whereGˆiscomposedofthreemaps[3,84]: Gˆ:=D◦A◦ E,comprisingtheencoder
E, the approximator A, and the decoder D. First, the encoder E transforms the discrete function
samples u to a latent representation of the input function. Then, the approximator A maps the
i,j
latent representation to a representation of the output function. Lastly, the decoder evaluates the
output function at spatial locations j′. The neural network Gˆis then trained via gradient descent,
usingthegradientof,e.g.,ameansquarederrorlossinthediscretizedspaceL = 1 (cid:80) ∥vˆ −
i K′ j′ i,j′
v ∥2,where∥ istheEuclideannorm.
i,j′ 2 2
Samples of
 Underlying
 Underlying
 Samples of

input function input function output function output function
Operator
Samples of Encoded
 Encoded
 Samples of predicted

input function input function output function output function
Encoder Approximator Decoder
Figure 3: Neural operator learning. Neural operators aim to learn a mapping between function
spaces, enabling outputs that remain consistent across varying input sampling resolutions. The
neuraloperatorGˆapproximatesthegroundtruthoperatorGwiththreemaps,composingencoderE,
approximatorA, anddecoderD. TheapproximationofGˆisideallyindependentfromthenumber
ofsampledinputpoints,andapproximatestheoutputfunctionforanarbitrarynumberofpoints.
Fortemporallyevolvingsystems,weassumetheBanachspacesoffunctionstobeequal,i.e.,U =V,
where models are trained on next-step prediction ut → vt′ . To fully evolve a system after
i,j i,j′
7training,themodelisthenappliedrepeatedlyinautoregressivefashion,i.e.,everypredictionserves
asnewinput.
2.2.1 Discretizationconvergence
Neuraloperatorsarewellsuitedtodescribetheevolutionandinteractionofphysicalquantitiesover
spaceandtime,i.e.,continuouslychangingfields. Mostnotably,sincethesolutionsarecontinuous
fields, the mapping should neither depend on K, the number of input locations, nor on K′, the
number of decoded output locations. The property that neural network outputs remain consistent
acrossdifferentinputsamplingresolutionsisreferredtoasdiscretizationconvergence[50,56,66].
Neural operators are proven to be discretization convergent in the limit of mesh refinement [50],
meaningtheyconvergetoacontinuumoperatorinthelimitasthediscretizationisrefined. Intheory
andifproperlydesigned,neuraloperatorscanbeevaluatedatanydatadiscretization. Nevertheless,
thereisaminimumthresholdforthenumberofpointsneededforaccuraterepresentation. However,
strongevidenceindicatesthatneuralnetworkscancapturephysicalphenomenaeffectivelywithout
requiringthesameleveloffine-graineddiscretizationastraditionalnumericalmethods[48].
Neuraloperatorarchitecturesneedtoensurediscretizationconvergenceoftheircomponents. When
encodingthediscretizedinputfunction,popularchoicestopreservediscretizationconvergenceare
graphneuraloperators[55,57],transformers[37,90,96]orcombinationsthereof[3].Fordecoding,
recentworks[93]haveshownthatDcanbeconsideredasneuralfield[70,86,97],whichallowsfor
point-wiseevaluationattheoutputgridoroutputmesh[3,47,49,93].
2.2.2 Deeplearningforparticulatesystems
While most state-of-the-art neural operator approaches are predominantly designed for geometri-
cally simple domains with regular grids, neural operator formulations for particle- or mesh-based
dynamics remain limited. In such cases, graph neural networks (GNNs) [16, 45, 83] with graph-
based latent space representations are a prevalent approach to build neural surrogates. Often, pre-
dictednodeaccelerationsarenumericallyintegratedtosimulatethetimeevolutionofmulti-particle
systems[67,79,82,88,89]. Forthemodelingofgranulardynamics, Lietal.[58]predictcontact
forces when inputting microstructures of grain packings. Similarly, Cheng & Wang [21] estimate
contact forces in compressed granular assemblies. Mayr et al. [67] introduce Boundary-GNNs to
modelgranularflowsthroughhoppers,rotatingdrums,andmixers. Allthesemodelsarelimitedby
thenumberofparticles,andoperateon10k–20kparticlesatmost,althoughoftenmuchless.
GNNsinherentlypossessastronginductivebiasforLagrangiandynamics,which,however,presents
asignificantdownsidesincethenumberofnodes,andthusthecomputationalcomplexitygrowswith
thenumberofLagrangianparticles. Thus,computationalcomplexitygetsquicklyinfeasibleforan
increasing number of particles [3, 72]. However, motivated by recent successes in latent space
generative modeling [27, 80], latent space modeling has emerged as a new modeling paradigm in
neuraloperatorlearning[3,38,94,107]. Inthiswork,wefollowtheargumentationofAlkinetal.
[3],i.e.,neuraloperatorswithlargemodelcomplexityarepowerfulenoughtocaptureinherentfield
characteristicswhenappliedtoLagrangianormultiphysicssimulations. ForDEMsimulations,we
arguethatthosefieldcharacteristicsneednotbeexplicitlypresentinthetrainingdata, rather, they
mightemergefromthebulkbehavioroftheparticulatesystems.
3 NeuralDEM
NeuralDEMpresentsthefirstend-to-endsolutionforreplacingcomputationallyintensivenumerical
DEMroutinesandcoupledCFD-DEMsimulationswithfastandflexibledeeplearningsurrogates.
NeuralDEMintroducestwoconceptuallynovelmodelingparadigms:
1. Physicsrepresentation: WemodeltheLagrangiandiscretizationofDEMasanunderlying
continuous field, while simultaneously modeling macroscopic behavior directly as addi-
tional auxiliary fields. NeuralDEM encodes different physics inputs which are represen-
tativeforDEMdynamicsand/ormulti-physicsscenarios. Examplesareparticledisplace-
ment,particlemixing,solidfraction,orparticletransport.
2. Multi-branch neural operators: We introduce multi-branch neural operators scalable to
real-time modeling of industrial-size scenarios. Multi-branch neural operators build on
8the flexible and scalable “Universal Physics Transformer” [3] framework by enhancing
encoder,decoder,andapproximatorcomponentsusingmulti-branchtransformerstoallow
for modeling of multi-physics systems. The system quantities fundamental to predicting
theevolutionofthestateintimearemodeledinthemain-branches,wheretheyaretightly
coupled. Additionally,auxiliaryoff-branchescanbeaddedtodirectlymodelmacroscopic
quantities by retrieving information from the main-branch state and further refining the
predictionusingrelevantinputs.
Figure 4: In our physics representation we model the Lagrangian discretization of DEM as an as-
sumedunderlyingcontinuousfield. Theapproximatormapstheencodedrepresentationtoonethat
can be decoded at any specified spatial location j′. The multi-branch neural operator is a family
of deep learning architectures that processes multi-physics quantities and can distinguish between
primaryquantities, usedtomodelthecorephysicsinthemain-branches, andsecondaryquantities
whichareusedtopredictadditionaldesiredquantitiesintheoff-branches, bothmodeledasfields.
The quantities come, e.g., from DEM simulations with coupled particles and fluid, which the ar-
chitecture handles using specialized encoders and decoders. All modules processing the primary
quantitiesinfluenceeachother. Incontrast,thosethatprocesssecondaryquantitiesareindependent,
andusethetokensfromtheprimarybranchasadditionalinformationbutcannotaffectthem.
3.1 Physicsrepresentation
As common when training deep learning surrogates, we train on orders of magnitude coarser
timescales than what a classical solver requires to be stable and accurate. For the numerical ex-
periments in this paper, the timescale relation is at least 1000∆t = ∆t . Additionally, for
DEM ML
learningthedynamicsofparticlemovement,weusetheparticledisplacement,whichisdefinedas
thedifferencebetweenthepositionr ∈R3ofparticleiattimestept andthepositionofthesame
i ML
particleattimestept +∆t . Finally,weusethetermtransporttodenotetheparticlemovement
ML ML
integratedovermultipletimesteps∆t .
ML
9NeuralDEM models the Lagrangian discretization of DEM as a continuous field in a compressed
latentspace,leveragingtheinsightthattheeffectivedegreesoffreedomofphysicalsystemsisoften
muchsmallerthanitsinputdimensionality[59]. Therefore,weassumethatthereexistssomeunder-
lyingfieldthatdescribestheparticledisplacementsinaDEMsimulationandlearnthisunderlying
fieldoverthewholedomaininsteadofadisplacementperparticle. However,particledisplacements
can fluctuate depending on their exact position within the bulk of the material. Such fine-grained
detailsarelostwhengoingtoafield-basedrepresentationwhichsmoothesoutthesevariations. This
makes field-based models unable to move particles accurately around in space, which would be
requiredtogetmacroscopicinsightsintothesimulationdynamics.
Tocircumventthisissue,weintroduceadditionalauxiliaryfieldsthatmodelthemacroscopicinsights
directlyinsteadofcalculatingtheminpost-processingfromtheparticlelocations. Forexample,by
modelingtheaccumulatedparticlemovementoveralongperiodoftimeviaa“transport”field,we
canlearnmacroscopicpropertiesdirectlyinsteadofintegratingshort-termmovementswhichwould
requireprecisepredictionofthefluctuationsthereof. ThisisvisualizedinFigure4.
Even over such a large timestep, the evolution of a flow and its properties at each point is mainly
determinedbythefieldvaluesinanearby,boundedsubdomainwhichgrowswiththethestepsize,
andhardlyinfluencedbyverydistantpoints[60]. Thisbehaviorcanberesembledbytheattention
mechanismoftransformernetworks[90].
3.2 Multi-branchneuraloperators
Emerging bulk behavior of classical solvers as motivation. Classical solvers can create full
simulationsviapreciselyupdatingmicroscopicpropertiessuchastheparticlepositionsatextremely
hightimeresolution,withoptionalcouplingto,e.g.,afluidphase,whichisupdatedwithsimilarpre-
cisionandtimescale. Similarly,NeuralDEMaimstoextractthephysicaldynamicsandsimulation
state updates from the microscopic properties also used in classical solvers, which we call “main-
phase(s)”whereeachmain-phaseisprocessedbyonemain-branchtransformerinourmodel. Using
anexampleofaparticle-fluidcoupledsimulation,onemain-branchpredictsparticledisplacements,
while a second main-branch predicts fluid velocities and pressures. All main-branches are tightly
coupledviafrequentinformationexchangeduringthemodelforwardpass.
Microscopic inaccuracies of neural operators. While the model is trained using microscopic
properties,neuraloperatorsarenotabletopredictmicroscopicproperties,suchastheparticledis-
placements, accuratelyenoughbecauseneuraloperatorsarenotaspreciseasclassicalsolversand
operateonmuchcoarsertimeresolution.Itisthereforenotfeasibletoexclusivelyrelyonanaccurate
prediction of these microscopic properties in the main-branches. Creating simulations by moving
initialparticlepositionsaccordingtothepredicteddisplacementswouldquicklyresultinunphysical
states(e.g.,overlappingparticles)andbecomesinaccurate.
Macroscopicmodelingviaauxiliaryfields. Animportantobservationregardingthesystemswe
model is that the insights that a classical solver can provide into the physical dynamics are rarely
on a microscopic level and more often on a macroscopic level, where the macroscopic properties
are extracted from the microscopic results of the classical solver. Motivated by this intuition, we
introduce additional off-branches, which are trained to model macroscopic processes such as par-
ticle mixing or particle transport directly during training. Similar to classical solvers, where the
macroscopicprocessdoesnotinfluencethemicroscopicupdates,off-branchesdonotinfluenceany
of the main-branches. Instead, each off-branch creates its predictions by repeatedly processing its
owndata,aswellasretrievinginformationfromthemicroscopicstateofthemain-branches(without
influencingthem).
Multi-branch transformers. The central neural network component of NeuralDEM are multi-
branchtransformers.Multi-branchtransformers,asthenamesuggests,consistofmultiplebranches:
main-branch(es)andoff-branch(es).Eachbranchisastackoftransformer[90]blockswhereweights
arenotsharedbetweenbranches. Eachbranchoperatesonasetofso-calledtokens,whichareob-
tainedbyembeddingtheinputintoacompressedlatentrepresentation.Main-branch(es)concatenate
all tokens before each attention operation along the set dimension, allowing interactions between
them, followedbysplittingtokensagainintothedifferentbranches, akintomulti-modaldiffusion
transformer(MMDiT)blocks[27]. Additionally,multi-branchtransformerscanincludearbitrarily
10manyoff-branches,wheretheself-attentionisreplacedbyacross-attentionwhichusesonlyitsown
off-branch tokens as queries and concatenates its own off-branch tokens with the main-branch to-
kens to use as keys and values. This roughly corresponds to simultaneous self-attention between
theoff-branchtokensandcross-attentionbetweenoff-branchandmain-branchtokens. Nogradient
flowsthroughthecross-attentionbacktothemain-branchtokens.Off-branchesareimplementedvia
amodifieddiffusiontransformerblock[77]. AschematicsketchisshowninFigure5.
In our numerical experiments, we consider temporally evolving systems of multiple fields. Each
input at time t ut consists of h = 1,...,M fields, where the hth field at timestep t is denoted as
i
uh,t. Each field is modeled by one branch of the multi-branch transformer. We create datasets of
i
function pairs that are evaluated at K and K′ input and output positions (uh,t vh,t+∆t) and train
i,j i,j′
all M branches in parallel to map uh,t to the target vh,t+∆t. Each branch of the multi-branch
i,j i,j′
transformerconsistsofM encodersEh,M approximatorsAh,andM decodersDh.
Eh :uh,t ∈RK×d −e −m −be →d RK×dhidden −m −u −lt −i- −br −an −ch −t −ra −ns −fo −rm −→er zh,t ∈Rnlatent×dhidden
i,j=1,...,K i
Ah :zh,t ∈Rnlatent×dhidden −m −u −lt −i- −br −an −ch −t −ra −ns −fo −rm −→er zh,t+∆t ∈Rnlatent×dhidden
i i
Dh :(zh,t+∆t,yh )−p −er −ce −iv −e −rd −ec −o −d →er vˆh,t+∆t ∈RK′×d.
i i,j′=1,...,K′ i,j′=1,...,K′
Figure 5: Schematic architecture of a multi-branch transformer block. DiT [77] modulation is
appliedtoeachattentionandMLPblockbutisomittedforvisualclarity.
3.3 Scalarparameterconditioning
Physicalsimulationsoftenrequirevariousscalarparameterssuchasmaterialproperties(e.g.,friction
orparticlesize)orgeometryvariations(e.g., slopeanglesoroutletwidth)todefinethesimulation
properties. Itisvitaltoprovidethesescalarsalsotothemachinelearningmodeltoproduceaccurate
results. Acommonwaytodothisisbyfeaturemodulation[78]whichscalesandshiftsintermediate
feature activations based on a vector representation of the scaler parameters. As NeuralDEM is
a transformer architecture, we use DiT-style modulation [77] which scales, shifts and gates the
activationsofeachattentionandMLPblockbasedonalearnedvectorrepresentationofthescalar
parameters. This form of conditioning allows NeuralDEM to generalize across geometries and
acrossnon-trivialparticle-particleinteractionsbyconditiononrespectivevariables.
Aparticularintriguingpropertyofthisconditioningmechanismisthatitallowsustoconditionon
parameters that describe only the macroscopic material behavior. For example, our model can be
conditioned on the measured parameters, like the internal friction angle or the flow function coef-
ficientfromashearcelldevice, insteadofrequiringthemicroscopicfrictionparametersnecessary
11for simulating with a classical DEM solver (e.g., particle sliding friction coefficient). In practice,
thisallowsustosimulateanymaterialbysimplyusingashearcelltodetermineitsfrictionangle.
Incontrast,forclassicalsolvers,onewouldneedtoestimatethemicroscopicfrictionparametersof
thematerialusingacalibrationprocedure[22]inordertosimulateit,whichistedious,errorprone
andofteninaccurate. WeshowcasethisinSection4.2.6.
3.4 Flexiblemodelarchitectureforvariablesimulationuse-cases.
Asphysicalsimulationsexhibitabroadrangeofdynamics, andrelevantmacroscopicinsightscan
vary drastically depending on the use-case, our multi-branch transformer architecture should be
seenasaflexibleframeworkthatenablesvarioususe-casesinsteadofa“setinstone”architecture.
Componentscanbecomeredundantincertainsettings,orspecialuse-casescouldrequireadditional
components. Forexample,insimulationswithlaminarorpseudo-steadydynamics,thewholesim-
ulationisfullyspecifiedbytheinitialstate,makingencodingsubsequentstatesandinteractionbe-
tweenbranchesredundant. However,inveryunsteadysystemsallcomponentsofthemulti-branch
transformerarchitectureareverymuchnecessarytoproduceaccuratetimeevolutionasslightlydif-
ferentinitialstatescanleadtovastlydifferentinstantiationsofdynamics,whichrequiresaphysically
accuratestateateachtimestepandinteractionsbetweenthestatesofdifferentbranches.
Additionally,theinitialencodingofphysicsphasesbenefitsfromspecializeddesigns,dependingon
theinputdata. Forirregulargriddata(e.g.,particles),weusethesupernodepoolingfromUPT[3]
whichaggregatesinformationaroundparticlesviamessagepassingtoso-calledsupernodes,which
arerandomlyselectedparticles. Fluidphasesaretypicallyrepresentedviaregulargriddata,which
is computationally more efficient and allows efficient coupling to, e.g., particle simulations. For
regular grid data, we use the vision transformer patch embedding [26] which splits the input into
non-overlappingpatchesandembedsthemusingasharedlinearprojection.
Finally, decodingisperformedusingthe samearchitectureforbothparticleandgrid data, usinga
perceiver-basedneuralfielddecoder[40],whichisqueriedatlocationsy inparallel.This
i,j′=1,...,K′
typeofdecodingfirstembedsquerylocationstobeusedasqueriesfortheperceivercross-attention
and uses the latent tokens as keys and values. This results in a point-wise evaluation of the latent
spacebasedonthequeryposition,whichiswhatenableseffectiveparallelization.
Weuseastandardpre-normvisiontransformersarchitecture[8,26]whereeachbranchofthemulti-
branchtransformercorrespondstoasinglevisiontransformer. Thetotalnumberofblocksisevenly
distributedacrossencoder,approximatoranddecoder.
124 Numericalexperiments
We test the NeuralDEM framework on two industrially relevant use cases: hoppers and fluidized
bed reactors, both visualized in Figure 6 and described in Table 1. We evaluate NeuralDEM on
differentmetrics:(i)Effectivenessoffield-basedmodelingw.r.t.macroscopicquantities.Weextract
andcompareemergingmacroscopicphysicsphenomena. (ii)Scalabilitytowardsindustryrelevant
simulation sizes. We train on simulations with up to half a million particles and anticipate good
scalingbehavior tomuchhighernumbers. (iii) Physicallyaccurate timeextrapolation. Weshow
thatourmodelscanfaithfullymodeldynamicsforlong-timehorizons–inafractionofthetimethat
aclassicalsolverwouldtake. (iv)Generalizationtounseenregionsinthedesignparameterspace.
DHO
Parameter Value
HopperdiameterD 0.24m HO
HopperheightH 0.40m
HO
HopperoutletdiameterO 0.05m
HO
Hopperangleα 0-60°
HO
Hopperparticlediameterd 0.004m
αHO FBwidthw 0.096m
W FB
FB WFB FBheighth 0.24m
OHO FB
FBparticlediameterd 0.0012m
FB
Air inflow
velocity vFB
(a)Hopper (b)Fluidizedbed (c)Dimensionsofthecases
Figure6: Schematicofthetwonumericalexperimentalcasesandtheassociateddimensions.
Name Simulationmethod #Particles #CFDcells Variability
Hopper DEM 250k - Hopperangle,materialfriction
Fluidizedbed CFD-DEM 500k 160k Fluidinletvelocity
Table1: Overviewofdatasetpropertiesusedintheexperiments.
4.1 Simulationsetupandproblemscale
Hoppersareindustriallyusedforshortaswellaslongtermstorageofparticulatematerial, show-
casing slow and pseudo-steady macroscopic behavior. DEM is the preferred method since the air
aroundtheparticlescanusuallybeneglectedduetotheslowvelocitiesinthesystem. Inourexperi-
ments,thehoppergeometry,asshowninFigure6a,isfilledwith250kparticles,whichgraduallyexit
the domain over the simulation duration when the hopper empties. Timestepping of DEM solvers
strongly depends on particle size as well as particle properties. A timestep of ∆t = 10µs is
DEM
requiredforthetestednumericalexperimentswithLIGGGHTS[46].
Fluidized bed reactors are characterized by fast and transient phenomena and are widely used in
industryforavarietyofprocesses. Fluidizedbedreactorsshowcasestronginteractionsofthepar-
ticleswiththesurroundingfluid, necessitatinganaccuratemodelingofparticles, thegasphase, as
wellasparticle-gasinteractions. Thus,modelingapproachesneedtocombineDEMpartswithsim-
ulationsofthesurroundingfluid. Fordatageneration,weuseacoupledCFD-DEMapproach[31]
whichisbuiltuponLIGGGHTS[46]andOpenFOAM[95]. Thegeometryofthesetupissketched
inFigure6bandthedimensionsforbothcasescanbefoundinTable6c. Thereactorisfilledwith
500k particles and the fluid, i.e., air, that is uniformly pushed into the reactor from the bottom is
modeledonagridof160khexahedralcells.
13
OHH
BFH4.2 Hopper
We consider hopper simulations with the hopper geometry depicted in Figure 6a. With its outlet
closed,thehopperisinitiallyfilledwithparticles,toroughly250kgrainsonaverage(particlecounts
can vary based on the outlet slope α ). Then the outlet at the bottom of the hopper is opened
HO
and grains start to flow out. By default, we do not refill any new particles into the hopper but
consider an operation mode where the material is continuously refilled in Section 4.2.7. Different
simulations in the dataset vary hopper geometry and particle friction as specified in Table 2. We
createadatasetof1000simulationswithatrain/validation/testsplitof800/100/100.Thisvariability
insimulationparametersresultsindifferentflowregimes(“funnelflow”or“massflow”)wherethe
dynamicsareslowandpseudo-steady. Infunnelflow,particlesprimarilymovedownafunnelabove
theoutlet, whereasinmassflow, materialmovesuniformlydowntowardstheoutlet, seeFigure7.
Eachsimulationisruntocover40physicalsecondsatmost(thesimulationisstoppedifnoparticles
remaininthehopper). Snapshotsarestoredin0.1sintervals(resultingin400MLtimesteps∆t )
ML
whichisthedatathatNeuralDEMmodelsaretrainedon. TheDEMsolverrequires10ktimesteps
per0.1physicalsecondsandasinglesimulationtakesroughly3hourson16CPUs.Weadditionally
evaluatetheparametersofeachsimulationinashearcelltogetitsinternalfrictionangleθandflow
functioncoefficientffctouseitasconditioninginsteadofthemicroscopicfrictionparameters(see
Section4.2.6).
Name Description Range Sampling
α Angleoftheslopetowardstheoutlet [0°,60°] LHS
HO
µ Particleslidingfriction [0.05,1.00] LHS
s
µ Particlerollingfriction [0.00,0.50] LHS
r
θ Angleofinternalfriction evaluated -
ffc Flowfunctioncoefficient evaluated -
Table2: Parametersofthehopperdataset.
Thefollowingmacroscopicpropertiesofhoppersimulationsareofinteresttopractitioners.
• Peakoutflowrate: Howmanyparticlesexitthehopperwithinacertaintimeframeatmost?
• Drainagetime: Howlongdoesittaketoemptythehopper?
• Residualmaterial: Howmuchmaterialgotstuckinsidethehopperafterfulldrainage?
• Flowregime: Doesthematerialexhibitmassfloworfunnelflow?
• Visualization: Howdoesthesimulationlooklike?
• Residencetime: Howlongarecertainparticlesinsidethesimulation?
All these macroscopic properties emerge from the microscopic particle-particle interactions mod-
eledbyDEM.Tore-generatetheseemergingphenomenawithNeuralDEM,wetrainourmodelsto
predictthreeauxiliaryfieldsateachtimestepofthesimulation. First,theoccupancyfieldclassifies
whetheranarbitrarypositionwithinarectangularvolumearoundthehopperisoccupied,teaching
the model which regions are filled with particles. The occupancy field allows us to calculate an
outflowratebyevaluatingtheoccupancyfieldwiththeparticlepositionsoftheinitialpackingand
subtractingthenumberofoccupiedpositionsfromt andt +∆t .Similarly,wecanextractthe
ML ML ML
drainagetimebyrepeatedlycheckingifpositionsabovetheoutletarestilloccupiedandtheresidual
material by evaluating how many of the initial particle positions are occupied after the hopper is
drained. Second, the transport field is trained by predicting the initial position of each particle,
which corresponds to the cumulative displacement of each particle across all previous timesteps,
enabling macroscopic modeling of particle movement over long time horizons. This allows us to
modelinsightsintotheflowregimeandvisualizethesimulationbyevaluatingthetransportfieldof
occupiedpositions.Finally,theresidencetimeofeachparticlemodelsthetimeittakeseachparticle
toexitthehopperandcanbeusedtoeasilyidentifystaleregions.
14(a)Massflowregime
(b)Funnelflowregime
0.20 Ground truth DEM 0.20 Ground truth DEM
NeuralDEM NeuralDEM
0.15 0.15
0.10 0.10
0.05 0.05
0.00 0.00
0 5 10 15 20 25 0 10 20 30
Time [s] Time [s]
(c)Massflowregime (d)Funnelflowregime
Figure 7: Visualization of a NeuralDEM generated trajectory vs the DEM simulation. Different
colorsindicatedifferentinitialparticlelayers. Emergingfunnelandmassflowregimesareclearly
visible. In mass flow (a), mass moves uniformly down towards the outlet. In funnel flow (b),
particlesprimarilymovedownafunnelabovetheoutlet.Thefractionsofcoloredmaterialovertime
are shown for (c) mass flow regime and (d) funnel flow. In the funnel flow regime particle layer
inversionhappens,i.e.,particlesfromhigherlayersovertakeparticlesfromthelowerlayersthrough
thefunnel. ThisemergingmacroscopicphenomenaisperfectlymodeledbyNeuralDEM.
15
selcitrap
fo
noitcarF
hturtdnuorG
MEDlarueN
MEDhturtdnuorG
MEDlarueN
noitalumisMED
yrotcejartdetareneg
noitalumis
yrotcejartdetareneg
selcitrap
fo
noitcarF4.2.1 Multi-branchneuraloperatorarchitectureforhopperexperiments
The considered hopper simulations exhibit slow and pseudo-steady dynamics, resulting in a state
that is well-defined from the scalar input parameters (timestep, particle friction, hopper angle)
alone. Therefore, it is neither necessary to encode the previous state nor to have interactions be-
tween branches, as the scalar input parameters already provide full information about the state to
all branches. Therefore, we opt for a decoder-only architecture consisting of a single transformer
block per branch that starts from 32 static learnable latent tokens and prepares them for decoding
viaaperceivercross-attentionblockthattakespositionalembeddingsasqueriesandusesthelatent
tokensaskeysandvalues. Boththetransformerandthecross-attentionblockuseDiT[77]modula-
tiontoincorporatethescalarparameters(timestep,α ,µ andµ ). Thewholemodelconsistsof
HO s r
50Mparameters.
Wetrainmodelsinthehoppersettingfor10kupdatesusingabatchsizeof256,apeaklearningrate
of10−4whichiswarmedupfor1kupdatesfollowedbyadecayingcosinescheduleafterwards.The
lossissummedforallbranchesandLION[19]isusedasoptimizer.
4.2.2 Flowregimeandvisualizationviaoccupancyandtransportfield
To evaluate the macroscopic modeling of the flow regime inside the hopper, we use the transport
field and evaluate it at the occupied positions as defined via the occupancy field. We bin the z
coordinateofthetransportpredictioninto8binswhichresultsin“stripes”ofparticlesattheinitial
timestep. Thesestripesthenevolveintimeasparticlesflowout. Byevaluatingthevolumeofeach
stripeateverytimestep, wegetdetailedinformationonthedifferentemergingflowregimesinthe
hopper.
Inthemassflowregime,asshowninFigure7a,materialflowstotheoutletquiteuniformly,resulting
in a steady flow and first in - first out operation. NeuralDEM can model this behavior accurately,
as visualized in Figure 7c, where layer after layer leaves the hopper. Contrary, in the funnel flow
regime,asshowninFigure7b,thematerialprimarilymovesdownafunnelabovetheoutlet. This
resultsinalayerinversion,asvisualizedinFigure7d,meaningparticlesfromhigherlayersovertake
particlesfromthelowerlayersthroughthefunnelandthelayershigherupinthehopperwillempty
first. TheseemergingmacroscopicphenomenaareperfectlymodeledbyNeuralDEMaswell.
Notably,NeuralDEMexclusivelymodelsfields,whichallowsustoevaluatetransportandoccupancy
at arbitrary positions with arbitrary resolution. For example, in the evaluations of this section, we
use a tetrahedral grid with 80k cells. Our model can seamlessly make predictions thereof despite
seeingonlyparticlepositionsduringtraining.
4.2.3 Outflowrate,drainagetime,andresidualmaterialviaoccupancyfield
The occupancy field defines the occupied volume of the remaining mass in the draining hopper.
Givenaninitialpacking,wecanevaluatetheoccupancyfieldattheinitialpositionsofeachparticle
andtrackthenumberofoccupiedpositionsoverthewholesimulationtothencreatepredictionsof
outflowrate,drainagetime,andresidualmaterial.
Occupancyfield. Todefinewhetherornotapositionisoccupied,weintroduceahyperparameter
that defines a radius around each particle position. All positions within this radius are considered
occupiedwhereaspositionsthatarenotwithintheradiusofanyparticleareconsideredunoccupied.
Wechoosetheradiustobelargerthantheparticleradiustoavoidclassifyingemptyspacesbetween
denselypackedsphericalparticlesasunoccupied.
Outflow rate. The outflow rate can simply be calculated by subtracting the number of occupied
positionsattimetfromthatonetimesteplateratt+∆t . Toavoidfluctuationsduetotheburn-in
ML
and ending phase of the simulation, we calculate the outflow rate as the average outflow starting
from timestep 50 (5s) over a 100 timestep (10s) duration and normalize it by the initial particle
count.ThegroundtruthoverthewholedatasetisvisualizedinFigure8aandrespectiveNeuralDEM
predictionsareshowninFigure9a.
Drainagetime. Weconsiderthehoppertobe“drained”byspecifyingathresholdofparticlesthat
arelocatedabovetheoutlet(“arefallingdown”)forbothclassicalDEMandNeuralDEMgenerated
16trajectories. This definition is necessary as the material gets stuck on the outlet slope if it is very
cohesive or if the slope is flat. To evaluate the drainage time of the NeuralDEM model, we query
theoccupancyfieldattheparticlepositionsoftheinitialpackingabovetheoutletuntilthenumber
ofoccupiedpositionsislessthanthespecifiedthreshold. Thedrainagetimeobtainedwhenrunning
numericalDEMsimulationsisvisualizedinFigure8b. Further,theNeuralDEMpredicteddrainage
time is visualized in Figure 9b. The NeuralDEM predicted drainage time shows high agreement
withthedrainagetimeoftheDEMsimulation. Wesetthethresholdofparticlesabovetheoutletto
64whereasotherthresholdslike32or128resultinalmosttheexactsamebehavior.
Residualvolume. Oncethehopperisdrained, thenumberofparticlesthatremaininthehopper
(duetoaflatoutletslopeorhighfriction)definestheresidualparticlecount. Asthevolumeofthe
hopper fluctuates due to different outlet slopes shrinking/expanding the volume, we normalize the
residual particle count by the initial particle count to predict the residual material as a percentage
of the total particle count. Figure 8c visualizes the ground truth (DEM) values and Figure 9c the
NeuralDEMpredictions.
45 1800 45 35 45 14
40 40 40
35 1600 35 30 35 12
10
30 30 30 1400
25 25 25 25 8
20 1200 20 20 6
15 15 20 15 4
1000
10 10 10
2
5 800 5 15 5
0 10 20 30 40 50 60 0 10 20 30 40 50 60 0 10 20 30 40 50 60
Hopper angle [°] Hopper angle [°] Hopper angle [°]
(a)Outflowrate (b)Drainagetime[s] (c)Residualvolume[%]
Figure8:DistributionofmacroscopicmeasurementsoverthewholeDEMgeneratedhopperdataset.
Combinationsofdifferentgeometryandfrictionparametersleadtodifferentsimulationbehaviors.
17.5
30
1600 15.0
12.5 1400 25
10.0
1200 7.5
20
5.0
1000
2.5
Average error: 17.3 15 Average error: 0.19s Average error: 0.41%
800 0.0
800 1000 1200 1400 1600 15 20 25 30 0.0 2.5 5.0 7.5 10.012.515.017.5
NeuralDEM outflow rate NeuralDEM drainage time [s] NeuralDEM residual volume [%]
(a)Outflowrate (b)Drainagetime (c)Residualvolume
Figure 9: Macroscopic simulation insights from the predicted occupancy field. The NeuralDEM
modelcanaccuratelycapturemacroscopicmeasurementsfromthelearneddynamics.
4.2.4 Residencetime
Anotherinterestingquantitythatemergesatthemacroscopiclevelisresidencetime,i.e.,howlong
ittakesforeachparticletoexitthehopper. Therefore,wepredictthenumberoftimestepsthateach
particleresideswithinthehopper. Visualizingtheresidencetimeattheinitialtimestepcanidentify
staleregionsandcanalsobeusedtocharacterizestheflowregime. Weshowtheinitialframeofthe
residencetimepredictionfordifferentflowregimesandstaleregionsinFigure10.
17
]°[
elgna
noitcirf
lanretnI
etar
wolftuo
MED
]°[
elgna
noitcirf
lanretnI
]s[
emit
eganiard
MED
]°[
elgna
noitcirf
lanretnI
]%[
emulov
laudiser
MEDGroundtruth NeuralDEM Groundtruth NeuralDEM
DEMsimulation prediction DEMsimulation prediction
(a)Massflowregime (b)Funnelflowregime
Figure10:VisualizationofaNeuralDEMgeneratedmaterialresidencetimevstheDEMsimulation
for(a)massflowregimeand(b)funnelflowregime. Thedarkeraregionisthelongerthematerial
in that spot stays inside the hopper. While the hopper in the mass flow regime shows a smooth
transition from bottom to top, the one with funnel flow shows clear stagnation zone in the bottom
withhighresidencetime. BothcasesareaccuratelypredictedbyNeuralDEM.
4.2.5 Generalizationcapabilities
To investigate the generalization capabilities of NeuralDEM, we split the dataset by excluding a
parameter range of 20 degrees from the training set for testing. In this setting, the NeuralDEM
modelisevaluatedonparametercombinationsthatarefarawayfromtheonesseenduringtraining.
Nevertheless,theNeuralDEMmodelmakesreasonablepredictionsasshowninFigure11.
45 32 45 32 45 0.6
40 31 40 31 40
0.5
35 30 35 30 35
0.4 30 29 30 29 30
25 28 25 28 25 0.3
20 27 20 27 20 0.2
15 26 15 26 15
10 10 10 0.1
25 25
5 5 5
24 24 0.0
0 10 20 30 40 50 60 0 10 20 30 40 50 60 0 10 20 30 40 50 60
Hopper angle [°] Hopper angle [°] Hopper angle [°]
(a)DEMdrainagetime[s] (b)NeuralDEMdrainagetime[s] (c)Absoluteerror[s]
Figure11:GeneralizationtoDEMsimulationsettingsthatareoutsidetherangeseenduringtraining.
Weexcludeallsettingsinarangeof20degreeshopperanglesandinternalfrictionanglesfromthe
training set and evaluate drainage time on the excluded settings. The NeuralDEM model makes
reasonablepredictionsdespitelackingthoseparametercombinationsduringtraining. Forreference,
theaverageabsoluteerroris0.19swhenrandomlysplittingthedataintotrain/testsplits(Figure9b).
Graydotsindicatetrainingdataandcoloreddotsdenotesimulationsusedforevaluationonly.
4.2.6 Macroscopicparameterconditioning
Acommonusecaseintheindustryisthatgivensomematerial,onewantstosimulatethematerial
in,e.g.,ahoppertogetinsightsintoitsbehaviororflowdynamics. However,DEMsolversrequire
aprecisespecificationofthemicroscopicmaterialparameters, whichareoftenunknown. Inorder
torunaDEMsimulationofamaterialwithunknownmicroscopicparameters,thoseparametersfirst
havetobeinferredvia,e.g.,acalibrationprocedure[22]beforetheDEMsimulationofthematerial
can be run. In the case of our hopper simulation, one would need to infer the values of particle
slidingandrollingfriction.
Instead,theflexibleconditioningmethodology(asdescribedinSection3.3)allowsNeuralDEMto
conditiononmacroscopicparametersinsteadofmicroscopicones. Tothisend,weevaluatethein-
18
]°[
elgna
noitcirf
llec
raehS
]°[
elgna
noitcirf
llec
raehS
]°[
elgna
noitcirf
llec
raehSternalfrictionangleandflowfunctioncoefficientinaseparateshearcellsimulationtocharacterize
thematerialmacroscopically. Wethenusethemacroscopicinternalfrictionangleandflowfunction
coefficient(θandffc)asconditioninginsteadofthemicroscopicslidingandrollingfrictionparame-
ters(µ andµ). Thisallowsourmodeltosimulateanygivenmaterialbysimplycharacterizingitin
s r
ashearcellandusingtheresultingmacroscopicfrictionparametersasinputtothemodel,without
needingparticlesliding/rollingfriction.
Table 3 shows a quantitative comparison with different conditionings. Note that a drop in perfor-
manceisexpectedasthemicroscopicmaterialproperties1:1reflecttheunderlyingDEMsimulation.
Nevertheless,thisdropiswithinanacceptablerangesuchthatmodelpredictionsarestilluseful,as
showninFigure12.
Scalars NeuralDEMpredictiveperformance
Drainage Residual Outflow Transport Residence
µ µ θ ffc
s r error[s] error[%] error MSE[1e-2] MSE[1e-3]
✓ ✓ ✗ ✗ 0.19 0.41 17.3 0.72 1.59
✗ ✗ ✓ ✗ 0.41 0.64 44.6 2.30 4.46
✗ ✗ ✗ ✓ 0.78 0.80 38.6 4.48 7.78
✗ ✗ ✓ ✓ 0.40 0.66 28.4 1.96 3.82
✓ ✓ ✓ ✓ 0.23 0.62 17.2 0.74 1.46
Table 3: NeuralDEM performance metrics using different scalar conditions in the model. Condi-
tioning on microscopic sliding and rolling friction parameters (µ and µ) fully specifies the un-
s r
derlyingDEMsimulationandleadstothebestperformances. Conditioningonlyonthemeasured
macroscopicfrictionangle(θ)andflowfunctioncoefficient(ffc)fromashearcelldevicecanobtain
reasonableresultswhilenotrequiringcalibrationprocedures,i.e.,µ /µ areunknown.Themeasured
s r
scalars from the shear cell device provide no additional information and therefore do not improve
modelperformance.
(a)Groundtruth (b)NeuralDEMusing (c)NeuralDEMusing
DEMsimulation microscopicparameter macroscopicparameter
conditioning conditioning
Figure 12: NeuralDEM transport field prediction using microscopic simulation parameters vs
macroscopicmaterialparameters. Conditioningonmicroscopicslidingandrollingfrictionparame-
ters(µ andµ)reflectstheunderlyingDEMsimulationexactlyandresultsinaccurateagreementof
s r
thetransportfield. However,conditioningonlyonthemeasuredmacroscopicfrictionangle(θ)and
flowfunctioncoefficient(ffc)stillleadstoacceptableaccuracywithsmalldeviations. Thisallows
NeuralDEM to work without a calibration routine to get the microscopic parameters on any given
materialwhereµ andµ areunknown.
s r
194.2.7 Refillingoperationmode
For neural operator modeling, it is difficult to represent particles that do not exist at the initial
timeframe. This is due to the typically stochastic nature of the refilling process, and one would
need to accurately model this process during inference in order to avoid unrealistic states, e.g.,
overlapping particles. However, our field-based modeling paradigm allows NeuralDEM to model
themacroscopicbehaviorofrefilledparticleswithoutrequiringtheiraccuratepositions.
Toshowcasethissetting,wetrainaNeuralDEMmodeltopredicttheevolvedtransportandresidence
timewhencontinuouslyrefillingnewparticlesintothehopper. Astherefillingoperationmodecan
go on indefinitely, the model needs some kind of reference frame to predict “how did particles
movew.r.t.thereferenceframe”and“howlongparticleshavebeeninthehopperw.r.t.thereference
frame”. To this end, we sample a random past timestep during training and predict transport and
residencetimew.r.t.thispasttimestep. Figure13showstheevolvedtransportover50MLtimesteps
(5s)incomparisontoagroundtruthDEMsimulation.
(a)Groundtruth (b)Groundtruth (c)NeuralDEM
DEMsimulationt DEMsimulationt +5s predictiont +5s
ref ref ref
Figure13: NeuralDEMtransportfieldpredictionforthehoppercaseinrefillingoperationmodevs
groundtruthDEMsimulation. Thetransportfieldisinitializedatareferencetime(a). Theground
truthofthe5sevolvedfieldisshownin(b)andtheNeuralDEMpredictionin(c). NewlyRefilled
material since is shown in gray. NeuralDEM can accurately model the transport of material in a
hopperinrefillingoperationmode.
TheresidencetimeinthehoppercangotoinfinitywhentheNeuralDEMtrajectoryisrolledoutfor
longer. Thishappenswhenmaterialisstuckinsidethehopper,whichtheNeuralDEMmodelcannot
predict as it only sees simulations of a fixed maximum duration during training. Conditioning of
theresidenceoff-branchtoareferencetimestepsallowsustoperiodicallyresetthereferencetime
duringinferenceandaggregatetheresidencetimepredictionsbeforeeachresetinpost-processing.
4.2.8 Runtime: NeuralDEMenablesreal-timesimulations
Simulatingagranularflowof250kparticlesthroughahopper,withatrajectoryspanning40sor4M
numericaltimesteps,requires3hourson16coresofhigh-performanceCPUswhenusingtraditional
DEM.Incontrast, onasinglestate-of-the-artGPU,thefastestNeuralDEMinferencemodelfaith-
fullyreproducesthephysicsrolloutinjust1.4s. Notably,NeuralDEMrequiressignificantlyfewer
timestepscomparedtothenumericalsimulation. FurtheraccelerationisachievedthroughNeural-
DEM’sfield-basedoutputrepresentation,whichreducesthenumberofrequiredoutputpointswhile
still capturing the macroscopic bulk behavior accurately. When processing all 250k output points
onasingleGPU,NeuralDEMinferencetakes8s. RunningNeuralDEMonthesame16CPUsused
forthenumericalsimulation–notablyleveragingthebenefitsofreducedoutputsduetofield-based
representations–resultsinatrajectoryrolloutof41s. Thoseinferencetimesareshorter(GPU)than
orinthesameorderofmagnitude(16CPUs)asthetrajectorydurationof40s,highlightingthefea-
sibilityofreal-timesimulations. WhiletraditionalDEMcouldtheoreticallybefurtherparallelized,
20foracertainthreadnumberhardwarecommunicationbottleneckspresentalimitingfactor,andthus
furtherunderlinesthepotentialofNeuralDEM.
4.3 Fluidizedbedreactors
Assecondindustrialparticulateflowmachinery,weconsiderthehighlydynamicsystemoffluidized
bedreactors,whereparticlesandairinteract,necessitatingamulti-physicsmodeling,seeFigure6b.
These processes are described through a coupled CFD-DEM simulation, where DEM is used to
handleparticles,whilethesurroundingfluidissimulatedbyCFD.Numerically,thereactorisfilled
with500kparticles,andtheairthatisuniformlypushedintothereactorfromthebottomismodeled
onagridof160khexahedralcells. Thefollowingnumericalexperimentsarecarriedoutonafixed-
geometryreactorwithvaryinginletvelocities, andweevaluateshort-termbehaviorandlong-term
statistics.Intotal,76differenceinletvelocitiessampleduniformlyfrom0.337ms−1to0.842ms−1
wereused.Additionally,6differentinitialrandomparticlepackingsperinletvelocityweresampled,
resultingin456CFD-DEMtrajectories. ThephysicaldurationofoneDEMsimulationamountsto
5s,comprising2MDEMtimestepsand20kCFDtimesteps.
TotraintheNeuralDEMmodel,eachtrajectoryissub-sampledto300timesteps,startingfrom2sof
theoriginalsimulationandsamplingevery∆t =0.01s.Theclassicalsolverrequiresamuchfiner
ML
time resolution where ∆t = 4000∆t = 40∆t . We select 60 inlet velocities at random
ML DEM CFD
forthetrainingsetandtheremaining16areleftforvalidation,thusobtainingatrainingsetof360
trajectoriesandavalidationsetof96. FortestingthelongrolloutperformanceofNeuralDEM,we
further generate 4 sequences with a physical duration of 28s and different inlet velocities, where
newrandominitialpackingsareapplied. Thosetrajectoriesresultinsequencesof2800timesteps.
4.3.1 Multi-branchneuraloperatorarchitectureforfluidizedbedreactorexperiments
Modeling a fluidized bed reactor requires interaction between fluid and particles. To this end, we
utilize both grid data and particle data as input to the model. As described in Section 3.4, we
use specialized designs for different physics phases. Namely, ViT [26] patch embedding for grid
dataandUPTsupernodepooling[3]forparticledata. Thenumberofsupernodesandpatchescan
be changed after training, enabling stable training and a flexible choices for generating trajectory
rollouts. Rolloutsarecarriedoutinautoregressivefashion,whereeachtimestepisusedasinputfor
thenexttimestep. Duringtraining,themodelreceivesdatafromarandomtimestept,isconditioned
ontheinletvelocity,andissupervisedwiththequantitiesfromtimestept+∆t .Theinletvelocity
ML
conditioning is performed analogously to the hopper setting, with a DiT [77] modulation. The
particlemixingismodeledasanoff-branchquantity.
Thefinalmodelhasroughly850MtrainableparametersintotalwhereweuseastandardDiT[77]
conditioningmechanismwhichaddsalotofparametersthatdonotcontributeasignificantamount
ofFLOPStothemodel. Weuse12multi-branchtransformerblocksintotalwithhiddendimension
768, where each of the 3 branches would correspond to a ViT-Base [26] (86M parameters) if no
DiT modulation was applied. The model processes sequences with length of 2048 tokens for the
particledisplacement,2500forthefluidvelocityandparticlesolidfraction,and2500fortheparticle
mixing,bothwith4×4×4patches. Themodelistrained126kupdatesusingabatchsizeof128,a
peaklearningrateof4×10−5 whichiswarmedupfor13kupdatesfollowedbyadecayingcosine
scheduleto10−7 usingLION[19]asoptimizerwith0.5asweightdecay. Thelossissummedover
allbranches.
4.3.2 Modelingthedynamicsofthesystem
A fluidized bed reactor simulation exhibits fast and transient dynamics with many physically pos-
sible trajectories, i.e., fluidized bed reactor trajectories are chaotic. This means that – also for nu-
mericalsolvers–startingafluidizedbedsimulationwithdifferentinitialparticlepackingswillyield
differenttrajectories. Still, inthelimitoflongsimulationtrajectories, differentinitialpackingsdo
notaffectthetemporalstatistics. Duetothisphenomenon,weusetime-averagedstatisticsforquan-
titativecomparisons, seeFigure15andFigure16. Precisestep-by-stepcomparisonisnotfeasible
duetonumericaldifferencesthatnaturallyariseduringarollout.InFigure7,weshowavisualcom-
parison of the iso-surface of solid fraction, solid fraction field, and fluid velocity for two different
inletvelocities. Whenthetwotimeseriesarecomparedtothegroundtruthsnapshotstheylookvery
similar,especiallythebubblestructurevisualizedbytheisosurfaceonthesolidfractionfield.
21NeuralDEMprediction GroundtruthCFD-DEMsimulation
(a)Lowinletvelocity
NeuralDEMprediction GroundtruthCFD-DEMsimulation
(b)Highinletvelocity
Figure14: Visualizationofthreesnapshotstakenat0.06s,0.09sand0.12sfortwodifferentinlet
velocities (a) 0.45ms−1 and (b) 0.7ms−1. The first row shows iso-surfaces of solid fraction at
0.35uncoveringtheemergingbubblestructureoffluidizedbedreactors. Thesecondandthethird
show the central slice along the y-axis for the solid fraction and the magnitude of fluid velocity,
respectively. Here, NeuralDEM uses the same initial conditions as the CFD-DEM simulation and
faithfullyreproducestheevolutionofthesysteminthefirstfewstepsofthesimulation. Pleaserefer
tohttps://nx-ai.github.io/NeuralDEM/forvideosoftherollouts.
22Noticehow,withlowinletvelocity,asinglebubbleofairformsinsidethedenseparticlebed. When
thebubblereachesthesurface,aripple-likestructureisformedbytheparticles,clearlydisplaying
theirfluidization.Withhighinletvelocity,thebehaviorismuchmoreunorganizedandacomplicated
bubblestructureinsidetheparticlebedarises. NeuralDEMhandlesbothregimessuccessfully,mod-
elingtheorganizedandstructuredlow-velocitybubbledynamicsaswellasthechaotic,high-velocity
particle interactions, accurately capturing the transitions in flow patterns and complex fluidization
behavioracrossdifferentregimes.
Thefluidvelocitywithintheparticlebedshowsdistinctpatternsinfluencedbyparticlemotionand
fluid-particleinteractions.Atlowinletvelocity,thefluidflowisrelativelystable,withmodestspatial
gradientsaroundtherisingairbubble. Incontrast,withhighinletvelocity,thefluidvelocityacross
the bed is higher compared to the previous case, not only due to the high inlet velocity but also
because of the dynamic movement of particles within the bed. These variations result in complex
flowfields,withstrongfluctuationsthatarechallengingtomodel. NeuralDEMaccuratelycaptures
these dynamics and replicates the different velocity profiles for all inlet velocity regimes between
thescenariosshownhere.
CFD-DEM NeuralDEM CFD-DEM NeuralDEM CFD-DEM NeuralDEM CFD-DEM NeuralDEM
Meanfluidvelocity Stddev.fluidvelocity Meanfluidvelocity Stddev.fluidvelocity
CFD-DEM NeuralDEM CFD-DEM NeuralDEM CFD-DEM NeuralDEM CFD-DEM NeuralDEM
Meansolidfraction Stddev.solidfraction Meansolidfraction Stddev.solidfraction
(a)Lowinletvelocity (b)Highinletvelocity
Figure 15: Comparison of long term temporal averaging statistics for two fluid inlet velocities.
Slicesalongthey-axisofthemeanandthestandarddeviationofthemagnitudeofthevelocityfield
andthesolidfractionfieldshown. EachpairsshowstheCFD-DEMsimulationandtheNeuralDEM
model,respectively. NeuralDEMpredictionscloselymatchthelong-termstatisticsofbothslowand
fastinletvelocityregimes,wherespatialgradientsvaryfromsmalltoveryhigh.
4.3.3 Physicsevaluation
NeuralDEM’scapabilitytomaintainstabilityandaccuracyoverextendedsimulationperiodsises-
sentialforrealisticmodelingofparticle-fluidsystems. Wedemonstratethelong-termrolloutstabil-
itybyanalyzingthetimeaveragesolidfractionandfluidvelocityfieldfor2.8ksteps,representing
28sofphysicalsimulation. Thelengthofthetrajectoryresultedfroma30sCFD-DEMsimulation,
230.250 0.250
CFD-DEM CFD-DEM
0.225 NeuralDEM 0.225 NeuralDEM
0.200 0.200
0.175 0.175
0.150 0.150
0.0 6.0 12.0 18.0 24.0 30.0 0.0 6.0 12.0 18.0 24.0 30.0
Time [s] Time [s]
(a)Lowinletvelocity (b)Highinletvelocity
Figure16: TheaveragesolidfractionpredictedbytheNeuralDEMmodelisstableoverextremely
longrolloutsthatarealmost10×thelengthofthe3ssequencesusedfortraining.Notably,although
theoutputofNeuralDEMmodelsafield,themassoftheentiresystemispreservedalmostperfectly.
They-axisrangesfrom0.15to0.25toshowmoredetailbutthesolidfractioncanrangefrom0to1.
sufficienttodeterminethelong-termstatistics. NeuralDEMisnotlimitedtothislengthanddidnot
showanystabilityproblemupto100s. Tothebestofourknowledge,thesearethelongestreported
stablerolloutsinthedeeplearning-based3Dphysicalsimulationfield[48,63,82].
InFigure15weshowthemeanandvarianceofthemagnitudeofthevelocityandthesolidfraction
over time for a given mesh cell. In the figure, we display the central slice along the y-axis (aka
thedepthofthereactor). NeuralDEMsuccessfullycapturesthedifferentlong-termbehaviorofthe
particlesandthefluidwhendifferentinletvelocitiesareused.
Possibly the most crucial property of a physics simulation is mass conservation. In a CFD-DEM
simulation,aslongastheparticlesstaywithinthedomain,theoverallmasswillnotchange. InFig-
ure16weshowhowNeuralDEM,althoughitdoesnotmodeleachparticleindependently,maintains
verygoodmassconservationforalltimesteps,showingnodriftthroughoutthepredictedtrajectory.
4.3.4 Mixingbehavior
Particle mixing by definition is a particle-associated quantity
whereeachparticleeitherbelongstogroupAorB.Inournu-
mericalexperiments, welabelparticlesbelongingtogroupA
thosethatstartinthelefthalfofthereactor,andparticlesbe-
longingtogroupBthosethatstartintherighthalf. However,
whenusingfield-basedrepresentations,afaithfulmodelingof
particle mixing is not feasible. Therefore, we introduce the
particlemixingconcentrationfield,whichdefines–foragiven
spatial location and time – the concentration of particles that
belongtogroupB.Consequently,wediscretizethedomainus-
ingahexahedronmeshandmaptheparticleinformationusing
aGaussiankernelonthatmesh,asshowninFigure17.
WeusetheLaceymixingindex[51]toallowforaquantitative
comparisonbetweenthemodelpredictionforthemixingcon-
(a) (b)
centration field and ground truth simulation data. The Lacey
mixingindexrepresentsthecurrentstateofmixingandcanbe Figure 17: (a) Particle-based mix-
plottedovertimetocomparethetimeevolutionoftheprocess. ingwherethedarkparticlesstarted
Astheparticlesgetmoremixed,theLaceymixingindexgoes from the right half of the reactor.
towards 1. As visualized in Figure 18, NeuralDEM predic- (b) Field-based concentration ob-
tionsmatchthecharacteristicsofthegroundtruthDEM-CFD tained using a Gaussian kernel on
trajectoriesoverlongtimehorizons. Itisofspecialnotehow amesh.
NeuralDEM can accurately predict the mixing rate for both slow-mixing systems and fast-mixing
onesbysimplyconditioningontheappropriateinletvelocity.
24
noitcarfdilos
egarevA
noitcarfdilos
egarevA1.0 1.0 1.0
CFD-DEM
0.8 0.8 0.8 NeuralDEM
0.6 0.6 0.6
0.4 0.4 0.4
CFD-DEM CFD-DEM
0.2 0.2 0.2
NeuralDEM NeuralDEM
0.0 0.0 0.0
0.0 0.6 1.2 1.8 2.4 3.0 0.0 0.6 1.2 1.8 2.4 3.0 0.0 0.6 1.2 1.8 2.4 3.0
Time [s] Time [s] Time [s]
(a)Lowinletvelocity (b)Mediuminletvelocity (c)Highinletvelocity
Figure18: ComparisonofthetemporalevolutionoftheLaceymixingindexforthreedifferentinlet
velocities: (a)0.36ms−1,(b)0.55ms−1,(c)0.84ms−1. NeuralDEMpredictions(blue)matchthe
characteristicsofthegroundtruthDEM-CFDtrajectories(orange)overlongtimehorizons. Inthe
lowinletvelocitysimulation,mixingisslowandthemodelcanveryaccuratelypredictthemixing
rate. Forhigherinletvelocitiesmixingisfasterandtheexactbehaviorlooksmorerandombecause
thebehaviorismorechaotic. However,themodelcorrectlycapturestheexacttrendinthemixing,
startingfastandlaterslowingdown.
4.3.5 Runtime: NeuralDEMenablesreal-timesimulations
SimilartoSection4.2.8,weevaluateNeuralDEM’spotentialforreal-timesimulations. Incontrast
to the hopper simulations of Section 4.2, the fluidized bed reactors are larger and more complex,
requiringroughly20timeslargerneuralnetworkarchitectures. Numerically,whenusingtraditional
CFDandDEMmethods,thesimulationofafluidizedbedreactorof500kparticles,withatrajectory
spanning 3s amounts to 12k CFD and 1.2M DEM timesteps. This requires 6 hours on 64 cores
of high-performance CPUs. In contrast, on a single state-of-the-art GPU, the fastest NeuralDEM
inferencemodelfaithfullyreproducesthesamephysicalbehaviorinjust11s.Withfurtherspeedups
via,e.g.,modelparallelization[85,98],ormodelquantization[64,87],real-timeinferenceiswithin
reach.
5 Discussion
5.1 Conclusion
The present work has introduced NeuralDEM, a multi-branch neural operator framework that can
learn the complex behavior of particulate systems over a wide range of dynamic regimes: from
dense, pseudo-steady motion in hoppers to dilute, highly unsteady flow in fluidized bed reactors.
NeuralDEM treats the Lagrangian discretization of DEM as an underlying continuous field while,
simultaneously, modeling macroscopic behavior directly as additional auxiliary fields. Long-term
rollouts of our data-driven model show a high degree of stability and lead to accurate predictions
regardingvarioustargetquantitiessuchasresidencetimesormixingindicesevenforunseencon-
ditionslikedifferentwallgeometries,materialproperties,orboundaryvalues. Evaluationtimesare
severalordersofmagnitudefasterthantheunderlying(CFD-)DEMsimulationsanddemonstratethe
real-timecapabilityofNeuralDEM.ThisremarkablespeedupstemsfromNeuralDEM’sfield-based
representation and the forward propagation thereof which is computationally much more efficient
than the coupled solution of a huge number of real-space EOMs and lends itself to massive par-
allelization. As a side effect, NeuralDEM does not require the specification of microscopic DEM
parameters. Instead,itcandirectlyoperateonmacroscopicpropertieslikeangleofreposeandshear
cellcharacterization,whichallowsforasimpleintegrationintoengineeringworkflows.
5.2 Existingmodelinglimitations
A fundamental pillar of NeuralDEM is the new concept of modeling physics via field-based rep-
resentations. This approach allows us to model macroscopic quantities extremely efficiently, thus
scaling to large systems. However, the field-based representation comes with the limitation that
properties attached to individual particles which cannot inherently be approximated spatially, are
hardtomodel. Toovercomethislimitation,thesequantitieshavetobereplacedbyanapproximate
25
xedni
yecaL
xedni
yecaL
xedni
yecaLfield-based counterpart. A requirement for the demonstrated success of the autoregressive rollout
is that the output distribution during rollout should match the input distribution observed during
training. For example, particle-based quantities will be approximated with their field counterpart,
whichdoesnotnecessarilymatchthedistributionoftheinputdata,stiflingtheabilityofthemodelto
performlong-horizonpredictions. Additionally,theautoregressiverolloutiscompute-intensivebut
couldbeimprovedusingtimepropagationinthelatentspace,asintroducedbyAlkinetal.[3]. Fi-
nally,NeuralDEMworksbestwithinthedatadistributionitwastrainedon. Therefore,NeuralDEM
currently needs quite a lot of data to generalize across different geometries, operation parameters,
andmaterialproperties.
5.3 Futurework
While NeuralDEM clearly demonstrates the merits and massive potential of deep learning surro-
gates,wehaveappliedourmethodologyonlytotestcaseswhicharesmallerandsimplerthanreal
industrialprocesses. Forthisreason, futureworkwilladdresstheissuesoflargerscalesandmore
complexphysics. Withregardtothespatialscope,wewillinvestigateifitispreferabletousedata
from detailed, fine-grained simulations in small domains and devise strategies for NeuralDEM to
upscalethisinformation,oriflarge-scaledatafrommoreapproximate,coarse-grainedsimulations
without subsequent upscaling steps lead to more reliable results. Concerning real multi-physics
predictions, it is desirable to include heat transport and transfer as well as chemical reactions into
NeuralDEM. Besides the conceptual challenge that a larger number of branches needs to interact
witheachotherintheneuraloperator–dynamics,heattransfer,andchemistrycanbetightlycou-
pled–andgiveadetaileddescriptionofhowgrainsofdifferenttemperaturesandcompositionsmix
and interact, we will also have to face more practical obstacles. Such systems often come with
additionaltimescalesbecausecertainchemicalreactionsmightbeveryslowcomparedto,e.g.,the
rapidparticleandbubblemotioninafluidizedbed.Inthesecases,datagenerationwithconventional
numericalmethodscouldbecomeunfeasible,anditmightbenecessarytoincludeanintermediate,
data-assistedstep[62]tofirstobtainlong-termtrainingdatafromshort,high-fidelitytimeseries.
6 Acknowledgements
We would like to sincerely thank Dennis Just, Miks Mikelsons, Robert Weber, Bastian Best, and
the whole NXAI team for ongoing help and support. We are grateful to Sepp Hochreiter, Phillip
Lippe, Maurits Bleeker, Patrick Blies, Andreas Mayr, Andreas Radler, Behrad Esgandari, Daniel
Queteschinerforvaluableinputs. SamuelePapaandJohannesBrandstetterthankEfstratiosGavves
andJan-JakobSonkeforthehelptomakeSamuele’sresearchexchangesmoothandmutualbenefi-
cial.
WeacknowledgeEuroHPCJointUndertakingforawardingusaccesstoKarolinaatIT4Innovations,
Czech Republic, MeluXina at LuxProvide, Luxembourg, LUMI at CSC, Finland and Leonardo at
CINECA, Italy. The ELLIS Unit Linz, the LIT AI Lab, the Institute for Machine Learning, are
supportedbytheFederalStateUpperAustria.
References
[1] Abramson,J.,Adler,J.,Dunger,J.,Evans,R.,Green,T.,Pritzel,A.,Ronneberger,O.,Will-
more, L., Ballard, A. J., Bambrick, J., et al. Accurate structure prediction of biomolecular
interactionswithalphafold3. Nature,pp.1–3,2024.
[2] Ali,Z.,Biglari,R.,Denil,J.,Mertens,J.,Poursoltan,M.,andTraore´,M.K. Frommodeling
andsimulationtodigitaltwin: evolutionorrevolution? SIMULATION:TransactionsofThe
SocietyforModelingandSimulationInternational,100(7):751–769,2024.
[3] Alkin, B., Fu¨rst, A., Schmid, S., Gruber, L., Holzleitner, M., andBrandstetter, J. Universal
physicstransformers. arXivpreprintarXiv:2402.12365,2024.
[4] Amani, H., Alamdari, E. K., Moraveji, M. K., and Peters, B. Experimental and numerical
investigationofironorepelletfiringusingcoupledCFD-DEMmethod. Particuology,2024.
26[5] Aminnia,N.,Adhav,P.,Darlik,F.,Mashhood,M.,Saraei,S.H.,Besseron,X.,andPeters,B.
Three-dimensionalCFD-DEMsimulationofracewaytransportphenomenainablastfurnace.
Fuel,334:126574,2023.
[6] Anderson,T.B.andJackson,R.O.Y. Afluidmechanicaldescriptionoffluidizedbeds. Ind.
Eng.Chem.Fundam.,6(4):527–539,1967.
[7] Andre´, F. P. and Tavares, L. M. Simulating a laboratory-scale cone crusher in DEM using
polyhedralparticles. PowderTechnol.,372:362–371,2020.
[8] Baevski, A. and Auli, M. Adaptive input representations for neural language modeling. In
ICLR,2019.
[9] Batatia,I.,Kovacs,D.P.,Simm,G.,Ortner,C.,andCsa´nyi,G. Mace: Higherorderequivari-
antmessagepassingneuralnetworksforfastandaccurateforcefields. AdvancesinNeural
InformationProcessingSystems,35:11423–11436,2022.
[10] Batzner, S., Musaelian, A., Sun, L., Geiger, M., Mailoa, J. P., Kornbluth, M., Molinari, N.,
Smidt,T.E.,andKozinsky,B. E(3)-equivariantgraphneuralnetworksfordata-efficientand
accurateinteratomicpotentials. Naturecommunications,13(1):2453,2022.
[11] Benque,B.,Orefice,L.,Forgber,T.,Habeler,M.,Schmid,B.,Remmelgas,J.,andKhinast,J.
ImprovementofapharmaceuticalpowdermixingprocessinatoteblenderviaDEMsimula-
tions. Int.J.Pharm.,658:124224,2024.
[12] Bi, K., Xie, L., Zhang, H., Chen, X., Gu, X., and Tian, Q. Accurate medium-range global
weatherforecastingwith3dneuralnetworks. Nature,619(7970):533–538,2023.
[13] Bierwisch, C., Kraft, T., Riedel, H., and Moseler, M. Three-dimensional discrete element
models for the granular statics and dynamics of powders in cavity filling. J. Mech. Phys.
Solids,57(1):10–31,2009.
[14] Blais,B.,Vidal,D.,Bertrand,F.,Patience,G.S.,andChaouki,J. Experimentalmethodsin
chemical engineering: Discrete element method—DEM. Can. J. Chem. Eng., 97(7):1964–
1973,2019.
[15] Bodnar, C., Bruinsma, W. P., Lucic, A., Stanley, M., Brandstetter, J., Garvan, P., Riechert,
M.,Weyn,J.,Dong,H.,Vaughan,A.,etal. Aurora: Afoundationmodeloftheatmosphere.
arXivpreprintarXiv:2405.13063,2024.
[16] Brandstetter, J., Worrall, D. E., and Welling, M. Message passing neural PDE solvers. In
ICLR,2022.
[17] Chen, H., Sun, Y., Yuan, W., Pang, S., Yan, W., and Shi, Y. A review on discrete element
method simulation in laser powder bed fusion additive manufacturing. Chin. J. Mech. Eng.
Addit.Manuf.Front.,1(1):100017,2022.
[18] Chen,X.andWang,J. Acomparisonoftwo-fluidmodel,densediscreteparticlemodeland
CFD-DEMmethodformodelingimpinginggas–solidflows. PowderTechnol.,254:94–102,
2014.
[19] Chen,X.,Liang,C.,Huang,D.,Real,E.,Wang,K.,Pham,H.,Dong,X.,Luong,T.,Hsieh,
C.,Lu,Y.,andLe,Q.V. Symbolicdiscoveryofoptimizationalgorithms. AdvancesinNeural
InformationProcessingSystems,36:49205–49233,2023.
[20] Chen,Y.,Yang,O.,Sampat,C.,Bhalode,P.,Ramachandran,R.,andIerapetritou,M. Digital
twins in pharmaceutical and biopharmaceutical manufacturing: A literature review. Pro-
cesses,8(9),2020. ISSN2227-9717.
[21] Cheng, Z. and Wang, J. Estimation of contact forces of granular materials under uniaxial
compressionbasedonamachinelearningmodel. GranularMatter,24:1–14,2022.
[22] Coetzee, C. J. Calibration of the discrete element method. Powder Technol., 310:104–142,
2017.
27[23] Cundall, P. A. and Strack, O. D. L. A discrete numerical model for granular assemblies.
Ge´otechnique,29(1):47–65,1979.
[24] deMunck,M.,Peters,E.,andKuipers,J. Fluidizedbedgas-solidheattransferusingaCFD-
DEMcoarse-grainingtechnique. Chem.Eng.Sci.,280:119048,2023. ISSN0009-2509.
[25] Diez,E.,Kieckhefen,P.,Meyer,K.,Bu¨ck,A.,Tsotsas,E.,andHeinrich,S.Particledynamics
inamulti-stagedfluidizedbed:Particletransportbehavioronmicro-scalebydiscreteparticle
modelling. Adv.PowderTechnol.,30(10):2014–2031,2019. ISSN0921-8831.
[26] Dosovitskiy, A., Beyer, L., Kolesnikov, A., Weissenborn, D., Zhai, X., Unterthiner, T., De-
hghani,M.,Minderer,M.,Heigold,G.,Gelly,S.,Uszkoreit,J.,andHoulsby,N. Animageis
worth16x16words: Transformersforimagerecognitionatscale. InICLR,2021.
[27] Esser, P., Kulal, S., Blattmann, A., Entezari, R., Mu¨ller, J., Saini, H., Levi, Y., Lorenz, D.,
Sauer,A.,Boesel,F.,Podell,D.,Dockhorn,T.,English,Z.,andRombach,R.Scalingrectified
flowtransformersforhigh-resolutionimagesynthesis. InICML,volume235ofProceedings
ofMachineLearningResearch,pp.12606–12633.PMLR,2024.
[28] Gan,J.,Evans,T.,andYu,A. ApplicationofGPU-DEMsimulationonlarge-scalegranular
handling and processing in ironmaking related industries. Powder Technol., 361:258–273,
2020. ISSN0032-5910.
[29] Giannis,K.,Schilde,C.,Finke,J.H.,andKwade,A. Modelingofhigh-densitycompaction
of pharmaceutical tablets using multi-contact discrete element method. Pharmaceutics, 13
(12):2194,2021.
[30] Gidaspow, D. Multiphase Flow and Fluidization: Continuum and Kinetic Theory Descrip-
tions. ElsevierScience,1994. ISBN9780122824708.
[31] Goniva, C., Kloss, C., Deen, N. G., Kuipers, J. A. M., and Pirker, S. Influence of rolling
frictiononsinglespoutfluidizedbedsimulation. Particuology,10:582–591,2012.
[32] Govender, N., Rajamani, R. K., Kok, S., and Wilke, D. N. Discrete element simulation of
millchargein3DusingtheBLAZE-DEMGPUframework. Miner.Eng.,79:152–168,2015.
ISSN0892-6875.
[33] Grohn,P.,Lawall,M.,Oesau,T.,Heinrich,S.,andAntonyuk,S. CFD-DEMsimulationofa
coatingprocessinafluidizedbedrotorgranulator. Processes,8(9):1090,2020.
[34] Guillaud,X.,Faruque,M.O.,Teninge,A.,Hariri,A.H.,Vanfretti,L.,Paolone,M.,Dinavahi,
V.,Mitra,P.,Lauss,G.,Dufour,C.,Forsyth,P.,Srivastava,A.K.,Strunz,K.,Strasser,T.,and
Davoudi,A. Applicationsofreal-timesimulationtechnologiesinpowerandenergysystems.
IEEEPowerandEnergyTechnologySystemsJournal,2(3):103–115,2015.
[35] Guo,X.,Li,W.,andIorio,F. Convolutionalneuralnetworksforsteadyflowapproximation.
InProceedingsofthe22ndACMSIGKDDinternationalconferenceonknowledgediscovery
anddatamining,pp.481–490,2016.
[36] Gupta,J.K.andBrandstetter,J. Towardsmulti-spatiotemporal-scalegeneralizedPDEmod-
eling. Trans.Mach.Learn.Res.,2023,2023.
[37] Hao, Z., Wang, Z., Su, H., Ying, C., Dong, Y., Liu, S., Cheng, Z., Song, J., and Zhu, J.
Gnot: Ageneralneuraloperatortransformerforoperatorlearning. InICML,volume202of
ProceedingsofMachineLearningResearch,pp.12556–12569.PMLR,2023.
[38] Hemmasian,A.andFarimani,A.B. Pretraininganeuraloperatorinlowerdimensions. arXiv
preprintarXiv:2407.17616,2024.
[39] Herde,M.,Raonic´,B.,Rohner,T.,Ka¨ppeli,R.,Molinaro,R.,deBe´zenac,E.,andMishra,S.
Poseidon: Efficientfoundationmodelsforpdes. arXivpreprintarXiv:2405.19101,2024.
[40] Jaegle, A., Gimeno, F., Brock, A., Vinyals, O., Zisserman, A., and Carreira, J. Perceiver:
Generalperceptionwithiterativeattention. InICML,volume139ofProceedingsofMachine
LearningResearch,pp.4651–4664.PMLR,2021.
28[41] Javaid, M., Haleem, A., and Suman, R. Digital twin applications toward industry 4.0: A
review. CognitiveRobotics,3:71–92,2023. ISSN2667-2413.
[42] Johnson,K.L. ContactMechanics. CambridgeUniversityPress,Cambridge,UK,1985.
[43] Jumper, J., Evans, R., Pritzel, A., Green, T., Figurnov, M., Ronneberger, O., Tunyasuvu-
nakool, K., Bates, R., Zˇ´ıdek, A., Potapenko, A., et al. Highly accurate protein structure
predictionwithalphafold. nature,596(7873):583–589,2021.
[44] Kieckhefen,P.,Pietsch,S.,Dosta,M.,andHeinrich,S. Possibilitiesandlimitsofcomputa-
tionalfluiddynamics–discreteelementmethodsimulationsinprocessengineering: areview
of recent advancements and future trends. Annu. Rev. Chem. Biomol. Eng., 11(1):397–422,
2020.
[45] Kipf, T. N. and Welling, M. Semi-supervised classification with graph convolutional net-
works. InICLR,2017.
[46] Kloss,C.,Goniva,C.,Hager,A.,Amberger,S.,andPirker,S. Models,algorithmsandvali-
dationforopensourceDEMandCFD-DEM. Prog.Comput.FluidDyn.,12:140–152,2012.
[47] Knigge,D.M.,Wessels,D.R.,Valperga,R.,Papa,S.,Sonke,J.-J.,Gavves,E.,andBekkers,
E. J. Space-time continuous pde forecasting using equivariant neural fields. arXiv preprint
arXiv:2406.06660,2024.
[48] Kochkov, D., Smith, J. A., Alieva, A., Wang, Q., Brenner, M. P., and Hoyer, S. Machine
learning–acceleratedcomputationalfluiddynamics. ProceedingsoftheNationalAcademyof
Sciences,118(21):e2101784118,2021.
[49] Kofinas, M. M., Bekkers, E., Nagaraja, N., and Gavves, E. Latent field discovery in inter-
acting dynamical systems with neural fields. Advances in Neural Information Processing
Systems,36,2024.
[50] Kovachki, N. B., Li, Z., Liu, B., Azizzadenesheli, K., Bhattacharya, K., Stuart, A. M., and
Anandkumar,A. Neuraloperator: Learningmapsbetweenfunctionspaceswithapplications
topdes. J.Mach.Learn.Res.,24:89:1–89:97,2023.
[51] Lacey,P.M.C.Developmentsinthetheoryofparticlemixing.JournalofAppliedChemistry,
4(5):257–268,1954.
[52] Lam,R.,Sanchez-Gonzalez,A.,Willson,M.,Wirnsberger,P.,Fortunato,M.,Alet,F.,Ravuri,
S.,Ewalds,T.,Eaton-Rosen,Z.,Hu,W.,etal.Learningskillfulmedium-rangeglobalweather
forecasting. Science,382(6677):1416–1421,2023.
[53] Li, R., Duan, G., Yamada, D., and Sakai, M. Large-scale discrete element modeling for a
gas–solid–liquidflowsystem. Ind.Eng.Chem.Res.,62(42):17008–17018,2023.
[54] Li,Z.,Kovachki,N.,Azizzadenesheli,K.,Liu,B.,Bhattacharya,K.,Stuart,A.,andAnand-
kumar, A. Neural operator: Graph kernel network for partial differential equations. arXiv
preprintarXiv:2003.03485,2020.
[55] Li, Z., Kovachki, N. B., Azizzadenesheli, K., Liu, B., Bhattacharya, K., Stuart, A. M., and
Anandkumar, A. Neural operator: Graph kernel network for partial differential equations.
arXivpreprintarXiv:2003.03485,2020.
[56] Li, Z., Kovachki, N. B., Azizzadenesheli, K., Liu, B., Bhattacharya, K., Stuart, A. M., and
Anandkumar, A. Fourier neural operator for parametric partial differential equations. In
ICLR,2021.
[57] Li,Z.,Kovachki,N.B.,Choy,C.B.,Li,B.,Kossaifi,J.,Otta,S.P.,Nabian,M.A.,Stadler,M.,
Hundt,C.,Azizzadenesheli,K.,andAnandkumar,A.Geometry-informedneuraloperatorfor
large-scale3dpdes. AdvancesinNeuralInformationProcessingSystems,36:35836–35854,
2023.
29[58] Li,Z.,Li,X.,Zhang,H.,Huang,D.,andZhang,L. Thepredictionofcontactforcenetworks
ingranularmaterialsbasedongraphneuralnetworks. TheJournalofChemicalPhysics,158
(5),2023.
[59] Lichtenegger,T. Localandglobalrecurrencesindynamicgas-solidflows. Int.J.Multiphase
Flow,106:125–137,2018.
[60] Lichtenegger,T. Data-assisted,physics-informedpropagatorsforrecurrentflows. Phys.Rev.
Fluids,9:024401,Feb2024.
[61] Lichtenegger, T.andPirker, S. Fastlong-termsimulationsofhot, reacting, movingparticle
bedswithameltingzone. Chem.Eng.Sci.,283:119402,2024.
[62] Lichtenegger,T.,Peters,E.A.J.F.,Kuipers,J.A.M.,andPirker,S. ArecurrenceCFDstudy
ofheattransferinafluidizedbed. Chem.Eng.Sci.,172:310–322,2017.
[63] Lippe,P.,Veeling,B.,Perdikaris,P.,Turner,R.,andBrandstetter,J. Pde-refiner: Achieving
accurate long rollouts with neural pde solvers. Advances in Neural Information Processing
Systems,36:67398–67433,2023.
[64] Liu, Z., Wang, Y., Han, K., Zhang, W., Ma, S., and Gao, W. Post-training quantization for
vision transformer. Advances in Neural Information Processing Systems, 34:28092–28103,
2021.
[65] Lu,L. GPUacceleratedMFiX-DEMsimulationsofgranularandmultiphaseflows. Partic-
uology,62:14–24,2022. ISSN1674-2001.
[66] Lu, L., Jin, P., Pang, G., Zhang, Z., and Karniadakis, G. E. Learning nonlinear operators
via deeponet based on the universal approximation theorem of operators. Nature machine
intelligence,3(3):218–229,2021.
[67] Mayr,A.,Lehner,S.,Mayrhofer,A.,Kloss,C.,Hochreiter,S.,andBrandstetter,J. Boundary
graphneuralnetworksfor3dsimulations. ProceedingsoftheAAAIConferenceonArtificial
Intelligence,37(8):9099–9107,2023.
[68] McCabe, M., Blancard, B. R.-S., Parker, L. H., Ohana, R., Cranmer, M., Bietti, A., Eick-
enberg, M., Golkar, S., Krawezik, G., Lanusse, F., et al. Multiple physics pretraining for
physicalsurrogatemodels. arXivpreprintarXiv:2310.02994,2023.
[69] Merchant,A.,Batzner,S.,Schoenholz,S.S.,Aykol,M.,Cheon,G.,andCubuk,E.D.Scaling
deeplearningformaterialsdiscovery. Nature,pp.1–6,2023.
[70] Mildenhall, B., Srinivasan, P. P., Tancik, M., Barron, J. T., Ramamoorthi, R., and Ng, R.
Nerf: Representingscenesasneuralradiancefieldsforviewsynthesis. Communicationsof
theACM,65(1):99–106,2021.
[71] Mittal,A.,Mangadoddy,N.,andBanerjee,R. Developmentofthree-dimensionalGPUDEM
code–benchmarking,validation,andapplicationinmineralprocessing. Comput.Part.Mech.,
10(6):1533–1556,2023.
[72] Musaelian,A.,Batzner,S.,Johansson,A.,Sun,L.,Owen,C.J.,Kornbluth,M.,andKozinsky,
B. Learning local equivariant representations for large-scale atomistic dynamics. Nature
Communications,14(1):579,2023.
[73] Nasato,D.S.andPo¨schel,T. Influenceofparticleshapeinadditivemanufacturing: Discrete
elementsimulationsofpolyamide11andpolyamide12. Addit.Manuf.,36:101421,2020.
[74] Nguyen,T.,Brandstetter,J.,Kapoor,A.,Gupta,J.K.,andGrover,A. Climax: Afoundation
modelforweatherandclimate. InICML,volume202ofProceedingsofMachineLearning
Research,pp.25904–25938.PMLR,2023.
[75] Norouzi,H.R.,Zarghami,R.,Sotudeh-Gharebagh,R.,andMostoufi,N.CoupledCFD-DEM
modeling: formulation, implementationandapplicationtomultiphaseflows. JohnWiley&
Sons,2016.
30[76] Pathak, J., Subramanian, S., Harrington, P., Raja, S., Chattopadhyay, A., Mardani, M.,
Kurth, T., Hall, D., Li, Z., Azizzadenesheli, K., et al. Fourcastnet: A global data-driven
high-resolution weather model using adaptive fourier neural operators. arXiv preprint
arXiv:2202.11214,2022.
[77] Peebles, W. and Xie, S. Scalable diffusion models with transformers. In ICCV, pp. 4172–
4182.IEEE,2023.
[78] Perez, E., Strub, F., De Vries, H., Dumoulin, V., and Courville, A. Film: Visual reasoning
with a general conditioning layer. Proceedings of the AAAI conference on artificial intelli-
gence,32(1):3942–3951,2018.
[79] Pfaff, T., Fortunato, M., Sanchez-Gonzalez, A., and Battaglia, P. W. Learning mesh-based
simulationwithgraphnetworks. InICLR,2021.
[80] Rombach, R., Blattmann, A., Lorenz, D., Esser, P., and Ommer, B. High-resolution image
synthesiswithlatentdiffusionmodels. InProceedingsoftheIEEE/CVFconferenceoncom-
putervisionandpatternrecognition,pp.10684–10695,2022.
[81] Sakai,M.andKoshizuka,S. Large-scalediscreteelementmodelinginpneumaticconveying.
Chem.Eng.Sci.,64(3):533–539,2009.
[82] Sanchez-Gonzalez,A.,Godwin,J.,Pfaff,T.,Ying,R.,Leskovec,J.,andBattaglia,P.Learning
tosimulatecomplexphysicswithgraphnetworks. InICML,volume119ofProceedingsof
MachineLearningResearch,pp.8459–8468.PMLR,2020.
[83] Scarselli,F.,Gori,M.,Tsoi,A.C.,Hagenbuchner,M.,andMonfardini,G. Thegraphneural
networkmodel. IEEEtransactionsonneuralnetworks,20(1):61–80,2008.
[84] Seidman, J., Kissas, G., Perdikaris, P., and Pappas, G. J. Nomad: Nonlinear manifold de-
codersforoperatorlearning. AdvancesinNeuralInformationProcessingSystems,35:5601–
5613,2022.
[85] Shoeybi,M.,Patwary,M.,Puri,R.,LeGresley,P.,Casper,J.,andCatanzaro,B.Megatron-lm:
Training multi-billion parameter language models using model parallelism. arXiv preprint
arXiv:1909.08053,2019.
[86] Sitzmann, V., Martel, J. N., Bergman, A. W., Lindell, D. B., and Wetzstein, G. Implicit
neural representations with periodic activation functions. Advances in Neural Information
ProcessingSystems,33:7462–7473,2020.
[87] Sung, W., Shin, S., andHwang, K. Resiliencyofdeepneuralnetworksunderquantization.
arXivpreprintarXiv:1511.06488,2015.
[88] Toshev, A. P., Galletti, G., Brandstetter, J., Adami, S., and Adams, N. A. Learning la-
grangian fluid mechanics with e (3)-equivariant graph neural networks. arXiv preprint
arXiv:2305.15603,2023.
[89] Toshev,A.P.,Erbesdobler,J.A.,Adams,N.A.,andBrandstetter,J. NeuralSPH:improved
neuralmodelingoflagrangianfluiddynamics. InICML,volume235ofProceedingsofMa-
chineLearningResearch,pp.48428–48452.PMLR,2024.
[90] Vaswani,A.,Shazeer,N.,Parmar,N.,Uszkoreit,J.,Jones,L.,Gomez,A.N.,Kaiser,Ł.,and
Polosukhin,I. Attentionisallyouneed. Advancesinneuralinformationprocessingsystems,
30,2017.
[91] Vinuesa,R.andBrunton,S.L. Enhancingcomputationalfluiddynamicswithmachinelearn-
ing. NatureComputationalScience,2(6):358–366,2022.
[92] Wang,S.,Yu,Z.,Zhang,W.,etal. Studyonthemodelingmethodofsunflowerseedparticles
basedonthediscreteelementmethod. Comput.Electron.Agr,198:107012,2022.
[93] Wang, S., Seidman, J. H., Sankaran, S., Wang, H., Pappas, G. J., and Perdikaris, P. Bridg-
ing operator learning and conditioned neural fields: A unifying perspective. arXiv preprint
arXiv:2405.13998,2024.
31[94] Wang,T.andWang,C. Latentneuraloperatorforsolvingforwardandinversepdeproblems.
arXivpreprintarXiv:2406.03923,2024.
[95] Weller, H. G., Tabor, G., Jasak, H., and Fureby, C. A tensorial approach to computational
continuum mechanics using object-oriented techniques. Computer in Physics, 12(6):620–
631,111998. ISSN0894-1866.
[96] Wu, H., Luo, H., Wang, H., Wang, J., and Long, M. Transolver: A fast transformer solver
forpdesongeneralgeometries. InICML,volume235ofProceedingsofMachineLearning
Research,pp.53681–53705.PMLR,2024.
[97] Xie, Y., Takikawa, T., Saito, S., Litany, O., Yan, S., Khan, N., Tombari, F., Tompkin, J.,
Sitzmann, V., and Sridhar, S. Neural fields in visual computing and beyond. Computer
GraphicsForum,41(2):641–676,2022.
[98] Xu, Y., Lee, H., Chen, D., Hechtman, B., Huang, Y., Joshi, R., Krikun, M., Lepikhin, D.,
Ly,A.,Maggioni,M.,etal. Gspmd: generalandscalableparallelizationformlcomputation
graphs. arXivpreprintarXiv:2105.04663,2021.
[99] Yan, D., Yu, J., Wang, Y., Zhou, L., Sun, K., and Tian, Y. A review of the application of
discreteelementmethodinagriculturalengineering: Acasestudyofsoybean. Processes,10
(7):1305,2022.
[100] Yan, W., Wang, J., Lu, S., Zhou, M., and Peng, X. A review of real-time fault diagnosis
methodsforindustrialsmartmanufacturing. Processes,11(2),2023. ISSN2227-9717.
[101] Yu,J.,Wang,S.,Luo,K.,andFan,J. CFD-DEMmodelingofdensegas-solidreactingflow
intheframeworkofGPU. Chem.Eng.J,484:149480,2024. ISSN1385-8947.
[102] Zeni, C., Pinsler, R., Zu¨gner, D., Fowler, A., Horton, M., Fu, X., Shysheya, S., Crabbe´, J.,
Sun,L.,Smith,J.,etal. Mattergen: agenerativemodelforinorganicmaterialsdesign. arXiv
preprintarXiv:2312.03687,2023.
[103] Zhang, C., Chen, Y., Wang, Y., and Bai, Q. Discrete element method simulation of granu-
larmaterialsconsideringparticlebreakageingeotechnicalandminingengineering: Ashort
review. GreenandSmartMiningEngineering,2024.
[104] Zhang,J.,Tan,Y.,Xiao,X.,andJiang,S.Comparisonofroller-spreadingandblade-spreading
processesinpowder-bedadditivemanufacturingbyDEMsimulations. Particuology,66:48–
58,2022.
[105] Zhang,X.,Wang,L.,Helwig,J.,Luo,Y.,Fu,C.,Xie,Y.,Liu,M.,Lin,Y.,Xu,Z.,Yan,K.,
etal. Artificialintelligenceforscienceinquantum,atomistic,andcontinuumsystems. arXiv
preprintarXiv:2307.08423,2023.
[106] Zhao,H.,Huang,Y.,Liu,Z.,Liu,W.,andZheng,Z. Applicationsofdiscreteelementmethod
intheresearchofagriculturalmachinery: Areview. Agriculture,11(5):425,2021.
[107] Zhou, A., Li, Z., Schneier, M., Buchanan Jr, J. R., and Farimani, A. B. Text2pde: Latent
diffusionmodelsforaccessiblephysicssimulation. arXivpreprintarXiv:2410.01153,2024.
32