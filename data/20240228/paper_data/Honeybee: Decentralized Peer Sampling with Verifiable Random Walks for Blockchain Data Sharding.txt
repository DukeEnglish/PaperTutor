Honeybee: Decentralized Peer Sampling with Verifiable
Random Walks for Blockchain Data Sharding
YUNQIZHANG,TheOhioStateUniversity,USA
SHAILESHHBOJJAVENKATAKRISHNAN,TheOhioStateUniversity,USA
Datasharding—inwhichblockdataisshardedwithoutshardingcompute—isatthepresentthefavored
approachforscalingEthereum.Akeychallengetowardimplementingdatashardingisverifyingwhether
theentiretyofablock’sdataisavailableinthenetwork(acrossitsshards).Acentraltechniqueproposedto
conductthisverificationuseserasurecodedblocksandiscalleddataavailabilitysampling(DAS).Whilethe
high-levelprotocoldetailsofDAShasbeenwelldiscussedinthecommunity,discussionsaroundhowsucha
protocolwillbeimplementedatthepeer-to-peerlayerarelacking.Weidentifyrandomsamplingofnodesas
afundamentalprimitivenecessarytocarryoutDASandpresentHoneybee,adecentralizedalgorithmfor
samplingnodethatusesverifiablerandomwalks.Honeybeeissecureagainstattackseveninthepresenceofa
largenumberofByzantinenodes(e.g.,50%ofthenetwork).WeevaluateHoneybeethroughexperimentsand
showthatthequalityofsamplingachievedbyHoneybeeissignificantlybettercomparedtothestate-of-the-art.
OurproposedalgorithmhasimplicationsforDASfunctionsinbothfullnodesandlightnodes.
CCSConcepts:•Networks→Networkalgorithms;Peer-to-peerprotocols;Networkperformanceevalua-
tion;Networkproperties;Peer-to-peernetworks;•Theoryofcomputation→Distributedalgorithms;•
Computingmethodologies→Multi-agentsystems.
AdditionalKeyWordsandPhrases:blockchain,peer-to-peer,dataavailabilitysampling
1 INTRODUCTION
Blockchainsaresteadilymaturingintoecosystemsthatsupportdecentralizedapplications(dapp)
indiversedomains—includingfinance,payments,storage,games,healthcareetc.—andusedby
millionsofclientsconductingbillionsofdollarsoftransactionseachday[13].Asdemandfordapp
usageincreases,itisimportantthattheblockchainscanhandlethehighrateoftransactionrequests.
TodaytheEthereumblockchaincanprocessatmostafewtentransactionspersecondonaverage
whichhasresultedinunacceptablyhightransactionfeesduringperiodsofhighdemand[24].
Toaddressthescalingproblem,theEthereumcommunityisfocusedonthedevelopmentofa
data-shardingdesigninwhich(1)blocksizesareincreasedfromthecurrent80kB(average)toas
bigas30MB[37]anderasurecoded,(2)eachvalidatornodestoresonlyasmallchunkofeachcoded
block.Anincreasedblocksizenaturallyadmitsagreaternumberoftransactionsandimproves
transactionthroughputofthechain.Combinedwiththeuseoflayer-2scalingmethods,particularly
Rollups[22],Ethereumenvisionsaroadmapwhereinatheoreticalmaximumthroughputof100,000
transactionspersecondisfeasible[25].DatashardinginEthereumiscolloquiallyreferredasDank
sharding,namedafteritsproposer[17].
Afundamentalchallengetowardrealizingdatashardingisthedesignofthepeer-to-peer(p2p)
network. Unlike Ethereum 1.0 which used a simple broadcast gossip primitive to disseminate
transactionsandblocksinthenetworkorEthereum2.0whichusesapublish-subscribemodel
todisseminatedifferenttypesofmessages(e.g.,attestations,blocks,transactions)overdifferent
subnets,anodeinadata-shardedEthereummustadditionallybeabletochecktheavailabilityof
afullblockbysamplingrandomchunksfromothernodes[1].Thisrequiresarequestingnode
tobeabletocontactrandomlyselectednodesinthenetworkanddownloadchunks.Havingthe
abilitytosamplerandomchunksisimportantnotonlyforfullfunctionalnodes,butalsoforlight
nodes(e.g.,awalletrunningonasmartphone)whichcannumberinthemillionscomparedtothe
thousandsoffullnodesavailabletoday[23].
1
4202
beF
52
]IN.sc[
1v10261.2042:viXraYunqiZhangandShaileshhBojjaVenkatakrishnan
Inanopen,permissionlessanddecentralizedsettingthatEthereumoperateson,developing
analgorithmbywhichanodecanuniformlysampleothernodesinthep2pnetworkisfarfrom
straightforward.AtpresentEthereum’sp2pstack(basedondevp2pandlibp2p)usetheKademlia
distributedhashtable(DHT)protocol[35]tosampleanddiscovernewnodes,aspartofthenode
discoveryprocedure[42,43].Todiscoverarandomnodeinthenetwork,allanodehastodoisissue
aqueryforarandomlyselectedtargetidentifierinKademliaandreceivetheIPaddressinformation
ofthenodethatisclosesttothetargetidentifier(inKademlia’sXORdistancesense).
EventhoughEthereumusesKademliaastheprotocolofchoicetoperformnetwork-levelnode
sampling,inthispaperwearguethatinthepresenceofadversarialnodes(e.g.,Sybils),Kademlia
does not achieve uniform sampling and can cause a requesting node to become eclipsed. As a
potentialreplacementtoKademlia,inthispaperweproposeHoneybeewhichisafullydecentralized
p2palgorithmforperforminguniformnodesamplingeveninthepresenceofadversarialnodes.
A Honeybee node achieves sampling by participating in several random walks over the p2p
overlay. Each node in Honeybee maintains an address table containing addresses of the most
recentlysampledpeerswhicharealsousedtoprogressrandomwalksofotherpeersvisitingthe
node.Toprotectagainstadversarialattacks,Honeybeeusesverifiablerandomnessderivedfrom
theblockchaintoperformthewalks.Additionally,Honeybeenodesalsoperformpeer-to-peer
reconciliationofnodeaddresstablestoidentifyandexposeattackersengaginginequivocating
theiraddresstables.
Samplingnodesinadistributedsystemusingrandomwalkshashistoricallybeenwell-studied
inthecontextofapplicationssuchasoverlaymonitoring,designofexpanders,search,routing,
resourcemanagementetc[7].However,priorworksinthisspaceconsidermodelsthatdonot
simultaneouslysatisfyourrequirements:(1)thealgorithmmustbedecentralized,(2)therecanbea
largenumber(e.g.,constantfraction)ofadversarialnodes,and(3)adversarialnodescanexhibit
arbitraryByzantinebehavior(e.g.,messageinsertions,deletionsduringgossip).E.g.,Anceaumeet
al.[4,5]considerachievingsamplingthroughstreamingmessagesbetweenneighbors,butassume
there are no Sybil attacks. Augustine et al. [6] consider a dynamic p2p network model where
theattackerdecideshowthenetworkchurnsfromroundtoround.However,withineachround
theassumptionisthatgossipinghappenswithoutanymessageloss.TheworksAwanetal.[7],
Gkantsidisetal.[26],proposedistributedalgorithmforsamplinginunstructuredp2pnetworks,
butdonotconsideradversarialnodebehavior.
Wedonotattempttopresentafull-fledgedp2pnetworkdesignfordatashardinginEthereumin
thispaper.Ratherwepositthatauniformnodesamplingcapabilitywillhaveacentralroletoplayin
the(eventual)overallnetworkdesign.Thesamplingcapabilitycanalsoenhancetheeffectivenessof
broadcastintoday’sEthereump2psubnets.1Theemergingtrendofmodularblockchainsadvocates
foraseparatedataavailabilitylayerintheblockchainstack,theimplementationofwhichcanmake
useofHoneybeeaswell[12,15].
WeevaluateHoneybeethroughacustomsimulatorwehavebuilt.2Comparedtothebaseline
algorithmsGossipSubandKademlia,Honeybeeachievesthesamelevelofnear-uniformsampling
when all nodes in the network adhere to the protocols. However, when the network contains
adversarialnodes,HoneybeeoutperformsGossipSubandKademliaby4-63%intermsofsampling
adversarialpeerratio.Wedefinethatanalgorithmachieves𝜖-uniformsamplingwhenthesampling
adversarialpeerratiofromthealgorithmisboundedfromabovebythesumofthetrueadversarial
1InthecontextofEthereum’spublish-subscribep2pnetwork,asubnetisanoverlaywhereinallnodesareinterestedinthe
sametopicandgossipmessagesonthattopic.
2Codewillbemadeopensource.
2Honeybee:DecentralizedPeerSamplingwithVerifiableRandomWalksforBlockchainDataSharding
nodesratiointhenetworkand𝜖.Undersuchstandard,Honeybeeconsistentlyachieves0.03-uniform
samplingwith5-50%adversarialnodesinthenetwork.
2 BACKGROUND
2.1 Dataavailabilitysampling
Transactions per second, or throughput, is a key measure of blockchain scalability. Today the
Ethereumblockchainhasanaverageblocksizeoflessthan200kBcorrespondingtoathroughput
ofaround30transactionspersecond.Increasingthisthroughputto1000softransactionspersecond
(tothescaleofVisa,forexample)hasbeenalong-standingopenchallengeinthecommunity.
While several layer-2 solutions such as state channels, side channels, Plasma etc. [19] have
beenproposedtoimprovethroughput,aparticularlyimportantlayer-2solutionthathasbecome
the focus of Ethereum’s scaling roadmap is the rollup [22]. Briefly, a rollup is an independent
blockchainthatisbridgedtotheEthereum’smainchainviaasmartcontract.Forincreasedsecurity
intherollupchain,blocksproducedintherollupareperiodicallypublishedonthemainchainina
compressedform.Thisallowsanyverifieronthemainchaintoverifytherollupoperation,and
slashrollupsblockproducersincaseofamistake.TherollupsblockspublishedonEthereumare
storedasdata‘blobs’andarenotexecutedbyEthereumvalidatorsbydefault.
IncludingblobsfromrollupswithinanEthereumblockcansignificantlyamplifythesizeofthe
blocktoseveralmegabytes.Inthisscenario,requiringallthenodestostorealltheblocks(asisthe
casetoday)canoverwhelmresource-limitednodesandaffectthedecentralizationofthenetwork.
Therefore,Ethereumenvisionsashardeddesigninwhichablockissplitintomanysmallerchunks,
andeachnodeisrequiredtostoreonlyasmallnumberofthechunks[1,18].Theblockheaderis
storedbyallthenodes.
Thechallengeistoensurethatapublishedblockcanbesuccessfullyreconstructedfromits
chunkslaterifrequired.E.g.,amaliciousblockpublishermayrevealonlytheblockheader,retaining
theblockbody;orthepublishermaypublishonly90%ofthechunks;orsomeofchunkscanbe
modifiedduringpublicationetc.Tosolvethis,ablockisfirsterasurecodedtoincreaseitssizeby
4times(Ethereumusesa2D-ReedSolomoncode).Theerasurecodedblockisthendividedinto
chunkswhicharethendispersedoverthevalidatornetwork.
Erasurecodingtheblocksisadvantageousintwoways:
(1) Itispossibleforanodetoreconstructtheentireblockbyfetchinganyrandom25%ofthe
chunks.Thisiseasiertoachievecomparedtoretrievingall100%ofthechunksifablockis
noterasurecoded.
(2) It is simple for a node to verify that a block’s data is available (i.e., has been dispersed
correctly).Allthenodeneedstodoissampleasmall𝑘 numberofrandomchunksfromthe
network.Ifthenodecansuccessfullyretrieveall𝑘 chunks,thenwithprobability>1−1/4𝑘,
blockdataisavailableoverthenetwork.Thisisbecauseifamaliciousnodeattemptsto
withholdpublishingofaportionoftheblock,thenitcandoitonlybywithholdingmore
than75%ofthecodedchunks.
Correctnessofeachindividualchunkisverifiedusingpolynomialcommitments(specifically,KZG
commitment)thatarepackagedalongwiththechunks.Theprocessofcheckingwhetheradequate
blockdataispresentinthenetworkbysamplingiscalleddataavailabilitysampling.
Data availability sampling is essential not only for full nodes but is also beneficial to light
nodes[20].Lightnodesareendusersinteractingwiththeblockchainthroughlightweightapplica-
tionsoftwarethancanruneasilyonresource-limiteddevices.Asimpleexampleisauserrunning
awalletsoftwareonherbrowserthatinteractswiththeblockchainthroughthewalletprovider’s
3YunqiZhangandShaileshhBojjaVenkatakrishnan
servers.Asillustratedbythisexample,todaylightnodesmusttrustacentralizedserver(typically
afullnode)forsubmittingandconfirmingtransactions,andcheckingvalidityofblocks.
AstheEthereumnetworkscales,thereisanincreasingneedsupportlightnodeswithoutrequiring
trustonacentralparty.EffortssuchasthePortalnetwork[16]hintatthecommunity’sdesireto
progressinthisdirection.Weenvisionadesigninwhichlightnodesconnectwithotherlightnodes
toformagossipnetwork.Fullnodessupplyblockheaderstolightclientswhichgossiptheheader
tootherclientsoverthegossipnetwork.Incaseablockisinvalid,fullnodesconstructafraud
proofwhichisagaingossipedoverthelightnodenetwork.However,afullnodecanconstructa
fraudproofonlyifallthedataintheinvalidblockisavailableinthenetwork.Thus,itisimportant
forlightnodestoindependentlyverifydataavailabilityofablocklesttheythinktheblockisvalid
sansfraudproof.
2.2 EthereumPeer-to-PeerNetwork
Ethereumusesap2ppublish-subscribe(pub-sub)networkbasedontheGossipSubprotocol[44]
from the libp2p framework [32] for disseminating messages. In a pub-sub network, each node
subscribestooneormoretopicsthenodeisinterestedin.Anymessagepublishedbyanodeinthe
networkbelongstoauniquetopic.Thenetworkissetupsuchthatwhenamessageispublished
fromatopic,allnodessubscribedtothattopicreceivethemessage.InGossipSubthisisachievedby
constructingoneindependentoverlayforeachtopic,containingallnodessubscribedtothattopic.
Therefore,wheneveramessageispublishedfromatopic,bysimplybroadcastingthemessage
overthetopic’soverlay,allsubscribersareguaranteedtoreceivethemessage.Theprimaryuse
of a pub-sub network in Ethereum is for aggregating attestations from 64 different subsets of
validators[38].
Inthecontextofdatasharding,onceagainEthereumplanstouseapub-subnetworkfordata
distributionandretrieval.Specifically,ifablockisdividedinto𝑚chunks(aftererasurecoding),there
willbe𝑚topicswiththe𝑖-thtopicincludingthe𝑖-thchunkofeachblock.Eachnodesubscribesto
asmallnumberoftopicsandisresponsibleforstoringchunksofthosetopics.Chunkdissemination
isstraightforward:theblockpublisherdisseminatesthe𝑖-thchunkoftheblockoverthe𝑖-thsubnet.
Detailsonhowanodelookingtorandomlysamplechunkscancontactnodesfromadifferenttopic
overlaytofetchchunksareunfortunatelylackinginpubliclyavailabledocuments,forumsand
blog-posts.
3 SYSTEMMODEL
3.1 NetworkandSecurityModel
We consider a network comprising of 𝑛 nodes𝑉, out of which a fraction 𝑓 of the nodes are
adversarial. Nodes that are not adversarial are called honest. We denote the set of honest and
adversarial nodes by𝑉 and𝑉 respectively. Each node has a unique network address (i.e., IP
ℎ 𝑎
address,port).Anodecanconnectandcommunicatewithanothernodeifitknowsthelatter’s
networkaddress.Eachnodehasasmallmemoryofsize𝑘,forstoringinformationabout𝑘 other
nodesinthenetwork.3Apartfromthenetworkaddress,weassumeanodealsohasapublic,private
keypairwhichcanbeusedforsigningmessages,issuingcommitmentsetc.Sincethememory
spaceissmall,anhonestnodecannotknowthenetworkaddressesoftheentirenetwork.However,
adversarialnodescanpooltogethertheaddressestheyknowoftoconductattacks.
WeconsiderByzantineadversariesinthattheycanarbitrarilydeviatefromourproposedprotocol.
Examples of Byzantine behavior include not responding to or arbitrarily delaying requests or
3Werefertothememoryspacealsoasanaddresstable.
4Honeybee:DecentralizedPeerSamplingwithVerifiableRandomWalksforBlockchainDataSharding
sending malicious messages to victims. We assume the network connection between nodes is
reliable(i.e.,asynchronousmodel),anddonotmodelmessagelossordelays.
Whenanodefirstjoinsthenetwork,itcontactsabootstrappingserverfromwhichitreceives
information(networkaddress,publickey)about𝑘 randomnodesinthenetwork.Itiscommon
forpracticalp2pnetworks(includingEthereum’s)tousebootstrappingserverswithhardcodedIP
addresstohelpnewpeersjointhenetwork[21].Onceanodejoinsthenetwork,itmustrunits
owndiscoveryprotocolandcannotquerythebootstrappingserverforfreshaddresses.Notethat
theinitialsetofaddressesthebootstrappingserverprovidecanincludeadversarialnodesaswell.
Weassumethepublickeytonetworkaddressbindingofanodeisattestedbythebootstrapping
serverthroughacertificatesignedbytheserver.Whileitispossibletouseadecentralizedpublic-key
infrastructureforthispurpose[40],weconsiderthebootstrappingserverasthetrustedcertificate
authorityinoursettingforsimplicity.
Timeisdividedintorounds𝑡 =0,1,2,....Duringaround,anodecansendorreceivemessages
oftotalsize𝑙,where𝑙 isagainasmallconstantthatmodelsthebandwidthconstraintsofthenode.
Lastly,weassumenodeshaveaccesstoafreshpublicrandomnumbereachround.Inpractice,a
newblockisproducedinEthereumevery12seconds.Thinkingof12secondsasaround,arandom
numbercanbederivedeachroundfromtheheaderoftheblockforthatround.Notethatwerequire
nodestoonlydownloadtheblockheadertocomputetherandomness,andnottheentireblock,
whichisparticularlyusefulforlightnodes.
3.2 ProblemStatement
Foranynode𝑣 ∈𝑉,let𝑀 𝑣(𝑡)denotethecontentsoftheaddresstable(i.e.,memory)ofnode𝑣 at
time𝑡.Forany𝑖 ∈ {1,2,...,𝑘},let𝑀 𝑣𝑖(𝑡)bethe𝑖-thaddressin𝑀 𝑣(𝑡).Ourobjectiveistodesigna
decentralizedalgorithm𝜋 bywhichanhonestnodecanuniformlysamplenodesinthenetwork.
Specifically,foranynode𝑣 ∈𝑉 ℎ,time𝑡 andindex𝑖 ∈ {1,2,...,𝑘},wewant
𝑃(𝑀 𝑣𝑖(𝑡) ∈𝑉 ℎ) ≥ 1−𝑓 (1)
𝑃(𝑀𝑖(𝑡) =𝑢) =𝑃(𝑀𝑖(𝑡) =𝑢′) (2)
𝑣 𝑣
foranyhonestnodes𝑢,𝑢′ ∈𝑉 ℎ.Thereasonwelowerboundtheprobabilityisachievingperfect
uniformsamplingwouldbeimpossibleiftheadversarialnodesdonotparticipateintheprotocol.
Ontheotherhandifadversarialnodesallbehavehonestlyperfectlyuniformrandomsampling
mustbepossible.
Therequirementsoutlinedabovealonecanbetriviallysatisfiedifanodedownloadsrandom
addressesfromthebootstrappingserveranddoesnothingafterwards.Therefore,wequalifyour
objectivebyadditionallyrequiringthatanodemustaddatleastonefreshsampletoitsaddress
tableeveryΔ >0rounds,i.e.,
𝑀 𝑣(𝑡 +Δ)\𝑀 𝑣(𝑡) ≠ {}, (3)
forall𝑡 >0.Furthermore,foranytime𝑡 let𝑅 𝑣(𝑡)bethemostrecentlyaddedaddressto𝑣’saddress
table.Wewantthenewlysamplednodetobeindependentofthepastsamples,i.e.,
𝑃(𝑅 𝑣(𝑡) =𝑢|𝑀 𝑣(0),𝑀 𝑣(1),...,𝑀 𝑣(𝑡 −Δ)) =𝑃(𝑅 𝑣(𝑡) =𝑢), (4)
forall𝑢 ∈𝑉
ℎ
and𝑡 > Δ.
5YunqiZhangandShaileshhBojjaVenkatakrishnan
1. A receives (1) address of node
A a B a’ fA rom1 B ( 22 .. V Aa ) RA Fst s e wnr ni in R RV O Id Ee ta nhsdc d a ae p ur p cae e r g n nrs n t ooi ix dh ego d dv f mo f i o o e i o om ta a oiti is m m bi ’n n nBn o( d tl g g1 e eU hf w wx ) a a aCB’ ir ’s a aa d da tc’ o s l ld a ( dn dr k km2 d d ea ) rd r p s i de eur d d pC n no te eas sa er d l ipmt a ds e s ts s s3r i s ihn c t.s e a t t od A iewso a at nes t r x oss oe bf bt a a fic a ’ rCe an lt l tl ie eni ’b a k iv so o e B al b se ’d d ns l ( d 1 aee r) d e a d sd sre d ts ar se b s t leas U bo lf e n ode B fA romB ( 22 . V Aa ) R Fst s e wn ni in Md4 ota hs.d f p r ep Aate r ss hn o sx v dh oe aoi f o s i m gtr i oa etti in s Bnn so dd C eU f o x i nB’ m i’s c’ t osa wh ( m2 ed a )aC p s uld d nC nk t ae a er d pt de x s3r i ht n.s e odAhs tes r o x os et fp ic a ’ Ce t ini ’b a v s e B al b se ’ ds l ( d 1 ae r) d e a d sd sre d ts ar se b s t leas U bo lf e n ode B M4 o. f e A t sh sv e ai s gri a ets n s dC o in m t whe aC ln kext hop F ar do dm r eC s st o t aA b: l A eH e - r te a bis le m 1y A and B issue fraudHH pee Arrr oee to tii fss a itt fa ca |bb ktll ae ee b 21 rle oo C1ff C –C table 2| > threshold M 𝜏 eF! a srF da sor admdo grdm ee Cr ss setC o tsB a sBt b o:tl eH aA be -: rlt eA eH a b ie -s l er tme a2y bi s le m 1y A and B issue fraudHH pee Arrr oee to tii fss a itt fa ca |bb ktll ae ee b 21 rle oo C1ff C –C table 2| > threshold M 𝜏 eF! a sr d so adm gr ee C ss st o tB a B b: l eH e - r te a bis l em 2y
(a)OverviewofHoneybeeVRW (b)IllustrationofHoneybeeVRW (c)IllustrationofHoneybeeTCC
Fig.1. Honeybeeillustrations:(a)showsanexampleofaHoneybeeverifiablerandomwalksampling,and
node𝐶replacesnode𝐵innode𝐴’soutgoingaddresstable;(b)showshowaverifiablerandomwalk(VRW)
works;(c)showshowatableconsistencycheck(TCC)works.
4 HONEYBEE
4.1 AlgorithmOverview
Honeybeeisafullydecentralizedp2palgorithmthattacklesthedataavailabilitysamplingproblem
on the network level by conducting secure near-uniform4 sampling of peers from the entire
network.HoneybeeisinspiredbyrandomwalksonfinitegroupsandmixingMarkovchains[3,33].
AHoneybeenodemaintainsthreetables:anaddresstable,anencountertable,andaconnection
table.Intheaddresstable,aHoneybeenodestorespeerdataforpeerswithwhomthenodehas
peeringagreements.Theaddresstableconsistsoftwosub-tables:anoutgoingaddresstablethat
containsdataforatmost𝑛 peersandanincomingaddresstablethatcontainsdataforatmost𝑛
𝑜𝑢𝑡 𝑖𝑛
peers.Ifanode𝐴sendsarequesttopeerwithnode𝐵,andnode𝐵acceptstherequest,node𝐴will
addnode𝐵to𝐴’soutgoingaddresstable,whilenode𝐵willaddnode𝐴to𝐵’sincomingaddress
table.ThepeeringagreementinHoneybeeisbilateral-node𝐴havingnode𝐵in𝐴’saddresstable
wouldsuggestthatnode𝐵havingnode𝐴in𝐵’saddresstable.Tobespecific,whenanode𝐴has
node𝐵initsaddresstable,node𝐴storesthefollowingdatainitsaddresstable:𝐵’snodeID,𝐵’s
addresstablesnapshot,𝐵’sIPaddress,𝐵’sportinformation,andapeeringagreementsignedbyboth
𝐴and𝐵withatimestamp.Anode’saddresstablesnapshotcontainseverythinginitsaddresstable
exceptforitspeers’addresstablesnapshots.Anode’sencountertableisafiniteFIFOlistofsize𝑛
𝑒
thatcontainstheaddresstablesnapshotsofarandomsubsetofthenodesithasinteractedwithvia
randomwalks.Anode’sconnectiontablecontainsthepeerswithwhomthenodecommunicate.
To join the Honeybee network, a node first add some of the bootstrap nodes for an initial
configuration.Thebootstrapnodesareasmallgroupoftrustworthynodesthatnotonlyparticipate
in the network but also assist other nodes with configurations. In Honeybee, all nodes follow
the blockchain for the shared pseudo-randomness (i.e., block header), and the shared pseudo-
randomnessdeterminesthenodesthatareeligibletoperformsamplingatthecurrentmoment
(currentlyeligiblenodes).Tosamplepeersfromthenetworkinanear-uniformway,acurrently
eligiblenodeconductsarandomwalkwiththepathdeterminedbythesharedpseudo-randomness.
Arandomwalkmessagecarriesitsinitiatornodeinformation,destinationnodeinformation,and
therandomwalkpathinformation.Duringarandomwalk,thenodeoneachhopoftherandom
walk conduct table consistency checks with the initiator node. When a random walk message
reachesitsdestinationnode,themessageservesasarequestfortherandomwalkinitiatornodeto
4Notethatnear-uniformiswell-definedforpeersampling.
6Honeybee:DecentralizedPeerSamplingwithVerifiableRandomWalksforBlockchainDataSharding
peerwiththedestinationnode.Ifthedestinationnodeacceptstherequest,theinitiatornodeand
thedestinationnodeaddeachothertotheiraddresstablesandestablishapeeringagreement.For
anode,wecallthetimebetweensuccessiverolesasacurrentlyeligiblenodeasanepoch(round).
InAlgorithm1,wepresenttheoveralltemplateforoutgoingaddresstableupdateofHoneybee.
Wegivethedefinitionsofverifiablerandomwalksandtableconsistencychecksin§4.2and§4.3.In
Fig.1a,wegiveanexampleofaHoneybeeverifiablerandomwalksampling.Fig.1bshowshowa
verifiablerandomwalkworks.Fig.1cshowshowatableconsistencycheckworks.
4.2 VerifiableRandomWalks
AHoneybeenodeperformsarandomwalktoreplaceoneofitsoutgoingtablepeerswhenitlearns
thatitbecomesacurrentlyeligiblenodefromthepseudo-randomnessseed(i.e.,blockheader).
However,arandomwalkissusceptibletoadversarialrouting.Ifarandomwalkfromahonestnode
meetsadishonestnode,thedishonestnodecanroutetherandomwalktoanotherdishonestnode
andeventuallyguidetherandomwalktoadishonestdestination.Toensureourrandomwalksare
trulyrandom,weemployaverificationmechanisminHoneybee’srandomwalks(VRW).When
anode𝐴learnsthatitisacurrentlyeligiblenode,itderivesaverifiablepseudo-randomnumber
andaproof𝜋 withitssecretkeyusingthefollowinginputs:thecurrentblockheader,itsepoch
𝐴
count,itsrandomwalk’scurrenthopcount,andthepublickeyofthenodeonitscurrenthop.The
generatedverifiablepseudo-randomnumberinformsnode𝐴wheretoproceedwiththenexthop
ofitsrandomwalk.Alongwiththesignatureofthenodeonthecurrenthop,thenodesonthenext
hopoftherandomwalkcanverifythevalidityoftherandomwalk.Theprocedureisrepeatedfor
eachhopuntiltheendoftherandomwalk.Atnode𝐵,node𝐴requeststheaddresstablesnapshot
ofthenexthop-node𝐶.Whennode𝐴proceedstonode𝐶,itrequeststhecurrentaddresstable
ofnode𝐶 andcompareitwiththesnapshot𝐴receivesfrom𝐵.Ifthedifferenceishigherthana
threshold𝜏,𝐴mayissueafraudproofagainst𝐶.Thethreshold𝜏 ispredefinedbythesystem.Since
nodesarerequiredtoupdatetheiraddresstablesnapshotswiththeirneighborspromptly,node𝐶
cannotrefutetheVRWfraudproof.
4.3 TableConsistencyChecks
A dishonest node can store multiple copies of address tables, and use different address tables
to handle different requests from different nodes for various purposes (e.g., traffic attraction,
adversarialrouting,etc.).Werefertothesituationwhereanodeusesmorethanoneaddresstable
as"equivocaltables."Topreventequivocaltables,weemploytableconsistencychecks(TCC).A
node𝐴’srandom walkmessage carries𝐴’saddresstable andencounter table. Foreach hopof
therandomwalk,thenode𝐵atthathopcancompareitsaddresstableandencountertablewith
thoseofnode𝐴.Ifthereisanoverlappingnode𝐶 in𝐴’stablesand𝐵’stables,𝐴and𝐵willfurther
examinetheaddresstablesnapshotsofnode𝐶 tocheckifthereisanydifference.Ifthedifference
ishigherthanathreshold𝜏 ,𝐴and𝐵willissueafraudproofagainstnode𝐶 andthesystemmay
𝑡
choosetoslashnode𝐶.SimilartoVRW,thethreshold𝜏 ispredefinedbythesystem.Iftheratioof
𝑡
differentpeersintwoaddresstablesnapshotsofnode𝐶 withintime𝑡 exceeds𝜏 ,thenweconsider
𝑡
theevidenceissignificantenoughfornodestoissueafraudprooffornode𝐶.Node𝐶canrefutethe
TCCfraudproofagainstitonlyifitcanprovidelegitimaterandomwalkhistorythatcanexplain
thedifference.
5 EVALUATION
Inthissection,weevaluateHoneybeeandthebaselinealgorithmsandcomparetheirperformances.
In§5.1,weintroducethebaselinealgorithmsandpresenttheexperimentalsetup.Wethenevaluate
Honeybeeandthebaselinealgorithmsfromdifferentperspectivesandprovidetheresultsin§5.2.
7YunqiZhangandShaileshhBojjaVenkatakrishnan
Algorithm1:Algorithmoutlineforupdatingentriesofoutgoingaddresstableofnode𝑣 in
eachepoch.
input :peersΓ c𝑣 urrinoutgoingaddresstableofcurrentepoch;pseudo-randomnessseedR
indicatingwhethernode𝑣 isacurrentlyeligiblenode;𝑣’ssecretkey𝑆𝐾 ;epoch
𝑣
counter𝜚 enumeratingthenumberofepochssince𝑣 joinsthenetwork;
curr
outgoingaddresstablesize𝑛 ;system-definedaddresstableinconsistency
𝑜𝑢𝑡
threshold𝜏;bootstrapnodeaddresses𝑏;
output:updatedsetofpeersΓ n𝑣 extfornextepoch;updatedepochcounter𝜚 nextfornext
epoch;
/* Perform a random walk if 𝑣 is a currently eligible node */
if R indicates𝑣 isacurrentlyeligiblenodethen
𝑝 ←GetPathLength(R,𝑣,𝑆𝐾 𝑣)
𝑝 𝑐 ←0/* Hop counter of the random walk */
𝑢∗ ←𝑣 /* Node on current hop of the random walk */
𝑑 ←∅/* 𝑑 stores the node on the first hop of the random walk */
while𝑝 𝑐 <𝑝 do
/* VRF() returns a pseudo-random number 𝑖 and a proof 𝜋 𝑣 */
(𝑖,𝜋 𝑣) ←𝑉𝑅𝐹(R,𝜚 curr,𝑝 𝑐,𝑢∗,𝑆𝐾 𝑣)
/* Γ𝑢∗ (𝑖) returns i-th node in Γ𝑢∗ and its address table snapshot */
curr curr
(𝑢∗,𝜔) ←Γ𝑢∗ (𝑖)
curr
𝑝
𝑐
←𝑝
𝑐
+1
if𝑝
𝑐
=1then
𝑑 ←𝑢∗
end
𝜔∗ ←ReqestAddrTable(𝑢∗)
if Diff(𝜔,𝜔∗) >𝜏 then
IssueFraudProof(𝑢∗,𝜔,𝜔∗)
end
end
/* GetDestResponse() returns the response 𝜑 of the destination node */
𝜑 ←GetDestResponse(𝑢∗)
if𝜑 indicates𝑢∗acceptsrequestfrom𝑣 then
Γ𝑣 ←Γ𝑣 \{𝑑}∪{𝑢∗}
next curr
end
/* Add new peers if outgoing address table is not full */
if Size(Γ c𝑣 urr) <n outthen
Γ n𝑣 ext ←Γ c𝑣 urr∪ReqestNewPeers(𝑏,𝑛 𝑜𝑢𝑡 −Size(Γ c𝑣 urr))
end
𝜚
next
←𝜚 curr+1
end
5.1 ExperimentalSetup
Wedescribethebaselinealgorithmsin§5.1.1,networklayoutsin§5.1.2,adversaryconfigurations
§5.1.3,andadversarystrategiesin§5.1.4.
8Honeybee:DecentralizedPeerSamplingwithVerifiableRandomWalksforBlockchainDataSharding
5.1.1 Baselines. SincethemaingoalofHoneybeeistoconductnear-uniformpeersamplingin
p2pnetworksunderthedataavailabilitysetting,wecompareHoneybeewithtwoarguablymost
potentialcandidatealgorithmsundersuchsetting[36]-Kademlia[35]andGossipSub[44].
• Kademlia:Kademliaisoneofthemostpopularp2pprotocolintoday’sInternet.Itisusedin
varioussystemsincludingEthereum,Swarm,Storj,IPFS,etc.AKademlianodehasabinary
nodeIDthatisrandomlyassignedwhenthenodejoinsthenetwork.Toroutemessages,
eachKademlianodehasaroutingtableconsistsof"k-buckets",andthenumberofk-buckets
ithasisequaltothelengthofitsnodeID.The𝑖-thk-bucketofnodeAstorespeerswith
nodeIDsthatsharethefirst𝑖−1bitswithnodeA.AKademlianodediscoversnewpeers
mainlywithlookups.Whennode𝐴performsalookuponnodeID𝐵,𝐴sendsthelookup
messagetotheneighbor(s)whosenodeIDisclosestto𝐵 intermsofXORdistance.The
neighbor(s)andthenodesonthesubsequenthopsrepeatthisprocedureuntiltheyfindthe
closestnode(s)to𝐵.FormoredetailsaboutKademlia,wereferthereadertotheKademlia
paper[35].
• GossipSub:GossipSubisarguablythemostrenownedpublish-subscribegossipnetworkin
today’sInternet.Itisusedinlibp2p,anopensourceprojectfromIPFS.AGossipSubnode
hasitsmeshconnectionsandgossipconnections.Themeshconnectionsarebidirectional
connections,andnodesusethemtosendfullmessages.Thegossipconnectionsareuni-
directional,andnodesusethemtosendmetadataonly.AGossipSubnodediscoversnew
peersmainlywithpeerexchanges,inwhichanodesharestheinformationofsomeofthe
peersitknowswithothers.FormoredetailsaboutGossipSub,wereferthereadertothe
GossipSubpaper[44].
5.1.2 Network. Webuiltadiscrete-eventnetworksimulatorusingPythonbasedonthemodel
descriptionin§3.1.Wesimulatethreep2pnetworks-theKademlianetwork,theGossipSubnetwork,
andtheHoneybeenetwork.Eachofthesenetworksconsistsof16,384(=214)nodes.TheKademlia
networksimulatesthevanillaKademlianetworkasdiscussedin§5.1.1.TheKademlianodeseach
has14k-bucketsandeachk-buckethassizeof3(notethatsomebucketsmayneverhaveenough
peerstoreachthesizelimit),andweuse𝛼 =3foralllookups.TheGossipSubnetworksimulates
oneoverlayofthevanillaGossipSubnetworkasdiscussedin§5.1.1.Wesimulatepeerdiscoveryin
GossipSubwithpeerexchanges.Wealsosimplifiedthescoringfunctionbygivingeverypeerthe
samescoretofitGossipSubintothedataavailabilitysamplingbackground.Thescoringfunction
fromGossipSubmaynothelphonestnodesinthedataavailabilitysamplingsetting.Thescoring
functionusesparameterssuchastimeinmesh,firstmessagedeliveries,andmeshmessagedelivery
rates.Withtheseparameters,dishonestnodescanstrategicallyexploitthescoringfunctionand
behaveverywellintermsofscoresbeforeeclipsinganhonestnode.TheGossipSubnodesuse
𝐷_ℎ𝑖𝑔ℎ =12,𝐷 =8,and𝐷_𝑙𝑜𝑤 =6,whicharethesameasthevaluesusedinthevanillaGossipSub
paper.TheHoneybeenetworksimulatesHoneybeeasdiscussedin§4.FortheHoneybeenetwork,
17nodes(≈1%)arethebootstrapnodes.Similarly,theHoneybeenodeseachusesanaddresstable
sizeof24.TheaddresstableofaHoneybeenodeconsistsoftheoutgoingaddresstableandthe
incomingaddresstable,eachcontainsatmost12nodes.Inallthreenetworks,theroutingtableofa
nodeisdefinedasallthepeerswhomitknowsandhasaccessto(i.e.,storestheirIPaddresses),
andweassumethereisnochurnfromthejoiningandleavingofnodes.
5.1.3 Adversary. Foreachofthethreep2pnetworks,wesimulatescenariosinwhichattackers
control5%,10%,20%,30%,40%,and50%ofthetotalnodes.Theattacker-controlleddishonestnodes
(Sybilnodes)arerandomlychosenfromallthenodesatthebeginningofthesimulation.Todisturb
thenetworkandcompromisepotentialvictimnode(s),theSybilnodesemploystrategiesaddressed
9YunqiZhangandShaileshhBojjaVenkatakrishnan
in§5.1.4duringthesimulation.AttackershavefullcontroloftheirSybilnodesandareabletobuild
adesiredtopologywiththeirSybilnodes.WeconsiderthreetypesofinitialSybilnodelayoutsas
follows.
• Mixedlayout:theSybilnodesaremixedintothep2pnetwork.Allthenodesinthenetwork
areconnectedtoeachotherinarandomway,andtheSybilnodesaresimplyamongthem.
Weconsiderthislayoutthemostnaturalinitialattackerlayout.
• Bigclusterlayout:theSybilnodesformabigcluster.Most(98%)oftheSybilnodesonly
connecttoeachotherwhile2%oftheSybilnodeshaveconnectionstothehonestcluster.
TheSybilnodeswhoseconnectionsincludeaconnectiontothehonestnodesarenamed
gatewaySybilnodes.TheSybilnodeswhodonothaveaconnectionwiththehonestnodes
arenamedtrapSybilnodes.ThetwotypesofSybilnodesmayswitchtheirrolesduringthe
simulation.
• Smallclusterslayout:theSybilnodesformmultiplesmallclusters.TheSybilnodesform
100clusterseachconsistsofroughly81nodes.EachSybilclustermaintainsoneconnection
withthehonestcluster.Inotherwords,eachSybilclusterhasonegatewaySybilnodesand
theremainingnodesintheclusteraretrapSybilnodes.
Weconsidertwotypesofvictims:singlevictimnodeandmultiplevictimnodes.Inthefirstcase,
Sybilnodestargetarandomhonestnodethroughoutthesimulation(e.g.,attackersattemptto
compromise a client). In the second case, Sybil nodes target all honest nodes throughout the
simulation(e.g.,attackersattempttocompromiseanorganizationoracompany).Inbothcases,the
goalofattackersistoeclipsethevictim(s)byinsertingasmanySybilnodesintotheroutingtables
ofthevictim(s)aspossible.
5.1.4 AdversaryStrategies. Attackerscanemployawiderangeofadversarystrategiesusingthe
nodestheycontrol.Listedbelowarethestrategiesthatweconsidertobethemostimportant.We
categorizethestrategiesintotwotypes:activestrategiesandpassivestrategies.Wedefinethe
followingactiveadversarystrategies.
• Request flood: attackers can repeatedly send requests (e.g., connection requests) to the
victimnode(s)fromtheirpseudonymousidentitiesuntilthevictimnode(s)geteclipsedor
theattackersachievetheirgoalthroughothermeans.Itisdifficultforthehonestnodesto
detectanddefendagainstthisstrategysince,inapermissionlessp2pnetwork,attackers
mayownalargenumberofpseudonymousidentitiesandcansendrequestsfromdifferent
identities.Itischallengingtodistinguishthedishonestnodesfromthehonestnodesbefore
attackerscauseactualdamagetothevictimnode(s).
• Adversaryrouting:oncearequestreachesadishonestnode,thedishonestnodemayroute
therequestinitsfavortoachievecertaingoals.Thegoalsincludebutarenotlimitedto:
preventing therequestfromreachingitsintendeddestination,guidingtherequestto a
dishonestdestination,causingoverhead(e.g.,delays)fortherequestinitiator,andcausing
inaccuratejudgment(e.g.,inaccurateneighborscoring)fortherequestinitiator.
• Adversarypeerselection:anhonestnodeshouldselectitspeersinarandomwayorbased
oncertainbonafiderules.Anhonestnodeshouldnotmakeitspeerselectiondecisions
based on the identity of the candidate peers (and it should not be able to). However, a
dishonestnodemaymakesuchdecisionsbasedontheidentityofthecandidatepeers.For
example,agroupofdishonestnodesmaychoosetoaddeachothertotheirroutingtables
toformaSybilcluster.
• Equivocaltable:adishonestnodecankeepmultiplecopiesofroutingtables,eachstoring
differentpeers,andusedifferentroutingtablestoroutedifferentrequests.Thisstrategycan
10Honeybee:DecentralizedPeerSamplingwithVerifiableRandomWalksforBlockchainDataSharding
0.030 0.030 0.030
0.025 0.025 0.025
0.020 0.020 0.020
0.015 0.015 0.015
0.010 0.010 0.010
0.005 0.005 0.005
0.000 Node ID Sorted by Frequency 0.000 Node ID Sorted by Frequency 0.000 Node ID Sorted by Frequency
(a)Honeybee (b)GossipSub (c)Kademlia
Fig.2. Nodesadheretoprotocol:Samplingdistributionfromarandomobservationnodein100thousand
epochs.Everynodefollowsitsprotocol.NodeIDsaresortedbyfrequencyinascendingorder.Trueuniform
samplingdistributionisshownasadashedline.
preventtherequestfromreachingitsintendeddestination,guidetherequesttoadishonest
destination,helpotherdishonestnodeswithload-balancing,causeoverhead(e.g.,delays)
fortherequestinitiator,andcauseinaccuratejudgment(e.g.,inaccurateneighborscoring)
fortherequestinitiator.
Wedefinethefollowingpassiveadversarystrategies.
• Selectiverequestacceptance:anhonestnodeshouldaccept/rejectaconnectionrequestin
arandomwayorbasedoncertainbonafiderules.Anhonestnodeshouldnotmakeits
acceptance/rejectiondecisionsbasedontheidentityoftherequestinitiator(anditshould
notbeableto).However,adishonestnodemaymakesuchdecisionsbasedontheidentityof
therequestinitiator.Forexample,attackersandtheirpseudonymousidentitiesmaychoose
torejectrequestsfromallthehonestnodesexceptforitstargetedvictimnode(s).
• Adversaryrecommendation:uponrequest,anhonestnodeshouldrecommend(i.e.,share
theinformationof)apeertoanothernodeinarandomwayorbasedoncertainbonafide
rules.Anhonestnodeshouldnotmakeitsrecommendationdecisionsbasedontheidentity
oftherequestinitiatorand(anditshouldnotbeableto).However,adishonestnodemay
makesuchdecisionsbasedontheidentityoftherequestinitiator.Forexample,anhonest
victim’sdishonestneighbormaychoosetorecommendotherdishonestnodestothevictim.
Thisstrategyissimilartorequestfloodbutinapassivemanner.
• Blackhole:oncearequestreachesadishonestnode,thedishonestnodemaydroptherequest
completely(i.e.,beingunresponsivetotherequest).Thisstrategycancauseoverhead(e.g.,
delays)andinaccuratejudgment(e.g.,inaccurateneighborscoring)fortherequestinitiator.
Incomparisonwithadversaryrouting,thisstrategyislessharmfulbutmoredifficultto
detect/detersincehonestnodescanalsobeunresponsiveforvariouslegitimatereasons.
5.2 Results
5.2.1 SamplingDistributions. Fig.2a,2b,and2cshowthesamplingdistributionsforanarbitrarily
chosenobservationnodewithHoneybee,GossipSub,andKademliainanetworkof16,384honest
nodesfor100thousandepochs.Ineachsetting,allnodesstart(i.e.,epoch0)withrandomrouting
table configurations, and all nodes behave according to their protocol. In the figures, the true
uniformsamplingdistribution(i.e.,allnodesexceptfortheobservationnodearesampledwith
equal probability) is shown as a dashed line. We observe that Honeybee and the two baseline
algorithmshavesimilarsamplingdistributionswhenallnodesadheretotheirprotocol.
11
)%(
ycneuqerF
)%(
ycneuqerF
)%(
ycneuqerFYunqiZhangandShaileshhBojjaVenkatakrishnan
100 Honeybee 200 200
90 G Kao ds esi mpS liu ab
160 160
80
70 120 120
60
50 80 80
34 00 40 p H G- o ov n sa sel iu y pe b
S
e u= e
b
0.05 40 p H G- o ov n sa sel iu y pe b
S
e u= e
b
0 w w.0 i it t5 h
h
3 30 0%
%
I Id dl le
e
N No od de es
s
20 0 Kademlia 0 Kademlia with 30% Idle Nodes
0 20 40 60 80 100 2 4 6 8 10 2 4 6 8 10
Epochs (×1,000) Epoch Range (×10,000) Epoch Range (×10,000)
(a)Totalvariationdistances (b)Chi-Squaretestresults (c)Chi-Squarewith30%idlenodes
Fig.3. Qualityofsamplingwhennodesadheretoprotocol:(a)displayscomparisonsofHoneybee,GossipSub,
andKademliawiththetrueuniformsamplingdistribution;(b)displaystheChi-Squaretestresultswith
p-valueof0.05shownasadashedline;(c)displaystheChi-Squaretestresultswhen30%ofthenodesareidle.
TocomparethesamplingdistributionsofHoneybeeandthebaselinealgorithmswiththetrue
uniformsamplingdistribution,Fig.3aplotsthetotalvariationdistancesbetweenthethreealgo-
rithmsandthetrueuniformsamplingdistributionfromtheaboveexperiment.Thetotalvariation
distancecurvessuggestthatsamplingdistributionsfromHoneybeeandthebaselinealgorithms
convergetothetrueuniformsamplingdistributionthroughoutthe100thousandepochsinasimilar
pattern. At the beginning of the simulations, the total variation distances from Honeybee and
thebaselinealgorithmsarehigherthan95%.At100,000epochs,thetotalvariancedistancesfrom
Honeybeeandthebaselinealgorithmsdecreasetoroughly23%.Wealsoextendedthesimulations
to3millionepochs,andthetotalvariationdistancesfromthethreealgorithmsdecreaseto3-5%.
Toexaminethesamplingdistributionsindetail,weconductChi-Squaretestsonthesamples
fromHoneybeeandthebaselinealgorithms.Wecombineneighboringcellsbydividingthenode
IDsinto127nodeIDintervalsofequallength(sincethenumberofnodeIDsminustheobservation
nodeisdivisibleby127).Wedividethe100thousandepochsinto10timeintervalsofequallength.
Foreachtimeinterval,weexaminethesamplesfromthatparticulartimeinterval.InFig.3b,we
plottheChi-Squarevaluesacrossthe10timeintervalsforHoneybeeandthebaselinealgorithms.
InFig.3c,weplottheChi-Squarevaluesacrossthe10timeintervalsforHoneybeeandthebaseline
algorithmswhen30%ofthenodesareidle(i.e.,donotactivelyconductsampling).Weobserve
that,forHoneybeeandthebaselinealgorithms,wecannotrejectthenullhypothesisofuniform
samplingwithsufficientevidencewhenallnodesconductsampling.Whenthereare30%ofidle
nodes,theChi-SquarevaluesslightlyincreaseforHoneybeeandGossipSub.
5.2.2 WhyVRWandTCC. Wedemonstratetheimportanceofverifiablerandomwalksandtable
consistencychecksbyshowingthereaderwhathappenswhenwedonotuseverifiablerandom
walksortableconsistencychecksinHoneybee.Withouttherandomwalkverificationmechanism,
arandomwalkisnotnecessaryrandomsincedishonestnodescanhijackitbyreconfiguretheir
addresstablesaccordingtotheirpreferences.Similarly,withoutthetableconsistencycheckmecha-
nism,dishonestnodesareabletostoremultiplecopiesofaddresstablesandusedifferentcopies
torouterandomwalksaccordingtotheirpreferences.Inotherwords,withoutverifiablerandom
walksortableconsistencychecks,dishonestnodescancarryoutadefactoadversarialrouting
attack.
We simulate two altered versions of Honeybee: one without the random walk verification
mechanism,theotherwithoutthetableconsistencycheckmechanism.Fig.4ashowstheprocessof
dishonestnodestargetandeclipsearandomhonestvictimnodewhenweremovetheverification
12
)%(
ecnatsiD
noitairaV
latoT
eulaV
2
eulaV
2Honeybee:DecentralizedPeerSamplingwithVerifiableRandomWalksforBlockchainDataSharding
Vanilla Honeybee Honeybee w/o VRW Vanilla Honeybee Honeybee w/o TCC
100 100
80 80
60 60
40 40
20 20
0 0
0 100 200 300 400 500 600 700 800 900 1000 0 100 200 300 400 500 600 700 800 900 1000
Epoch Epoch
(a)HoneybeewithoutVRW (b)HoneybeewithoutTCC
Fig.4. HoneybeewithoutVRWorTCCforonerandomvictimunderattack:(a)displayscomparisonofvanilla
HoneybeeandHoneybeewithoutrandomwalkverificationmechanism;(b)displayscomparisonofvanilla
HoneybeeandHoneybeewithouttableconsistencycheckmechanism.
Honeybee GossipSub Kademlia Honeybee GossipSub Kademlia Honeybee GossipSub Kademlia
100 100 100
80 80 80
60 60 60
40 40 40
20 20 20
0 0 0
0 100 200 300 400 500 600 700 800 9001000 0 100 200 300 400 500 600 700 800 9001000 0 100 200 300 400 500 600 700 800 9001000
Epoch Epoch Epoch
(a)5%dishonestnodes (b)10%dishonestnodes (c)20%dishonestnodes
Fig.5. Anhonestnodeattackedby5%,10%,and20%ofdishonestnodes:Singlerandomhonestnodeunder
attackinHoneybee,GossipSub,andKademlia.
mechanismfromrandomwalks.Fig.4bshowstheprocessofdishonestnodestargetandeclipse
arandomhonestvictimnodewhenweremovetableconsistencychecks.Inbothscenarios,all
nodesstartwitharandomaddresstableconfiguration,andwehave30%ofdishonestnodesinthe
network.WecomparethemwiththeunalteredHoneybeeunderthesamesettingtopresentthe
consequences.
5.2.3 Attack-SingleVictim. Fig.5a,5b,and5cshowtheratioofdishonestpeersinarandom
honestvictimnode’sroutingtablein1,000epochsforHoneybeeandthebaselinealgorithmsina
networkof16,384nodes,and5%,10%,and20%ofthetotalpopulationconsistsofdishonestnodes.
Fig.6a,6b,and6cshowtheratioofdishonestpeersinarandomhonestvictimnode’sroutingtable
in1,000epochsforHoneybeeandthebaselinealgorithmsinanetworkof16,384nodes,and30%,
40%,and50%ofthetotalpopulationconsistsofdishonestnodes.Eachnodestartswitharandom
routingtableconfigurations.Weobservethat,underdifferentlevelsofdishonestnodepercentage,
13
)%(
elbaT
sserddA
s'mitciV
ni
sreeP
tsenohsiD
)%(
elbaT
gnituoR
s'mitciV
ni
sreeP
tsenohsiD
)%(
elbaT
gnituoR
s'mitciV
ni
sreeP
tsenohsiD
)%(
elbaT
sserddA
s'mitciV
ni
sreeP
tsenohsiD
)%(
elbaT
gnituoR
s'mitciV
ni
sreeP
tsenohsiDYunqiZhangandShaileshhBojjaVenkatakrishnan
Honeybee GossipSub Kademlia Honeybee GossipSub Kademlia Honeybee GossipSub Kademlia
100 100 100
80 80 80
60 60 60
40 40 40
20 20 20
0 0 0
0 100 200 300 400 500 600 700 800 9001000 0 100 200 300 400 500 600 700 800 9001000 0 100 200 300 400 500 600 700 800 9001000
Epoch Epoch Epoch
(a)30%dishonestnodes (b)40%dishonestnodes (c)50%dishonestnodes
Fig.6. Anhonestnodeattackedby30%,40%,and50%ofdishonestnodes:Singlerandomhonestnodeunder
attackinHoneybee,GossipSub,andKademlia.
Percentofdishonestnodesinthenetwork
5% 10% 20% 30% 40% 50%
Honeybee 6.16% 11.49% 21.91% 32.25% 40.90% 51.14%
Algorithm GossipSub 9.99% 25.12% 42.24 55.52% 69.64% 81.79%
Kademlia 56.26% 63.22% 85.12% 87.15% 97.36% 95.23%
Table1. Meanratioofdishonestpeersinvictim’sroutingtable:Fivehonestnodesarerandomlysampledas
victimsinfiveseparatesimulationswithHoneybee,GossipSub,andKademlia.Theyareattackedby5%,10%,
20%,30%,40%,and50%ofdishonestnodes.
Honeybeeoutperformsthebaselinealgorithmsintermsofthemeanratioofdishonestpeersinthe
victim’sroutingtable.
Todemonstratethattheresultsapplyacrossdifferentnodesindifferentsimulations,werandomly
samplefivehonestnodesasvictimsinfiveseparatesimulations.Wecalculatethemeanratioof
dishonestpeersinthevictim’sroutingtableamongthefivenodesoverthecourseof1,000epochs
andpresenttheresultsinTable.1.WeobservethatHoneybeeconsistentlyachievesnear-uniform
samplingandoutperformsthebaselinealgorithmsby4-63%intermsofthemeanratioofdishonest
peersinthevictim’sroutingtable.
5.2.4 Attack-MultipleVictims. Fig.7showsthecumulativenumberofhonestnodesthatcanbe
eclipsedbydishonestnodesinanetworkwith50%dishonestnodesin1,000epochswithHoneybee,
GossipSub,andKademlia.Thereare8,192honestnodesintotal.Weobservethat,in1,000epochs,
dishonestnodescaneclipseover75%ofhonestnodeswithGossipSubandKademliawhilethey
cannoteclipsehonestnodeswithHoneybee.
6 RELATEDWORK
6.1 p2pNetworks
Whetherthepurposeisforenhancingblockchaindataavailabilitysamplingornot,researchershave
madeextensiveefforttoimprovethesecurityandefficiencyofp2pnetworks.InCastroetal.[11],
theauthorsproposedsecureroutingagainstattacksthattargetp2pnetworkmessagedeliveries.
The secure routing is achieved with restricted node ID assignment, constrained routing table,
anddiversedeliveryroutes.InBaumgartandMies[8],theauthorspresentedasecureKademlia
key-basedroutingprotocol.TheylimitedfreenodeIDgenerationwithasupervisedsignatureora
14
)%(
elbaT
gnituoR
s'mitciV
ni sreeP
tsenohsiD
)%(
elbaT
gnituoR
s'mitciV
ni sreeP
tsenohsiD
)%(
elbaT
gnituoR
s'mitciV
ni sreeP
tsenohsiDHoneybee:DecentralizedPeerSamplingwithVerifiableRandomWalksforBlockchainDataSharding
8000
Honeybee
7000 GossipSub
Kademlia
6000
5000
4000
3000
2000
1000
0
0 100 200 300 400 500 600 700 800 900 1000
Epoch
Fig.7. Allhonestnodesunderattack:Inanetworkof16,384nodes,50%nodesaredishonestnodes.The
honestnodesrunHoneybee,GossipSub,andKademlia.Thedishonestnodesattempttoeclipseasmany
honestnodesaspossibleoverthecourseof1,000epochs.
cryptopuzzlesignatureandintroducedareliablesiblingbroadcast.InCorettietal.[14],theauthors
designedabyzantine-resilientgossipprotocolundertheproof-of-stakesetting.Undertheprotocol,
nodesbuildaconnectedbackboneofhigh-stakingnodes.However,lightnodes(ornodeswithsmall
stakes)areeasilysacrificedinthisprotocol,andstakedistributionisnotalwaysreadilyavailablein
acompletelydecentralizedenvironment.Recentresearchesinspiredbythemulti-armedbandit
problem[34,45,47]attemptedtoreducethecommunicationlatencyinp2pnetworkswithoutlosing
securitybylearningfromtheperformanceofneighboringpeersandupdatepeerselectionsbased
ontheknowledge.InKifferetal.[30],theauthorsstudiedtheconnectivityandblockpropagation
mechanismofEthereum’sp2pnetwork.InKróletal.[31],theauthorsconductedananalysison
p2pnetworkingrequirementsfordataavailabilitysamplinginEthereum.
6.2 DataAvailabilitySampling
Plentyofeffortshavebeenmadeinblockchainlayer-2scaling[19,22,41,48].Asacriticalcomponent
oflayer-2solutions,dataavailabilitysamplingitselfhasmanyimportantresearchproblems[36].In
Hall-Andersenetal.[27],theauthorsinitiatedacryptographicstudyofdataavailabilitysampling
anddemonstrateditsrelationwitherasurecodes.InAl-Bassametal.[2],theauthorsdevelopeda
completefraudanddataavailabilityproofschemeinwhichtheyclaimedthatlightnodescanhave
asecurityguaranteeclosetothelevelofafullnodeundercertainassumptions.InYuetal.[46],the
authorscreatedcodedMerkletreestoimprovetheprotectionoflightnodesagainstdataavailability
attacks. In Cao et al. [10], the authors presented a decentralized collaborative light-node-only
verificationmechanisminwhichlightnodescanconductblockverificationwithoutthehelpof
afullnode.Inadditiontotheadvancementinsecurity,therearesomeresearchesthatfocuson
loweringthecommunicationandcomputationoverheadonnodesinthedataavailabilitysetting
[9,28,29,39].
7 CONCLUSION
WepresentedHoneybee,adecentralizedp2psamplingalgorithmthatachievesnear-uniformpeer
samplingforblockchaindatasharding.Differentfromexistingalgorithms,Honeybeenodesconduct
genuinerandomwalksinthenetworkusingverifiablerandomwalksandtableconsistencychecks,
effectivelyfilledthevoidonthep2playerfordataavailabilitysampling.Honeybeeissecureagainst
15
despilcE
sedoN
tsenoH
fo
rebmuNYunqiZhangandShaileshhBojjaVenkatakrishnan
variousadversarialstrategiesunderdiversesettings.Inourexperiments,weobservethatHoneybee
consistentlyachieves𝜖-uniformsamplingwith𝜖 =0.03.Aninterestingfutureresearchtopicwould
betogenerateaMarkovchainusingHoneybeenodesandtheiraddresstables.Then,wecould
examinefromatheoreticalperspectivewhethermixingoccursandthepotentialmixingtimewhen
allnodesactivelyperformrandomwalks.
REFERENCES
[1] MustafaAl-Bassam,AlbertoSonnino,andVitalikButerin.2018.Fraudanddataavailabilityproofs:Maximisinglight
clientsecurityandscalingblockchainswithdishonestmajorities.arXivpreprintarXiv:1809.09044(2018).
[2] MustafaAl-Bassam,AlbertoSonnino,VitalikButerin,andIsmailKhoffi.2021. Fraudanddataavailabilityproofs:
Detectinginvalidblocksinlightclients.InFinancialCryptographyandDataSecurity:25thInternationalConference,FC
2021,VirtualEvent,March1–5,2021,RevisedSelectedPapers,PartII25.Springer,279–298.
[3] DavidAldous.1983.RandomwalksonfinitegroupsandrapidlymixingMarkovchains.InSéminairedeProbabilités
XVII1981/82:Proceedings.Springer,243–297.
[4] EmmanuelleAnceaume,YannBusnel,andSébastienGambs.2013.Onthepoweroftheadversarytosolvethenode
samplingproblem.TransactionsonLarge-ScaleData-andKnowledge-CenteredSystemsXI:SpecialIssueonAdvanced
DataStreamManagementandContinuousQueryProcessing(2013),102–126.
[5] EmmanuelleAnceaume,YannBusnel,andBrunoSericola.2013. Uniformnodesamplingservicerobustagainst
collusionsofmaliciousnodes.In201343rdAnnualIEEE/IFIPInternationalConferenceonDependableSystemsand
Networks(DSN).IEEE,1–12.
[6] JohnAugustine,GopalPandurangan,PeterRobinson,ScottRoche,andEliUpfal.2015.Enablingrobustandefficient
distributedcomputationindynamicpeer-to-peernetworks.In2015IEEE56thAnnualSymposiumonFoundationsof
ComputerScience.IEEE,350–369.
[7] AsadAwan,RonaldoAFerreira,SureshJagannathan,andAnanthGrama.2006. Distributeduniformsamplingin
unstructuredpeer-to-peernetworks.InProceedingsofthe39thAnnualHawaiiInternationalConferenceonSystem
Sciences(HICSS’06),Vol.9.IEEE,223c–223c.
[8] IngmarBaumgartandSebastianMies.2007.S/Kademlia:Apracticableapproachtowardssecurekey-basedrouting.In
2007InternationalConferenceonParallelandDistributedSystems.1–8. https://doi.org/10.1109/ICPADS.2007.4447808
[9] BenediktBünz,LuciannaKiffer,LoiLuu,andMahdiZamani.2020.Flyclient:Super-lightclientsforcryptocurrencies.
In2020IEEESymposiumonSecurityandPrivacy(SP).IEEE,928–946.
[10] StevenCao,SwanandKadhe,andKannanRamchandran.2020.CoVer:CollaborativeLight-Node-OnlyVerification
andDataAvailabilityforBlockchains.In2020IEEEInternationalConferenceonBlockchain(Blockchain).45–52. https:
//doi.org/10.1109/Blockchain50366.2020.00014
[11] MiguelCastro,PeterDruschel,AyalvadiGanesh,AntonyRowstron,andDanSWallach.2002. Secureroutingfor
structuredpeer-to-peeroverlaynetworks.ACMSIGOPSOperatingSystemsReview36,SI(2002),299–314.
[12] Celestia.2024.Thefirstmodularblockchainnetwork. RetrievedFebruary10,2024fromhttps://celestia.org/
[13] CoinMarketCap.2024. Today’sCryptocurrencyPricesbyMarketCap. RetrievedFebruary10,2024fromhttps:
//coinmarketcap.com/
[14] SandroCoretti,AggelosKiayias,CristopherMoore,andAlexanderRussell.2022.TheGenerals’Scuttlebutt:Byzantine-
ResilientGossipProtocols.InProceedingsofthe2022ACMSIGSACConferenceonComputerandCommunications
Security(LosAngeles,CA,USA)(CCS’22).AssociationforComputingMachinery,NewYork,NY,USA,595–608.
https://doi.org/10.1145/3548606.3560638
[15] EigenLayerDocs.2024.EigenDAOverview. RetrievedFebruary10,2024fromhttps://docs.eigenlayer.xyz/eigenda/
overview
[16] PortalNetworkDocs.2024.PortalNetwork. RetrievedFebruary10,2024fromhttps://www.ethportal.net/
[17] EIP-4844.2024.Proto-Danksharding. RetrievedFebruary10,2024fromhttps://www.eip4844.com/
[18] Ethereum.org.2024.Danksharding. RetrievedFebruary10,2024fromhttps://ethereum.org/roadmap/danksharding
[19] Ethereum.org.2024.EthereumLayer-2Scaling. RetrievedFebruary10,2024fromhttps://ethereum.org/developers/
docs/scaling
[20] Ethereum.org.2024.LightClients. RetrievedFebruary10,2024fromhttps://ethereum.org/developers/docs/nodes-
and-clients/light-clients
[21] Ethereum.org.2024. NetworkingLayer. RetrievedFebruary10,2024fromhttps://ethereum.org/developers/docs/
networking-layer
[22] Ethereum.org.2024. OptimisticRollups. RetrievedFebruary10,2024fromhttps://ethereum.org/developers/docs/
scaling/optimistic-rollups
[23] Ethernodes.org.2024.EthereumMainnetStatistics. RetrievedFebruary10,2024fromhttps://www.ethernodes.org/
16Honeybee:DecentralizedPeerSamplingwithVerifiableRandomWalksforBlockchainDataSharding
[24] Etherscan.2024. EthereumNetworkTransactionFeeChart. RetrievedFebruary10,2024fromhttps://etherscan.io/
chart/transactionfee/
[25] EthereumMagiciansForum.2024. ARolllup-centricEthereumRoadmap. RetrievedFebruary10,2024fromhttps:
//ethereum-magicians.org/t/a-rollup-centric-ethereum-roadmap/4698
[26] ChristosGkantsidis,MilenaMihail,andAminSaberi.2004.Randomwalksinpeer-to-peernetworks.InIEEEINFOCOM
2004,Vol.1.IEEE.
[27] MathiasHall-Andersen,MarkSimkin,andBenediktWagner.2023. FoundationsofDataAvailabilitySampling.
CryptologyePrintArchive,Paper2023/1079. https://eprint.iacr.org/2023/1079https://eprint.iacr.org/2023/1079.
[28] AggelosKiayias,NikolaosLamprou,andAikaterini-PanagiotaStouka.2016.Proofsofproofsofworkwithsublinear
complexity.InFinancialCryptographyandDataSecurity:FC2016InternationalWorkshops,BITCOIN,VOTING,and
WAHC,ChristChurch,Barbados,February26,2016,RevisedSelectedPapers20.Springer,61–78.
[29] AggelosKiayias,AndrewMiller,andDionysisZindros.2020.Non-interactiveproofsofproof-of-work.InFinancial
CryptographyandDataSecurity:24thInternationalConference,FC2020,KotaKinabalu,Malaysia,February10–14,2020
RevisedSelectedPapers24.Springer,505–522.
[30] LuciannaKiffer,AsadSalman,DaveLevin,AlanMislove,andCristinaNita-Rotaru.2021. Underthehoodofthe
ethereumgossipprotocol.InFinancialCryptographyandDataSecurity:25thInternationalConference,FC2021,Virtual
Event,March1–5,2021,RevisedSelectedPapers,PartII25.Springer,437–456.
[31] MichałKról,OnurAscigil,SergiRene,EtienneRivière,MatthieuPigaglio,KaleemPeeroo,VladimirStankovic,Ramin
Sadre,andFelixLange.2023.DataAvailabilitySamplinginEthereum:AnalysisofP2PNetworkingRequirements.
arXivpreprintarXiv:2306.11456(2023).
[32] Libp2p.2024.Libp2p-Amodularnetworkstack. RetrievedFebruary10,2024fromhttps://libp2p.io/
[33] LászlóLovász.1993.Randomwalksongraphs.Combinatorics,Paulerdosiseighty2,1-46(1993),4.
[34] YifanMao,SoubhikDeb,ShaileshhBojjaVenkatakrishnan,SreeramKannan,andKannanSrinivasan.2020.Perigee:
EfficientPeer-to-PeerNetworkDesignforBlockchains.InProceedingsofthe39thSymposiumonPrinciplesofDistributed
Computing(VirtualEvent,Italy)(PODC’20).AssociationforComputingMachinery,NewYork,NY,USA,428–437.
https://doi.org/10.1145/3382734.3405704
[35] PetarMaymounkovandDavidMazieres.2002.Kademlia:Apeer-to-peerinformationsystembasedonthexormetric.
InInternationalWorkshoponPeer-to-PeerSystems.Springer,53–65.
[36] JoachimNeu.2022. DataAvailabilitySampling:FromBasicstoOpenProblems. RetrievedJanuary20,2024from
https://www.paradigm.xyz/2022/08/das
[37] ValeriaNikolaenkoandDanBoneh.2024.Dataavailabilitysamplinganddanksharding:Anoverviewandaproposalfor
improvements. RetrievedFebruary10,2024fromhttps://a16zcrypto.com/posts/article/an-overview-of-danksharding-
and-a-proposal-for-improvement-of-das/
[38] EthereumProofofStakeConsensusSpecifications.2024.Ethereum2.0networkingspecification. RetrievedFebruary
10,2024fromhttps://github.com/ethereum/consensus-specs/blob/v0.10.0/specs/phase0/p2p-interface.md
[39] PeiyaoSheng,BowenXue,SreeramKannan,andPramodViswanath.2021.ACeD:Scalabledataavailabilityoracle.
InFinancialCryptographyandDataSecurity:25thInternationalConference,FC2021,VirtualEvent,March1–5,2021,
RevisedSelectedPapers,PartII25.Springer,299–318.
[40] JiaShi,XuewenZeng,andRuiHan.2022.ABlockchain-BasedDecentralizedPublicKeyInfrastructureforInformation-
CentricNetworks.Information13,5(2022),264.
[41] VibhaalakshmiSivaraman,ShaileshhBojjaVenkatakrishnan,KathleenRuan,ParimarjanNegi,LeiYang,Radhika
Mittal,GiuliaFanti,andMohammadAlizadeh.2020.Highthroughputcryptocurrencyroutinginpaymentchannel
networks.InProceedingsofthe17thUsenixConferenceonNetworkedSystemsDesignandImplementation(SantaClara,
CA,USA)(NSDI’20).USENIXAssociation,USA,777–796.
[42] EthereumPeerto-peerNetworkingSpecifications.2024.NodeDiscoveryProtocol. RetrievedFebruary10,2024from
https://github.com/ethereum/devp2p/blob/master/discv4.md
[43] EthereumPeerto-peerNetworkingSpecifications.2024.NodeDiscoveryProtocolv5. RetrievedFebruary10,2024from
https://github.com/ethereum/devp2p/blob/master/discv5/discv5.md
[44] DimitrisVyzovitis,YusefNapora,DirkMcCormick,DavidDias,andYiannisPsaras.2020.Gossipsub:Attack-resilient
messagepropagationinthefilecoinandeth2.0networks.arXivpreprintarXiv:2007.02754(2020).
[45] JingrenWeiandShaileshhBojjaVenkatakrishnan.2023.DecVi:AdaptiveVideoConferencingonOpenPeer-to-Peer
Networks.InProceedingsofthe24thInternationalConferenceonDistributedComputingandNetworking.336–341.
[46] MingchaoYu,SaeidSahraei,SongzeLi,SalmanAvestimehr,SreeramKannan,andPramodViswanath.2020.Coded
merkletree:Solvingdataavailabilityattacksinblockchains.InInternationalConferenceonFinancialCryptographyand
DataSecurity.Springer,114–134.
[47] YunqiZhangandShaileshhBojjaVenkatakrishnan.2023.Kadabra:adaptingKademliaforthedecentralizedweb.In
InternationalConferenceonFinancialCryptographyandDataSecurity.Springer,327–345.
17YunqiZhangandShaileshhBojjaVenkatakrishnan
[48] YunqiZhangandShaileshhBojjaVenkatakrishnan.2023. RethinkingIncentiveinPaymentChannelNetworks.
In2023IEEE43rdInternationalConferenceonDistributedComputingSystemsWorkshops(ICDCSW).61–66. https:
//doi.org/10.1109/ICDCSW60045.2023.00008
18