1
Improved Consensus ADMM for Cooperative
Motion Planning of Large-Scale Connected
Autonomous Vehicles with Limited Communication
Haichao Liu, Zhenmin Huang, Zicheng Zhu, Yulin Li, Shaojie Shen, and Jun Ma
Abstract‚ÄîThis paper investigates a cooperative motion plan-
ning problem for large-scale connected autonomous vehicles
(CAVs) under limited communications, which addresses the
challenges of high communication and computing resource re-
quirements. Our proposed methodology incorporates a parallel
optimizationalgorithmwithimprovedconsensusADMMconsid-
ering a more realistic locally connected topology network, and ¬∑
timecomplexityofO(N)isachievedbyexploitingthesparsityin
the dual update process. To further enhance the computational
efficiency, we employ a lightweight evolution strategy for the
dynamicconnectivitygraphofCAVs,andeachsub-problemsplit ùë•
fromtheconsensusADMMonlyrequiresmanagingasmallgroup
of CAVs. The proposed method implemented with the receding ùë¶
horizon scheme is validated thoroughly, and comparisons with
existing numerical solvers and approaches demonstrate the effi- ¬∑ Communication Range
ciencyofourproposedalgorithm.Also,simulationsonlarge-scale Subgraph of CAVs
cooperative driving tasks involving 80 vehicles are performed
in the high-fidelity CARLA simulator, which highlights the
remarkablecomputationalefficiency,scalability,andeffectiveness Fig.1. Demonstrationoftheproposedcollaborativemotionplanningstrategy
ofourproposeddevelopment.Demonstrationvideosareavailable forlarge-scaleCAVsinurbandrivingscenarios.Theproblemisformulated,
where one optimal control problem is constructed within each subgraph
at https://henryhcliu.github.io/icadmm cmp carla.
(orange region) and solved by the improved consensus ADMM algorithm.
IndexTerms‚ÄîConnectedautonomousvehicles(CAVs),cooper- The subgraphs are generated by the proposed graph evolution algorithm, in
ativemotionplanning,alternatingdirectionmethodofmultipliers which the edges of the dynamic connectivity graph are created within each
(ADMM), iterative linear quadratic regulator (iLQR). blueregioncenteredbyeachCAVwithinaspecifiedsubgraph.
I. INTRODUCTION achieving cooperative driving is a multi-faced endeavor that
involves various essential aspects, including environmental
Recent developments in wireless communications and in-
perception[5],globalpathgeneration[6],motionplanning[7],
telligent transportation systems, particularly the integration of
trajectory tracking control [8], etc. Within the framework of
autonomous driving with vehicle-to-everything (V2X) tech-
cooperativemotionplanning,CAVscollaborativelymakejoint
nologies, have provided valuable insights in addressing ur-
decisions and subsequently generate cooperative trajectories
ban transportation challenges [1], [2]. Additionally, advanced
aimed at optimizing overall system performance and ensuring
planning and control methodologies for multi-agent systems
safe and efficient maneuvers. However, the incorporation of
have shown significant potential in the field of autonomous
various key factors, such as inter-vehicle collision avoidance,
vehicles [3], [4]. As a result, connected autonomous vehicles
vehiclemodel,andvariousphysicalconstraints,renderscoop-
(CAVs) have emerged as a promising technological solution
erative motion planning a challenging task. This is especially
for reducing traffic congestion, preventing accidents, and
evident when dealing with a larger number of CAVs or
enhancing both driving safety and efficiency. Significantly,
when operating in complex traffic environment. To address
thecooperativemotionplanningproblemforCAVs,aseriesof
HaichaoLiu,ZhenminHuang,YulinLi,andJunMaarewiththeRobotics
and Autonomous Systems Thrust and the Department of Electronic and representative works have been presented, drawing inspiration
Computer Engineering, The Hong Kong University of Science and Tech- from advancements in both learning-based and optimization-
nology, China (e-mail: hliu369@connect.ust.hk; zhuangdf@connect.ust.hk;
based methodologies [9].
yline@connect.ust.hk;jun.ma@ust.hk).
Zicheng Zhu is with the Department of Electrical and Com- The use of learning-based algorithms, represented by rein-
puter Engineering, National University of Singapore, Singapore (e-mail: forcementlearning(RL),hasbecomeprevalentintacklingmo-
zhuzicheng@u.nus.edu)
tionplanningproblems[10],[11].Inthecontextofmulti-agent
ShaojieSheniswiththeDepartmentofElectronicandComputerEngineer-
ing, The Hong Kong University of Science and Technology, China (e-mail: path finding, PRIMAL serves as a decentralized framework
eeshaojie@ust.hk). thatplansefficientsingle-agentpathsbyimitatingacentralized
This work has been submitted to the IEEE for possible publication.
expert through imitation learning, thereby facilitating implicit
Copyright may be transferred without notice, after which this version may
nolongerbeaccessible. coordination during online path planning [12]. Despite its
4202
naJ
71
]OR.sc[
1v23090.1042:viXra2
scalabilitytolargerteams,PRIMALsuffersfromperformance the performance comparable to that of algorithms under the
deteriorationinstructuredanddenselyoccupiedenvironments perfect communication [28]. On the other hand, decentralized
that require substantial efforts in coordination of agents. To methods have also been explored, utilizing ADMM applied
address this limitation, drawing inspiration from slime mold, to the dual of the resource allocation problem, where each
RL-APCP3 presents an effective solution to the deterioration agent exchanges information solely with its neighbors [25],
problem in dense maps using bionic SARSA algorithm [13]. [29]. The convergence of this method has been proven, and
Specifically for CAVs, a learning-based iterative optimization its effectiveness has been illustrated through numerical exam-
algorithm was used to explore the collision-free cooperative ples. Building upon the aforementioned algorithm, the ND-
motion planning problem for CAVs at unsignalized intersec- DDP algorithm was presented, where an efficient three-level
tions[14].Inaddition,anovelmulti-agentbehavioralplanning architecture was proposed employing ADMM for consensus
schemeforCAVswasinvestigatedbyexploitingRLandgraph and DDP for scalability [30]. With this approach, only local
neural networks at urban intersections, which improves the communication is required. However, these solutions, which
vehicle throughput significantly [15]. However, the learning- focus on commuting with neighbors, exhibit long compu-
based methods typically require substantial real-world data tational time when the number of agents increases. Also,
and may be limited by their interpretability, restricting their these approaches only consider a graph that does not evolve
generalization to a wider range of traffic scenarios. with time, where the assigned neighbors of each agent are
Alternatively, optimization-based approaches commonly assumed to be fixed. Yet in the real-world urban driving
adopt an optimal control problem (OCP) formulation for scenarios,thetopologynetworkbetweenvehiclesisspatiotem-
motion planning tasks. This approach offers several bene- porally dynamic, with each node experiencing constantly fast
fits such as providing a precise mathematical representation, changing neighborhoods throughout the driving process [31].
ensuring interpretability, and proving optimality [16]. When Nonetheless,maintainingadynamicconnectivitygraphwithin
dealing with cooperative motion planning problems involving the whole planning horizon is challenging considering the
CAVs with nonlinear vehicle models, these OCPs can be uncertainty in the future trajectories of all vehicles. For-
typicallysolvedusingwell-establishednonlinearprogramming tunately, receding horizon frameworks formulated with the
solvers such as interior point optimizer (IPOPT) and sequen- model predictive control (MPC), offer the potential for more
tial quadratic programming (SQP). Additionally, the iterative robust driving performance [32], [33]. Nonetheless, solving
linear quadratic regulator (iLQR) leverages the benefits of a centralized MPC problem involving all the agents is rather
differential dynamic programming (DDP) for addressing non- time-consuming [34]. Alternatively, the distributed MPC has
linear optimization problems, while retaining only the first- alsobeenwidelydeployed[35],[36],inwhicheachagentonly
order term of dynamics through Gauss-Newton approxima- considers its own objective thereby obviously reducing the
tion to enhance the computational efficiency [17]. While the scale of optimization. In [37], a partially parallel computation
traditional iLQR algorithm is effective and efficient in han- frameworkisproposedtosolvethemulti-agentMPCproblem
dling system dynamic constraints, this method cannot directly basedonADMM.However,evenifallagentscanbedeployed
address various inequality constraints entailed by collision in a distributed manner, the collision avoidance requirements
avoidance requirements and other physical limitations. To (which naturally lead to the coupling effects among agents)
overcome this limitation, many representative works have result in a dramatic increase in the number of constraints to
been presented to cope with inequality constraints within the the optimization problem. Therefore, all these aforementioned
DDP/iLQR framework, including control-limited DDP [18], methodssufferfromsignificantcomputationalburdens,render-
[19] and constrained iLQR [20]‚Äì[22]. To further reduce the ing them difficult to deploy in large-scale CAVs. Apparently,
computational burden, especially for large-scale systems, the to establish an efficient cooperative driving framework for an
alternating direction method of multipliers (ADMM) was excessive number of CAVs, necessary efforts are required to
developed by decomposing the original optimization problem decompose the overall OCP into a series of fully parallel and
intoseveralsub-problems[23].Withitsparallelanddistributed solvable sub-problems, such that the problem can be solved
characteristics, the ADMM can be well-suited to address efficiently.
the cooperative motion planning problem for CAVs [24]. Driven by the aforementioned challenges, this paper intro-
Leveraging the dual consensus ADMM [25], a fully paral- duces an improved consensus ADMM for cooperative motion
lel optimization framework was established for cooperative planningoflarge-scaleCAVswithlocallyconnectedtopology
trajectory planning of CAVs, which effectively distributes the network, together with a graph evolution strategy to limit the
computationalloadevenlyamongallparticipants,allowingfor scale of each OCP corresponding to each subset of the CAVs.
real-time performance [26]. Theoverviewoftheproposedmethodologyisdemonstratedin
However, the aforementioned works rely on a strong as- Fig. 1. Particularly, to achieve high computational efficiency,
sumptionoffullyconnectedtopologynetworkbetweenCAVs, we transform and decouple the inter-vehicle constraints and
which is not applicable in real-world driving conditions under leverageparallelsolvingcapabilitiesoftheADMM.Moreover,
V2Xcommunication,duetohighdelaysandlowtransmission we reduce the complexity of the dual update process by
reliability associated with long-range and large-scale V2X capturingthesparsityoftheproblemandderivingasimplified
communication [27]. To address the communication delays, equivalentform.Furthermore,weimproveitsreal-timeperfor-
the QuAsyADMM algorithm that incorporates a finite time mance by limiting the scale of the optimization problem by
quantized averaging approach was proposed, and it achieves integrating the dynamic graph evolution algorithm.3
The key contributions of this work are as follows: III. PROBLEMFORMULATION
‚Ä¢ An improved consensus ADMM algorithm is introduced A. Representation of CAVs with Graph Theory
to solve the cooperative motion planning problem with The relationship of CAVs can be represented using graph
a locally connected topology network, such that the theory, where nodes represent individual vehicles and edges
problem is decomposed into a series of sub-problems representcommunicationlinksbetweenthem.Thisrepresenta-
that can be solved in a parallel manner. This algorithm tionallowsforacomprehensiveanalysisofthecommunication
achievesacomplexityofO(N)byexploitingthesparsity relationships among CAVs. Let G = (V,E) be an undirected
in the dual update process. graph,whereV representsthesetofvehiclesandE represents
‚Ä¢ A graph evolution strategy for a dynamic connectivity the set of communication links between nodes. Each vehicle
graphofCAVsispresentedtocharacterizetheinteraction ni ‚àà V is associated with a state vector zi and a control
patterns among CAVs, and each sub-problem attempts input vector ui. It is pertinent to note that according to the
to manage a small group of CAVs. In this sense, the relative locations of the CAVs, the subgraphs of G are noted
computational efficiency can be further enhanced. as H, evolved between the planning horizons of cooperative
‚Ä¢ A closed-loop framework for cooperative motion plan- driving. Particularly, even in the same subgraph, the vehicle
ning is then proposed, which integrates the graph evo- ni only exchanges information with its surrounding vehicles
lution in a receding horizon fashion. This enhances the within a certain communication range. For clarification, we
ability of consensus ADMM to cope with large-scale denote the number of CAVs in the whole traffic system as
CAVs and provides a more robust driving performance. M. Accordingly, the distance matrix D = [a ] ‚àà RM√óM
ij
‚Ä¢ Real-time performance and superiority of our proposed with i,j ‚àà {1,2,¬∑¬∑¬∑ ,M} of the whole connectivity graph G
method is demonstrated through numerical simulations. can be formulated. The number of CAVs in each subgraph
The large-scale cooperative motion planning simulations H = (N ,E ) is denoted as N . Note that we omit the
k k k,h k
involving 80 CAVs are executed in a high-fidelity urban subscript k (the index of a subgraph) of the above notations
map in CARLA, and the results showcase the effective- by default for simplicity. As shown in Fig. 1, for each pair of
ness and robustness of our proposed methodology. vehicles, an edge (ni,nj) = di,j ‚àà E ‚äÜ E is established if
h
the distance between the pair of vehicles di,j is smaller than
The rest of this paper is organized as follows: Section II
the communication range ri ‚àà R . In addition, we define
providesthedefinitionsofnotations.InSectionIII,wepresent tele +
thecardinalityofanodeni inHas|ni|=deg(ni),describing
the CAVs‚Äô connectivity pattern using graph theory and for-
the number of indices of the connected non-self nodes in
mulate the cooperative motion planning problem. Section IV
reformulates the problem and an improved consensus ADMM Ni ={j ‚ààN |(i,j)‚ààE }. (1)
h
is proposed. In Section V, we present a closed-loop receding
The above representation offers clear and logical insights into
horizon-based cooperative motion planning strategy based on
the connectivity and communication patterns among CAVs,
our graph evolution algorithm. In Section VI, we demonstrate
thereby aiding the practical implementation of decentralized
theperformanceoftheproposedmethodologythroughaseries
cooperative motion planning algorithms.
of simulations. Section VII presents the conclusion.
B. Vehicle Model
For all CAVs, the non-linear bicycle kinematics model in
II. NOTATIONS [38] is used. The state vector of a vehicle is z =[x,y,Œ∏,v]T,
where x and y are the positions of the rear axle of the vehicle
We use the lowercase letter and uppercase letter to rep-
from x‚àíaxis and y‚àíaxis in the global Cartesian map, Œ∏ and
resent a vector x ‚àà Rn and a matrix X ‚àà Rn√óm, re-
v are the heading angle (from the positive direction of the
spectively. Also, diag{a ,a ,¬∑¬∑¬∑ ,a } represents a diagonal
1 2 n x-axis) and velocity of the vehicle, respectively. The control
matrixwitha i,i‚àà{1,2,¬∑¬∑¬∑ ,n}asdiagonalentries.Similarly, inputvectorisu=[a,Œ¥]T,whereaandŒ¥ aretheacceleration
blocdiag{A ,A ,...,A } is used to represent a block diag-
1 2 n and steering angle of the front wheel, respectively. Then, the
onal matrix with block diagonal entries A ,A ,...,A . The
1 2 n vehicle model can be expressed as:
setsofnon-negativeintegersandrealnumbersarerepresented Ô£Æ Ô£π
as Z and R , respectively. A logical/Boolean matrix is x œÑ +f i(v œÑ,Œ¥ œÑ)cosŒ∏ œÑ
+ +
denoted as B. [¬∑]i represents the variable of the ith CAV, z =f(z ,u )=Ô£Ø Ô£Ø y œÑ +f i(v œÑ, (cid:16)Œ¥ œÑ)sinŒ∏ œÑ (cid:17) Ô£∫ Ô£∫, (2)
while[¬∑] œÑ indicatesthevariableattimestepœÑ.Forsimplicity, œÑ+1 œÑ œÑ Ô£Ø Ô£∞ Œ∏ œÑ +arcsin g(vœÑ bi,Œ¥œÑ) Ô£∫ Ô£ª
a matrix concatenated in row [s1,s2,¬∑¬∑¬∑ ,sn] is denoted as v +œÑ a
œÑ s œÑ
[si],i = 1,2,¬∑¬∑¬∑ ,n. On the contrary, we denote the matrix
where g(v,Œ¥)=v ‚àÜT sin(Œ¥ ), f (v,Œ¥) is defined as:
withentriessi concatenatedbycolumnas[s1;s2;...;sn].The œÑ œÑ i
(cid:113)
squared weighted L 2-norm xTMx is simplified as ‚à•x‚à•2 M. f i(v,Œ¥)=b i+v‚àÜT cosŒ¥‚àí b2
i
‚àíg(v,Œ¥)2, (3)
We denote an indicator function w.r.t. a set X ‚àà Rn as
I (x), which takes value 0 if x ‚àà Rn belongs to X and where b i is the wheelbase of the ith CAV and ‚àÜT =0.1 s. In
X
addition,weformulatetwomatricestodenotethestatevectors
+‚àû otherwise.Element-wise maximizationand minimization
and control inputs of the ith CAV by
operations for the vectors a and b are denoted as max{a,b}
and min{a,b}, respectively. Zi ={zi,zi,...,zi },Ui ={ui,ui,...,ui }.
0 1 T 0 1 T‚àí14
ùë¶ ùë¶$ ùë¶$ ùë¶$$
ùíë!,‚Äô
ùíë!,&
ùëü! ùíë)!#,& ùíë)!#,‚Äô
ùúÉ"! Constraint
ùëü! Rotation Transformation Scaling
CAV i CAV i CAV i CAV i
ùëé#
ùíë# ùúÉ"# ùë•$ ùëü! ùëé# ùíë# ùë•$ ùë•$$
ùëè# ùëè# 1
CAV j CAV j CAV j
CAV j ùë•
Fig.2. Geometricrelationshipandtransformationforinter-vehiclecollisionavoidance,inwhichthetwoCAVsinapairareenwrappedwithadoublecircle
andanellipse,respectively.TheradiusofCAViisri,whilethelengthofsemi-majorandsemi-minoraxesofCAVjareaj andbj,respectively.Therotation
anglebetweentheglobalcoordinatesystemandthea-paralleledcoordinatesystemisthesameastheheadingangleoftheŒ∏j.Aftertheabovetransformation,
thecollisiondiscriminantbecomesjudgingwhetherapointiswithinaunitcircle.
C. Cooperative Motion Planning with Communication Limits andthecriterionforcollisiondetectionisthedistancebetween
each pair of circles. For instance, to construct the safe region
This work considers a cooperative motion planning task in
Si, if there are |ni|=Ni CAVs around ith CAV, there would
one subgraph H where N CAVs drive on the urban road with œÑ
be 22Ni pairs of constraints that need to be considered.
their destinations and global path. Assuming all the vehicles
Alternatively, we can reduce the number of above con-
share the same control and velocity limits, we formulate this
straintsbymodelingcertainCAVs,suchasaCAVwithalower
problem as an OCP:
orderinapairofCAVs,asellipses[39],whilerepresentingthe
min (cid:80)N i=1Q i(Zi,Ui) other CAV in the pair as double circles. This would decrease
z œÑi,ui œÑ the constraints number by 2Ni for constructing the Si. For
s.t. zi =f(zi,ui), œÑ
œÑ+1 œÑ œÑ a CAV pair (ni and nj) using the above description, we
zi ‚ààSi,
‚àíœÑ u+ i1 ‚™ØuiœÑ ‚™Øui, (4) formulate the following constraints for inter-vehicle collision
œÑ avoidance:
‚àízi ‚™Øzi ‚™Øzi,
œÑ
‚àízi ‚™Øz Ti ‚™Øzi, (xÀÜj œÑ ‚àíxÀÜi œÑ,c)2 + (yÀÜ œÑj ‚àíyÀÜ œÑi,c)2 ‚â•1,
‚àÄœÑ ‚ààT, ‚àÄi‚ààN, (aj +ri)2 (bj +ri)2 (6)
‚àÄc‚ààC,j ‚ààNi,i‚ààN,œÑ ‚ààT,
where N represents the set of index of CAVs in the traffic
systemofasubgraphH.T ={0,1,...,T‚àí1}isthetemporal where xÀÜ and yÀÜ means the rotated position w.r.t. the x‚Ä≤ ‚àíy‚Ä≤
horizon within a cooperative motion planning episode. In coordinate parallel to the semi-major axis a of the ellipse (a-
addition, Si is the collision-free region of the ith CAV at parallelled coordinate) of (x,y), C ={0,1} denotes the front
œÑ
timestepœÑ,whichwillbedefinedinSectionIII-D.ui andui and rear circle of a CAV, Ni ‚àà Zdeg(ni) denotes the index
+
mean the lower and upper bound of the control input for ith
set of the neighbor CAVs within the communication range
CAV, respectively. Similar meanings take effect on zi and zi. ri of the ith CAV. The discriminant (6) comes into effect
tele
Moreover, the objective of this OCP is to follow the
for the following reason. In Fig. 2, we can observe that after
referencetrajectoriesgeneratedbyanefficientsampling-based
applyingrotationandtranslationtransformationstoalignwith
algorithm. For an individual vehicle, it can be expressed as
the a-paralleled coordinate system, the origin is the center
T T‚àí1 of the CAV nj and the x‚Ä≤-axis is parallel to the semi-major
(cid:88) (cid:88)
Q (Zi,Ui)= ‚à•zi ‚àízi ‚à•2 + ‚à•ui‚à•2 , (5) axis of the CAV nj. Then we proceed to enlarge the ellipse
i œÑ ref,œÑ Q œÑ R
œÑ=0 œÑ=0 by the radius of the circles ri encapsulating the other CAV.
Consequently, we utilize the coordinates of the circle centers
where the weighted matrices are Q=diag{q ,q ,q ,q } and
x y Œ∏ v
in (6) to assess whether these centers fall within the enlarged
R=diag{q ,q }. The expected outcome of the optimization
Œ¥ a
ellipse.Ifthisconditionismet,itsignifiesacollisionbetween
problem (4) is to cooperatively follow the reference states
the two CAVs. We will make the scaling transformation to
with different weights while complying with vehicle model
andstayinginthesaferegionSi toavoidcollisionswitheach make a more compact constraint form in Section IV-B.
œÑ
For the coordinate transformation of the CAV‚Äôs position
other.
from the global coordinate to the a-parallelled coordinate, the
following equation is given:
D. Inter-Vehicle Collision Avoidance of CAVs
(cid:20) cosŒ∏j sinŒ∏j (cid:21)
Under connected conditions, assume each CAV can receive pÀÜk = œÑ œÑ ¬∑pk =Rj ¬∑pk, (7)
œÑ ‚àísinŒ∏j cosŒ∏j œÑ œÑ œÑ
real-time information from its neighbors in Ni in a certain œÑ œÑ
range and collaborate to generate maneuvers that prevent where pÀÜk =[xÀÜk,yÀÜk]T is the position of the kth vehicle under
œÑ œÑ œÑ
collisions. Typically, vehicles are represented as two circles, thea-parallelledcoordinate,whilepk isthepositionunderthe
œÑ5
After the global reference waypoints are obtained, the local
reference waypoints can be determined utilizing a Nearest
Neighbor Search mechanism for updating the reference tra-
jectory of each CAV. Concretely, at each time step, each CAV
searches for the nearest waypoint using a KD-tree formulated
by the waypoints in its rough reference trajectory.
Remark 2. The utilization of the KD-tree data structure is
shown to be highly efficient, particularly when dealing with a
largenumberofwaypoints.Thisguidancewaypointsearching
process minimally impacts the efficiency of the cooperative
motion planning algorithm while offering a more robust and
comfortable riding experience.
Possible Collision Area B. Convexification and Reformulation
Inthissection,weassumethatalltheCAVsareallocatedto
Fig.3. Smoothedguidancetrajectoriesforcooperativemotionplanning.We
the same subgraph H. To achieve fully decentralized motion
generate these trajectories by sampling the road topology information from
theOpenDRIVEmap.Eachvehicle‚Äôstrajectoryisvisuallyrepresentedbydots planning for the CAVs efficiently, the objective function of
ofdifferentcolors.Theplottedguidancetrajectoriesunveilpotentialcollision the OCP should be convexified, and the constraints should be
conflictsthatmayarisewithintheintersectionarea.
linearized [26]. In this paper, we transform the optimization
variables from zi and ui to perturbed forms ‚àÜzi and ‚àÜu .
œÑ œÑ œÑ œÑ
global x‚àíy coordinate in Fig. 2. Another notation Rj is the Firstly, the vehicle model can be linearized by first-order
œÑ
transformation matrix to the a-paralleled coordinate. Besides, Taylor expansion:
if given the center position pi of the CAV ni, the center
œÑ ‚àÜzi =Ai‚àÜzi +Bi‚àÜui, (9)
positions of the front and rear circles are expressed as: œÑ+1 œÑ œÑ œÑ œÑ
(cid:20) cosŒ∏i (cid:21) where Ai œÑ = ‚àÇf(cid:0) z œÑi,ui œÑ(cid:1) /‚àÇz œÑi, B œÑi = ‚àÇf(cid:0) z œÑi,ui œÑ(cid:1) /‚àÇui œÑ are
pi,c =pi ¬± œÑ di,c. (8) the partial derivatives of the vehicle model.
œÑ œÑ sinŒ∏i
œÑ Secondly, the inter-vehicle collision avoidance constraints
Clearly, There are two circles pi,0 and pi,1 that need to be between pairs of vehicles can be rewritten and convexified
œÑ œÑ
transformed. The centers of these circles can be transformed as follows. We define the following function with perturbed
using (7), which involves replacing pk œÑ with pi œÑ,c. With this, variable vector ‚àÜpk œÑ = [‚àÜxk œÑ,‚àÜyk œÑ]‚ä§ as the discriminant for
the transformed positions of the circles, pÀÜi,0 and pÀÜi,1, can be inter-vehiclecollisionavoidanceinthea-paralleledcoordinate:
œÑ œÑ
obtained. Additionally, the distance of the cth circle to the f (zj,zi,c)=kij‚àÜpij +‚à•pij‚à• ‚àíd ,
center of the ith CAV is denoted by di,c. S œÑ œÑ œÑ œÑ œÑ 2 safe (10)
‚àÄc‚ààC,i‚ààNj,j ‚ààNi,œÑ ‚ààT+,
IV. COOPERATIVEMOTIONPLANNINGWITHLIMITED where kij = pi œÑj is a unit vector for projective transforma-
COMMUNICATIONVIAIMPROVEDCONSENSUSADMM tion of
tœÑ
he
pe‚à• rp tui œÑj r‚à•
bed displacement to the direction from the
A. Guidance Trajectory Generation and Dynamic Search ith CAV to the j th one, d safe ‚â• 1 is the obstacle avoidance
margin,T+ ={0,1,...,T},pij istherelevantpositionofthe
In the rough trajectory generation process, waypoints are œÑ
pair of CAVs, and it can be calculated by:
sampled along the center line of lanes with equal intervals
in the OpenDRIVE format map. As illustrated in Fig. 3, pij =SijRj(pi,c‚àípj), (11)
œÑ œÑ œÑ œÑ
use the same approach in [33], for any starting point xs =
where Sij = diag{ 1 , 1 }. Given the state vectors zj
[ps,ps,œÜs]‚ä§,A‚àó searchcanbeperformedontheconnectivity aj+ri bj+ri œÑ
x y and zi as the working points, the perturbed relevant position
graph to obtain the shortest path leading to the target destina- œÑ
tion xt =[pt,pt,œÜt]‚ä§. Note that we use the Savitzky-Golay ‚àÜpi œÑj can be calculated by:
x y
filtertoimprovethecontinuityandsmoothnessofthesearched ‚àÇpij ‚àÇpij
‚àÜpij = œÑ ‚àÜzj + œÑ ‚àÜzi. (12)
path, which makes the distribution of waypoints more even, œÑ ‚àÇzj œÑ ‚àÇzi œÑ
œÑ œÑ
especially around intersections, corners, and regions for lane
Plugging(7),(8),and(11)to(12),thepartialderivativeofthe
changing.
CAV nj at time step œÑ is
Remark 1. For cooperative motion planning problems, the
‚àÇp¬Øij ‚àÇRjpic ‚àÇRjpj
temporal trajectories of CAVs may not always be strictly fol- œÑ =Sij œÑ œÑ +Sij œÑ œÑ
lowed due to the influence of surrounding vehicles‚Äô behavior. ‚àÇz œÑj ‚àÇz œÑj ‚àÇz œÑj
To address this, it becomes necessary to enable CAVs to =Sij(cid:18)(cid:20) 0 0 ‚àísinŒ∏ œÑjxi œÑ,+cosŒ∏ œÑjy œÑi,c 0 (cid:21)
automatically follow an appropriate waypoint based on their 0 0 ‚àícosŒ∏jxi,c‚àísinŒ∏jyi,c 0
œÑ œÑ œÑ œÑ
current state. One approach to achieving this is by searching (cid:20) cosŒ∏j sinŒ∏j ‚àísinŒ∏jxj +cosŒ∏jyj 0 (cid:21)(cid:19)
‚àí œÑ œÑ œÑ œÑ œÑ œÑ ,
for the nearest waypoint that the vehicle should follow. ‚àísinŒ∏j cosŒ∏j ‚àícosŒ∏jxj ‚àísinŒ∏jyj 0
t œÑ œÑ œÑ œÑ œÑ6
while the partial derivative of the CAV ni at time step œÑ is With a similar expression, the vehicle model (9) can be
described by
‚àÇp¬Øij ‚àÇpi,c
œÑ =SijRj œÑ (Li ‚àíLi)‚àÜZi =0, (18)
‚àÇzi œÑ ‚àÇzi 3 4
œÑ œÑ
=SijRj (cid:20) 1 0 ‚àìdi¬∑csinŒ∏ œÑi 0 (cid:21) , whereLi 3 =blocdiag{[Ai 0 B 0i],[Ai 1 B 1i],¬∑¬∑¬∑ ,[Ai T‚àí2 B Ti ‚àí2],
œÑ 0 1 ¬±di¬∑ccosŒ∏ œÑi 0 [Ai
T‚àí1
B Ti
‚àí1
04√ó4]} ‚àà R(4T)√ó(6T+4) and Li
4
=
blocdiag{[04√ó4 04√ó2 I4],[04√ó2 I4],¬∑¬∑¬∑ ,[04√ó2 I4]} ‚àà
where for the front and rear circles of the ith CAV, the
R(4T)√ó(6T+4). Then, we define the solution set of the lin-
thirdcolumnelementsinthederivativematriceshaveopposite
signs. The vehicle is in the safe set Si if f (pÀÜj,pÀÜi,c) ‚â• 0. earized vehicle model as
œÑ S œÑ œÑ
Therefore, with the new notation of
SD ={‚àÜZi|(Li ‚àíLi)‚àÜZi =0}, (19)
3 4
(cid:18) ‚àÇRjpic ‚àÇRjpj(cid:19)
J ij cœÑ =k œÑijSij ‚àÇzœÑ jœÑ + ‚àÇzœÑ j œÑ , (13) which is nonempty, closed, and convex. In conclusion, when
œÑ œÑ combining the indicator function related to SD with the cost
‚àÇpi,c associated with the host, the resulting expression can be
Ji,c =kijSijRj œÑ , (14)
jœÑ œÑ œÑ ‚àÇzi written as:
œÑ
the discriminant of the safety indicator is approximated as: Fi(‚àÜZi)=F¬Øi(‚àÜZi)+I (‚àÜZi). (20)
SD
‚à•SijRj(pi,c‚àípj)‚à• +Jj ‚àÜzj+Ji,c‚àÜzi‚àíd ‚â•0, (15)
œÑ œÑ œÑ 2 icœÑ œÑ jœÑ œÑ safe Afterward, we formulate the inter-vehicle collision avoid-
where j ‚ààNi, i‚ààNj, c‚ààC, and œÑ ‚ààT+. anceconstraintsandvehiclephysicalconstraints.Wecombine
the inequality constraints into another indicator function I
Third, the vehicle state and control input constraints w.r.t K
corresponding to the feasible set of (15) and (16). For inter-
the perturbed variables ‚àÜz and ‚àÜu can be written as:
vehicle collision avoidance constraints, the Jacobian matrices
zi‚àízi ‚â§‚àÜzi ‚â§zi‚àízi,
in(13)and(14)shouldbeconcatenatedinthefollowingorder.
œÑ œÑ œÑ (16)
ui‚àíui ‚â§‚àÜui ‚â§ui‚àíui. For ith CAV, its concatenated Jacobian at time step œÑ is
œÑ œÑ œÑ
All the constraints of the original cooperative problem (4) are Ji =(cid:2) a‚ä§(cid:3)‚ä§ ‚ààRN(N‚àí1)√ó4, (21)
œÑ jk 1‚â§j<k‚â§N
linearized and transformed by (9), (15), and (16).
Lastly, the quadratic objective function in (4) w.r.t. the where according to (13) and (14), a can be expressed as
jk
perturbed independent variables ‚àÜzi can be derived by the
œÑ Ô£± [Ji ;Ji ] j =i
second-order Taylor Expansion, which can be described as: Ô£≤ k0œÑ kiœÑ
a = [Ji,0;Ji,1] k =i (22)
Q¬Øi œÑ(‚àÜz œÑi,‚àÜui œÑ)‚âàQi œÑ(z œÑi,ui œÑ)+‚àÜui œÑ‚ä§Qi œÑ,u+‚àÜz œÑi‚ä§Qi œÑ,z jk Ô£≥ 02j √óœÑ 4 jœÑ otherwise.
1 1
+ 2‚àÜui œÑ‚ä§Qi œÑ,uu‚àÜui œÑ + 2‚àÜz œÑi‚ä§Qi œÑ,zz‚àÜz œÑi, With the expression of the Jacobian Ji, we define JÀÜi =
œÑ
blocdiag{[Ji 0N(N‚àí1)√ó2],¬∑¬∑¬∑ ,[Ji 0N(N‚àí1)√ó2],Ji}.Fur-
where œÑ ‚ààT, Qi(‚àÜzi,‚àÜui)=Qi(zi +‚àÜzi,ui +‚àÜui). 0 T‚àí1 T
œÑ œÑ œÑ œÑ œÑ œÑ œÑ œÑ ther,withaslightabuseofnotation,wedefinethenormvector
In addition, Qi and Qi are the partial derivatives of Qi
œÑ,u œÑ,z œÑ k constructed by ‚à•SijRj(pi,c‚àípj)‚à• at time step œÑ with
w.r.t. ui and zi, while Qi and Qi are the second-order œÑ œÑ œÑ œÑ 2
œÑ œÑ œÑ,uu œÑ,zz a similar modality of (21), which is
partial derivatives of Qi w.r.t. ui and zi. Note that the state
œÑ œÑ œÑ
v see cc oto nr d-a on rd det rhe mc ixo en dtro dl eri in vp au tit vev sec Qto ir are =de Qco iuple =d, 0h .en Wce ithth ae k œÑ =(cid:2)(cid:13) (cid:13)SijR œÑj (cid:0) pi œÑ,c‚àípj œÑ(cid:1)(cid:13) (cid:13) 2(cid:3) 1‚â§j<i‚â§N ‚ààRN√ó(N‚àí1), (23)
œÑ,uz œÑ,zu
similar definition of Q¬Øi, the terminal cost is where c ‚àà C. Concatenating k at all time steps, we define
œÑ œÑ
kÀÜ = [k ] ‚àà RN(N‚àí1)(T+1). Then, we rewrite the
1 œÑ œÑ‚ààT+
Q¬Øi T(‚àÜz Ti )‚âàQi T(z Ti )+‚àÜz Ti‚ä§Qi T,z+ 2‚àÜz Ti‚ä§Qi T,zz‚àÜz Ti . collision avoidance discriminant (15) of all the CAVs through
the planning horizon as:
The following part reformulates the OCP as a consensus
optimization problem with a standard consensus ADMM N
form [25]. To facilitate the description of the indepen- kÀÜ+(cid:88) JÀÜi‚àÜZi‚àídN(N‚àí1)(T+1) ‚™∞0. (24)
safe
dent variables of the cooperative problem, define ‚àÜZi = i=1
[‚àÜzi‚ä§,‚àÜui‚ä§,...,‚àÜzi‚ä§]‚ä§ ‚àà R6T+4 as the concatenated
0 0 T For the box constraints in (16), we define a new ma-
vectorofallthestatevectorsandcontrolinputscorresponding trix OÀúi step by step. We define a new variable ‚àÜei =
totheithCAV.Besides,defineLi 1 =[Qi 0,z,Qi 0,u,¬∑¬∑¬∑ ,Qi T,z]‚àà (cid:2) ‚àÜeÀÜi‚ä§,‚àÜvi (cid:3)‚ä§ ‚àà R3T+1 with the notation of ‚àÜeÀÜi =
R6T+4 as the column vector containing all the first-order (cid:2) [‚àÜvi,‚àÜŒ¥iT ,‚àÜai]‚ä§(cid:3) , where ‚àÜei denotes the variables
Jacobians, and Li = blocdiag{Qi ,Qi ,¬∑¬∑¬∑ ,Qi } ‚àà œÑ œÑ œÑ i‚ààT
2 0,zz 0,uu T,zz with box constraints in the dynamic system (2). Then ‚àÜei =
R(6T+4)√ó(6T+4) as the block diagonal matrix of all second- Oi‚àÜZi, where
order Hessians. Hence, the perturbed overall host cost is
Oi =blocdiag{[03√ó3,I3],¬∑¬∑¬∑,[01√ó3,1]}‚ààB(3T+1)√ó(6T+4).
1
F¬Øi(‚àÜZi)=‚àÜZi‚ä§Li + ‚àÜZi‚ä§Li‚àÜZi. (17) (cid:124) (cid:123)(cid:122) (cid:125)
1 2 2 T7
To facilitate the form ‚àÜe = (cid:80)N OÀÜi‚àÜZi required in the Algorithm 1 Dual Consensus ADMM [40]
i=1
dual consensus ADMM algorithm [40], we further define 1: choose œÉ,œÅ>0
2: initialize for all i‚ààN: pi,0 =yi,0 =xi,0 =si,0 =0
OÀÜi =[0(3T+1)√ó(6T+4),¬∑¬∑¬∑,Oi,0(3T+1)√ó(6T+4),¬∑¬∑¬∑], (25) 3: repeat: for all i‚ààN
(cid:124) (cid:123)(cid:122) (cid:125) (cid:124) (cid:123)(cid:122) (cid:125)
i‚àí1 N‚àíi 4: Broadcast yi,k to the vehicles in Ni
5: pi,k+1 =pi,k+œÅ(cid:80) (yi,k‚àíyj,k)
where OÀÜi ‚àà B(3T+1)N√ó(6T+4). Hence, the discriminant (16) j‚ààNi
6: si,k+1 =si,k+œÉ(yi,k‚àíxi,k)
for all the CAVs can be aggregated and rewritten as 7: ri,k+1 =œÉxi,k+œÅ(cid:80) (cid:0) yi,k+yj,k(cid:1)
j‚ààNi
N ‚àí(ki+pi,k+1+si,k+1)
E‚àíE œÑ ‚â§(cid:88) OÀÜi‚àÜZi ‚â§E‚àíE œÑ, (26) 8: zi,k+1 =argmin(cid:8) Fi(cid:0) zi(cid:1) +Œ≥(cid:13) (cid:13)Jizi+ri,k+1(cid:13) (cid:13)2(cid:111)
i=1 9: yi,k+1 =2Œ≥(cid:0) Jizi,k+1+ri,k+1(cid:1)
where E œÑ = [ei] i‚ààN, is the concatenated state and con- 10: xi,k+1 =Œ† K‚ó¶(cid:0) œÉ1si,k+1+yi,k+1(cid:1)
trol input vectors of all the vehicles at time step œÑ. E 11: k =k+1
and E denote the lower and upper bounds, respectively. 12: until termination criterion is satisfied
With the notation k = [‚àíkÀÜ + dN(N‚àí1)(T+1),0(3T+1)N] ‚àà
safe
RN(N‚àí1)(T+1)+(3T+1)N, we formulate the second element of
the unconstrained problem by the following two functions In this problem, Slater‚Äôs condition holds under affine con-
straints, which ensures the strong duality property. The La-
G (M )=I (M ‚àík), G (M )=I (M ),
1 g1 R+ g1 2 g2 Sb g2 grangian of (28) is given by:
where the subscripts R + denotes a positive semidefinite cone N
with a N(N ‚àí1)(T +1) dimension and Sb ={s|E‚àíE œÑ ‚™Ø L(‚àÜZ,h,y)=(cid:88) Fi(‚àÜZi)+I K(h)
s‚™ØE‚àíE } denotes a continuous convex set with a (3T +
œÑ i=1 (29)
1)N dimension, respectively. The independent variables are (cid:32) N (cid:33)
+y‚ä§ (cid:88)(cid:0) Ji‚àÜZi‚àíki(cid:1) ‚àíh ,
N N
M =(cid:88)(cid:16) JÀÜi‚àÜZi(cid:17) , M =(cid:88) OÀÜi‚àÜZi. i=1
g1 g2
i=1 i=1 where y ‚àà RN(N‚àí1)(T+1)+(3T+1)N represents the dual vari-
ablerelatingtotheinter-vehiclecollisionavoidanceconstraints
Concatenating JÀÜi with the upper and lower bound constraints
and box constraints from the vehicle physics. The Lagrange
in (25) as Ji =[JÀÜi;OÀÜi], we define the concatenated function
dual function can be expressed as:
(cid:32) N (cid:33)
(cid:88) h(y)= inf L(‚àÜZ,h,y)
G(M)=G(M ;M )=I Ji‚àÜZi‚àík ,
[1] [1] K ‚àÜZ,h
i=1 N (30)
where M = (cid:80)N Ji‚àÜZi and K = {(a;b)|a ‚àà R ,b ‚àà
=‚àí(cid:88)(cid:0) Fi‚àó(cid:0) ‚àíJi‚ä§y(cid:1)
+I
K‚ó¶(y)+y‚ä§ki(cid:1)
.
i=1 +
Sb} is theCartesian product ofthe two sets R and Sb. Note i=1
+
that G(¬∑), the sum of two convex functions G (¬∑) and G (¬∑), Note that Fi‚àó represents the conjugates of Fi and K‚ó¶ =
1 2
is still convex. At this stage, by including G(¬∑) in the overall (cid:8) y ‚ààRN(N‚àí1)(T+1)+(3T+1)N|sup y‚ä§h‚â§0(cid:9) is the po-
h‚ààK
cost incurred by F(¬∑), with a new notation of ki =k/N, the lar cone of the convex cone K. The problem of the Lagrange
unconstrained convex optimization problem is given by: dual problem, i.e.,
N (cid:32) N (cid:33) N
min(cid:88) Fi(‚àÜZi)+I
K
(cid:88)(cid:0) Ji‚àÜZi‚àíki(cid:1) . (27) maxh(y)=max ‚àí(cid:88)(cid:0) Fi‚àó(‚àíJi‚ä§y)+I K‚ó¶(y)+y‚ä§ki(cid:1) ,
‚àÜZi y y
i=1 i=1 i=1
can be treated as a consensus optimization problem that
C. ImprovedConsensusADMMforCooperativeMotionPlan- is decomposed. In this problem, all vehicles collaborate to
ning with Limited Communication Range collectivelyreachadecisiononasharedoptimizationvariable,
denoted as y. Consequently, the consensus ADMM Algo-
In this part, we leverage a parallel optimization framework
rithm 1 can be applied.
based on dual consensus ADMM and improve its computa-
Leveraging the methodological results in [26], we are
tional efficiency. For completeness, we restate the preliminar-
able to get the analytical expressions of the column vectors
ies of dual consensus ADMM [25], as also summarized in
Algorithm 1. We add the relax variable h and adapt the dual p,s,r,y,x‚ààRN(N‚àí1)(T+1)+(3T+1)N showninAlgorithm1.
TheimprovedconsensusADMMforcooperativemotionplan-
formulation of the problem (27) as:
ning problem contains the following two steps:
(cid:88)N 1) Dual Update: The decentralized local problems corre-
min Fi(‚àÜZi)+I (h)
K sponding to each CAV achieves consensus by dual update
‚àÜZ1,...,‚àÜZN
i=1 (28) process. In Algorithm 1, we define Œ≥ = 1 . Steps
N 2(œÉ+2œÅ|ni|)
s.t.
(cid:88)(cid:0) Ji‚àÜZi‚àíki(cid:1)
=h.
5-7 and 9-10 are used to update the dual variables. Note that
inStep5andStep7,theithCAVonlyprocessestheJacobian
i=18
Matrices related to its own neighbors in Ni. All steps are With Assumption 1, if all the CAVs in H are fully connected,
straightforward, except for Step 10. Based on the Moreau the complexity of the Algorithm 1 is O(N3), due to Step 5
decomposition [41], the projection operator can be expressed and Step 7.
as Œ† (a)=a‚àíŒ† (a). Therefore, Step 10 can be rewritten
K‚ó¶ K It is evident that the dual variables p,s,r,y,x ‚àà
as
1 RN(N‚àí1)(T+1)+(3T+1)N are constructed corresponding to the
xi,k+1 = si,k+1+yi,k+1‚àíŒªi,k+1, (31)
œÉ inter-vehicle collision avoidance constraints [¬∑] [1] with a di-
mension of N(N ‚àí1)(T +1) and the box constraints [¬∑]
where Œªi,k+1 is an intermediate variable calculated by: [2]
withadimensionof(3T+1)N.Therefore,separatetreatments
(cid:18) (cid:19)
1 are logical for these variable sets.
Œªi,k+1 =Œ† si,k+1+yi,k+1
K œÉ With the limited communication condition, [¬∑]i is cal-
[1]
=argmin(cid:13) (cid:13) (cid:13)yi,k+1+ 1 si,k+1‚àíq(cid:13) (cid:13) (cid:13) (32) c cu ol mat med unw ici ath tiot nhe ranin gf eor lm ima it ti son thefr no um mN beri. oI fn tho eth ne or n-w zeo rr ods J, acth oe -
(cid:13) œÉ (cid:13)
q‚ààK
(cid:26) (cid:26) (cid:27)(cid:27) bian matrices for the inter-vehicle collision avoidance from
1
=max Œõ,min Œì,yi,k+1+ si,k+1 , N(N ‚àí 1)(T + 1) to Ni(N ‚àí 1)(T + 1), while the rest
œÉ
jacobian matrices are filled with 0. The number of terms to
where k means the number of the ADMM iteration. Based be summed in Step 5 and Step 7 are converted from N to
on the definition of the Cartesian product K, we denote Ni as well. Assuming Ni is a limited number, we derive
the element-wise lower bound and upper bound as Œõ = the conclusion that the complexity of the calculation of [¬∑]
[1]
(cid:2) 0N(N‚àí1)(T+1),E(cid:3) +œµ and Œì = (cid:2) ‚àûN(N‚àí1)(T+1),E(cid:3) ‚àíœµ, is decreased from O(N3) to O(N) compared to the dual
respectively. Here, œµ = [œµ]N(N‚àí1)(T+1)+(3T+1)N is a vector consensus ADMM algorithm assuming the fully connected
filledwithasmallnon-negativenumberœµtopushxi,k+1 away topology network between CAVs [26].
from the boundary into the feasible region, ensuring strict On the other hand, [¬∑] has redundant variables associ-
[2]
satisfaction of constraints in the original problem. ated with other CAVs. We define [¬∑] ‚àà R3T+1 as the
[2,i]
((i‚àí1)(3T +1)+1) to i(3T +1) rows of [¬∑] pertaining
[2]
Remark 3. Due to the inherent decoupled nature of this
to the box constraints. Based on the sparsity of OÀÜi, we can
optimization problem with respect to each element of x,
reduce computational complexity by eliminating redundant
the solution can be easily obtained through element-wise
entities except Oi for [¬∑]i . Assume i ‚àà Nv, as outlined
maximization and minimization as described in (32). [2,i]
in Algorithm 1, the dual variables for the vth CAV w.r.t. the
2) Primal Update: Note that Step 8 of Algorithm 1 ex- ithCAVareiterativelyupdatedusingthefollowingequations:
ecutes the primal update to explore the optimal states and
control inputs for the ith CAV. The primal variable zi,k+1 = (cid:88) (cid:16) (cid:17)
pv,k+1 =pv,k +œÅ yv,k ‚àíyj,k , (34a)
‚àÜZi,k+1 denotes the augmented state of the ith CAV at the [2,i] [2,i] [2,i] [2,i]
(k +1)th ADMM iteration. It can be updated by solving a j‚ààNv
(cid:16) (cid:17)
standard LQR problem: sv,k+1 =sv,k +œÉ yv,k ‚àíxv,k , (34b)
[2,i] [2,i] [2,i] [2,i]
min‚àÜZi‚ä§Li + 1 ‚àÜZi‚ä§Li‚àÜZi+2ri,k+1‚ä§Ji‚àÜZi rv,k+1 =œÉxv,k +œÅ (cid:88) (cid:16) yv,k +yj,k (cid:17)
‚àÜZi 1 2 2 [2,i] [2,i]
j‚ààNv
[2,i] [2,i]
+ 1 ‚àÜZi‚ä§Ji‚ä§Ji‚àÜZi (33) ‚àí(cid:16) kv +pv,k+1+sv,k+1(cid:17) , (34c)
œÉ+2œÅ|ni| [2,i] [2,i] [2,i]
s.t. (cid:0) Li 3‚àíLi 4(cid:1) ‚àÜZi =0.
yv,k+1
=(cid:40) 2Œ≥(cid:16) Oi‚àÜZi,k+1+r [i 2,k ,i+ ]1(cid:17) v =i
(34d)
It is worth noting that all terms of the objective function in [2,i] 2Œ≥rv,k+1 v Ã∏=i,
[2,i]
(33) are quadratic, and the constraint for the vehicle model is (cid:18) (cid:19)
1
linear. In this sense, the problem can be effectively solved xv [2, ,k i+ ] 1 =Œ† Su‚ó¶ œÉsv,k+1+yv,k+1 , (34e)
using dynamic programming. Besides, the problem solely
involves state variables and control inputs that are specific
to a single CAV. Consequently, the problem described by (33) Theorem 1. Given that the dual variables of the CAVs are
for different CAVs can be concurrently solved in a parallel initialized by same values, for the elements of dual variables
manner. with ‚àÄj Ã∏= i,‚àÄv Ã∏= i, Œ±j,k = Œ±v,k = Œ±k ,Œ± ‚àà
[2,i] [2,i] [2,i]
{p,s,r,y,x},‚àÄk ‚ààK holds.
Assumption 1. The maximum iterations for both the outer iter
and inner loops in Algorithm 1 are fixed and the planning Proof. Denote the statement of
horizon in each iteration is constant.
P(m): Œ±j,m =Œ±v,m,Œ±‚àà{p,s,r,y,x},
Remark 4. Although the LQR problem can be efficiently [2,i] [2,i]
solved using the algebraic Riccati equation, it still requires and the proof is given by induction on m.
dealingwiththehigh-dimensionalJacobianmatrixJ toobtain Base case: With the same initialization of the dual variables,
its inverse matrix. This process can be time-consuming, espe- we have Œ±j,0 =Œ±v,0 =Œ±0 ,Œ±‚àà{p,s,r,y,x}, so P(0)
[2,i] [2,i] [2,i]
cially for large-scale cooperative motion planning problems. is clearly true.9
Induction step: Assume the induction hypothesis that ‚àÄj Ã∏= Algorithm 2 Improved Consensus ADMM for Cooperative
i,[¬∑]j,k = [¬∑]k holds, meaning P(k) is true. According to Motion Planning Within One Subgraph H(N,E h)
2,i 2,i
(34), for the second term of the equations (34a) and (34c), 1: initialize {xi,ui}T ,{pi,0,yi,0,zi,0,si,0},‚àÄi‚ààN
œÑ œÑ œÑ=0
because y [v 2, ,k
i]
=y [j 2,k
,i]
=y [k 2,i],j Ã∏=i,k Ã∏=i, we have: 2: choose œÉ,œÅ>0
(cid:88) (cid:16) (cid:17) 3: repeat:
y [v 2, ,k i]‚àíy [j 2,k
,i]
=y [k 2,i]‚àíy [i 2,k ,i], (35) 4: Send {z œÑi}T œÑ=1, receive {z œÑj}T
œÑ=1
from j ‚ààNi
j‚ààNv 5: Compute ki, Ji, {Ai}T‚àí1, {Bi}T‚àí1
œÑ œÑ=0 œÑ œÑ=0
(cid:88) (cid:16) (cid:17) 6: reset pi,0 =si,0 =0,yi,0 =ylast,xi,0 =xlast
y [v 2, ,k i]+y [j 2,k ,i] =(2|nv|‚àí1)y [k 2,i]+œÅy [i 2,k ,i]. (36) 7: reset yi,0 =xi,0 =0
[2] [2]
j‚ààNv 8: repeat: for all i‚ààN
Plug (35) and (36) to (34) under the case of v Ã∏= i, the 9: Send yi,k, receive yj,k from j ‚ààNi
following equation holds: 10: Steps 4-7 of Algorithm 1 for [¬∑]i,k
[1]
(cid:16) (cid:17) 11: Perform (38a-38c) for Œ±i,k ,Œ±‚àà{p,s,r}
pv,k+1 =pk +œÅ yk ‚àíyi,k =pk+1, (37a) [2,i]
[2,i] [2,i] [2,i] [2,i] [2,i] 12: Perform (37a-37c) for Œ±i,k ,Œ±‚àà{p,s,r},j ‚ààNi
(cid:16) (cid:17) [2,j]
sv,k+1 =sk +œÉ yk ‚àíxk =sk+1, (37b) 13: Compute zi,k+1 by solving LQR problem (33)
[2,i] [2,1] [2,i] [2,i] [2,i] (cid:16) (cid:17)
rv,k+1 =œÉxk +œÅ(2|nv|‚àí1)yk +œÅyi,k 14: y [i 1,k ]+1 =2Œ≥ JÀÜiz [i 1,k ]+1+r [i 1,k ]+1
[2,i] [2,i] [2,i] [2,i] (cid:16) (cid:17)
‚àí(k [k 2+ ,i1 ] +pk [2+ ,i1 ] +sk [2+ ,i1 ])=r [k 2+ ,i1 ], (37c) 15: xi [1,k ]+1 =Œ† R‚ó¶ + œÉ1si [1,k ]+1+y [i 1,k ]+1
yv,k+1 =2Œ≥rk+1 =yk+1, (37d) 16: Perform (38d-38e) for Œ± [i 2,k ,i],Œ±‚àà{y,x}
[2,i] [2, (cid:18)i] 1 (cid:16) [2,i] (cid:17)(cid:19) 17: Perform (37d-37e) for Œ± [i 2,k ,j],Œ±‚àà{y,x},j ‚ààNi
xv,k+1 =Œ† sk+1+yk+1 =xk+1, (37e) 18: k =k+1
[2,i] Sb‚ó¶ œÉ [2,i] [2,i] [2,i] 19: until number of iteration steps exceeds k max
which means the statement P(k+1) also holds, establishing 20: Update {z œÑi,ui œÑ}T œÑ=0
the induction step from P(k) to P(k + 1). Since both the 21: until termination criterion is satisfied
base case and the induction step have been proved as true,
P(m) holds for every m‚ààK . This completes the proof of
iter variables based on the received neighbor information and
Theorem 1.
performscomputationsforeachtimestepœÑ.Insidetheloop,it
Therefore, the dual update with v Ã∏=i can be completed by also performs additional computations and updates the primal
(37). Besides, according to (34) under the case of v =i, with variables until a termination criterion is satisfied. The inner
Theorem 1, the dual update of Œ±i,k+1 can be simplified as: loop continues to iterate until a maximum number of steps
2,i
is reached. Finally, it updates the state vectors and control
(cid:16) (cid:17)
pi,k+1 =pi,k +œÅ(N ‚àí1) yi,k ‚àíyk , (38a) inputs along the whole planning horizon until the termination
[2,i] [2,i] [2,i] [2,i]
(cid:16) (cid:17) criterion of the outer loop is satisfied.
si,k+1 =si,k +œÉ yi,k ‚àíxi,k , (38b)
[2,i] [2,i] [2,i] [2,i]
(cid:16) (cid:17) V. COOPERATIVEMOTIONPLANNINGFRAMEWORKFOR
ri,k+1 =œÉxi,k +œÅ(N ‚àí1) yi,k +yk
[2,i] [2,i] [2,i] [2,i] LARGE-SCALECAVS
‚àí(ki,k+1+pi,k+1+si,k+1), (38c) This section focuses on improving the practicality of the
[2,i] [2,i] [2,i]
(cid:16) (cid:17) proposed algorithm toward cooperative motion planning with
yi,k+1 =2Œ≥ Oi‚àÜZi,k+1+ri,k+1 , (38d)
[2,i] [2,i] large-scaleCAVsunderalocallyconnectedtopologynetwork.
(cid:18) 1 (cid:16) (cid:17)(cid:19) We leverage graph evolution and receding horizon strategies
xi,k+1 =Œ† si,k+1+yi,k+1 . (38e)
[2,i] Sb‚ó¶ œÉ [2,i] [2,i] to achieve this objective.
A. Graph Evolution based on Manhattan Distance
Remark 5. Combining (37) and (38), the decoupled ADMM
To enable efficient decentralized cooperative motion plan-
iteration of variables corresponding to the box constraints
ning for CAVs, a graph evolution strategy is presented in-
of vehicle i is completed. Therefore, compared to (34), the
corporating node distribution algorithm and edge construction
computational complexity is reduced obviously from O(Ni)
rules. The node distribution mechanism is demonstrated in
toO(1),whichimprovesthecomputationalefficiencybutdoes
Algorithm 3. Leveraging the notations in Section III-A, each
not affect the optimization performance.
node ni is distributed into a subset of nodes N(H) from
In summary, combining the solving process of [¬∑] and V(G), which belong to two graphs H(N,E ) and G(V,E),
[1] h
[¬∑] , an improved decentralized cooperative motion planning respectively. Their relationship can be described as:
[2]
algorithm with a computation complexity of O(N) is pro-
H(N,E )‚äÜG(V,E). (39)
vided.AsdemonstratedinAlgorithm2,itstartsbyinitializing h
the dual variables and choosing values for hyper-parameters. The node distribution algorithm aims to establish the commu-
It then enters a loop where it sends and receives information nication and collaboration among CAVs with certain discrim-
among the CAVs in each Ni. It computes the augmented ination rules, referred to as the threshold distance di,j . To
safe10
Algorithm 3 Graph Evolution for CAVs ‚Ä¢ v ri ef√óT s+v rj ef√óT s ‚â•‚àÜxi œÑj +‚àÜy œÑij =‚à•pi‚àípj‚à• 1
1: input: current positions pi , i‚ààV Hence, Condition 2 is also a necessary and insufficient con-
Te
2: initialize: distance matrix D =[di,j],i,j ‚ààV dition for collision avoidance. In the sub-case of driving
3: reset: threshold distance di,j =‚àû toward each other, the situation of the CAVs can be treated
safe
4: if ‚àÜŒ∏ <45‚ó¶ then as an Encounter Problem, where the relative velocity ‚àÜvij ‚â§
5: di sa,j
fe
=T s¬∑max{v ri ef,v rj ef} v ri
ef
+v rj ef. Therefore, the relative displacement of the CAVs
6: else can be expressed as ‚àÜdij = ‚àÜvij √óT ‚â§ (vi +vj )√óT .
7: di sa,j
fe
=T s¬∑(v ri ef+v rj ef) If ‚àÜdij ‚â§ ‚à•(xi œÑ,y œÑi)‚àí(xj œÑ,y œÑj)‚à• 1, thers e is noref possr ie bf ility os f
8: end if encountering with a time horizon T , which means
s
9: build: adjacency matrix A G with condition di,j <di sa,j fe ‚à•(xi,yi)‚àí(xj,yj)‚à• >(vi +vj )√óT . (42)
10: initialize: subgraphs list, visited list œÑ œÑ œÑ œÑ 1 ref ref s
11: for i in range (len(D[0])) do At this stage, all the cases are discussed the safety guarantee
12: if visited[i] is 0 then of conditional Manhattan distance is proved completely.
13: Create subgraph with i
14: Mark i as visited Remark 6. In urban traffic systems, roads are typically verti-
15: Initialize queue with i cally staggered, and vehicles navigate based on the topology
16: while queue do oftheroadnetwork.Hence,wemotivatetheuseofManhattan
17: Get node and neighbors from queue distance to measure the safe range between CAVs. Each
18: for neighbor in neighbors do CAV has a target velocity, which is generally maintained
19: if visited[neighbor] is 0 then for extended periods. Therefore, the product of the target
20: Add neighbor to subgraph and queue velocity and the planning horizon can serve as a criterion for
21: Mark neighbor as visited establishing a safety distance between any pair of CAVs.
22: end if As shown in Algorithm 3, a distance matrix D is firstly
23: end for initialized to store the pairwise conditional Manhattan dis-
24: end while tances between ni ‚àà V. The adjacency matrix A is then
G
25: Perform (43) to create the edge set E h constructed based on an element-wise comparison of the
26: Add subgraph H to subgraphs list distance between two CAVs that is smaller than the safe
27: end if distancei.e.,(ni,nj)=di,j <di,j .Hence,A representsthe
safe G
28: end for connectivitybetweenCAVs.Next,thealgorithminitializesthe
subgraphs and a visited array to keep track of visited CAVs.
It iterates through each CAV in V and checks if it has been
dividethegraphintoasmanysubgraphsaspossibleunderthe
visited. If not, a new subgraph H is created with the current
inter-subgraph safety guarantee for the node distribution strat-
CAVasthestartingnode.Thenodeismarkedasvisitedanda
egy, we propose a safe distance by the following conditional
queue is initialized with the current CAV. Within the ‚Äúwhile‚Äù
Manhattan distance: loop, the algorithm retrieves a node nj from the queue along
Ô£± (cid:110) (cid:111) withitsneighbors.Foreachneighborthathasnotbeenvisited,
di,j =Ô£≤ T s¬∑m (cid:16)ax v ri ef,v (cid:17)rj ef ,‚àÜŒ∏ < œÄ 4 (40) it is added to the subgraph H and the queue. The neighbor is
safe Ô£≥ T s¬∑ v ri
ef
+v rj
ef
, otherwise. also marked as visited. This process continues until the queue
is ‚àÖ. Finally, the algorithm create the edges of each subgraph
Vehicles with a Manhattan distance di,j = ‚à•pi‚àípj‚à• larger and store it to the list of subgraphs H1,H2,¬∑¬∑¬∑ ,HK. This
1
than the safe distance have no potential to collide with each process repeats until all CAVs have been visited, resulting in
other, which is explained by the following statements. a collection of subgraphs. Within one set of nodes created by
If ‚àÜŒ∏ < œÄ, the two CAVs appear to be driving in the same Algorithm 3, the edges to construct the subgraph H(N,E )
4 h
direction.Inthiscase,thesituationoftheCAVscanbetreated between node pairs are created by:
asaPursuitProblem,wheretherelativevelocity‚àÜvij =vi‚àí
E =(cid:8) (ni,nj),j ‚ààN|di,j ‚â§ri (cid:9) . (43)
vj <max{vi,vj}. Therefore, the relative displacement of the h tele
CAVs can be expressed as Remark 7. Algorithm 3 provides a foundation for the con-
struction of decentralized cooperative motion planning prob-
‚àÜdij =T ¬∑‚àÜvij <T ¬∑max{vi,vj}. (41)
s s lems by maintaining the adjacency matrix A among CAVs.
G
If ‚àÜŒ∏ ‚â• œÄ, the two CAVs are either driving vertically These sets of nodes Nk serve as the basis for CAV coordina-
4
or toward each other. In the sub-case of driving vertically, tion in the subsequent stages of the motion planning process.
a necessary and insufficient condition for the possibility of
collision is given by Condition 1: B. Large-Scale Cooperative Motion Planning with Receding
‚Ä¢ v ri ef√óT s ‚â•‚àÜxi œÑj and v rj ef√óT s ‚â•‚àÜy œÑij, or Horizon and Graph Evolution
‚Ä¢ v rj ef√óT s ‚â•‚àÜxi œÑj and v ri ef√óT s ‚â•‚àÜy œÑij The pipeline of the proposed cooperative motion planning
For Condition 1, an equivalent necessary and insufficient framework involves optimizing the trajectories of the CAVs
condition is listed as Condition 2: in a planning horizon of T and executing only the first T
s e11
Algorithm 4 Large-Scale Cooperative Motion Planning with 24√ó4GBGraphicMemory.Weperformthealgorithmsusing
Receding Horizon and Graph Evolution Python3.8withNumbaacceleration.Thesimulationplatform
1: obtain starting and target positions of all CAVs in G isCARLA0.9.14[42]withTown05.Thepertinentparameters
2: determine optimal route using A* algorithm of the CAVs are depicted in Table I. It is notable that di,1 =
3: smooth the waypoints in each route using the Savitzky- ‚àí0.28 m means that the rear circle of the target vehicle is in
Golay filter frontofthevirtualcenter(centeroftherearaxle)ofthevehicle
4: while termination criterion is not satisfied do: model (2). In the remainder of this section, we conduct two
5: Execute Algorithm 3 to distribute the CAVs to Hk
6: for subgraph H in subgraphs list do TABLEI
7: formulate the OCP (28) for the CAVs in H PARAMETERSETTINGSOFTHECAVS
8: search nearest waypoints for each CAV at each
Param. Description Value Param. Description Value
time step œÑ ‚àà{0,1,...,T } using KD-Tree
s
9: Execute Algorithm 2 to obtain CAVs‚Äô trajectories b wheelbase 2.4m di,1 reardistance -0.28m
l vehiclelength 3.8m aj semi-major 3m
10: end for w vehiclewidth 1.7m bj semi-minor 1.1m
11: perform first T e steps of the CAVs in G di,0 frontdistance 2.68m ri radius 2.55m
12: feedback at time step T e
13: relay the states of all the CAVs in G sets of simulation experiments to evaluate the computational
14: end while efficiency of the proposed optimization algorithm and the
drivingperformanceoftheproposeddecentralizedcooperative
motion planning strategy, respectively.
steps. We set T > T , which can cater to uncertainties and
s e We use the same guidance trajectories of the CAVs in the
dynamicsfaultsduringthe(T ‚àíT )timehorizonconstructing
s e same map for all the benchmark methods in the comparative
a closed-loop structure. Besides, the horizon of the whole
experiment.Concretely,asshowninTableII,weadoptdiffer-
driving process from the starting point to the destination is
ent hyper-parameters for the reference trajectories generation
denoted as T. With a receding horizon manner, it is not of different scales of CAVs. The CAVs‚Äô spawn points zi
ref,0
necessary to detect vehicles that are far away, because the anddestinationszi arerandomlygenerated.Afterward,the
ref,T
maximum velocity of each CAV is limited, which defines a rough guidance trajectories containing waypoints zi ,œÑ ‚àà
boundary for the trip distance within the limited planning
ref,œÑ
[1,2,...,T] are searched as described by Section IV-A. The
horizon. This feature benefits the graph evolution algorithm
generatedspawnpointsarewithinarangeof[d ,d ]from
min max
to construct more subgraphs to effectively control the scale of
(‚àí188m,‚àí91.5m), the center position of an intersection in
the OCPs corresponding to each subgraph.
Town 05, while the destinations of CAVs are within a range
The cooperative motion planning strategy with a receding of [d ,d ] from their spawn points zi . Lastly, to
des,min des,max ref,0
horizon is presented in Algorithm 4. Initially, the starting
simulate real urban driving scenarios, the target velocity of
and target positions of all CAVs are determined by users. each CAV vi is randomly assigned between [v ,v ].
ref min max
A preliminary route with guidance waypoints is generated
and smoothed based on the road topology provided by the
TABLEII
OpenDRIVE map, using the A* algorithm and the Savitzky-
PARAMETERSFORDRIVINGSCENARIOCONSTRUCTION
Golay filter. In the ‚Äúwhile‚Äù loop, the graph evolution is
performedusingAlgorithm3,andOCPsareformulatedwithin #CAV d min dmax d des,min d des,max v min vmax
eachsubgraph.Tofacilitatecooperativemaneuvers,thenearest 8 7.5m 30.0m 100.0m 150.0m 10.0m/s 10.0m/s
neighbor search is performed using an efficient KD-Tree 16 7.5m 70.0m 100.0m 150.0m 5.0m/s 20.0m/s
32 10.0m 140.0m 120.0m 150.0m 5.0m/s 20.0m/s
structure within the subsequent T steps. After formulating
s 80 10.0m 340.0m 140.0m 170.0m 5.0m/s 20.0m/s
the decentralized cooperative motion planning optimization
problem and parallelly executing Algorithm 2 for each sub-
graph H, the trajectories of all CAVs are obtained. The
first T trajectories of the CAVs are executed, and the state B. Cooperative Motion Planning Under One Subgraph
e
and environment feedback at time step T is collected and 1) ComputationalEfficiencyComparison: Wecompareour
e
relayed between the CAVs. Simultaneously, G is updated by optimization algorithm for solving cooperative motion plan-
Algorithm 3. The aforementioned steps are repeated to obtain ning problems with existing commonly used solvers (the
the remaining trajectories during T to T. IPOPT solver and the SQP solver provided by CasADi [43])
e
andadvancedalgorithms(centralizediLQR(CiLQR)withlog
barrier function [20], and decentralized iLQR (DiLQR) with
VI. SIMULATIONRESULTS
soft collision avoidance [26]). The hyper-parameters of the
A. Environment Setup
optimization algorithms are listed in Table III.
We implement the proposed efficient decentralized coop- Computationtimeofdifferentoptimizationhorizons(T)and
erative motion planning framework in Ubuntu 20.04 LTS CAV numbers (N) are compared using a static CAV graph G
with Intel(R) Xeon(R) Gold 6230 CPU @ 2.10GHz CPU withoutgraphevolution.AsdepictedinTableIV,wecompare
and NVIDIA TITAN RTX GPU with 256 GB RAM and the computation time of various optimization algorithms with12
TABLEIII
PARAMETERSETTINGSOFTHEOPTIMIZATIONALGORITHMS 6.0 CiLQR
IPOPT
5.5 SQP
Parameter Value Parameter Value Parameter Value DiLQR
5.0 Ours
œÉ 0.05 œÑs 0.1s œÜ b 0.6rad
œÅ 0.002 amax 3.0m/s2 Ts 15
4.5
œµ 0.1 a min -5.0m/s2 Te 10
4.0
3.5
aplanninghorizon(T )rangingfrom30to90andafixedCAV
s
number (N =8). IPOPT and SQP, typical solving methods in 3.0
CasADi, have high computation time and low efficiency for
2.5
CAVs‚Äô motion planning tasks. SQP struggles with planning 0 5 10 15 20 25 30
Time step
horizons greater than 40. CiLQR is more time-efficient due to
iterative linearization but faces significantly increased compu-
Fig. 4. The minimum distance between all the CAVs at each time step.
tationtimeastheplanninghorizongrows.Incontrast,DiLQR,
Differentcolorsrepresentdifferentmethods.Alltheabovemethodsperformed
which uses ADMM to decentralize the problem, maintains safecooperativemotionplanningwithaminimumdistancegreaterthan2.5m.
efficiency even with an increased planning horizon scale. Our
proposedmethodhasalsohighcomputationalefficiencywitha 11
largerplanninghorizon.Fromanotherperspective,asshownin
10
Table V, for most of the compared methods, a higher number
of CAVs has a greater impact on the computational efficiency 9
thanagreaterplanninghorizon.Inparticular,DiLQRismuch
8
less scalable than our improved consensus ADMM algorithm.
7
TABLEIV 6
COMPUTATIONTIMEWITHDIFFERENTOPTIMIZATIONHORIZONS
CiLQR IPOPT SQP DiLQR Ours
Method
OptimizationhorizonwithN =8
Method
30 40 50 60 70 80 90 Fig.5. Velocitydistributionalongallthetimestepswithdifferentmethods.
CiLQR[20] 0.276 0.361 0.577 1.314 2.031 1.413 2.099 Asthereferencevelocityis10m/s,aspeeddistributionclosertothisvalue
IPOPT[43] 4.311 8.701 18.602 31.630 95.909 ‚Äî ‚Äî indicatesbetterdrivingperformance.
SQP[43] 758.680 ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî
DiLQR[26] 0.398 0.339 0.614 0.582 0.713 1.069 1.473
Ours 0.197 0.377 0.407 0.550 0.733 1.035 1.434
the alternatives. Compared with other algorithms, our pro-
posed method demonstrates minimal variance, coupled with
a relatively high average velocity. In summary, our proposed
TABLEV
cooperativeoptimizationalgorithmoutperformsothermethods
COMPUTATIONTIMEWITHDIFFERENTNUMBERSOFCAVS
in terms of scalability, safety, and traveling efficiency. It
NumberofCAVswithT=30 showcases robustness against an increase in the planning
Method 4 8 12 16 20 24 28 32 horizon and the number of CAVs.
CiLQR[20] 0.157 0.276 1.763 6.001 16.901 15.888 19.395 20.110
IPOPT[43] 0.935 4.311 130.961 173.720 314.550 ‚Äî ‚Äî ‚Äî Note that when the number of CAVs involved in one
SQP[43] 124.320 758.680 ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî
OCP is more than 20, the cooperative optimization problem
DiLQR[26] 0.073 0.398 0.301 0.490 1.096 3.343 5.146 5.419
Ours 0.152 0.197 0.565 0.792 0.364 1.159 1.887 2.522 consumesmorethan1.0s,whichisnotsufficientforreal-time
urban cooperative driving tasks. Hence, our proposed graph
2) Driving Performance Analysis: As the cooperative mo-
evolution algorithm is tailored for the context of large-scale
tion planning problem (4) is non-convex, it is challenging
cooperative motion planning, which we thoroughly examine
to guarantee finding the global optimal solution using any
in the subsequent part.
solver.Therefore,itbecomesnecessarytoestablishevaluation
criteria to assess the optimization performance. In this paper,
C. Large-Scale Cooperative Motion Planning
the motion planning performance is evaluated based on two
criteria: the minimum distance between any pair of CAVs and In this section, we implement closed-loop cooperative mo-
the velocity distribution throughout the entire driving process. tion planning framework for large-scale CAVs. The objectives
As depicted in Fig. 4, all the methods exhibit a similar of this experiment are to evaluate the robustness, scalability,
trend and successfully achieve safe driving performance in and effectiveness of the proposed cooperative motion plan-
terms of the minimum distance between CAVs. However, ning framework including the graph evolution and receding
when considering driving efficiency, notable differences arise horizonstrategies.Weanalyzenodedistributionsituationsand
among the methods. As demonstrated in Fig. 5, the SQP qualitative rationality of the CAVs‚Äô behavior. To achieve this,
method exhibits the largest deviation and variance from the we construct a randomly generated large-scale urban driving
reference velocity, with the lowest mean velocity among all scenario containing 80 CAVs with varied target velocities
)m(
ecnatsid
muminiM
)s/m(
yticoleV13
(a) Initialtrajectories (b) Cooperativelyplannedtrajectories
Fig.6. Roughguidancetrajectoriesandcooperativelyplannedtrajectoriesfor80CAVsintheTown 05.Differentcolorsrepresentthetrajectoriesfordifferent
CAVs.Notethattherearemanypotentialcollisionregionsintheroughguidancetrajectories.
2.00
1.75
1.50
1.25
1.00
0.75
0.50
0.25
0.00 (a) NodesetsdistributionatœÑ =20 (b) NodesetsdistributionatœÑ =60
1 2 3 4 5 6 7 8 9
Episode Fig.9. Nodesetsdistributionatdifferenttimesteps.Differentcolormeans
differentnodesetsofCAVs,andthedashedlinesbetweeneachpairofvehicles
meanthecommunicationabilitywitheachother.
Fig. 7. Computation time for each CAV in all the subgraphs. Most of the
problemscanbesolvedwithin0.25seconds,andthecomputationtimehasa
smallstandarddeviation.
We use a receding horizon strategy with a control horizon of
T =10 and planning horizon of T =15.
e s
1) Effectiveness Analysis of the Node Distribution: Fig. 7
15.0
depicts the computation time in each episode for the planning
12.5
horizon within each subgraph H generated from the dynamic
10.0 connectivity graph G of the 80 CAVs. In most cases, the
7.5 computation time is less than 0.25 s with a small standard
variance, which indicates that the computation time of the
5.0
algorithmdoesnotfluctuatemuchundervariousurbandriving
2.5
conditions and real-time planning can be achieved.
0.0 Note that such stable and efficient computing time is in-
‚àí2.5 separable from our proposed graph evolution algorithm. With
1 2 3 4 5 6 7 8 9 this, the subsets of CAVs N are redistributed and updated
Episode
withanappropriatesizethroughthewholecooperativedriving
process. As demonstrated in Fig. 8 and Fig. 9, the sizes
Fig.8. ThenumberofCAVsineachsubgraphwithindifferentepisodesin
of the subgraphs, determined using the proposed conditional
theproposedcooperativemotionplanningframework.
Manhattan distance, are relatively small with less than 10
CAVs.NotethatinmomentswithhighCAVdensity,suchasat
as depicted in Table II. The guidance trajectories of the intersectionsorlongqueuesonastraightroad,thescaleofthe
CAVs in this scenario are shown in Fig. 6(a). This random subgraphs increases slightly, such as the sugraph distribution
scenario generation setting enables us to simulate complex of CAVs at œÑ =60 in Fig. 9(b), which is the main reason for
urban driving tasks and validate the framework‚Äôs robustness. the several high computation time recorded in Fig. 7.
)s(emitnoitatupmoC
hpargbushcaenisVACforebmuN14
appropriate CAV scale within each subgraph.
œÑ=1.0s œÑ = 4.2 s
VII. CONCLUSION
In this work, a comprehensive cooperative motion planning
framework is devised to address the cooperative motion plan-
ning problem in large-scale traffic scenarios involving exces-
œÑ=2.0s œÑ = 4.5 s sive numbers of CAVs. This framework integrates trajectory
generation, graph evolution, and parallel optimization for co-
operative urban driving. We enhance computational efficiency
of the dual consensus ADMM, by leveraging the sparsity
in the dual update of box constraints. The introduction of a
graph evolution strategy with the receding horizon effectively
œÑ=2.5s œÑ = 4.9 s managesthescaleofeachOCPineachsubgraphH,regardless
of the number of CAVs in graph G. The simulation results of
cooperative motion planning within one subgraph showcase
the superiority of the proposed improved consensus ADMM
in terms of computational efficiency and driving efficiency,
especially with higher planning horizons and increasing num-
œÑ=3.4s œÑ = 6.9 s bers of CAVs. We also conduct comprehensive simulations
for cooperative motion planning tasks involving 80 CAVs.
With the proposed methodology, the computation time for the
problemismaintainedtobeunder0.5sinmostinstances.The
CAVs exhibit exceptional cooperation behaviors in different
driving scenarios. These findings effectively showcase the
(a) CooperativeOvertaking (b) IntersectionCrossing capabilities of the proposed cooperative driving framework
in managing large-scale CAVs, offering valuable insights for
Fig. 10. Driving performance in two challenging scenarios simulated in
CARLA.In(a),theredCAVovertakestheleadingonewithminorsteeringand efficient coordination in modern transportation networks.
deviationfromitsroadlaneholdinganarrowsafetydistance,duetotheslight
avoidance of the leading vehicle. In (b), all the CAVs collaboratively drive
REFERENCES
witharelativelyhighsafetydistancewithoutcollisionindenseconditions.
[1] C. Chang, J. Zhang, K. Zhang, W. Zhong, X. Peng, S. Li, and L. Li,
‚ÄúBEV-V2X:Cooperativebirds-eye-viewfusionandgridoccupancypre-
2) Cooperative Driving Performance Evaluation: In this dictionviaV2X-baseddatasharing,‚ÄùIEEETransactionsonIntelligent
Vehicles,vol.8,no.11,pp.4498‚Äì4514,2023.
part, we thoroughly evaluate the cooperative driving per-
[2] M. Wegener, F. Herrmann, L. Koch, R. Savelsberg, and J. Andert,
formance in the high-fidelity urban traffic scenario, taking ‚ÄúLongitudinal vehicle motion prediction in urban settings with traffic
into account safety and rationality indices. A comparison light interaction,‚Äù IEEE Transactions on Intelligent Vehicles, vol. 8,
no.1,pp.204‚Äì215,2023.
betweentheinitialtrajectoriesandthecooperativelyoptimized
[3] C.ToumiehandA.Lambert,‚ÄúDecentralizedmulti-agentplanningusing
driving trajectories shown in Fig. 6 reveals that the optimized modelpredictivecontrolandtime-awaresafecorridors,‚ÄùIEEERobotics
trajectories exhibit more curves, even on straight road lanes. andAutomationLetters,vol.7,no.4,pp.11110‚Äì11117,2022.
[4] W. Xiao, H. Ren, Q. Zhou, H. Li, and R. Lu, ‚ÄúDistributed finite-
This can be attributed to the overtaking and active avoidance
time containment control for nonlinear multiagent systems with mis-
behaviorsoftheCAVs.Itisworthnotingthatthesetrajectories matcheddisturbances,‚ÄùIEEETransactionsonCybernetics,vol.52,no.7,
are sufficiently smooth, allowing the CAVs to adjust their pp.6939‚Äì6948,2022.
heading angles Œ∏i with slight steering œÜi, thereby enhancing [5] L.-H. Wen and K.-H. Jo, ‚ÄúDeep learning-based perception systems
œÑ œÑ for autonomous driving: A comprehensive survey,‚Äù Neurocomputing,
the comfort of passengers in CAVs within the traffic system. vol.489,pp.255‚Äì270,2022.
For typical and challenging situations, such as overtaking [6] L.Zhang,Z.Hou,J.Wang,Z.Liu,andW.Li,‚ÄúRobotnavigationwith
reinforcement learned path generation and fine-tuned motion control,‚Äù
or intersection areas, CAVs exhibit a proactive inclination to
IEEE Robotics and Automation Letters, vol. 8, no. 8, pp. 4489‚Äì4496,
evade one another, thereby enhancing both driving effective- 2023.
ness and safety performance. A notable illustration can be [7] X. Duan, C. Sun, D. Tian, J. Zhou, and D. Cao, ‚ÄúCooperative lane-
changemotionplanningforconnectedandautomatedvehicleplatoonsin
observed in Fig. 10(a), where the red CAV successfully exe-
multi-lane scenarios,‚Äù IEEE Transactions on Intelligent Transportation
cutes an overtaking maneuver without compromising driving Systems,vol.24,no.7,pp.7073‚Äì7091,2023.
efficiency,duetotheactiveavoidanceofthewhiteCAVonthe [8] C. Hu, Z. Wang, H. Taghavifar, J. Na, Y. Qin, J. Guo, and C. Wei,
‚ÄúMME-EKF-Based path-tracking control of autonomous vehicles con-
left. Another noteworthy challenge in urban driving pertains
sideringinputsaturation,‚ÄùIEEETransactionsonVehicularTechnology,
to navigating intersections. As depicted in Fig. 10(b), all the vol.68,no.6,pp.5246‚Äì5259,2019.
CAVs efficiently drive without stopping and giving way to [9] L. Claussmann, M. Revilloud, D. Gruyer, and S. Glaser, ‚ÄúA review of
motionplanningforhighwayautonomousdriving,‚ÄùIEEETransactions
others in the unsignalized intersection, obviously increasing
on Intelligent Transportation Systems, vol. 21, no. 5, pp. 1826‚Äì1848,
the traveling efficiency. The reasons for the above safe and 2020.
efficientdrivingperformancearetheadoptionofacooperative [10] S.Teng,X.Hu,P.Deng,B.Li,Y.Li,Y.Ai,D.Yang,L.Li,Z.Xuanyuan,
F.Zhu,etal.,‚ÄúMotionplanningforautonomousdriving:Thestateofthe
motionplanningoptimizationstrategy,alignedwiththedriving
artandfutureperspectives,‚ÄùIEEETransactionsonIntelligentVehicles,
strategy outlined in Algorithm 4 and the utilization of an 2023.15
[11] J.Duan,J.Li,Q.Ge,S.E.Li,M.Bujarbaruah,F.Ma,andD.Zhang, [32] T. Bru¬®digam, M. Olbrich, D. Wollherr, and M. Leibold, ‚ÄúStochastic
‚ÄúRelaxed actor-critic with convergence guarantees for continuous-time modelpredictivecontrolwithasafetyguaranteeforautomateddriving,‚Äù
optimalcontrolofnonlinearsystems,‚ÄùIEEETransactionsonIntelligent IEEETransactionsonIntelligentVehicles,2021.
Vehicles,vol.8,no.5,pp.3299‚Äì3311,2023. [33] H. Liu, K. Chen, Y. Li, Z. Huang, J. Duan, and J. Ma, ‚ÄúIntegrated
[12] G. Sartoretti, J. Kerr, Y. Shi, G. Wagner, T. S. Kumar, S. Koenig, behavior planning and motion control for autonomous vehicles with
andH.Choset,‚ÄúPRIMAL:Pathfindingviareinforcementandimitation traffic rules compliance,‚Äù in 2023 IEEE International Conference on
multi-agent learning,‚Äù IEEE Robotics and Automation Letters, vol. 4, RoboticsandBiomimetics(ROBIO),pp.1995‚Äì2002,IEEE,2023.
no.3,pp.2378‚Äì2385,2019. [34] Y.Qu,H.Chu,S.Gao,J.Guan,H.Yan,L.Xiao,S.E.Li,andJ.Duan,
[13] H.Liu,Z.Qu,andR.Zhu,‚ÄúSolvingamulti-robotsearchproblemwith ‚ÄúRL-driven MPPI: Accelerating online control laws calculation with
bionic SARSA algorithm and artificial potential field,‚Äù in 2021 China offline policy,‚Äù IEEE Transactions on Intelligent Vehicles, pp. 1‚Äì12,
AutomationCongress(CAC),pp.1830‚Äì1835,IEEE,2021. 2023.
[14] M.Klimke,B.Vo¬®lz,andM.Buchholz,‚ÄúCooperativebehaviorplanning [35] C. E. Luis, M. Vukosavljev, and A. P. Schoellig, ‚ÄúOnline trajectory
for automated driving using graph neural networks,‚Äù in 2022 IEEE generation with distributed model predictive control for multi-robot
IntelligentVehiclesSymposium(IV),pp.167‚Äì174,IEEE,2022. motionplanning,‚ÄùIEEERoboticsandAutomationLetters,vol.5,no.2,
[15] B. Wang, X. Gong, Y. Wang, P. Lyu, and S. Liang, ‚ÄúCoordination for pp.604‚Äì611,2020.
connected and autonomous vehicles at unsignalized intersections: An [36] D. Qin, Z. Jin, A. Liu, W.-A. Zhang, and L. Yu, ‚ÄúAsynchronous
iterative learning based collision-free motion planning method,‚Äù IEEE event-triggered distributed predictive control for multi-agent systems
InternetofThingsJournal,2023. withparameterizedsynchronizationconstraints,‚ÄùIEEETransactionson
[16] B.Li,T.Acarman,Y.Zhang,Y.Ouyang,C.Yaman,Q.Kong,X.Zhong, AutomaticControl,2023.
and X. Peng, ‚ÄúOptimization-based trajectory planning for autonomous [37] Z. Cheng, J. Ma, X. Zhang, C. W. de Silva, and T. H. Lee, ‚ÄúADMM-
parkingwithirregularlyplacedobstacles:Alightweightiterativeframe- basedparalleloptimizationformulti-agentcollision-freemodelpredic-
work,‚ÄùIEEETransactionsonIntelligentTransportationSystems,vol.23, tivecontrol,‚ÄùarXivpreprintarXiv:2101.09894,2021.
no.8,pp.11970‚Äì11981,2022. [38] Y. Tassa, N. Mansard, and E. Todorov, ‚ÄúControl-limited differential
[17] Y.Lee,M.Cho,andK.-S.Kim,‚ÄúGPU-parallelizediterativeLQRwith dynamic programming,‚Äù in 2014 IEEE International Conference on
input constraints for fast collision avoidance of autonomous vehicles,‚Äù RoboticsandAutomation(ICRA),pp.1168‚Äì1175,IEEE,2014.
in 2022 IEEE/RSJ International Conference on Intelligent Robots and [39] W.Schwarting,J.Alonso-Mora,L.Paull,S.Karaman,andD.Rus,‚ÄúSafe
Systems(IROS),pp.4797‚Äì4804,IEEE,2022. nonlineartrajectorygenerationforparallelautonomywithadynamicve-
[18] C. Mastalli, W. Merkt, J. Marti-Saumell, H. Ferrolho, J. Sola`, hiclemodel,‚ÄùIEEETransactionsonIntelligentTransportationSystems,
N. Mansard, and S. Vijayakumar, ‚ÄúA feasibility-driven approach to vol.19,no.9,pp.2994‚Äì3008,2017.
control-limitedDDP,‚ÄùAutonomousRobots,vol.46,no.8,pp.985‚Äì1005, [40] P.D.Grontas,M.W.Fisher,andF.Do¬®rfler,‚ÄúDistributedandconstrained
2022. H2 control design via system level synthesis and dual consensus
[19] Y.Aoyama,G.Boutselis,A.Patel,andE.A.Theodorou,‚ÄúConstrained ADMM,‚Äù in 2022 IEEE 61st Conference on Decision and Control
differentialdynamicprogrammingrevisited,‚Äùin2021IEEEInternational (CDC),pp.301‚Äì307,IEEE,2022.
ConferenceonRoboticsandAutomation(ICRA),pp.9738‚Äì9744,IEEE, [41] H.BauschkeandP.Combettes,‚ÄúConvexanalysisandmonotoneoperator
2021. theoryinHilbertspaces,‚ÄùCMSbooksinmathematics,vol.10,pp.978‚Äì
[20] J.Chen,W.Zhan,andM.Tomizuka,‚ÄúAutonomousdrivingmotionplan- 1,2011.
ningwithconstrainediterativeLQR,‚ÄùIEEETransactionsonIntelligent [42] A. Dosovitskiy, G. Ros, F. Codevilla, A. Lopez, and V. Koltun,
Vehicles,vol.4,no.2,pp.244‚Äì254,2019. ‚ÄúCARLA: An open urban driving simulator,‚Äù in Conference on Robot
[21] J. Ma, Z. Cheng, X. Zhang, M. Tomizuka, and T. H. Lee, ‚ÄúAlternat- Learning,pp.1‚Äì16,PMLR,2017.
ing direction method of multipliers for constrained iterative LQR in [43] J. A. Andersson, J. Gillis, G. Horn, J. B. Rawlings, and M. Diehl,
autonomous driving,‚Äù IEEE Transactions on Intelligent Transportation ‚ÄúCasADi:asoftwareframeworkfornonlinearoptimizationandoptimal
Systems,vol.23,no.12,pp.23031‚Äì23042,2022. control,‚ÄùMathematicalProgrammingComputation,vol.11,no.1,pp.1‚Äì
[22] J.Ma,Z.Cheng,X.Zhang,Z.Lin,F.L.Lewis,andT.H.Lee,‚ÄúLocal 36,2019.
learningenablediterativelinearquadraticregulatorforconstrainedtra-
jectoryplanning,‚ÄùIEEETransactionsonNeuralNetworksandLearning
Systems,vol.34,no.9,pp.5354‚Äì5365,2023.
[23] S.Boyd,N.Parikh,E.Chu,B.Peleato,J.Eckstein,etal.,‚ÄúDistributed
optimizationandstatisticallearningviathealternatingdirectionmethod
of multipliers,‚Äù Foundations and Trends in Machine Learning, vol. 3,
no.1,pp.1‚Äì122,2011.
[24] X.Zhang,Z.Cheng,J.Ma,S.Huang,F.L.Lewis,andT.H.Lee,‚ÄúSemi-
definite relaxation-based ADMM for cooperative planning and control
of connected autonomous vehicles,‚Äù IEEE Transactions on Intelligent
TransportationSystems,vol.23,no.7,pp.9240‚Äì9251,2021.
[25] G.Banjac, F.Rey, P.Goulart,and J.Lygeros, ‚ÄúDecentralizedresource
allocation via dual consensus ADMM,‚Äù in 2019 American Control
Conference(ACC),pp.2789‚Äì2794,IEEE,2019.
[26] Z. Huang, S. Shen, and J. Ma, ‚ÄúDecentralized iLQR for cooperative
trajectoryplanningofconnectedautonomousvehiclesviadualconsensus
ADMM,‚Äù IEEE Transactions on Intelligent Transportation Systems,
2023.
[27] J. Ye, L. Xiang, and X. Ge, ‚ÄúSpatial-temporal modeling and analysis
ofreliabilityanddelayinurbanV2Xnetworks,‚ÄùIEEETransactionson
NetworkScienceandEngineering,2023.
[28] A. I. Rikos, W. Jiang, T. Charalambous, and K. H. Johansson, ‚ÄúAsyn-
chronous distributed optimization via ADMM with efficient communi-
cation,‚ÄùarXivpreprintarXiv:2309.04585,2023.
[29] O. Shorinwa, T. Halsted, and M. Schwager, ‚ÄúScalable distributed op-
timization with separable variables in multi-agent networks,‚Äù in 2020
AmericanControlConference(ACC),pp.3619‚Äì3626,IEEE,2020.
[30] A.D.Saravanos,Y.Aoyama,H.Zhu,andE.A.Theodorou,‚ÄúDistributed
differential dynamic programming architectures for large-scale multia-
gentcontrol,‚ÄùIEEETransactionsonRobotics,2023.
[31] Z. Sheng, Y. Xu, S. Xue, and D. Li, ‚ÄúGraph-based spatial-temporal
convolutional network for vehicle trajectory prediction in autonomous
driving,‚Äù IEEE Transactions on Intelligent Transportation Systems,
vol.23,no.10,pp.17654‚Äì17665,2022.