Experimental Shake Gesture Detection API for
Apple Watch
Ezequiel Franc¸a dos Santos
Phd Student in Digital Games Development
IADE — Universidade Europeia
Lisbon, Portugal
ezequield@acm.org
Abstract—In this paper, we present the WatchShaker project. intrusioncomparedwithsmartphonesandothermobiledevices
The project involves an experimental API that detects the [2].However,theinteractionmodalitieswiththesedevicesare
Apple Watch’s shake gesture—a surprisingly absent natively
stillevolving,andtheAppleWatch,afrontrunnerinthisspace,
feature.ThroughasimpleheuristicleveragingtheAppleWatch’s
lacks specific gesture control standards in other smart devices
accelerometer data, the API discerns not just the occurrence of
shakegesturesbutalsotheirdirection,enhancingtheinteractivity [1]. The WatchShaker project was created as an experiment
potential of the device. Despite the project’s simplicity and lack to enhance the functionality of the Apple Watch and make it
offormaltesting,ithasgarneredsignificantattention,indicating moreuser-friendly.Thisprojectaimstomakethedevicemore
a genuine interest and need within the developer community
intuitive and in sync with other smart devices.
forsuchfunctionality.TheWatchShakerprojectexemplifieshow
a minimalistic approach can yield a practical and impactful B. Objectives of WatchShaker
toolinwearabletechnology,providingaspringboardforfurther
research and development in intuitive gesture recognition. The primary objective of the WatchShaker project is to
Index Terms—Gesture Recognition, Apple Watch, Wearable introduce a reliable and responsive shake gesture detection
Technology,ShakeGesture,APIDevelopment,Human-Computer API for the Apple Watch. This API aims to:
Interaction
• Provide an easy-to-integrate solution for app developers
to incorporate shake gestures into their applications.
I. INTRODUCTION
• Enhance the user experience by enabling a natural and
Wearable technology has grown widely, with developers quick way to interact with the watch.
leveraging motion sensors for various gesture recognition • Explore new application design and functionality possi-
applications. These applications span across various sectors, bilities that leverage shake gestures.
including entertainment systems [11] [9], health systems [10], • Contribute to the research and development in the field
and more, showcasing the technology’s versatility and broad of HCI, particularly in wearable technology.
impact [6].
Despite its sophisticated ecosystem, the Apple Watch
II. LITERATUREREVIEW
presents unexplored functionalities and user interaction areas. A. Gesture Recognition in Wearables
Notably, it lacks native support for shake gesture detection, a Recent advancements in wearable technology have high-
feature prevalent in its smartphone counterparts [3] [5]. The lightedtheinnovativepotentialofintuitivegesturerecognition.
”WatchShaker” project addresses this gap by developing an The study ”Enabling Hand Gesture Customization on Wrist-
API for shake gesture detection, aiming to enrich the interac- Worn Devices” [13] represents a significant contribution in
tion capabilities of the Apple Watch. This paper explores the this field, demonstrating the feasibility and effectiveness of
development process of WatchShaker, evaluates its implica- customizable gesture recognition systems in wearables. Ad-
tions for Apple Watch users, and discusses its contribution ditionally, research on ”Gesture Recognition Using Inertial
to the broader field of Human-Computer Interaction (HCI) Sensors with 1D Convolutional Neural Network” [7] further
andwearabletechnology.Integratingthisintuitivegesture,the validates the application of advanced sensor technologies and
WatchShaker enhances the usability of the Apple Watch and computational techniques in enhancing gesture recognition in
opens new avenues for applications and user experiences. wearable devices. The framework proposed in these studies
achieves high accuracy and user adaptability, marking a no-
A. Background and Motivation
table advancement in the wearable technology landscape.
Theevolutionofsmartwatcheshassignificantlytransformed
B. API Development for Apple Watch
themfromsimpletime-keepingdevicestointegralcomponents
of our digital lives [2]. As one of the latest developments in While the development of APIs for the Apple Watch,
the evolution of information technology, smartwatches offer as discussed in various works including [13], has primarily
usersaremarkablelevelofconvenience,swiftlyanddiscreetly focusedonhealthandfitnessapplications,thesestudiesreveal
delivering timely information with minimal interference or a broader potential for gesture control in enhancing user
4202
naJ
81
]CH.sc[
1v69890.1042:viXraexperience. They demonstrate advanced gesture recognition • t ∆ signifiestheelapsedtimeintervalbetweenthecurrent
systems’ technical feasibility and user-centric benefits, laying observation and the most recent shake event.
the groundwork for further explorations in this domain. • τ isthedesignateddelayperiodrequiredforasubsequent
shake detection to be considered valid.
C. Gap in Existing Research
This formulation allows for the discernment of significant
Despite these advancements, there is still an opportunity
movementeventsbasedonaccelerationparametersandtempo-
in gesture recognition for the Apple Watch, particularly
ralconstraints,therebyenhancingtheaccuracyandefficacyof
concerning shake gesture detection. Papers like ”Enabling
motion detection algorithms. This heuristic formed the basis
hand gesture customization on wrist-worn devices” [13] and
for the gesture recognition algorithm, focusing on ensuring
”Interaction with Smartwatches Using Gesture Recognition:
accurate and responsive detection of shake gestures on the
A Systematic Literature Review” [8] provide comprehensive
Apple Watch.
insights into gesture recognition capabilities but do not ex-
plicitly address shake gestures. This omission highlights a D. Directional Shake Recognition
specificgapinthecurrentresearchlandscape,underscoringthe TheWatchShakerAPIextendsitsfunctionalitybeyondmere
unique opportunity the WatchShaker project aims to explore shake detection by incorporating Directional Shake Recog-
and fulfill. nition (DSR). This feature enables the API to discern the
directionofashakegesture—beitup,down,left,orright.The
III. METHODOLOGY
directionality of the shake is determined through a heuristic
The approach to developing the WatchShaker API was a
analysis of the accelerometer data, as illustrated in Figure 1,
hybrid methodology that combined traditional software de-
thereby augmenting the API’s utility and demonstrating its
velopment with Design Science Research (DSR) [12]. This
commitment to functional innovation.
approach facilitated the creation of a functional API and
Let ShakeDirection be a variable that returns the shake
framed it within a research context emphasizing practical
direction, defined by the following conditional expression:
problem-solving and artifact evaluation.

A. InP ir to iab ll le ym
,
thId ee nn eti efi dca ft oio rn
enhanced gesture recognition on the
R Leig ftht i if
f
| |a
ax
x| |> >| |a
ay
y|
|
a an nd
d
a
ax
x
> <0 0,
,
AppleWatchwasidentified,explicitlyfocusingontheabsence
ShakeDirection= Down if |a |<|a | and a >0,
x y y
o
t eh
mf ea
pb
hn
a
asa sit isi sv fe
oo
nrsh
t
aha dek de
W
reg
a
se
t
scs it
h
nu
S
gr he
ra
ed
k
ae
e
lt -re wpc ot ri
o
ro
lj
dn
ec
pf te
,
ra oat blu
i
lgr ee
n
m.
in
sT .gh wis itn hee thd ef Dor Sm Re ’d
s
U
Up
nknown
i of th|a
erx
w| i< se| .a y| and a
y
<0,
Where a and a denote the acceleration values in the x
B. Design and Development x y
and y directions, respectively. This approach endows the API
The design phase concentrated on the API’s
with the ability to provide a directionally informed response
architecture, creating key components such as Shake,
to shake gestures, offering developers enhanced control for
ShakeCoordinates, ShakeDirection, and
application interactions.
ShakeSensibility. These elements’ design helps
capture and interpret the shake gesture accurately and
responsively, reflecting the iterative and user-centric nature of
DSR.
C. Implementation
The developed core logic for shake detection uses ac-
celerometerdatafromtheAppleWatch.Thefollowingheuris-
tic forms the basis of the gesture recognition algorithm,
embodying the practical artifact creation aspect of DSR:
Let ShakeDetected be a boolean variable defined by the
following conditional expression:
(cid:40)
True if max(|a |,|a |)>θ and t >τ,
ShakeDetected = x y ∆
False otherwise. Fig. 1. Diagram illustrating the WatchShaker API’s directional criteria for
determiningshakedirections.
Where:
• a x and a y represent the acceleration values along the x- TheAPImethoddidShakeWithDirectionisdesigned
axis and y-axis, respectively. to deliver this directional information, facilitating the imple-
• θdenotesthepredeterminedthresholdvaluefortheshake mentation of directionally responsive gesture controls within
sensitivity. various applications.E. Artifact Evaluation L. Finalization
Duetoresourceconstraints,formaltestingwasnotfeasible; The final stage involved optimizing the code for efficiency,
however, the API underwent extensive personal and commu- preparingdocumentationtoassistdevelopersinintegratingthe
nity evaluations. Feedback from platforms like GitHub and API, and ensuring compatibility with different Apple Watch
Stack Overflow provided an informal yet valuable means of operating system versions.
assessing the artifact’s effectiveness and usability, aligning This methodology led to the development of a versatile
with the DSR’s evaluation criteria. and user-friendly shake gesture detection API tailored for the
unique environment of the Apple Watch.
F. Reflection and Learning
IV. TESTINGANDRESULTS
The project’s development process involved continuous re-
The WatchShaker API demonstrated its effectiveness
flection and adaptation, essential aspects of DSR. This phase
throughvariousrecognitionandpersonaltestingforms,though
included learning from the successes and limitations encoun-
not through formal academic or industry-standard methods.
tered and informing future iterations of the API.
A. Recognition in Developer Community
G. Contribution to Knowledge
• GitHub Engagement: The project’s reception on
The WatchShaker project contributes to the HCI and wear- GitHub, with over 217 stars and contributions from
abletechnologybodyofknowledgebydemonstratingapracti- more than seven developers, reflects its relevance and
cal and innovative solution for gesture recognition. The blend usefulness.
of traditional development with DSR highlights the project’s • Online Discussions: Discussions and questions on plat-
role in advancing applied technology research. forms like Stack Overflow1 provide real-world insights
This hybrid methodology underscores the WatchShaker into the API’s application and user challenges.
API’s practical development and assessment within a research • FeatureinDeveloperNewsletter:TheAPIwasfeatured
framework, emphasizing the project’s contribution to technol- in a developer newsletter Swift News Issue 118 2, high-
ogy and applied research. lighting its innovation and utility in the wider developer
community.
H. Testing and Refinement
B. Personal Testing
TheAPIwasthensubjectedtoaseriesofteststoevaluateits
performance and accuracy. It involved automated testing and • Functional Testing: API functionality, accuracy, and
real-world usage scenarios to ensure the API could reliably responsiveness, through personal tests, which aided in it-
detect shake gestures under various conditions. erativerefinementforbetterperformance,wereevaluated.
• UserExperienceEvaluation:Throughhands-onuse,the
I. Finalization API’s ease of integration and user interaction, ensuring
The final phase included optimizing the API for perfor- that it met the intended goals of enhancing the Apple
mance, preparing documentation for ease of use and integra- Watch’s usability, were evaluated.
tion by other developers, and making final adjustments based C. Implications of Results
on testing feedback.
Community engagement, developer newsletter recognition,
J. Implementation and personal testing results testify to the API’s effectiveness.
These results indicate the API’s technical capabilities, accep-
Theimplementationphaseinvolvedtheactualcodingofthe
tance, and potential impact on the developer community.
API in Swift. Key functionalities included:
In conclusion, the WatchShaker API, while not tested
• TheWatchShakerclassservesastheprimaryinterface through formal industry standards, has shown considerable
for the shake service, managing motion sensor data and promiseandeffectivenessthroughcommunityengagementand
determining when a shake event occurred. practical application, underscoring its potential for broader
• Utilization of the CoreMotion framework to access ac- adoption and further development.
celerometer data, crucial for detecting shake gestures.
• Algorithms for interpreting accelerometer data to detect
V. DISCUSSION
shake gestures, considering factors like sensibility and A. Simplicity and Effectiveness of the Approach
shake direction. The WatchShaker project stands out for its straightforward
Iterative development and testing addressed challenges in and unpretentious approach to solving a specific problem -
interpreting sensor data and reducing false positives. detecting shake gestures on the Apple Watch. Using a basic
heuristic exemplifies the project’s commitment to simplicity
K. Testing and Refinement while effectively fulfilling its intended purpose.
Shakedetectionaccuracyandresponsivenesswerevalidated
1https://stackoverflow.com/questions/62395087/watchos-gyro-calibration-
bysimulatingshakesandassessingtheAPI’sabilitytoidentify
interrupted
them under various conditions. 2https://swiftnews.curated.co/issues/118B. Community Response and Practical Impact positivefeedbackandtherecognitionofdevelopernewsletters
provided empirical evidence of the API’s value.
Despite its simplicity, the project has resonated well within
As wearable technology continues to evolve, the
the developer community, as evidenced by the engagement on
WatchShaker project is a valuable reference point for
GitHubanddiscussionsonplatformslikeStackOverflow.The
developers seeking to implement intuitive gesture controls.
featureinadevelopernewsletterfurtherhighlightsitspractical
The project’s journey from a mere concept to a functional
utility. This reception suggests that even simple ideas, when
tool that enhances user interaction with the Apple Watch
executed well, can have a significant impact.
offers insights into the potential for further innovation in
C. Real-World Application and Limitations wearable technology, driven by community collaboration and
The real-world application of the WatchShaker API, while a commitment to user-centric design.
not extensively tested through formal methods, has shown Future work on the WatchShaker project can build on the
promisingresults.Userdiscussionspointtowardsitsfunctional foundation laid by this initial implementation, expanding its
usability,highlightingareaswherefurtherrefinementcouldbe functionalityandrefiningitscapabilities.Theproject’ssuccess
beneficial. This feedback is invaluable for future iterations of underscores the potential for meaningful technological ad-
the project. vancements through a simple and focused approach, inspiring
further innovation in wearable technology.
D. Comparison with Other Technologies
REFERENCES
Compared to more complex solutions, the WatchShaker
API offers an accessible alternative for gesture recognition [1] Y.Ahn,S.Hwang,H.Yoon,J.Gim,andJ.Ryu.Bandsense.Proceedings
of the 33rd Annual ACM Conference Extended Abstracts on Human
on the Apple Watch. Its straightforward approach may only
FactorsinComputingSystems,2015.
encompasssomeofthenuancesofadvancedgesturedetection [2] S. Al-Megren. A predictive fingerstroke-level model for smartwatch
systems, but it offers a viable solution for many practical interaction. MultimodalTechnologiesandInteraction,2:38,2018.
[3] AppleDeveloperDocumentation. UIEvent.EventSubtype.motionShake.
applications.
https://developer.apple.com/documentation/uikit/uievent/eventsubtype/
motionshake. [Accessed01-12-2023].
E. Reflection on the Project and Future Directions [4] EzequielF.Santos. Watchshaker,2023.
[5] AdamFreeman. Understandingdesignpatterns. InProDesignPatterns
The WatchShaker project demonstrates that simple ideas
inSwift,pages418–421.Apress,Berkeley,CA,2015.
can be both practical and well-received. It opens the door [6] SumitGouthaman,AtmanPandya,OmkarKarande,andD.R.Kalbande.
for further exploration into similar straightforward solutions Gesture detection system using smart watch based motion sensors. In
2014InternationalConferenceonCircuits,Systems,Communicationand
in wearable technology, proving that sometimes, less can be
InformationTechnologyApplications(CSCITA),pages311–316,2014.
more. [7] Zhenyu He, Qianying Li, and Zhenfeng He. Gesture recognition
While our study has focused on a pioneering approach to using inertial sensors with 1d convolutional neural network. In 2023
IEEE International Conference on Control, Electronics and Computer
shakegesturedetectionfortheAppleWatch,weacknowledge
Technology(ICCECT),pages1456–1460,2023.
certain limitations in our current methodology, particularly in [8] Mateus M. Luna, Thyago P. Carvalho, Fabrizzio Alphonsus A. M. N.
formaltesting.Duetotheinnovativeandexploratorynatureof Soares,HugoA.D.Nascimento,andRonaldoM.Costa. Wristplayer:
A smartwatch gesture controller for smart tvs. In 2017 IEEE 41st
the WatchShaker project, our initial focus was on demonstrat-
AnnualComputerSoftwareandApplicationsConference(COMPSAC),
ing the feasibility and garnering community feedback rather volume2,pages336–341,2017.
than on extensive empirical testing. [9] Danial Moazen, Seyed A Sajjadi, and Ani Nahapetian. Airdraw:
Leveraging smart watch motion sensors for mobile human computer
In deduction, through its modest yet practical design, the
interactions. In201613thIEEEAnnualConsumerCommunications&
projectcontributestothebroaderfieldofwearabletechnology, NetworkingConference(CCNC),page442–446.IEEEPress,2016.
remindingusofthevalueandimpactthatsimplicitycanbring [10] AbhinavParate, Meng-ChiehChiu, ChanielChadowitz, DeepakGane-
san, and Evangelos Kalogerakis. Risq: Recognizing smoking gestures
to technological innovation.
withinertialsensorsonawristband. InProceedingsofthe12thAnnual
InternationalConferenceonMobileSystems,Applications,andServices,
VI. CONCLUSION MobiSys ’14, page 149–161, New York, NY, USA, 2014. Association
forComputingMachinery.
The WatchShaker [4] project exemplifies the principle that
[11] Vinod Keshav Seetharamu, Joy Bose, Sowmya Sunkara, and Nitesh
simplicity can drive innovation in technology. By focusing on Tigga. Tv remote control via wearable smart watch device. In 2014
a specific problem—detecting shake gestures on the Apple AnnualIEEEIndiaConference(INDICON),pages1–6,2014.
[12] Jan Vom Brocke, Alan Hevner, and Alexander Maedche. Introduction
Watch—the project aimed to provide a straightforward and
todesignscienceresearch.Designscienceresearch.Cases,pages1–13,
effective solution without overhauling the entire concept of 2020.
gesture recognition. [13] Xuhai Xu, Jun Gong, Carolina Brum, Lilian Liang, Bongsoo Suh,
Shivam Kumar Gupta, Yash Agarwal, Laurence Lindsey, Runchang
Despite its unassuming approach, the project garnered
Kang,BehroozShahsavari,TuNguyen,HeribertoNieto,ScottEHud-
recognition and utility within the developer community, as son,CharlieMaalouf,JaxSeyedMousavi,andGieradLaput. Enabling
evidenced by its GitHub stars and the discussions it sparked handgesturecustomizationonwrist-worndevices.InProceedingsofthe
2022 CHI Conference on Human Factors in Computing Systems, CHI
amongst peers. The practical application of the WatchShaker
’22,NewYork,NY,USA,2022.AssociationforComputingMachinery.
API has demonstrated promising results, with personal testing
showingtheAPI’sreliability.Althoughthistestingdidnotad-
here to formal industry standards, the developer community’s