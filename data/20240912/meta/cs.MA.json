[
    {
        "title": "Leveraging Unstructured Text Data for Federated Instruction Tuning of Large Language Models",
        "authors": "Rui YeRui GeYuchi FengtingJingyi ChaiYanfeng WangSiheng Chen",
        "links": "http://arxiv.org/abs/2409.07136v1",
        "entry_id": "http://arxiv.org/abs/2409.07136v1",
        "pdf_url": "http://arxiv.org/pdf/2409.07136v1",
        "summary": "Federated instruction tuning enables multiple clients to collaboratively\nfine-tune a shared large language model (LLM) that can follow humans'\ninstructions without directly sharing raw data. However, existing literature\nimpractically requires that all the clients readily hold instruction-tuning\ndata (i.e., structured instruction-response pairs), which necessitates massive\nhuman annotations since clients' data is usually unstructured text instead.\nAddressing this, we propose a novel and flexible framework FedIT-U2S, which can\nautomatically transform unstructured corpus into structured data for federated\ninstruction tuning. FedIT-U2S consists two key steps: (1) few-shot\ninstruction-tuning data generation, where each unstructured data piece together\nwith several examples is combined to prompt an LLM in generating an\ninstruction-response pair. To further enhance the flexibility, a\nretrieval-based example selection technique is proposed, where the examples are\nautomatically selected based on the relatedness between the client's data piece\nand example pool, bypassing the need of determining examples in advance. (2) A\ntypical federated instruction tuning process based on the generated data.\nOverall, FedIT-U2S can be applied to diverse scenarios as long as the client\nholds valuable text corpus, broadening the application scope of federated\ninstruction tuning. We conduct a series of experiments on three domains\n(medicine, knowledge, and math), showing that our proposed FedIT-U2S can\nconsistently and significantly brings improvement over the base LLM.",
        "updated": "2024-09-11 09:31:44 UTC",
        "interpretation": "解释内容未找到",
        "id": "2409.07136v1"
    },
    {
        "title": "DCMAC: Demand-aware Customized Multi-Agent Communication via Upper Bound Training",
        "authors": "Dongkun HuoHuateng ZhangYixue HaoYuanlin YeLong HuRui WangMin Chen",
        "links": "http://arxiv.org/abs/2409.07127v1",
        "entry_id": "http://arxiv.org/abs/2409.07127v1",
        "pdf_url": "http://arxiv.org/pdf/2409.07127v1",
        "summary": "Efficient communication can enhance the overall performance of collaborative\nmulti-agent reinforcement learning. A common approach is to share observations\nthrough full communication, leading to significant communication overhead.\nExisting work attempts to perceive the global state by conducting teammate\nmodel based on local information. However, they ignore that the uncertainty\ngenerated by prediction may lead to difficult training. To address this\nproblem, we propose a Demand-aware Customized Multi-Agent Communication (DCMAC)\nprotocol, which use an upper bound training to obtain the ideal policy. By\nutilizing the demand parsing module, agent can interpret the gain of sending\nlocal message on teammate, and generate customized messages via compute the\ncorrelation between demands and local observation using cross-attention\nmechanism. Moreover, our method can adapt to the communication resources of\nagents and accelerate the training progress by appropriating the ideal policy\nwhich is trained with joint observation. Experimental results reveal that DCMAC\nsignificantly outperforms the baseline algorithms in both unconstrained and\ncommunication constrained scenarios.",
        "updated": "2024-09-11 09:23:27 UTC",
        "interpretation": "解释内容未找到",
        "id": "2409.07127v1"
    },
    {
        "title": "A Quality Diversity Approach to Automatically Generate Multi-Agent Path Finding Benchmark Maps",
        "authors": "Cheng QianYulun ZhangVarun BhattMatthew Christopher FontaineStefanos NikolaidisJiaoyang Li",
        "links": "http://arxiv.org/abs/2409.06888v1",
        "entry_id": "http://arxiv.org/abs/2409.06888v1",
        "pdf_url": "http://arxiv.org/pdf/2409.06888v1",
        "summary": "We use the Quality Diversity (QD) algorithm with Neural Cellular Automata\n(NCA) to generate benchmark maps for Multi-Agent Path Finding (MAPF)\nalgorithms. Previously, MAPF algorithms are tested using fixed, human-designed\nbenchmark maps. However, such fixed benchmark maps have several problems.\nFirst, these maps may not cover all the potential failure scenarios for the\nalgorithms. Second, when comparing different algorithms, fixed benchmark maps\nmay introduce bias leading to unfair comparisons between algorithms. In this\nwork, we take advantage of the QD algorithm and NCA with different objectives\nand diversity measures to generate maps with patterns to comprehensively\nunderstand the performance of MAPF algorithms and be able to make fair\ncomparisons between two MAPF algorithms to provide further information on the\nselection between two algorithms. Empirically, we employ this technique to\ngenerate diverse benchmark maps to evaluate and compare the behavior of\ndifferent types of MAPF algorithms such as bounded-suboptimal algorithms,\nsuboptimal algorithms, and reinforcement-learning-based algorithms. Through\nboth single-planner experiments and comparisons between algorithms, we identify\npatterns where each algorithm excels and detect disparities in runtime or\nsuccess rates between different algorithms.",
        "updated": "2024-09-10 22:08:33 UTC",
        "interpretation": "解释内容未找到",
        "id": "2409.06888v1"
    },
    {
        "title": "Can Agents Spontaneously Form a Society? Introducing a Novel Architecture for Generative Multi-Agents to Elicit Social Emergence",
        "authors": "H. ZhangJ. YinM. JiangC. Su",
        "links": "http://arxiv.org/abs/2409.06750v1",
        "entry_id": "http://arxiv.org/abs/2409.06750v1",
        "pdf_url": "http://arxiv.org/pdf/2409.06750v1",
        "summary": "Generative agents have demonstrated impressive capabilities in specific\ntasks, but most of these frameworks focus on independent tasks and lack\nattention to social interactions. We introduce a generative agent architecture\ncalled ITCMA-S, which includes a basic framework for individual agents and a\nframework called LTRHA that supports social interactions among multi-agents.\nThis architecture enables agents to identify and filter out behaviors that are\ndetrimental to social interactions, guiding them to choose more favorable\nactions. We designed a sandbox environment to simulate the natural evolution of\nsocial relationships among multiple identity-less agents for experimental\nevaluation. The results showed that ITCMA-S performed well on multiple\nevaluation indicators, demonstrating its ability to actively explore the\nenvironment, recognize new agents, and acquire new information through\ncontinuous actions and dialogue. Observations show that as agents establish\nconnections with each other, they spontaneously form cliques with internal\nhierarchies around a selected leader and organize collective activities.",
        "updated": "2024-09-10 13:39:29 UTC",
        "interpretation": "解释内容未找到",
        "id": "2409.06750v1"
    },
    {
        "title": "Foragax: An Agent Based Modelling framework based on JAX",
        "authors": "Siddharth ChaturvediAhmed El-GazzarMarcel van Gerven",
        "links": "http://arxiv.org/abs/2409.06345v1",
        "entry_id": "http://arxiv.org/abs/2409.06345v1",
        "pdf_url": "http://arxiv.org/pdf/2409.06345v1",
        "summary": "Foraging for resources is a ubiquitous activity conducted by living organisms\nin a shared environment to maintain their homeostasis. Modelling multi-agent\nforaging in-silico allows us to study both individual and collective emergent\nbehaviour in a tractable manner. Agent-based modelling has proven to be\neffective in simulating such tasks, though scaling the simulations to\naccommodate large numbers of agents with complex dynamics remains challenging.\nIn this work, we present Foragax, a general-purpose, scalable,\nhardware-accelerated, multi-agent foraging toolkit. Leveraging the JAX library,\nour toolkit can simulate thousands of agents foraging in a common environment,\nin an end-to-end vectorized and differentiable manner. The toolkit provides\nagent-based modelling tools to model various foraging tasks, including options\nto design custom spatial and temporal agent dynamics, control policies, sensor\nmodels, and boundary conditions. Further, the number of agents during such\nsimulations can be increased or decreased based on custom rules. The toolkit\ncan also be used to potentially model more general multi-agent scenarios.",
        "updated": "2024-09-10 08:57:42 UTC",
        "interpretation": "解释内容未找到",
        "id": "2409.06345v1"
    }
]