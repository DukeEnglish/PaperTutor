A Quality Diversity Approach to Automatically Generate
Multi-Agent Path Finding Benchmark Maps
ChengQian1,YulunZhang1,VarunBhatt2,MatthewC.Fontaine2,
StefanosNikolaidis2,JiaoyangLi1
1RoboticsInstitute,CarnegieMellonUniversity
2ThomasLordDepartmentofComputerScience,UniversityofSouthernCalifornia
chengqia@andrew.cmu.edu,yulunzhang@cmu.edu,{mfontain,vsbhatt,nikolaid}@usc.edu,jiaoyangli@cmu.edu
Abstract 2020;Lietal.2021a;Okumuraetal.2019;Skrynniketal.
2024). However, such benchmark maps have several prob-
We use the Quality Diversity (QD) algorithm with Neural
lems.First,theymaynotfullyencompassthefailuremodes
Cellular Automata (NCA) to generate benchmark maps for
ofanalgorithm.Second,withasmallfixedsetofmaps,itis
Multi-Agent Path Finding (MAPF) algorithms. Previously,
challenging to sufficiently understand the pros and cons of
MAPF algorithms are tested using fixed, human-designed
differentalgorithmsindifferentmaps.Third,whilecompar-
benchmarkmaps.However,suchfixedbenchmarkmapshave
several problems. First, these maps may not cover all the ing multiple algorithms, researchers are pruned to run ex-
potentialfailurescenariosforthealgorithms.Second,when periments on a subset of maps that are biased towards the
comparingdifferentalgorithms,fixedbenchmarkmapsmay proposedalgorithms,resultinginunfaircomparison.
introduce bias leading to unfair comparisons between algo- Meanwhile,QualityDiversity(QD)algorithmshavebeen
rithms. In this work, we take advantage of the QD algo- used to generate a diverse set of high-quality solutions by
rithmandNCAwithdifferentobjectivesanddiversitymea-
optimizing a given objective function and a set of diver-
sures to generate maps with patterns to comprehensively
sitymeasurefunctions.Arecentwork(Zhangetal.2023b)
understand the performance of MAPF algorithms and be
has used QD algorithms to optimize layouts for automated
able to make fair comparisons between two MAPF algo-
warehouses.Toensurethattheoptimizedlayoutspossesses
rithms to provide further information on the selection be-
tweentwoalgorithms.Empirically,weemploythistechnique human-explainable and regularized patterns, a follow-up
to generate diverse benchmark maps to evaluate and com- work (Zhang et al. 2023a) then leverages Neural Cellular
parethebehaviorofdifferenttypesofMAPFalgorithmssuch Automata(NCA)togeneratethelayouts,whileapplyingQD
as bounded-suboptimal algorithms, suboptimal algorithms, algorithmstooptimizetheparametersoftheNCA.
and reinforcement-learning-based algorithms. Through both
In this paper, we adapt the layout optimization ap-
single-planner experiments and comparisons between algo-
proach based on QD algorithm and NCA from the previ-
rithms,weidentifypatternswhereeachalgorithmexcelsand
ous work (Zhang et al. 2023a) and use it with an alterna-
detectdisparitiesinruntimeorsuccessratesbetweendiffer-
tive goalof generatingdiverse benchmarkmaps for MAPF
entalgorithms.
algorithms. To demonstrate that our approach can gener-
ate benchmarks maps for a broad spectrum of MAPF al-
1 Introduction gorithms, we choose five algorithms, namely CBS (Sharon
We study the problem of generating diverse and targeted etal.2015),EECBS(Li,Ruml,andKoenig2020),PBS(Ma
benchmarkmapsforMulti-AgentPathFinding(MAPF)al- et al. 2019), PIBT (Okumura et al. 2019), and Learn-to-
gorithms. Given a map and a group of agents, MAPF is Follow (LTF) (Skrynnik et al. 2024), representing bounded
the problem of finding collision-free paths from their start suboptimal, priority-based, reactive, and learning-based al-
to goal locations. MAPF has wide applications in coor- gorithms,respectively.
dinating hundreds of robots in automated warehouses (Li Wefirstgeneratebenchmarkmapsforeachalgorithmin-
etal.2021b;Varambally,Li,andKoenig2022;Zhangetal. dividually,presentingdiversemapsthatareeasyorchalleng-
2023a,b), moving characters in video games (Ma et al. ingforeachalgorithmtosolve.Wesummarizedesignprin-
2017; Jansen and Sturtevant 2008), managing traffic with ciples of benchmark maps that target each algorithm. We
drones (Ho et al. 2022; Choudhury et al. 2022), and con- then generate benchmark maps that automatically compare
trollingmultiroboticsarms(Shaouletal.2024). twoMAPFalgorithmsbygeneratingmapsthatareeasyfor
Given the wide applicability of MAPF, many algorithms onealgorithmandhardfortheother.Weaimtounderstand
are proposed to solve MAPF and benchmarking these al- inwhichmapsonealgorithmoutperformstheotherinterms
gorithms becomes an important task. Stern et al. (2019) ofeitherruntimeorsuccessrate.
have proposed a set of 33 MAPF benchmark maps, cover- We make the following contributions: (1) we adapt the
ing a diverse spectrum of map sizes, layouts, and difficul- layout optimization approach for automated warehouses to
ties. These human-designed maps are widely used to test generatediversebenchmarkmapsforMAPF,(2)wepropose
newly proposed MAPF algorithms (Li, Ruml, and Koenig aframeworkbasedonQDalgorithmstogeneratechalleng-
4202
peS
01
]AM.sc[
1v88860.9042:viXraingbenchmarkmapsforonegivenMAPFalgorithmandtest single-stepactiontowardsitsgoal.Incaseofcollision,apre-
the framework with five representative MAPF algorithms defined rulebased on priorityinheritance and backtracking
from different categories, and (3) we propose a framework isappliedtoresolvethecollision.
based on QD algorithm to generate benchmark maps that Learning-Based. Learning-based algorithms usually for-
comparetwoMAPFalgorithmssuchthatthealgorithmscan mulate MAPF as a Multi-Agent Reinforcement Learning
becomparedinaunbiasedandfairmanner. (MARL) (Sartoretti et al. 2019; Damani et al. 2021) prob-
lem.Theytrainasharedpolicy,takinglocalfieldofviewas
2 Preliminaries input and deciding actions of the agents. We choose Learn
to Follow (LTF) (Skrynnik et al. 2024) as the representa-
2.1 MAPF tive of this category. LTF starts by searching for a guide
path for each agent without considering collisions. Then it
Definition1(MAPF) Given a 2D grid map and a set of
uses a shared learnable policy to move the agents to their
agents with their corresponding start and goal locations,
goals along the guide paths while avoiding collisions. LTF
MAPF aims to find collision-free paths from their start to
isdevelopedforlifelongMAPF,avariantofMAPFthatcon-
goallocations.Agentscaneithermovetotheiradjacentver-
stantlyassignsnewgoalsforagents.WemodifyitforMAPF
tices or stay at their current vertices at each timestep. Two
byaskingagentstostopwhentheyreachtheirfirstgoals.
agentscollideiftheyareatthesamevertexorswapvertices
atthesametimestep.TheobjectiveofMAPFisminimizing
2.2 MAPFBenchmarks
the sum-of-cost, defined as the sum of path lengths of all
agents. Stern et al. (2019) established the major set of MAPF
benchmark maps, which is used extensively in MAPF re-
WepresentashortsummaryofexistingMAPFalgorithms
search(Okumuraetal.2019;Lietal.2021a;Okumura2023;
andthechosenalgorithmsforexperimentsinthispaper.
Friedrichetal.2024).Additionally,differentresearchcom-
Search-Based.ThisisthemostcommoncategoryofMAPF
munitiesadoptcertaintypesofconventionalmapstobench-
algorithms, including CBS (Sharon et al. 2015; Gange,
marknewalgorithms.Forinstance,TheMARLcommunity
Harabor, and Stuckey 2019; Li et al. 2020), and its sub-
usuallygeneratesrandommapstotestthetrainedpolicyfor
optimal variants such as ECBS (Barer et al. 2014) and
MAPFproblems(Sartorettietal.2019;Damanietal.2021).
EECBS (Li, Ruml, and Koenig 2020), as well as anytime
Researcherswhodevelopmulti-robotsystemsforautomated
search algorithms such as MAPF-LNS (Li et al. 2021a).
warehousesorsortationcentersoftenuseasetofwarehouse
CBS starts by planning a shortest path for each agent, ig-
maps (Li et al. 2021b; Varambally, Li, and Koenig 2022;
noringthecollisions,andthenresolvingthecollisionswith
Zhangetal.2023b,a,2024).
a two-level search. The high-level search iteratively selects
unresolved collisions and adds constraints to tackle them.
2.3 QualityDiversity(QD)Algorithms
Thelow-levelsearchrunssingle-agentplanningtocompute
newpathsthatsatisfytheconstraints.Thesearchcontinues QD algorithms (Cully et al. 2015; Lehman and Stanley
untilallcollisionsareresolved.EECBSisavariantofCBS 2011a,b)areinspiredbyevolutionaryalgorithmswithdiver-
thatuseExplicitEstimationSearchonthehighlevelandfo- sity search to generate a diverse collection of high-quality
calsearchonthelowlevel.WechooseCBSandEECBSas tasks by optimizing an objective function and diversifying
therepresentativesofthiscategory. asetofdiversitymeasuresfunctionssimultaneously.QDal-
gorithmsmaintainanarchive,whichisatessellatedmeasure
Priority-Based. Priority-based algorithms plan paths for
space defined by the measure functions. The archive stores
each agent individually in a sequence, forcing agents with
thebestsolutionineachtessellatedcell.QDalgorithmsthen
low priority to avoid colliding with those with high prior-
optimize the sum of objective values of all solutions in the
ity.Thepriorityplanning(PP)(ErdmannandLozano-PeÂ´rez
archive. We choose Covariance Matrix Adaptation MAP-
1987)algorithmplanspathsforagentsinapre-definedprior-
Annealing(CMA-MAE)(FontaineandNikolaidis2023)as
ityorder.Monte-CarloPP(Friedrichetal.2024)pre-defines
the method for generating benchmark maps because it is
asetofrandomizedpriorityordersandselectsthepathswith
the state-of-the-art QD algorithm specialized for continu-
thebestsolutions.PBS(Maetal.2019)combinesCBSwith
ous search domains. CMA-MAE is an extension of MAP-
PPtoexplicitlysearchforagoodpriorityorderwithatwo-
Elites (Mouret and Clune 2015) that incorporates the co-
levelsearch.Thehigh-levelsearchofPBSissimilartoCBS
variancematrixadaptationmechanismofCMA-ES(Hansen
exceptthatPBSconstrainsoneagenttohavehigherpriority
2016),whichisaderivative-freesingle-objectiveoptimizer.
order than the other. The low-level search then plans paths
CMA-ES maintains a multi-variate Gaussian distribution
with the order from the high-level search. We choose PBS
and iteratively samples from it for new solutions. It eval-
astherepresentativeofthiscategory.
uates the solutions and updates the Gaussian toward high-
Rule-Based.Rule-basedalgorithms(WangandBotea2011;
objectiveregion.CMA-MAEadaptsthismechanismtoop-
Okumura2023)leveragepre-definedrulestomoveagentsto
timizetheQD-score.
theirgoals.Theyusuallyrunmuchfasterbutproduceworse
solutionsthansearch-basedandpriority-basedmethods.We
2.4 AutomaticScenarioGeneration
choose PIBT (Okumura et al. 2019) as the representative
of this category. PIBT uses an iterative one-timestep rule Automated methods of generating scenarios to understand,
to move the agents. At each timestep, each agent plans a test, or benchmark a given algorithm have been proposedbevalid.Wethenadaptamixedintegerlinearprogramming
(MILP)solver(Zhangetal.2020,2023a,b)torepairthemap
suchthat(1)theunderlyinggraphofthemapisconnected,
...
and (2) the number of obstacles falls in pre-defined range
[O ,O ]. We then run MAPF algorithms to evaluate the
Sample Form NCA generator and Repair the map lb ub
generate the map with MILP objectiveandmeasurevaluesandaddtheevaluatedmapsto
anarchive.Foreachevaluation,werunthegivenMAPFal-
gorithmN times,eachtimewithadifferentrandomMAPF
e
instance.Finally,weupdatetheGaussiandistribution,start-
inganewiteration.Werunthealgorithmuntilweevaluated
N maps.
eval
MAPF Instance. To avoid edge cases where pairs of start
and goal locations are too close, we follow the bucket
Update Update archive Run MAPF algorithm(s)
method (Stern et al. 2019). This method ensures that start
Figure 1: Overview of our approach of using CMA-MAE and goal locations are evenly distributed with a distance
optimizediverseNCAstogeneratebenchmarkmaps. constraintforeachMAPFinstance,therebygeneratingeven
scenarios.
3.1 Objective
bydifferentfields.Inautonomousdriving,researchershave
generated scenarios to test and evaluate developed au- Inallexperiments,ourobjectiveisafunctionf : X â R,
tonomous driving systems (Arnold and Alexander 2013; whereXisthespaceofallmaps.Thefunctionf runsoneor
Abeysirigoonawardena, Shkurti, and Dudek 2019; Mullins twoMAPFalgorithmsonN edifferentMAPFinstanceswith
et al. 2018). In human-robot-interaction, prior works have N a agents.WesetatimelimitT foreachrun.Weconsider
used QD algorithms to generate shared autonomy sce- thealgorithmasfailedifthealgorithmexceedsthetimelimit
narios (Fontaine et al. 2021b) or diverse kitchen lay- orreturnsnosolutionwithinthetimelimit.
outs (Fontaine et al. 2021a) to understand the coordina- One-algorithm Experiments. We intend to generate maps
tion behavior between human and robots. A follow-up that are challenging for the MAPF algorithms in one-
work (Bhatt et al. 2023) leverages model-based QD meth- algorithm experiments. Therefore, the one-algorithm ob-
ods (Bhatt et al. 2022; Zhang et al. 2022) to improve the jective quantifies the empirical hardness of a map x â
sampleefficiencyofQDalgorithms.Inreinforcementlearn- X to a MAPF algorithm Ï â A, where A =
ing,priorworkshavegeneratedmapstobenchmark(Cobbe {CBS,EECBS,PBS,PIBT,LTF} is all MAPF algorithms
et al. 2019) or continuously improve (Wang et al. 2019, consideredintheexperiments.SinceCBS,EECBS,andPBS
2020)trainedagent. areallexponential-timealgorithmsthatempiricallyfindop-
InMAPF,onerecentwork(Renetal.2024)hasusedQD timalornear-optimalalgorithms,wearemoreinterestedin
togeneratemapsforMAPF.However,theyfocusongener- howthemapstructuresaffecttheirCPUtime.Therefore,we
atingmapsoffixeddifficultiesquantifiedbyanapproximate maximize the CPU runtime to find failure cases for CBS,
metric based on connectivity of the maps, while we are in- EECBS, and PBS. Concretely, suppose the function t Ï :
terestedingeneratingbenchmarkingmapstargetedforeach X â R >0 computestheaverageCPUruntimebyrunning
MAPF algorithm. In addition, they use MAP-Elites to per- Ï â A for N e times, the objective f for the one-algorithm
form direct tile search. However, it is shown in the previ- experimentsisf(x)=t Ï(x),Ïâ{CBS,EECBS,PBS}.
ouswork(Zhangetal.2023a)thatNCAisadvantageousin PIBT and LTF, however, are much faster than the other
terms of generating maps with diverse regularized pattern. algorithms,makingCPUruntimenotagoodmeasureofthe
Therefore, we optimize the parameter of NCA to generate hardness of the map. Therefore, to find failure cases, we
thebenchmarkmaps. minimize the Regularized Success Rate (RSR), defined as
follows:
(cid:26)
3 BenchmarkGenerationApproach SR (x) ifSR<1
RSR (x)= Ï (1)
Ï SR (x)Â·CâSoC (x) ifSR=1
We adapt the previous work (Zhang et al. 2023a) to use Ï Ï
CMA-MAEandNCAtogeneratediversebenchmarkmaps SR : X â R computes the success rate of run-
Ï >0
with the objective and measures computed by running ning algorithm Ï once. The success rate is computed as
MAPF algorithms. Figure 1 shows the overview of the thepercentageofagentsthatsuccessfullyreachtheirgoals.
method. Starting by sampling b parameter vectors Î¸, we SoC : X â R computes the sum-of-cost of the solu-
Ï >0
formbNCAgeneratorsandusethemtogeneratethebench- tionpathsifSR=1.C isalargeconstantmakingsurethat
mark maps. Cellular Automata (Gardner 1970) iteratively maps with SR = 1 always dominates maps with SR < 1.
generates complex tile-based structures from a simple one Intuitively,ifnotallagentsreachtheirgoals(SR < 1),we
throughlocalinteractionbetweencells.Eachcelldecidesits maximize the success rate. If all agents reach their goals
nextstatebasedonitsneighborsviaafixedrule.NCAthen (SR = 1), we regularize the success rate with the sum-
represents the rules using a convolutional neural network of-costtoquantifythequalityofthesolution.Letthefunc-
that can be optimized. Maps generated by NCA might not tion r : X â R returns the average regularized suc-
Ï >0cess rate by running algorithm Ï for N e times. Concretely, MAPFAlgo Objective w T MakeSpan
r Ï(x) = (cid:80)N i=e 1RSR Ï(i)(x), where i denotes the i-th run CBS t CBS(x) 1.0 20s \
of algorithm Ï. Then the objective of PIBT and LTF are EECBS t EECBS(x) 1.5 20s \
PBS t (x) \ 20s \
f(x)=r (x)andf(x)=r (x),respectively. PBS
PIBT LTF PIBT r (x) \ \ 1000
Two-algorithm Experiments. To compare two given PIBT
LTF r (x) \ \ 512
LTF
MAPFalgorithmsintwo-algorithmexperiments,weaimto
generatemapsthatmaximizetheperformancegapbetween Table 1: One-algorithm experiment setup. w refers to the
thetwoalgorithms.Weconsidertwopairsofcomparisons: suboptimalitybound,andT isthetimelimitforeachrun.
(1) EECBS vs. PBS, and (2) PIBT vs. LTF. We compare
EECBSandPBSbecausebothsuboptimalalgorithmsusea
two-levelsearchbasedoncollisionavoidance.Wecompare
considertheKLdivergenceoftheWeisfeiler-Lehman(WL)
PIBTandLTFbecausebothofthemrunveryfastandthey
graphfeature(Shervashidzeetal.2011)betweenthegener-
are conceptually similar. Both use a pre-defined policy, ei-
ated map and a fixed map selected from the MAPF bench-
therrule-basedorlearned,tomovetheagentsstepbystepto
mark.ThesmallertheKLdivergenceoftheWLgraphfea-
theirgoalswhileavoidingcollisions.
ture,themoresimilaringlobalpatternsourgeneratedmap
To compare EECBS and PBS in a generated map , we istotheselectedsetofbenchmarkmaps.
set the objective as the absolute difference in the average Weexperimentedwithdifferentchoicesofmeasuresand
CPUruntime.Concretely,theobjectiveofageneratedmap decided,inourexperiments,tousethenumberofobstacles
xâX iscomputedasf(x)=|t EECBS(x)ât PBS(x)|.Sim-
tomeasurethegeneralhardnessofthemapandtheKLdi-
ilarly, to compare PIBT and LTF, we set the objective as vergenceoftilepatterndistributiontoquantifythespatial
theabsolutedifferenceintheregularizedsuccessrate.Con- arrangement of the obstacles, as this combination leads to
cretely,f(x)=|r PIBT(x)âr LTF(x)|.
the most favorable performance. For KL divergence of tile
patterndistribution,wechoosethesetofmazemapsasour
3.2 DiversityMeasures selectedbenchmarkmaps.Withmorevariationinthestruc-
tureofcomponentsofobstaclescomparedtorandommaps
Weaimtoselectdiversitymeasuressuchthatthegenerated
and room maps, the tile pattern distribution of maze maps
mapsarediverseintermsof(1)generalhardnesstowardsall
isagoodstandardforCMA-MAEandNCAtogeneratedi-
algorithms,and(2)spatialarrangementoftheobstacles.
versemapswithcomplexandinterestingpatterns.Weshow
General Hardness. While the objective values quantifies
experimentalresultsinAppendixAtosupportourchoice.
theempiricalhardnessofthemapstowardsaspecificMAPF
algorithm,wewanttoselectadiversitymeasurethatquanti-
4 BenchmarkingOneAlgorithm
fiesthegeneralhardnessofthemapsforallalgorithms.We
considerseveraldiversitymeasures.First,weconsidernum- For one-algorithm experiments, we intend to generate di-
berofobstacles.Moreobstaclesimplieslessemptyspacefor verse and targeted benchmark maps with size 32 Ã 32 and
agentstoavoidcollisions,therebymakingtheMAPFprob- 150 agents with different MAPF instances for the five rep-
lem harder. Second, we consider the standard deviation of resentativealgorithmswechoosefromSection2.1,namely
betweennesscentrality(BC)(Ewingetal.2022).Wesearch CBS, EECBS, PBS, PIBT, and LTF. For CBS, we use the
fortheshortestpathbetweeneverypairofemptyspacesin implementationofEECBSwithw =1.
themapandthencalculatethestandarddeviationoftheus- ExperimentSetup.Table1summarizestheexperimentse-
age of all empty spaces. The higher the standard deviation tups of one-algorithm experiments. The pre-defined range
ofBC,themorecongestionandthehardertheMAPFprob- for the number of obstacles is [O = 307,O = 717],
lb ub
lem.Third,weconsiderÎ» ofthemap.Byviewingthemap whichcorrespondsto30%to70%ofthemapsize.Foreach
2
as a graph G(V,E), Î» is the second smallest eigenvalue evaluation,werunthegivenMAPFalgorithmN =5times.
2 e
ofthenormalizedLaplacianmatrixofG.Renetal.(2024) WeevaluatedN =10,000mapswithN =150agents
eval a
show empirically that Î» is correlated with the hardness of togeneratethearchiveforeachexperiment.Weincludeim-
2
themap. plementation detail of each algorithm and the compute re-
Spatial Arrangement. Aside from the hardness of the sourceinAppendixB.
maps, we want to diversify the spatial arrangement of the In Figures 3 to 5, the yellow grids indicate instances
maps, making the generated maps stylistically diverse. We where the algorithm runs out of T to find a solution.
consider several diversity measures. First, we consider the The dark blue grids indicate instances where the algorithm
entropyofthetilepatterndistribution(Zhangetal.2023a). quicklyfindsasolution.InFigures6and7,theyellowgrids
Thelowertheentropy,themoreregularizedpatternthemap indicateinstanceswherethealgorithmsuccessfullyplansfor
possesses.Second,weconsidertheKLdivergenceofthetile all agents. The dark blue grids indicate cases where the al-
patterndistribution(Fontaineetal.2021b)betweenthetile gorithm fails to plan for any agents. The color grids in the
pattern distribution of the generated map and one category representative maps display 10 pairs of sampled start and
of fixed maps selected from the MAPF benchmark (Stern goallocations,indicatingevenscenariosofMAPFinstances
et al. 2019). The smaller the KL divergence of tile pattern foreachmap.
distribution,themoresimilarinlocalpatternsourgenerated CBS. Figure 3 shows the archive of maps for CBS. The
map is to the selected set of benchmark maps. Third, we archiveshowsthatitiseasiertogeneratechallengingmaps(a)One-entryspace. (b)One-tileentry.
Figure 2: Examples of one-entry space and one-tile entry,
circledinred.
Figure4:ArchiveforEECBSwithrepresentativemaps.
Figure3:ArchiveforCBSwithrepresentativemaps.
for CBS. Map (a) and Map (b) show the most typical pat-
terns where it is hard for CBS to find optimal solutions.
Map(a)containsmanylongcorridorsandMap(b)contains Figure5:ArchiveforPBSwithrepresentativemaps.
manyone-entryspaceswithlongcorridors,whereone-entry
spaces represent the empty space surrounded by three ob-
stacles. Figure 2a shows an example. By running CBS on space and connected component of obstacles. EECBS runs
Map (a) and Map (b) 200 times, the success rate is below outoftimeonbothmaps.Tofurthervalidatetheresults,we
5%withanaverageruntimeofover15seconds.Theresult rerun 200 runs of EECBS with different MAPF instances
showsthatCBShaspoorbehavioronmapswithmanylong on these two maps. We get success rate of only 11% with
corridorsandone-entryspaces.Manyconflictsconcentrated anaverageCPUruntimeof16seconds.Thestatisticsverify
onthesameentriesleadtomoreconstraintsateachnode. thatone-entryspaceandlongcorridorsarechallengingmap
Ontheotherhand,wecanfindmapsthatareeasyforCBS patternsforEECBStosolve.
atthebottompartofthearchive.Withfewerobstacles,itis On the other hand, we could still detect several cases
morelikelyforCBStofindsolutions.WeselectMap(c)and where EECBS performs well. By looking at Map (c) and
Map(d)astwotypicalmapswithfewerobstaclesbutreveal- Map (d), we observe that EECBS has a good performance
ingalargegapinCPUruntime.Map(c)containsmanylong onmapswithlargechunksofemptyspaces.
corridors with empty spaces around them. However, when PBS.Figure5showsthearchiveofmapsforPBS.Interest-
there is only a single tile separating two corridors, called ingly, we find that PBS excels at finding solutions in maps
one-tile entry, as shown in Figure 2b, it becomes challeng- with more obstacles and higher KL divergence in tile us-
ingforCBStofindsolutions.ComparedtoMap(c),Map(d) age.However,PBSoftenstrugglesmorewithmapsthathave
contains evenly distributed short corridor components with fewerobstaclesandlowerKLdivergence.
morespaceinbetween,providingmorespaceforagentsto By examining the cases where PBS performs well, we
avoidcollision.OthermapswhereCBSperformswellareof find that maps with long corridors are easier for PBS to
thesamepatternorwithalargeportionofconnectingempty solve. Interestingly, these same maps are considered chal-
space.Withmoreentryspace,itiseasierforCBStofindop- lenging for algorithms like CBS and EECBS. Map (a) and
timalpathsforeachagent.Weshowmoremapswithsimilar Map (b) are two representative maps. To validate the ob-
patternsinAppendixCtosupportourfindings. servation,wererun200timesoneachmapwithadifferent
EECBS. Figure 4 shows the archive of maps for EECBS. randomMAPFinstanceeachtime.Theresultsindicatethat
WeempiricallydiscoverthearchiveofEECBSissimilarto PBS achieves a 95% success rate on maps with long corri-
thatofCBS.WegeneratemapshardforEECBSthroughout dors,withanaverageruntimeof4.5secondsforsuccessful
thearchive.Map(a)andMap(b)arehardmapswithtypical cases. To ensure our observations are not limited to edge
patterns for EECBS. Map (a) consists of many long corri- cases,wemanuallydesigned10mapsfeaturingtypicallong
dorswithone-tileentries.Map(b)containsmanyone-entry corridor patterns to evaluate the performance of PBS. TheFigure6:ArchiveforPIBTwithrepresentativemaps. Figure7:ArchiveforLTFwithrepresentativemaps.
MAPFAlgos Objective w T MakeSpan
manually-designedmapsarepresentedinAppendixD.Af- EECBSvs.PBS |t (x)ât (x)| 1.5 20s \
EECBS PBS
ter200testsoneachmap,PBSachievedanaveragesuccess PIBTvs.LTF |r (x)âr (x)| \ \ 512
PIBT LTF
rateof89%acrossallmaps,withanaverageruntimeof4.2
seconds in successful cases. By observing the priority tree Table2:Two-algorithmexperimentsetup.w isthesubopti-
(PT)ofPBS,weconjecturethatitsfeaturetofavorthechild malitybound,andT isthetimelimitforeachrun.
PTnodewiththesmallestcostdecreasestheruntime.
Ontheotherhand,PBSispoorlyperformedincaseswith
fewer obstacles. We observed that PBS is slower at solv- cles.Givensufficientspace,PIBTcanefficientlysolvemaps
ingmapswithmoreemptyspacebetweencorridors,suchas thatincludelongcorridorsandone-entryspaces.
Map (c), as well as maps with numerous one-entry spaces Learn to follow. Figure 7 shows the archive of maps for
scattered among randomly generated obstacles, like Map LTF. Maps that are hard for LTF concentrate at the upper
(d). To validate this observation, we ran PBS on both Map right corner of the archive with more obstacles and higher
(c) and Map (d) 200 times with different MAPF instances. KLdivergence,andsomeedgecasesatthebottomleftcor-
Thesuccessrateonbothmapswasbelow10%,withanaver- ner with fewer obstacles and lower KL divergence. By ob-
ageruntimeof15seconds.Thisresultindicatesaninterest- serving the general patterns at the upper right corner, Map
ingtrend:PBSperformswellinmapswithlessemptyspace (a) is the most representative map. Similar to challenging
butstrugglessignificantlyinmapswithmoreemptyspace. mapsforCBS,EECBS,andPIBT,itcontainslongcorridors,
PIBT.Figure6showsthearchiveofmapsofPIBT.Withan which increase the chance of congestion at the entries. We
increasednumberofobstacles,thesuccessrateforPIBTis use the manually designed maps with long corridors, same
decreasing. By analyzing the representative patterns in the asthemapstestedwithPBS,tofurtherevaluatetheperfor-
upper right corner, we observe that, similar to EECBS and manceofLTF.Theresultshowsthatwithalimitednumber
CBS, PIBT also performs poorly on maps with long cor- ofmakespan,thesuccessrateforLTFisbelow10%.
ridors. Running PIBT 200 times on Map (c) resulted in an With fewer obstacles, LTF is poorly performed on maps
averagesuccessrateof12%,validatingitspoorperformance withmanyone-entryspaces,suchasMap(b)andMap(d).
onmapswithlongcorridors.However,therearecaseswith Thesetwomapscontaindifferentnumbersofobstacles,but
large number of obstacles and low KL divergence in that they have similar patterns of one-entry spaces. To validate
PIBThasahighsuccessrate.Thesemapsshareacommon ourobservation,wererun200timesoneachmapwithdif-
pattern: large chunks of empty spaces with few corridors. ferent MAPF instances. The result shows that the average
Map(a)isonesuchexample.AfterrunningPIBT200times successrateforLTFis35%,revealingpoorperformanceon
onMap(a),itachievedanaveragesuccessrateof96%,in- maps with this pattern. On the other hand, with fewer ob-
dicating strong performance in maps with large chunks of stacles, it is hard to find maps that LTF poorly performed
emptyspaces. on. These maps share patterns with large chunks of empty
spacessuchasMap(c).
By inspecting the patterns in maps where PIBT has
around a 50% success rate, we observe that the most com-
5 ComparingTwoAlgorithms
mon patterns are a combination of long corridors and one-
entry spaces. Map (d) is one of the most representative ex- Given the different categories and properties of the MAPF
amples. However, when examining maps where PIBT suc- algorithms,hardmapsforonealgorithmmightnotbehard
cessfully plans for all agents, we find similar patterns but fortheother.Therefore,fortwo-algorithmexperiments,we
with fewer obstacles, such as in Map (b). In Map (b), ob- aim to generate maps that are easy for one algorithm and
stacles are randomly distributed, creating many one-entry hardfortheother.
spaces. After simulating 200 runs with different random ExperimentSetup.Table2summarizestheexperimentse-
MAPFinstances,PIBTachievedanaveragesuccessrateof tups of two-algorithm experiments. The pre-defined range
95% on Map (b). This result indicates that PIBT performs forthenumberofobstaclesis[O = 307,O = 717].For
lb ub
wellwhenencounteringone-entryspaceswithfewerobsta- eachevaluation,werunthegivenMAPFalgorithmN = 5
eFigure 8: Archive for EECBS vs PBS with representative
Figure9:ArchiveforPIBTvsLTFwithrepresentativemaps.
maps.
performs LTF by an average of 13% in success rate. The
times. We evaluated N = 10000 maps with N = 150
eval a result aligns with our observations in one algorithm exper-
togeneratethearchiveforeachexperiment.
iment with PIBT and LTF. PIBT has better performance in
In Figure 8, the yellow grids represent t (x) â
EECBS mapswithmanyone-entryspacescomparedtoLTF.
t (x) â¥ 5 seconds, and the dark blue grids represent
PBS On the other hand, the archive also shows many cases
t (x)ât (x) â¥ 5 seconds. In Figure 9, the yellow
PBS EECBS whereLTFhasahighersuccessratethanPIBT.Thesecases
gridsrepresentSR (x)âSR (x)â¥30%,andtheblue
PIBT LTF are dispersed throughout the archive, with notable concen-
gridsrepresentSR (x)âSR (x)â¥30%.
LTF PIBT trationsintheupperrightandbottomleft.Map(b)and(c)in
EECBS vs. PBS. Figure 8 shows the archive comparing
Figure9aretherepresentativemaps.Running200timeson
EECBS and PBS. In most of the cases, EECBS and PBS
both maps, LTF has an average of 20% higher success rate
have similar performances. However, we can also identify
onthesemapscomparedtoPIBT.Byexaminingthepatterns
theirdifferentadvantageousrangesclearlyattheupperright
inthesemaps,wefindthataslightincreaseinthenumberof
cornerandbottomleftcorner.
emptyspacesbetweencorridorscancreateasignificantgap
The result aligns with the observations from one- insuccessratesbetweenLTFandPIBT.
algorithm experiments of both EECBS and PBS. Maps (a)
and (b) are representative examples where EECBS outper-
6 DiscussionandConclusion
forms PBS. We observe that both maps contain a large ob-
stacle component with large chunks of empty space. Maps We propose and use an one-algorithm benchmark genera-
(c) and (d) are representative examples where PBS outper- tion framework based on the QD algorithm to generate di-
formsEECBS.Bothmapscontainlongcorridorswithmore verse benchmark maps for five representative MAPF algo-
obstacles. rithmsindifferentcategories.Byoptimizingdesiredobjec-
Tovalidateourobservation,wemanuallydesignedmaps tives, researchers can use our approach to thoroughly test
with a large chunk of empty spaces and evaluated them on theirproposedMAPFalgorithmsbygeneratingadiverseset
both EECBS and PBS. We found that EECBS achieves a of easy or challenging benchmark maps. These benchmark
successrateof92%onmapslikeMap(a)andMap(b),with mapscanhelpthembetterunderstandtheadvantageanddis-
an average runtime of 1.5 seconds. In contrast, PBS has a advantagesoftheiralgorithmandidentifyareaswheretheir
successrateof25%andanaverageruntimeof12seconds. algorithmsmayneedfurtherrefinementormodification.
Ourmanually-designedmapsandtheirresultsaredetailedin WealsoproposeaframeworktocomparepairsofMAPF
AppendixD.Wealsousethesamesetofmanually-designed algorithms. Notably, regarding the comparison between
maps with long corridors to evaluate the performance of EECBSandPBS,onlyonework(Chanetal.2023)hassys-
EECBS.Comparedtoasuccessrateof89%withanaverage tematicallycomparedEECBSandPBS.Theyconcludethat
runtime of 4.2 seconds of PBS, EECBS poorly performed EECBS outperforms PBS in five out of six maps selected
with a success rate of 5% with an average CPU runtime of fromtheMAPFbenchmark(Sternetal.2019).Incontrast,
15seconds.Thestatisticsvalidateourobservationofdiffer- ourresultsindicatethatEECBSandPBSexhibitsimilarbe-
entadvantageousrangesforEECBSandPBS. havior on most maps, with each having distinct advantages
PIBTvs.LearntoFollow.Figure9showsthearchivecom- ondifferentmappatterns.Withourtwo-algorithmpipeline,
paring PIBT and LTF. In most cases with less than 50% of researcherscancomparetheperformanceoftheiralgorithm
obstacles,PIBTandLTFhaveasimilarsuccessrate.Inmaps withexistingalgorithmsinanunbiasedmannerandidentify
with large chunks of empty space such as Map (d), both theiradvantageranges.
PIBTandLTFperformwell.Withtheincreaseofobstacles Future research can explore more suitable combinations
over 50%, in general, PIBT has a 5% to 10% higher suc- ofobjectivesanddiversitymeasurestobettercaptureglobal
cessrateonaveragecomparedtoLTF.Inmostcases,these patternsinmaps.Additionally,Futureresearchcanfocuson
mapscontainmanyone-entryspacessuchasMap(a).Run- reducing the computational cost of CMA-MAE to achieve
ning 200 times on Map (a) with PIBT and LTF, PIBT out- fasterconvergence,makingthepipelinemoreefficient.References Fontaine,M.C.;Liu,R.;Khalifa,A.;Modi,J.;Togelius,J.;
Hoover,A.K.;andNikolaidis,S.2021b.IlluminatingMario
Abeysirigoonawardena,Y.;Shkurti,F.;andDudek,G.2019.
ScenesintheLatentSpaceofaGenerativeAdversarialNet-
Generating Adversarial Driving Scenarios in High-Fidelity
work. ProceedingsoftheAAAIConferenceonArtificialIn-
Simulators. 2019InternationalConferenceonRoboticsand
telligence(AAAI),5922â5930.
Automation(ICRA),8271â8277.
Friedrich,P.;Zhang,Y.;Curry,M.;Dierks,L.;McAleer,S.;
Arnold, J.; and Alexander, R. 2013. Testing Autonomous
Li,J.;Sandholm,T.;andSeuken,S.2024. ScalableMech-
RobotControlSoftwareUsingProceduralContentGenera-
anism Design for Multi-Agent Path Finding. In Proceed-
tion. InInternationalConferenceonComputerSafety,Reli-
ings of the International Joint Conference on Artificial In-
ability,andSecurity.
telligence(IJCAI),58â66.
Barer,M.;Sharon,G.;Stern,R.;andFelner,A.2014. Sub-
Gange,G.;Harabor,D.;andStuckey,P.J.2019. LazyCBS:
optimalVariantsoftheConflict-BasedSearchAlgorithmfor
Implicit Conflict-Based Search Using Lazy Clause Gener-
theMulti-AgentPathfindingProblem. InProceedingsofthe
ation. In Proceedings of the International Conference on
Annual Symposium on Combinatorial Search (SoCS), 19â
AutomatedPlanningandScheduling(ICAPS),155â162.
27.
Gardner, M. 1970. Mathematical Games â The fantastic
Bhatt, V.; Nemlekar, H.; Fontaine, M. C.; Tjanaka, B.;
combinations of John Conwayâs new solitaire game âlifeâ.
Zhang, H.; Hsu, Y.-C.; and Nikolaidis, S. 2023. Surrogate ScientificAmerican,223(4):120â123.
Assisted Generation of Human-Robot Interaction Scenar-
Hansen,N.2016. TheCMAEvolutionStrategy:ATutorial.
ios. In Proceedings of the Conference of Robot Learning
ArXiv,abs/1604.00772.
(CoRL),513â539.
Ho, F.; GoncÂ¸alves, A.; Rigault, B.; Geraldes, R.; Chicharo,
Bhatt, V.; Tjanaka, B.; Fontaine, M.; and Nikolaidis, S.
A.; Cavazza, M.; and Prendinger, H. 2022. Multi-Agent
2022.DeepSurrogateAssistedGenerationofEnvironments.
PathFindinginUnmannedAircraftSystemTrafficManage-
InProceedingsoftheAdvancesinNeuralInformationPro-
mentWithSchedulingandSpeedVariation.IEEEIntelligent
cessingSystems(NeurIPS),37762â37777.
TransportationSystemsMagazine,14(5):8â21.
Chan, S.-H.; Stern, R.; Felner, A.; and Koenig, S. 2023. Jansen,M.R.;andSturtevant,N.R.2008. DirectionMaps
Greedy Priority-Based Search for Suboptimal Multi-Agent for Cooperative Pathfinding. In Proceedings of the AAAI
PathFinding. InProceedingsoftheSymposiumonCombi- ConferenceonArtificialIntelligenceandInteractiveDigital
natorialSearch(SoCS),11â19. Entertainment(AIIDE),185â190.
Choudhury,S.;Solovey,K.;Kochenderfer,M.;andPavone, Lehman, J.; and Stanley, K. O. 2011a. Abandoning objec-
M.2022. CoordinatedMulti-AgentPathfindingforDrones tives:Evolutionthroughthesearchfornoveltyalone. Evo-
andTrucksoverRoadNetworks. InProceedingsoftheIn- lutionarycomputation,19(2):189â223.
ternationalConferenceonAutonomousAgentsandMultia- Lehman, J.; and Stanley, K. O. 2011b. Evolving a Diver-
gentSystems(AAMAS),272â280. sityofVirtualCreaturesthroughNoveltySearchandLocal
Cobbe, K.; Hesse, C.; Hilton, J.; and Schulman, J. 2019. Competition. InProceedingsoftheGeneticandEvolution-
LeveragingProceduralGenerationtoBenchmarkReinforce- ary Computation Conference (GECCO), 211â218. ISBN
mentLearning. ArXiv,abs/1912.01588. 9781450305570.
Cully, A.; Clune, J.; Tarapore, D.; and Mouret, J.-B. 2015. Li, J.; Chen, Z.; Harabor, D.; Stuckey, P. J.; and Koenig,
Robotsthatcanadaptlikeanimals.Nature,521(7553):503â S. 2021a. Anytime Multi-Agent Path Finding via Large
507. NeighborhoodSearch. InProceedingsoftheThirtiethInter-
national Joint Conference on Artificial Intelligence, IJCAI,
Damani, M.; Luo, Z.; Wenzel, E.; and Sartoretti, G. 2021.
4127â4135.
PRIMAL : Pathfinding Via Reinforcement and Imitation
2
Li, J.; Gange, G.; Harabor, D.; Stuckey, P. J.; Ma, H.; and
Multi-Agent Learning - Lifelong. IEEE Robotics and Au-
Koenig, S. 2020. New Techniques for Pairwise Symmetry
tomationLetters,6(2):2666â2673.
Breaking in Multi-Agent Path Finding. In Proceedings of
Erdmann, M. A.; and Lozano-PeÂ´rez, T. 1987. On Multiple
the International Conference on Automated Planning and
MovingObjects. Algorithmica,2:477â521.
Scheduling(ICAPS),193â201.
Ewing, E.; Ren, J.; Kansara, D.; Sathiyanarayanan, V.; and Li,J.;Ruml,W.;andKoenig,S.2020. EECBS:ABounded-
Ayanian, N. 2022. Betweenness Centrality in Multi-Agent SuboptimalSearchforMulti-AgentPathFinding. InAAAI
PathFinding. InAAMAS,400â408. ConferenceonArtificialIntelligence.
Fontaine, M.; and Nikolaidis, S. 2023. Covariance Matrix Li,J.;Tinka,A.;Kiesel,S.;Durham,J.W.;Kumar,T.K.S.;
AdaptationMAP-Annealing. InProceedingsoftheGenetic andKoenig,S.2021b.LifelongMulti-AgentPathFindingin
andEvolutionaryComputationConference(GECCO),456â Large-ScaleWarehouses. InProceedingsoftheAAAICon-
465. ferenceonArtificialIntelligence(AAAI),11272â11281.
Fontaine, M. C.; Hsu, Y.-C.; Zhang, Y.; Tjanaka, B.; and Ma, H.; Harabor, D.; Stuckey, P. J.; Li, J.; and Koenig, S.
Nikolaidis, S. 2021a. On the Importance of Environments 2019. Searching with Consistent Prioritization for Multi-
in Human-Robot Coordination. In Proceedings of the AgentPathFinding.InProceedingsoftheAAAIConference
Robotics:ScienceandSystems(RSS). onArtificialIntelligence(AAAI),7643â7650.Ma,H.;Yang,J.;Cohen,L.;Kumar,T.K.S.;andKoenig,S. Varambally, S.; Li, J.; and Koenig, S. 2022. Which
2017. FeasibilityStudy:MovingNon-HomogeneousTeams MAPFModelWorksBestforAutomatedWarehousing? In
inCongestedVideoGameEnvironments. InProceedingsof Proceedings of the Symposium on Combinatorial Search
theAAAIConferenceonArtificialIntelligenceandInterac- (SoCS),190â198.
tiveDigitalEntertainment(AIIDE),270â272. Wang,K.C.;andBotea,A.2011. MAPP:aScalableMulti-
Mouret, J.-B.; and Clune, J. 2015. Illuminating search AgentPathPlanningAlgorithmwithTractabilityandCom-
spacesbymappingelites. ArXiv,abs/1504.04909. pletenessGuarantees. JournalofArtificialIntelligenceRe-
Mullins, G. E.; Stankiewicz, P. G.; Hawthorne, R. C.; and search,42:55â90.
Gupta,S.K.2018. Adaptivegenerationofchallengingsce- Wang, R.; Lehman, J.; Clune, J.; and Stanley, K. O. 2019.
nariosfortestingandevaluationofautonomousvehicles. J. Paired Open-Ended Trailblazer (POET): Endlessly Gener-
Syst.Softw.,137:197â215. atingIncreasinglyComplexandDiverseLearningEnviron-
Okumura, K. 2023. LaCAM: Search-Based Algorithm for mentsandTheirSolutions. ArXiv,abs/1901.01753.
Quick Multi-Agent Pathfinding. In Proceedings of AAAI Wang, R.; Lehman, J.; Rawal, A.; Zhi, J.; Li, Y.; Clune, J.;
ConferenceonArtificialIntelligence(AAAI),11655â11662. and Stanley, K. O. 2020. Enhanced POET: Open-Ended
Okumura, K.; Machida, M.; DeÂ´fago, X.; and Tamura, Y. Reinforcement Learning through Unbounded Invention of
2019. Priority Inheritance with Backtracking for Iterative Learning Challenges and their Solutions. In International
Multi-agent Path Finding. In Proceedings of the Interna- ConferenceonMachineLearning.
tional Joint Conference on Artificial Intelligence (IJCAI), Zhang, H.; Fontaine, M. C.; Hoover, A. K.; Togelius, J.;
535â542. Dilkina, B.; and Nikolaidis, S. 2020. Video Game Level
Ren,J.;Ewing,E.;Kumar,T.K.S.;Koenig,S.;andAyanian, RepairviaMixedIntegerLinearProgramming. InProceed-
N.2024.MapConnectivityandEmpiricalHardnessofGrid- ings of the AAAI Conference on Artificial Intelligence and
basedMulti-AgentPathfindingProblem. InProceedingsof InteractiveDigitalEntertainment(AIIDE),151â158. ISBN
the International Conference on Automated Planning and 978-1-57735-849-7.
Scheduling,484â488. Zhang, Y.; Fontaine, M. C.; Bhatt, V.; Nikolaidis, S.; and
Sartoretti,G.;Kerr,J.;Shi,Y.;Wagner,G.;Kumar,T.K.S.; Li, J. 2023a. Arbitrarily Scalable Environment Gener-
Koenig,S.;andChoset,H.2019. PRIMAL:Pathfindingvia ators via Neural Cellular Automata. In Proceedings of
Reinforcement and Imitation Multi-Agent Learning. IEEE the Advances in Neural Information Processing Systems
RoboticsandAutomationLetters,4(3):2378â2385. (NeurIPS),57212â57225.
Shaoul,Y.;Mishani,I.;Likhachev,M.;andLi,J.2024. Ac- Zhang, Y.; Fontaine, M. C.; Bhatt, V.; Nikolaidis, S.; and
celerating Search-Based Planning for Multi-Robot Manip- Li,J.2023b. Multi-RobotCoordinationandLayoutDesign
ulation by Leveraging Online-Generated Experiences. In for Automated Warehousing. In Proceedings of the Inter-
Proceedings of the International Conference on Automated nationalJointConferenceonArtificialIntelligence(IJCAI),
PlanningandScheduling(ICAPS),523â531. 5503â5511.
Sharon,G.;Stern,R.;Felner,A.;andSturtevant,N.R.2015. Zhang,Y.;Fontaine,M.C.;Hoover,A.K.;andNikolaidis,
Conflict-Based Search for Optimal Multi-Agent Pathfind- S. 2022. Deep Surrogate Assisted MAP-Elites for Auto-
ing. ArtificialIntelligence,219:40â66. matedHearthstoneDeckbuilding. InProceedingsoftheGe-
Shervashidze, N.; Schweitzer, P.; van Leeuwen, E. J.; neticandEvolutionaryComputationConference(GECCO),
Mehlhorn, K.; and Borgwardt, K. M. 2011. Weisfeiler- 158â167. ISBN9781450392372.
Lehman Graph Kernels. J. Mach. Learn. Res., 12(null): Zhang, Y.; Jiang, H.; Bhatt, V.; Nikolaidis, S.; and Li, J.
2539â2561. 2024. Guidance Graph Optimization for Lifelong Multi-
Skrynnik,A.;Andreychuk,A.;Nesterova,M.;Yakovlev,K.; Agent Path Finding. In Proceedings of the International
and Panov, A. 2024. Learn to Follow: Decentralized Life- Joint Conference on Artificial Intelligence (IJCAI), 311â
long Multi-Agent Pathfinding via Planning and Learning. 320.
Proceedings of the AAAI Conference on Artificial Intelli-
gence,38(16):17541â17549.
Stern,R.;Sturtevant,N.R.;Felner,A.;Koenig,S.;Ma,H.;
Walker,T.T.;Li,J.;Atzmon,D.;Cohen,L.;Kumar,T.K.S.;
BartaÂ´k, R.; and Boyarski, E. 2019. Multi-Agent Pathfind-
ing:Definitions,Variants,andBenchmarks. InProceedings
of the International Symposium on Combinatorial Search
(SoCS),151â159.
Tjanaka,B.;Fontaine,M.C.;Lee,D.H.;Zhang,Y.;Balam,
N. R.; Dennler, N.; Garlanka, S. S.; Klapsis, N. D.; and
Nikolaidis, S. 2023. pyribs: A Bare-Bones Python Li-
brary for Quality Diversity Optimization. In Proceedings
of the Genetic and Evolutionary Computation Conference
(GECCO),220â229.Figure11:ArchiveofPBSwithNumberofobstaclesandÎ»
Figure10:ArchiveofPBSwithNumberofobstaclesandstd 2
asdiversitymeasurewithrepresentativemaps.
ofBCasdiversitymeasurewithrepresentativemaps.
A ChoosingDiversityMeasures
In this section, we justify our choice of diversity measures
bysettingupthearchivewitheverytwopairsofcompetitive
diversitymeasuresandexploretheirrelationshipandbehav-
ior.Weshowthefollowingexperiments:(1)wecomparethe
numberofobstaclesandstandarddeviationofBetweenness
Centrality (std of BC) (Ewing et al. 2022), the number of
obstaclesandÎ» (Renetal.2024),andshowthatthenum-
2
berofobstaclescouldquantifythegeneralhardnessofgen-
erated maps better than std of BC and Î» . (2) We compare
2
the KL divergence of the tile pattern distribution and map
entropy, the KL divergence of the tile pattern distribution
andtheKLdivergenceofWLgraphfeature,andshowthat
theKLdivergenceofthetilepatterndistributioncangener-
ate more complex patterns than map entropy and have less
computationalcostthantheKLdivergenceofWLgraphfea-
Figure12:ArchiveofPBSwithmapentropyandKLdiver-
ture.
genceofthetilepatterndistributionasdiversitymeasure.
A.1 GeneralHardness
Number of obstacles vs. std of BC. We run the one-
algorithmexperimentofPBSwiththenumberofobstacles
hardnessofthemaps.
and std of BC as the diversity measures to explore the re-
lationshipbetweentwomeasuresandtheircorrelationwith Numberofobstaclesvs.Î» .Weruntheone-algorithmex-
2
thegeneralhardnessofgeneratedmaps.FromFigure10,we perimentofPBSwiththenumberofobstaclesandÎ» asthe
2
canobservethatinthey-axis,withtheincreaseofobstacles, diversity measures to explore the relationship between two
the CPU runtime of PBS is decreasing, which is consistent measures and their correlation with the difficulty of gener-
withtheoneexperimentalgorithmresultofPBSinsection ated maps. From Figure 11, we can observe that in the y-
4ofthemaintext.WithfewervariationsintheCPUruntime axis,withtheincreaseofobstacles,theCPUruntimeofPBS
ofPBSatagivennumberofobstacles,wecanquantifythe is decreasing. With fewer variations in the CPU runtime of
generalhardnessofthemapsbasedonthenumberofobsta- PBS,wecanquantifythegeneralhardnessofthemapsbased
cles.Fromthex-axis,however,therearemanymapswiththe onthenumberofobstacles.Fromthex-axis,therearemany
samestdofBCbutshowingdifferentgeneralhardnessofthe maps with the Î» but showing different difficulties of the
2
maps for PBS. For example, Map (a) and Map (b) are two maps for PBS. For example, Map (a) and Map (b) are two
mapswithsimilarstdofBCof0.00063and0.00062,butthe maps with similar Î» , but the CPU runtime of PBS is 6.4
2
CPU runtime of PBS is 10.8 seconds for Map (a) and over secondsforMap(a)andover20secondsforMap(b),which
20 seconds for Map (b), which leads to a great difference leads to a great difference in quantifying the general hard-
inquantifyingthegeneralhardnessoftwomaps.Therefore, ness of two maps. Therefore, Î» is not a good measure to
2
thestdofBCisnotagoodmeasuretoquantifythegeneral quantifythegeneralhardnessofthemaps.Figure 13: Archive of PBS with KL divergence of the tile
patterndistributionandKLdivergenceofWLgraphfeature
asdiversitymeasure.
A.2 SpatialArrangement
KLdivergenceofthetilepatterndistributionvs.mapen-
tropy. We run the one-algorithm experiment of PBS with
diversity measures of the map entropy and the KL diver- Figure 14: Similar maps with evenly distributed short cor-
gence of tile pattern distribution to explore the spatial ar- ridorcomponentsorlargechunksofemptyspacethatCBS
rangementsingeneratedmaps.FromFigure12,byplotting performs well. Map (a) and (b) are maps with evenly dis-
thegeneratedmapsatdifferentmapentropy,weobservelit- tributedshortcorridorcomponents.Map(c)isthemapwith
tlechangeinspatialarrangements.Map(a)andMap(b)re- large chunks of empty space. Map (d) is the map with
vealthesituation.Bothmapsarecomposedofalargechunk bothevenlydistributedshortcorridorcomponentsandlarge
of empty spacewith a large componentof obstacles on the chunksofemptyspace,butalsolongcorridorsontheleft.
boundary, revealing a simple structure. Compared to maps
generated by the KL divergence of the tile distribution in
Figure5ofSection4,mapsgeneratedbymapentropyhave timation Conflict-Based Search (EECBS) 2, Priority-Based
lessdiversepatterns. Search (PBS) 3, Priority Inheritance with Backtracking
KLdivergenceofthetilepatterndistributionvs.KLdi- (PIBT)4,andLearnToFollow(LTF)5.
vergenceofWLgraphfeature.Weruntheone-algorithm
experimentofPBSwithdiversitymeasuresoftheKLdiver- B.2 ComputeResources
gence of tile pattern distribution and the KL divergence of We run our experiments on three machines: (1) a local
WL graph feature to explore their correlation and the spa- machine equipped with a 64-core AMD Ryzen Threadrip-
tial arrangements in generated maps. From Figure 13, we per 3990X CPU, 192 GB of RAM, and an Nvidia RTX
canobservethatallgeneratedmapsconcentrateintheupper 3090Ti GPU, (2) a local machine with a 64-core AMD
triangleofthearchiveandtherearemanymapswithasimi- Ryzen Threadripper 7980X CPU, 128 GB of RAM, and
larKLdivergenceofthetilepatterndistributionandtheKL anNVIDIAGTX1080TiGPU,and(3)ahigh-performance
divergenceofWLgraphfeature.Therefore,thesetwodiver- clusterfeaturingmultiple64-coreAMDEPYC7742CPUs,
sitymeasuresaresimilartoeachother,bothquantifyingthe eachwith256GBofRAM.AllCPUruntimesaremeasured
similarity between the generated maps and the pre-defined onmachine(1).
set of maze maps (Stern et al. 2019). The only difference
is the method applied to quantify the distribution of local
C Mapswithsimilarpatterns
patterns.WeusetheKLdivergenceofthetilepatterndistri-
bution in our experiments since WL graph feature needs a Figure14showstheeasymapsofCBS,similartothemaps
graphtransformationandseveraliterationsofhashtransfor- showninFigure3insection4inthemaintext.
mationwhichismorecomputationallyexpensive. Figure 15 shows the challenging and easy maps of
EECBS, similar to the maps shown in Figure 4 in section
4inthemaintext.
B ImplementationandComputeResource
Figure 15 shows the challenging and easy maps of PBS,
B.1 Implementation similar to the maps shown in Figure 5 in section 4 in the
maintext.
We implement CMA-MAE with Pyribs (Tjanaka et al.
2023). In our experiments, we use the open sources imple- 2https://github.com/Jiaoyang-Li/EECBS
mentationofConstraint-BasedSearch(CBS)1,ExplicitEs- 3https://github.com/Jiaoyang-Li/PBS
4https://github.com/Kei18/pibt2
1https://github.com/Jiaoyang-Li/EECBS 5https://github.com/AIRI-Institute/learn-to-followFigure 15: Map (a) and Map (b) are maps similar to repre-
Figure 17: Map (a) and Map (b) are maps similar to rep-
sentative maps with long corridors and one-tile spaces that
resentative maps with long corridors and one-entry spaces
EECBSpoorlyperformson.Map(c)andMap(d)aremaps
with many obstacles that PIBT poorly performs on. Map
similar to representative maps with large chunks of empty
(c) and Map (d) are maps similar to representative maps
spacewithevenlydistributedshortcorridorcomponentsthat
withlargechunksofemptyspaceandone-entryspaceswith
EECBSperformswell.
fewerobstaclesthatPIBTperformswell.
Figure 16: Map (a) and Map (b) are maps similar to repre-
sentative maps with many empty spaces between corridors
Figure 18: Map (a) and Map (b) are maps similar to repre-
thatPBSpoorlyperformson.Map(c)andMap(d)aremaps
sentativemapswithlongcorridorsandone-entryspacesLTF
similartorepresentativemapswithlongcorridorsthatPBS
poorlyperformson.Map(c)andMap(d)aremapssimilarto
performswell.
representativemapswithfewerobstaclesthatLTFperforms
well.
Figure 17 shows the challenging and easy maps of PBS,
similar to the maps shown in Figure 6 in section 4 in the
maintext. similar to the maps shown in Figure 7 in section 4 in the
Figure 18 shows the challenging and easy maps of PBS, maintext.Figure19:Tenmanually-designedmapswithlongcorridors.
Figure20:Tenmanually-designedmapswithmanyemptyspaces.
D Manually-designedMaps
Figure19showsthetenmanually-designedmapswithlong
corridors. We use these maps to validate the performance
of PBS, EECBS, and LTF on maps with long corridors in
sections4and5ofthemaintext.
Figure 19 shows the ten manually-designed maps with
chunks of empty space. We use these maps to validate the
performanceofPBSandEECBSonmapswithlargechunks
ofemptyspaceinsection5ofthemaintext.