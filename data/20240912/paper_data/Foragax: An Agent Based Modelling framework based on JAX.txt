Foragax: An Agent Based Modelling framework based on JAX
SiddharthChaturvedi1,AhmedEl-Gazzar1, and MarcelvanGerven1
1Departmentofmachinelearningandneuralcomputations,DondersInstituteforBrain,Cognitionandbehaviour,RadboudUniversity,Netherlands.
siddharth.chaturvedi@donders.ru.nl
Abstract foraging environment, thus natural foraging is inherently a
multi-agent and a highly complex activity to model. The
Foragingforresourcesisaubiquitousactivityconductedby complexityarisesfromthefactthateachagent’sstateisde-
living organisms in a shared environment to maintain their pendent on every other agent’s actions. As the number of
homeostasis.Modellingmulti-agentforagingin-silicoallows
agentsincreases, theactivitybecomeschallengingtosimu-
ustostudybothindividualandcollectiveemergentbehaviour
inatractablemanner. Agent-basedmodellinghasprovento lateinsilico. Thislackofbiologicalrealismintermsofthe
beeffectiveinsimulatingsuchtasks,thoughscalingthesim- number of agents simulated may lead to incongruities be-
ulationstoaccommodatelargenumbersofagentswithcom- tweentheoriesderivedbyobservingforaginginnatureand
plexdynamicsremainschallenging.Inthiswork,wepresent
thebehaviourobservedinsimulations. Foragax, a general-purpose, scalable, hardware-accelerated,
multi-agentforagingtoolkit.LeveragingtheJAXlibrary,our Inthiswork,wearemotivatedtoequipmodellersoffor-
toolkitcansimulatethousandsofagentsforaginginacom-
aging tasks with the ability to simulate a high number of
monenvironment,inanend-to-endvectorizedanddifferen-
agents (in the magnitude of 1e3) together in one environ-
tiable manner. The toolkit provides agent-based modelling
tools to model various foraging tasks, including options to ment as a multi-agent setup. To this effect, we introduce
design custom spatial and temporal agent dynamics, con- them to Foragax. At the backend, Foragax is based on the
trolpolicies, sensormodels, andboundaryconditions. Fur- JAX library (Bradbury et al., 2018) and is able to simu-
ther,thenumberofagentsduringsuchsimulationscanbein-
late the foraging task in a massively parallel sense by us-
creasedordecreasedbasedoncustomrules. Thetoolkitcan
ing end-to-end vectorization approach. This is enabled by
also be used to potentially model more general multi-agent
scenarios.1 just-in-time compilation and automatic vectorization (AV)
of NumPy functions as provided by JAX. Crucially, at the
frontendForagaxprovidesageneralagent-basedmodelling
Introduction
(ABM)interfacefoundinothersimilarcomputationaltoolk-
Foraging is one of the most ancient and critical behav- its like (Datseris et al., 2022; Masad et al., 2015). This in-
ioral optimization problems that all living organisms need terface can be used to initialize agents with custom spatial
to solve in order to survive. It involves the active search andtemporaldynamics,equipthemwithcustompoliciesto
andcollectionofresourcesfromthesurroundings(Wispin- update their states, and manipulate a set of agents by sort-
ski et al., 2022). From the simplest bacteria (Guo et al., ing, selecting, adding, or deleting agents based on custom
2021; Chen et al., 2011) to highly social primates (Blan- criteria.
chard and Hayden, 2015), the instinct to forage efficiently
ABMisapowerfultoolformodelingandsimulatingdif-
hasbeenprevalentacrossallstagesofevolution. Withinthe
ferent kinds of complex adaptive systems like the spread
realm of foraging theory (Pyke, 2019), a variety of models
of disease (Perez and Dragicevic, 2009), flocking mod-
haveemerged,eachofferinginsightsintodifferentfacetsof
els (Quera et al., 2010), and scheduling ships (Yin et al.,
thisbehavior. Thesemodelsnotonlyincludethedynamics
2011) among others. In principle, Foragax can be used as
offoragingbutalsoshedlightonbroaderphenomenasuch
atooltosimulatesuchagent-basedsystems. However,For-
as the influence of an organism’s internal energy reserves
agax was developed with a focus on non-episodic simula-
onitsresponsivenesstovaryingrewards,ortheoptimalcir-
tionsofalargenumberofagentsforaginginacommonen-
cumstances dictating when exploration should or shouldn’t
vironmentwhileprotectingtheirhomeostasis,whereinnon-
be pursued (Stephens and Krebs, 1986). In nature, organ-
episodic refers to not opting to reset the environment and
ismsthatareincloservicinitytoeachothershareacommon
agent states while the simulations are running. Such simu-
1Foragax will be available at https://github.com/ lationsdisplayfluctuationsinpopulationsizesandmaylead
i-m-iron-man/Foragax.git totheemergenceofinterestingbehaviourthathintatopen-
4202
peS
01
]AM.sc[
1v54360.9042:viXraendedadaptaions(Hamonetal.,2023). Webelievethatour
toolkitcanaidsuchexperimentsbysignificantlyshortening
thecomputationaltimerequiredtosimulatethem.
Foragax
Foragax is based on five main levels of abstraction in the
formofclasses,namelypolicy,agent,agent-set,learningal-
gorithms and tasks. In the toolkit, a policy is represented
byacollectionofstatevariablesandparametersthatisused
by an agent to produce actions in the environment. Fora-
gax provides a basic protocol to initialize and manipulate
suchpoliciesthatcanbeformalizedbyusingvariousmodels
like Wilson-Cowan models (Sussillo, 2014), recurrent neu-
Figure 1: Dispersion of 600 agents (depicted in blue)
ralnetworksormulti-layerperceptrons. Thesepoliciescan
among600resources(depictedinred),simulatedusingFor-
be modelled as being deterministic or stochastic in nature.
agax.
Next, an agent is represented again by a collection of state
variables and parameters. Foragax enables the modeller to
installcustomtemporalandspatialdynamicsinanagentthat
by
canbemanipulatedbyitspolicy. Eachagentalsomaintains (cid:88)
s˙ =ϵs −αs2 − w(x ,x ) (1)
a unique index and an active status which is set to 1 if the n n n n m
agent is active and 0 otherwise. A collection of agents is m∈M
termedasanagent-set.Alltheagentsinthesetshareacom- whereϵandαarethegrowthanddecayratesoftheresource
mon structure (shape and size) of state variables, parame- respectivelyandw(x ,x )representsafunctionthatisin-
n m
ters and policy, and a common protocol of updating their versely proportional to the difference between the position
dynamics. Foragaxprovidesthefunctionalityofmanipulat- x of the nth resource and position x of the mth agent.
n m
ing this set by selecting, sorting, adding or deleting agents The positions of the agents x and their velocity x˙ are
m m
fromthesetwithoutgivinguptheJITandAVfeaturespro- outcomesofadoubleintegratormodelsuchas
videdbyJAX.Thisisdonebyzero-paddingthedatastruc-
(cid:20) (cid:21) (cid:20) (cid:21)
turesinvolvedinthesimulationssothattheirshapesremain 0 1 0
q˙ = q + u (2)
constantduringthemanipulationoftheset. Suchmanipula- m 0 0 m 1 m
tionsthusrequiretheknowledgeaboutthemaximumsizeof
thedatastructuresinvolvedbeforehand. Thelearningalgo- whereq = [x , x˙ ]T andu ∈ Ristheaccelerationin-
m m m m
rithms provide a set of algorithms that can be employed to puttothemodel. Theaccelerationistheaverageofalinear
tunethepolicyandagentparametersgivenaforagingtask. readout, from a randomly initialized recurrent neural net-
Intheinitialiterationweimplementalgorithmsthatarepri- work based on a rate-based neural population model of 50
marilybasedonneuro-evolutionaryapproaches(Tangetal., neurons.
2022) but we plan to extend to vectorized implementation
ofothergradient-basedapproacheslikereinforcementlearn- Conclusion
ing(Luetal.,2022). Finally, thetasksallowsmodellersto
With the development of the first iteration of Foragax, we
designaforagingenvironmentusingcustomboundarycon-
bringthesimulationoflargemulti-agentsimulationsoffor-
ditionsandwallplacements,whichcanbedetectedbasedon
agingbehaviourusingPythonwithinreach.Withthistoolkit
ray-castingalgorithms.
we hope to provide a useful tool to the community which
canshedlightonhowcomplexbehaviouremergesasnatu-
Results
ralagentscompeteforresources. Thistoolkitcanbefurther
usedtobenchmarkdifferentlearningalgorithmsanddevelop
Wesimulated1000agents,withtheirpoliciesmodelledus-
analysistechniquesformassiveagentbasedmodels.
ingarate-basedneuralpopulationmodelof50neuronseach,
foragingfrom300patchesofresources,for1millionsteps.
Acknowledgement
With Foragax the simulations were completed in under 40
minutesonaclustercomputer.Figure1depictsoneframeof ThispublicationispartoftheprojectDutchBrainInterface
aForagaxsimulationforM = 600agentsforagingamong Initiative(DBI2)withprojectnumber024.005.022ofthere-
N = 600resources. Inthissimulation, thevalues ofthe searchprogrammeGravitationwhichis(partly)financedby
n
nth resource obeys a Lotka-Volterra based dynamics given theDutchResearchCouncil(NWO).References
Blanchard,T.C.andHayden,B.Y.(2015). Monkeysaremorepa-
tientinaforagingtaskthaninastandardintertemporalchoice
task. PloSone,10(2):e0117057.
Bradbury, J., Frostig, R., Hawkins, P., Johnson, M. J., Leary,
C., Maclaurin, D., Necula, G., Paszke, A., VanderPlas, J.,
Wanderman-Milne,S.,andZhang,Q.(2018). JAX:compos-
abletransformationsofPython+NumPyprograms.
Chen,H.,Zhu,Y.,Hu,K.,etal.(2011).Adaptivebacterialforaging
optimization.InAbstractandAppliedAnalysis,volume2011.
Hindawi.
Datseris, G., Vahdati, A. R., and DuBois, T. C. (2022).
Agents.jl: a performant and feature-full agent-based mod-
elingsoftwareofminimalcodecomplexity. SIMULATION,
0(0):003754972110688.
Guo,C.,Tang,H.,Niu,B.,andLee,C.B.P.(2021). Asurveyof
bacterialforagingoptimization. Neurocomputing,452:728–
746.
Hamon, G., Nisioti, E., and Moulin-Frier, C. (2023). Eco-
evolutionary dynamics of non-episodic neuroevolution in
largemulti-agentenvironments. InProceedingsoftheCom-
panion Conference on Genetic and Evolutionary Computa-
tion,pages143–146.
Lu,C.,Kuba,J.,Letcher,A.,Metz,L.,SchroederdeWitt,C.,and
Foerster,J.(2022).Discoveredpolicyoptimisation.Advances
inNeuralInformationProcessingSystems,35:16455–16468.
Masad,D.,Kazil,J.L.,etal.(2015). Mesa: Anagent-basedmod-
elingframework. InSciPy,pages51–58.Citeseer.
Perez,L.andDragicevic,S.(2009). Anagent-basedapproachfor
modeling dynamics of contagious disease spread. Interna-
tionaljournalofhealthgeographics,8:1–17.
Pyke, G. (2019). Optimal foraging theory: an introduction. In
Encyclopedia of animal behavior, pages 111–117. Elsevier
AcademicPress.
Quera,V.Q.J.,SalvadorBeltra´n,F.,andDoladoiGuivernau,R.
(2010). Flockingbehaviour: Agent-basedsimulationandhi-
erarchicalleadership.Jasss-TheJournalofArtificialSocieties
andSocialSimulation,2010,vol.13,num.2,p.8.
Stephens, D. W. and Krebs, J. R. (1986). Foraging theory, vol-
ume1. Princetonuniversitypress.
Sussillo, D. (2014). Neural circuits as computational dynamical
systems. Currentopinioninneurobiology,25:156–163.
Tang, Y., Tian, Y., and Ha, D. (2022). Evojax: Hardware-
accelerated neuroevolution. In Proceedings of the Ge-
neticandEvolutionaryComputationConferenceCompanion,
pages308–311.
Wispinski,N.J.,Butcher,A.,Mathewson,K.W.,Chapman,C.S.,
Botvinick, M. M., and Pilarski, P. M. (2022). Adaptive
patchforagingindeepreinforcementlearningagents. arXiv
preprintarXiv:2210.08085.
Yin, X. F., Khoo, L. P., and Chen, C.-H. (2011). A distributed
agent system for port planning and scheduling. Advanced
EngineeringInformatics,25(3):403–412.