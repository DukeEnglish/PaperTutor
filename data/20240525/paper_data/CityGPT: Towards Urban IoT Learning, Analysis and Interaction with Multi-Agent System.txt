1
CityGPT: Towards Urban IoT Learning, Analysis
and Interaction with Multi-Agent System
Qinghua Guan, Jinhui Ouyang, Di Wu Member, IEEE, Weiren Yu, Member, IEEE
Abstract—The spatiotemporal data generated by massive sen- analysis tasks, such as urban transportation [4]–[6], sensor
sors in the Internet of Things (IoT) is extremely dynamic, networks[7],andmeteorology[8],underscoresitspivotalrole.
heterogeneous, large scale and time-dependent. It poses great
Visualization serves to streamline the comprehension process
challenges (e.g. accuracy, reliability, and stability) in real-time
by furnishing an intuitive portrayal of data, thereby augment-
analysis and decision making for different IoT applications. The
complexityofIoTdatapreventsthecommonpeoplefromgaining ing the efficiency of knowledge generation [9]. Nevertheless,
a deeper understanding of it. Agentized systems help address whenconfrontedwithintricatedatasets(e.g.,high-dimensional
the lack of data insight for the common people. We propose a data [10], graphical data [11], heterogeneous data [12], etc.)
generic framework, namely CityGPT, to facilitate the learning
or engaged in sophisticated analysis endeavors (e.g., data
and analysis of IoT time series with an end-to-end paradigm.
prediction [13]), supplementary aid for human interpretation
CityGPTemploysthreeagentstoaccomplishthespatiotemporal
analysis of IoT data. The requirement agent facilitates user remains imperative.
inputs based on natural language. Then, the analysis tasks With the widespread adoption of deep learning, Convolu-
are decomposed into temporal and spatial analysis processes, tional Neural Networks (CNNs), Recurrent Neural Networks
completed by corresponding data analysis agents (temporal and
(RNNs),andTransformermodelspossessinherentadvantages
spatialagents).Finally,thespatiotemporalfusionagentvisualizes
in spatiotemporal data analysis compared to traditional meth-
the system’s analysis results by receiving analysis results from
data analysis agents and invoking sub-visualization agents, and ods, owing to their hierarchical feature learning capabilities
can provide corresponding textual descriptions based on user [14]–[16]. In contrast to conventional approaches, these deep
demands. To increase the insight for common people using learningmodelsexhibitrobustautomaticfeatureextractionand
our framework, we have agnentized the framework, facilitated
function approximation abilities, enabling them to automat-
by a large language model (LLM), to increase the data com-
ically analyze and extract features from spatiotemporal data
prehensibility. Our evaluation results on real-world data with
different time dependencies show that the CityGPT framework and analyze their spatiotemporal information [17]. However,
can guarantee robust performance in IoT computing. in the field of spatiotemporal data visualization, the challenge
lies in the rational application of these data analysis models
Index Terms—Transportation Forecasting; AI Agent System;
Spatial-temporal Data. andthepresentationofdatainformationineffective,clear,and
interactive visual forms. The latest advancements in Artificial
Intelligence(AI)andNaturalLanguageProcessing(NLP)have
I. INTRODUCTION
ushered in a promising new era. Large-scale language models
TheconceptofIoTwasfirstintroducedbyProfessorKevin such as ChatGPT demonstrate remarkable common sense,
Ashton in the 1990s [1]. The IoT possesses the capability reasoning, and planning capabilities [18]. Natural language
of automatic organization, information sharing, data, and re- interfacesforvisualizationcangeneratevisualresultsforusers
source management, enabling it to respond to and take action without the need for programming or technical construction,
onenvironmentalconditionsandchanges.Inrecentyears,with providing a flexible and intuitive means of data interaction.
the rapid development of emerging technologies such as big In response to the above problems and challenges, we
dataandartificialintelligence,thescaleandapplicationofthe propose CityGPT, a spatial-temporal agent framework for
IoT have expanded rapidly. Analyzing IoT data can help us IoT data learning and analysis with adaptive neural network
better understand and grasp various situations and changes in structures.ThesystemdiagramisshowninFig.1.Theprimary
theIoTenvironment.Throughtheanalysisoflargeamountsof contributions of this paper are as follows:
sensordata,real-worldstatesandtrendscanbemonitoredand
• DeepLearningAnalysisofTemporalAttributesinIoT
evaluated in real time, allowing for the timely identification
Data. We propose a deep learning model that combines
of issues and corresponding actions [2], [3]. However, certain
cross-attention mechanisms with GridLSTM networks to
characteristicsofIoTdataposechallengestoitsanalysis,such
predictfeaturesspecifictoIoTdata.Moreover,addressing
as its large-scale volume, diverse dimensions, and complex
the challenges of parameter tuning complexity and high
interrelationships among these dimensions.
user experience requirements associated with deep learn-
In the realm of extensive, diversified, and intricate IoT
ingmodels,thisstudyemploysparallelgeneticalgorithms
data, data visualization emerges as an indispensable ana-
(PGA) to automatically optimize and configure model
lytical instrument. Its widespread application in IoT data
hyperparameters, thereby reducing the cost of model
learningandenhancingtheefficiencyandspeedofmodel
J.Ouyang,Yi.Zhu,XiangYuan,andD.WuarewiththeKeyLaboratory
for Embedded and Network Computing of Hunan Province, Hunan Univer- deployment.
sity, Changsha, Hunan 410082, China (e-mail: {oldyoung, zyj1936013472, • Graph-BasedSimilarityAnalysisofSpatialAttributes
yuanxiang, dwu}@hnu.edu.cn). W. Yu is with the Department of Com-
in IoT Data. To comprehensively exploit the spatial
puter Science, University of Warwick, Coventry CV4 7AL, UK (e-mail:
weiren.yu@warwick.ac.uk). characteristics of IoT data, this paper enhances the
4202
yaM
32
]IA.sc[
1v19641.5042:viXraFig. 1: User is using CityGPT to interact.
CoSimHeat graph similarity calculation algorithm, ex- stamps. Data streams are measurements of continuous
tending its application from single-graph node compu- physical phenomenon. The spatial-temporal dynamics
tation to multi-graph node computation. By treating spa- within data streams are inherent.
tiotemporal data as a type of graph data, this algorithm • Time Sensitive. The collected data should be processed
calculates inter-regional similarity of geographical areas with low latency to ensure their validity. For example,
involvedinIoTspatiotemporaldata,effectivelyextracting if a sensor device is running abnormally, it needs to
spatial feature relationships between different regions. be immediately detected to avoid affecting the normal
• AIAgentSystemforVisualizationofIoTDataAnaly- operation of other devices.
sis.WeproposeanAIagentsystemthatintegratesalarge
language model. This system comprises four agents: text Challenges:TheseIoT-specificfeaturesposesgreatchallenges
agent, temporal agent, spatial agent, and spatiotemporal on accuracy, reliability and stability. Therefore, a unified
fusion agent. By leveraging the large language model to learning and analysis framework is expected to be deployed
parseuserinputsintotaskscomprehensibletothesystem to address these challenges.
and dispatching them to the corresponding agents, IoT
data analysis and visualization are realized.
B. AI Agent System
II. BACKGROUNDANDMOTIVATION
A. IoT Time Series
The rapid development of AI agents has facilitated the
Atimeseriesisasequenceofnumbersinchronologicalor- transition of machine learning from the primary theoretical
der.Timeseriesdatageneratedbymassivesensorsisbecoming research stage to the practical application stage. This revolu-
the most widespread in IoT computing. Time dependency is tionary advancement has facilitated the IoT system to evolve
a very important feature for the IoT data, which has a great from a paradigm that uses mathematical tools to analyze
influence on sequential learning and analysis [19]–[21]. For time series data to a collaborative framework that integrates
example, the data at the current time point is likely to be various functions. Recent advances in large-scale language
relatedtoaprevioustimepointoratimepointinthelongpast. models (LLMs) may provide an opportunity to help with
Thisiscalledshort-termandlong-termtimedependency[22]. interaction anxiety [23], [24]. These generative models have
It is necessary to design a feasible method to make good use the ability to effectively model a wide range of perspectives,
of this feature for IoT applications, considering the traditional roles,andexpertiseinagivendomain.Nowadays,LLMshave
time series approaches have inefficiency in processing short- emerged as a potent text-to-task agent to empower systems;
term dependency and long-term dependency at the same time. for instance, Zhang et al. [25] integrated ChatGPT with a
IoT Time Series Features: The IoT time series presents traffic prediction framework that enables users to use text and
specific features: interactwithtrafficsystems.Lietal.[26]promoteautonomous
collaboration between exchange agents and delve into their
• Large Scale. Massive sensor data are gathered by dis-
”cognitive” processes, in order to study cooperative behavior
tributed IoT devices. There are plenty of sensor data
and the capabilities of multi-agent systems.
generated all the time.
• Heterogeneous. There are a variety of data acquisition Challenges:However,intherealmofIoT,thebiggestproblem
devices so that the types of collected data are also is the huge amount of data and the complex structure of
different in the IoT. time series data, which makes it difficult to agentize in a
• High Dimensional. Sensor data gathered by devices that generalized way for systems. Combining high performance
areplacedatgeographicallocationsarelabeledwithtime and generalizability for specific tasks seems elusive.C. Opportunities of AI Agent System for IoT
Due to the constraints of limited bandwidth and computation
resources,manyIoTapplicationsneedtopreloadtheIoTdata.
MotivationforCityGPT:Thereareapplicationandinteraction
needs for designing AI agents for IoT learning and analysis.
Application Needs: The agile platform is expected to inte-
grate the capabilities of connectivity, storage, computing and
analysisasanend-to-endsolution[27],[28].Theparadigmof
end-to-end learning emerges to meet such requirements [29].
It is a technique in the context of AI and ML where the
model learns all the steps between the initial input phase and
Fig. 3: Attentional Grid LSTM model for prediction on IoT time
the final output result. This is a deep learning process where
series.
all of the different parts are simultaneously trained instead of
sequentially. For most deep learning models, the complexity
Requirement Agent. The requirement agent allows users to
of model construction, unreasonable model hyperparameter
input demands in natural language by integrating a large
settings,andlongmodeltrainingprocessbringgreatobstacles
language model (such as GPT). This agent parses textual
tothetrainingprocess,whichgreatlyaffectsthepromotionand
inputsintotasksthatcanbeexecutedbyvarioussystemagents
application of the learning model.
and distributes these tasks.
Model Interaction Needs: Introducing complex models in-
Analysis Agent. The analysis agent is divided into temporal
creases the complexity of interaction, which is unfriendly
and spatial agents. The temporal agent utilizes a GridLSTM
to the wider use of the system, narrowing the range of
network model incorporating cross-attention mechanisms to
applications.ForasystembuiltforIoTconsideration,weneed
predict and analyze features of IoT data. To enhance model
to consider the interactivity of functions inside the system.
training efficiency and reduce task execution time, this study
Agentizing functions as separated AI for better functional
employsparallelgeneticalgorithmstooptimizeandaccelerate
clarityandintroducingtextinteractiontooptimizethesystem.
the configuration of model hyperparameters, thereby decreas-
Challenges and Solutions: In our paper, we employ Au-
ing model configuration time. The spatial analysis agent uti-
toML as one of the agents in CityGPT to tackle time series
lizes an extended CoSimHeat to compute spatial similarities
challenges. Hyperparameter optimization (HPO) is crucial in
of IoT data and employs clustering analysis to extract spatial
model training and significantly impacts model performance.
information from the data.
As part of AutoML, HPO is integrated into the training,
Spatiotemporal Fusion Agent. The spatiotemporal fusion
validation, and testing phases to provide adaptive capabilities
agent is responsible for presenting the results of user-inputted
within the unified framework for Learning and Analysis of
task analyses to users in visual form. This agent receives
IoT time series. Additionally, our system includes temporal,
analysis result data from the temporal and spatial analysis
spatial,andspatiotemporalagentstoenhanceinteractivityand
agents and, by invoking the corresponding sub-visualization
broaden application scope.
agents, showcases the system’s final analysis results.
III. SYSTEMOVERVIEW
IV. DESIGN
The IoT data analysis framework proposed in this paper
A. Temporal Agent
is depicted in Fig. 2. The upper section illustrates the user
1) Prediction Model Design: In order to predict the char-
interactioninterface,encompassinguserrequirementinputand
acteristicsofspatiotemporaldatainIoT,thispaperproposesa
visualization functionality for displaying results. The lower
GridLSTMnetworkmodelbasedonthecross-attentionmech-
section delineates the primary components of the system: the
anism to analyze short-term and long-term time dependency.
requirement agent, which translates user inputs in natural lan-
The Attentional Grid LSTM consists of two stages: Encoder
guageintoexecutabletasksforthesystem;theanalysisagent,
Stage and Decoder Stage, as illustrated in Fig. 3.
comprising temporal and spatial agents, enabling analysis of
As shown in Fig. 4, it is a Grid LSTM network composed
IoT data from both temporal and spatial dimensions; and the
of four cells fully connected by recurrent connections, with
spatiotemporal fusion agent, responsible for visualizing the
the horizontal axis representing the time dimension and the
results of data analysis tasks parsed by the requirement agent.
vertical axis representing the depth dimension. Each cell of
the lower hidden layer in the network is connected to the cell
inthehigherhiddenlayerthroughthefeed-forwardconnection
in both time and depth dimension. Only the current state and
some of the previous states are needed to train the network.
Specifically, the input in the time dimension corresponds to
a time series, and each hidden layer’s cell corresponds to a
time step of the time series. For the output of the current time
step, it takes the data from different time steps into account
andevaluatestheirimpactatthenexttimestep.ForeachGrid
Fig. 2: System overview. LSTM cell, it controls the input, storage and output of dataDepth into the same Grid LSTM network for decoding. Finally, the
decoded information is fed to the fully connected network
layer and then the final output yˆ is obtained.
T
Grid LSTM Grid LSTM 2) Hyperparameter Optimization using PGA: The PGA
algorithm presented in this paper runs in three steps: initial-
ization, iteration, and termination. The specific execution flow
is depicted with algorithm explanation in Algorithm 1. In the
Grid LSTM Grid LSTM initialization phase (lines 1–2) in Algorithm 1, we will divide
thepopulationandencodeindividuals.Thealgorithmwillfirst
divide the populations equally according to the set numbers.
Time Since the hyperparameters involved in this paper are all inte-
(a)GridLSTMCell (b)GridLSTMNetwork gers,weusebinary-encodedindividuals.Thehyperparameters
Fig. 4: Grid LSTM cell and network structure.
to be optimized are stored as individuals in subpopulations by
a fixed-length string of binary numbers.
bythegatemechanisms.Thegateunitsofcurrentcellreceive Algorithm 1: Parallel Genetic Algorithm
the output of previous time step generated at previous hidden
Input : Population size m, Number of subpopulations N,
layer(suchasmt−1)andtheinputofcurrenttimestepsample,
1 Number of algorithm iterations K 1, Number of
andthendeterminetheoutputofcurrenthiddenlayer(suchas subpopulation iterations K , Fitness function F
2
mt), which will be used at the next time step to generate the Output: Global optimal solution Yby
1
output of next hidden layer (such as mt+1). As for the depth 1 generate initial population of m chromosomes yi,
1 (i=1,2,...,m)
information process along the vertical dimension, it follows
2 delineate subpopulations, the number of individuals in the
the similar workflow as the time dimension; the gate units of subpopulation n= m
currentcellprocessthetimeseriesfromprevioushiddenlayer 3 for k 1 :=1,2,··· ,KN 1 do
(suchasml 2−1)andgeneratetheoutputofcurrenthiddenlayer 4 for k 2 :=1,2,··· ,K 2 do
(such as ml); the output of next hidden layer (such as ml+1) 5 calculate the value of the fitness function for all
is derived a2 ccordingly. 2 individuals f ki
2
=F(yi), (i=1,2,...,n)
To improve the prediction performance of IoT time series 6 select individuals O based on f ki 2
7 complete crossover among O
data, our CityGPT framework combines the Grid LSTM
8 complete variation among O, generate new
network with an attention mechanism, which assigns different individuals O′
weightstodifferentfeatureseriesintheinputlayerandselects
9
yi ←O′
themostrelevantfeaturesaccordingtotheweights.Thedetails
10 perform inter-subpopulation exchange
of each stage are described below:
11 calculate the value of the fitness function of the individual
Encoder Stage. Let x be a time series of length T: after the iteration fi =F(yi)
12 select the optimal individual according to f′,
F(Yby)=min{fi}
x={x ,x ,··· ,x }, with x =(x1,x2,··· ,xN)⊤ ∈RN (1)
1 2 T i i i i 13 return Yby
where each x (i=1,2,··· ,T) has N features (dimensions),
i
and xj corresponds to the j-th feature of x at time i. Intheiterativephase(lines3–10),wewillsetupthefitness
i function, selection techniques, crossover operators, mutation
For each time series x, we first define the attention weight
operators,andsubgroupexchangetoachievetheiterativesolu-
of x as
tionofthealgorithm.Thefitnessfunctionreflectsthedegreeof
superiority or inferiority of the solution corresponding to this
α={α 1,α 2,··· ,α T}, with α i =(α i1,α i2,··· ,α iN)⊤ ∈RN (2) individual. Therefore, we take the prediction error RMSE of
whereeachαj denotestheweightofthej-thfeatureattimei. the deep learning model corresponding to the hyperparameter
i
valueofthisindividualasthefitnessfunctionofthisindividual
Then, integrating the attention weight α to the time series
(lines 5). Selection techniques refer to the selection of good
x, we generate new weighted time series xˆ as follows:
individualsfromthepopulationandtheeliminationofinferior
individuals (lines 6). We choose the tournament selection
xˆ={xˆ ,··· ,xˆ }, with xˆ =(α1x1,··· ,αNxN)⊤ ∈RN (3)
1 T i i i i i technique [30]. This approach randomly selects a subset of
Finally, we obtain the hidden state h at time t and the individualsfromthesubpopulationandthenidentifiesthebest
t
hidden state h in depth. This step can be rewritten as a individuals based on their fitness function.
d
function: Following selection, individuals undergo uniform crossover
andlipbitmutation(lines7–8).Subsequently,newindividuals
hi,hi =GridLSTM(xˆ ) (∀i=1,2,··· ,T) (4) are generated within each subpopulation, with the least fit
t d i
individualsremoved(line9).Thisprocesscontinuesiteratively
Decoder Stage. We leverage Grid LSTM based on the cross until the specified number of generations is reached, at which
attention model to decode the output information from the point subpopulation exchange occurs (line 10). We employ a
encoder. We use the encoder outputs h and h as inputs to sub-groupmigration methodproposed by Arkhipovet al.[31]
t d
the cross attention module to extract important information to facilitate this exchange. Initially, individuals are selected
from the hidden states. The extracted information is then fed based on fitness results and exchanged between processes.nodecomputation.WeapplyboththeoriginalCoSimHeatand
the extended similarity calculation algorithm to the task of
spatiotemporal data spatial feature analysis.
Define two graphs, G and G , with nodes x and y
1 2
respectively. For node x in G , O and I denote its out-
1 x x
neighbourandin-neighboursets,while|O |and|I |represent
x x
its respective out-degree and in-degree. Similarly, for node
y in G , O and I represent its out-neighbour and in-
2 y y
(a)SpatialsimilarityofApril (b)SpatialsimilarityofJune neighbour sets, and |O | and |I | denote its out-degree and
Fig. 5: Example of spatial similarity. y y
in-degree.LetT (t)denotetheaveragetemperatureofnodes
x,y
x and y at time t. Now, during the time interval [t,t+∆t],
Then, individuals selected in the previous process are passed consider the heat diffusion from nodes x and y to their
to the next, and the current process receives individuals neighboring nodes. The heat generated by x and y is denoted
from the previous one. Finally, best-fit individuals from the as H+(T ,t,∆t), while the heat received from other nodes
x,y
current subgroup form a new subgroup. This iterative process is denoted as H−(T ,t,∆t). Assuming equal heat diffusion
x,y
optimizes hyperparameters in the PGA (lines 11–12). capability for each node to its neighbors, the heat change for
After the number of iterations reaches the set number, the the node pair (x,y) during ∆t depends on three components:
most suitable individual among all subpopulations is selected, (1) the heat received by node x from its neighbors, (2) the
and the iteration is terminated. The hyperparameters repre- heat received by node y from its neighbors, and (3) the heat
sented by this individual are decoded and set as the final diffusion between the node pair (x,y). Based on this, the
optimization result of the PGA as the hyperparameters of the equation for the heat change of the node pair at time ∆t can
deep learning model. be formulated as follows:
B. Spatial Agent T (t+∆t)−T (t)=
x,y x,y
Necessity of Spatial Agent. We initially used a similarity (cid:88) H x− ′(T x′,y,t,∆t)+ (cid:88) H y− ′(T x,y′,t,∆t)−H+(T x,y,t,∆t)
algorithmtoclusterthecitiesusingapollutant-relateddataset, x′∈Ix y′∈Iy
inordertoensureitseffectivenessinestimatingspatialsimilar- (5)
ity. Similarity results of the April and June 2018 are depicted
Regarding the last term of Eq. (5), it can be simplified to
in Fig. 5. In the figure, each dot represents a city, and the
Eq. (6) by introducing a damping factor λ. This implies that
numberoflinesconnectedtoeachdotrepresentsthenumberof
the heat diffusion of node pairs within the time interval t is
othercitiesthataresimilartothatcity,whichreflectsthecity’s
directly proportional to the temperature T of the node pair
x,y
levelofimportanceinthenetwork.Inthisgraph,thenamesof
andthediffusiontime.Thisproportionalityfactorλisdefined
citiesconnectedtomorethan15citiesarelabeled.Bylooking
to characterize the degree of difficulty of heat diffusion.
at the changes in the graph, we can see that the key cities in
the overall city network have changed over time. In April, H+(T ,t,∆t)=λT (t)·∆t (6)
x,y x,y
the key cities include Yichang, Bengbu, Xuzhou, and Jinan.
However,inJune,allkeycitiesexceptYichanghavechanged. Based on the preceding assumption that each node dis-
This suggests that the structural center of gravity of the entire tributes heat equally to its neighboring nodes, it follows that
citynetworkhaschangedovertime.Thischangeisreflectedin the neighboring nodes of nodes x and y will evenly share
thedistributionofpollutantdata,showingthattherearespatial the heat propagated by the node pair (x,y). Conversely, the
differences in the distribution characteristics of pollutants at heat received by nodes x and y from their neighboring nodes
the same point in time. This reveals the necessity of using during the time interval ∆t can be expressed as Eq. (7) and
a similarity-based agent to capture spatial features in our Eq. (8):
framework.
catC ioo nS sim reH que ia ret. eI fn fet ch tie veer sa imo if laB rii tg yD ma et aa s, uc ro esun bt ale ss es dw oneb bia llp ip ol ni -- H−(T x′,y,t,∆t)= 2|Oλ x′|T x′,y(t)·∆t, x′ ∈I
x
(7)
scalenetworkstructures.Toefficientlycapturespatialfeatures,
itisimperativetoutilizeapromisinggraph-theoreticsimilarity λ
model that iteratively captures the notion that ”two different
H−(T x,y′,t,∆t)=
2|O
y′|T x,y′(t)·∆t, y′ ∈I
y
(8)
nodes are evaluated as similar if they are connected to sim-
Substituting Eqs. (6)–(8) into Eq. (5), the expression for
ilar nodes.”. In our framework, to effectively process spatial
the heat change of the node pair (x,y) becomes as shown in
features of IoT data, we use CoSimHeat, which focuses on
Eq. (9).
the structure information of graphs, to calculate the similarity.
Compared with CoSimRank [32], which depends on the ex-
istence of directly reachable edges at two nodes, CoSimHeat
T (t+∆t)−T (t)=
λ·∆t
(
(cid:88) T x′,y(t) +(cid:88) T x,y′(t)
−2T (t))
performance is better in IoT-related scenarios. x,y x,y 2
x′∈Ix
|O x′|
y′∈Iy
|O y′| x,y
CoSimHeat is a heat kernel graph diffusion model used (9)
to compute the similarity of individual nodes within a single According to calculus principles, as ∆t→0, Eq. (9) be-
graph [33]. Building upon this, our paper extends its applica- comes a differential equation with respect to the variable T
x,y
bility from a single graph to two graphs, enabling cross-graph , as shown below:dT (t) λ θ 1−θ
x d, ty = 2(M x,y(t)+N x,y(t)−2T x,y(t)) (10) T 0 = m 1·m 2d+ 1(d+ 2)T + n
S0
S 0 (16)
Then,tosimplifyEq.(15),wedefineEq.(17)andEq.(18).
M x,y(t)= x(cid:88)
′∈Ix
T |x O′,y x′( |t) ,N x,y(t)= y(cid:88)
′∈Iy
T |x O,y y′ ′( |t) (11)
Q=
λ
2[ATdiag(d+ 1)−1−I A] (17)
Thus, the heat diffusion differential equation for the node λ
P = [diag(d+)−1B−I ] (18)
pair (x,y) has been derived. By integrating the variations in 2 2 B
node similarity with this differential equation, the similar-
whereI andI aretheidentitymatricesofAT andB.The
ity matrix among nodes within the graph can be deduced. A B
resulting differential equation is shown in Eq. (19).
Given that this differential equation is a first-order ordinary
differentialequationwithmultiplesolutions,toensuresolution dT t =QT +T P (19)
uniqueness,wedefinethesolutionofthisdifferentialequation dt t t
at time t=0 as illustrated in Eq. (12). Furthermore,bycombiningwiththeknowledgeofdifferen-
tialequations,thesolutionexpressionforthesimilaritymatrix
θ 1−θ (cid:26)1,((x,y)∈S 0) can be obtained as Eq. (20). Thus, based on the adjacency
T (0)= (|O |·|O |)+ · (12)
x,y m 1·m 2 x y n S0 0,((x,y)∈/ S 0) matrices, out-degree matrices, edge counts of graphs G 1 and
G , as well as the initial relationships between nodes in the
wherem andm representthenumberofedgesingraphsG 2
1 2 1 two graphs, the similarity between any pair of nodes in these
and G , respectively. S denotes the set of node pairs in the
2 0 graphs can be calculated. This similarity matrix can then be
two graphs known to have relationships, with n representing
constructed for analyzing the spatial distribution similarity
the number of node pairs in this set. The hyperparameter θ,
across graphs.
ranging from 0 to 1, is a weighting factor used to balance the
influence of the first and second terms in the equation.In the
S =eQ·T ·eP where eQ
=(cid:88)∞ Qn
(20)
experiments of this paper, we set θ =0.5. 0 0 n!
n=0
The first term of the equation signifies the similarity of
features between nodes, indicating that nodes with similar
C. Spatiotemporal Fusion Agent
features tend to be alike. Specifically, it is assumed that
nodes with higher out-degree centrality are more likely to By integrating a large language model, the spatiotemporal
exhibit similarity. The second term represents the ”distance” fusion agent can decompose IoT data analysis tasks based on
similarity, implying that nodes requiring fewer intermediate userinputandpresenttheresultsoftemporalandspatialagents
nodes to connect are more similar. At the initial time step, in a visual format to help users understand and analyze IoT
the most similar node pairs can be directly obtained from S data.Theexecutionprocessofthisagentgenerallyconsistsof
0
containing known inter-graph node relationships. the following key steps:
Substituting |O | = [diag(d+)−1] into Eq. (11), we (1) Taskplanning:Acceptingtaskdistributionfromtheafore-
x′ x′,x′
obtain Eq. (13), where A is the adjacency matrix of graph mentioned agent, calling upon different agents to further
G , diag(d+) is the out-degree matrix of graph G , and analyze the tasks.
1 1 1
T represents the similarity matrix composed of nodes from (2) Sub-agentexecution:Invokingdifferentsub-agentstoper-
t
graphs G and G . form various visualization tasks.
1 2
(3) Result output: Presenting the results of sub-agents or the
M (t)=
(cid:88) T x′,y(t) agent itself combined with user input prompts in textual
x,y
x′∈Ix
|O x′|
(4)
o Tr asv kis eu va al luf ao tr im onat as n.
dfeedback:Assessingtheoutputresults
=(cid:88)m1[A] i,y·[diag(d+ 1)−1] i,i·[T t] i,y (13) basedonuserfeedbackfromstepthree.Ifthetaskremains
i=1
=[AT ·diag(d+)−1·T ] unresolved, returning to steps one through three.
1 t x,y
Through this process, the visualization agent can integrate
Similarly, the calculation process of N (t) can be ex-
x,y large language models and IoT data temporal-spatial analysis,
pressedasEq.(14),whereB istheadjacencymatrixofgraph
reducing the threshold of data analysis and enhancing the
G , and diag(d+) is the out-degree matrix of graph G .
2 2 2 efficiency of data analysis.
Fig.6illustratesthebasiccapabilitiesofthespatiotemporal
N (t)= (cid:88) T x,y′(t) fusionagentinvisualizingdataduringtheprocessofhandling
x,y
y′∈Iy
|O y′| IoT data analysis tasks. In Fig. 6 (a), the user requests to
=(cid:88)m2 [B] ·[diag(d+)−1] ·[T ] (14) obtain the location information of all sensor nodes and to
j=1 x,j 2 j,j t x,j retrieve both real and predicted data for a specific node on
=[T ·diag(d+)−1·B] a particular day. When displaying the positions of sensor
t 2 x,y
nodes, the spatiotemporal fusion agent selects to call upon
Substituting Eq. (13) and Eq. (14) into Eq. (10), we obtain
a sub-agent for drawing scatter plots to execute the task
Eq. (15) and Eq. (16).
and outputs the corresponding scatter plot. When presenting
the predicted values for a single node, the agent distributes
dT λ
t = (AT·diag(d+)−1·T +T ·diag(d+)−1·B−2T ) (15) the task of drawing line plots to a sub-agent based on the
dt 2 1 t t 2 tShow me the geographical distribution of all sensors. Help me calculate the similarity of these sensors
basedonthepollutantdatacollectedbythesensors.
The scatter plot drawn Thisisaforce-directedg
bythesensorbasedon raphdrawnusingthesi-
thelatitudeandlongitude milaritybetweensensors
information is shown in calculatedbytheCoSim-
thepicture. Heat.
Showmetheairqualityconditionsatsensor37
Helpmeclusterthisdatabasedonforcedirected
todayandpredicttheairconditionsforsometime
graph.
inthefuture.
Thisistheairqualitydata This is the result of
curve of sensor 37 on spectral clustering of
2024-03-09. The blue line sensorsusingsimilarity.
isthetruevalue,thegreen Differentcategoriesare
lineisthepredictedvalue, representedbydifferent
and the yellow line is the colors.
predictederrorvalue.
(a)Conversation1 (b)Conversation2
Fig. 6: Example of spatiotemporal fusion agent task
prediction values obtained by the temporal agent analysis and Odense, Denmark, from 2013 to 2016. For analysis in this
outputs the final results. Fig. 6 (b) demonstrates the feedback section, we selected air pollution data and traffic flow data
functionofthespatiotemporalfusionagent.Initially,theagent collected by sensors during August and September 2014. The
displays the similarity relationships computed by the spatial pollution data includes 17,568 atmospheric pollution readings
agent as a force-directed graph according to the user’s initial collected at 217 observation points during these two months
request. Subsequently, upon the user’s request for further at 5-minute intervals, along with vehicle counts and average
clusteranalysis,thespatiotemporalfusionagentvisualizesthe vehiclespeedsrecordedbythesensors.Thecollectedpollution
results of cluster analysis conducted by the spatial agent. datatypesincludeozone,particulatematter,carbonmonoxide,
The present spatiotemporal fusion agent consists of sub- sulfur dioxide, and nitrogen dioxide.
agents tasked with visualizing the temporal attributes of IoT The SML2010 dataset is a machine learning dataset pro-
data, illustrating the spatial attributes of IoT data, and pre- videdbyUCI.Itconsistsofindoorenvironmentalinformation
sentingspatio-temporalfuseddata.Thetemporalattributesub- collected from environmental sensors installed in residential
agent can accomplish tasks such as generating scatter plots of homes. The data was collected at 15-minute intervals over
sensorlocationinformationandlineplotsfordatapredictions. a span of approximately 40 days. The dataset comprises
The spatial attribute sub-agent is tasked with producing node 24 features, including 20 features related to environmental
clustering diagrams and sensor similarity network graphs. informationsuchaslivingroomcarbondioxideconcentration,
Meanwhile, the spatio-temporal fusion sub-agent is respon- indoor relative humidity, and indoor light intensity.
sible for exhibiting data from different clusters in time post- Evaluation Metrics. In this section of the experiments,
clustering, while also visualizing data simultaneously in both threecommonlyusedperformancemetricsforregressiontasks
temporal and spatial dimensions. were employed to evaluate the performance of the prediction
(cid:113)
models. These metrics include RMSE = 1 (cid:80) (y −yˆ)2,
N i i i
To evaluate the frV am. eE wX oP rE kRI pM roE pN oT sS ed in this paper, we M repA reE sen= tsN1 th(cid:80)
e
ni u| my i b− eryˆ oi| f, sa an md pR le2 s,= y1 r− epr(cid:80) (cid:80) esi i( e(y nyi i t− − syˆ y ti h)) 22 e, trw uh ee vre aluN
e
conductedexperimentalevaluationsondifferentagentmodels. i
ofthei-thsample,yˆ denotesthepredictedvaluebythemodel,
The experimental setup was conducted in software environ- i
and y denotes the mean of the true values.
ments based on Anaconda for Python 3.10, PyTorch 2.0, and
Baselines. The comparative models used include Multi-
CUDA 11.3.
layer Perceptron (MLP), Gated Recurrent Unit (GRU) [36],
LSTM [37], Bidirectional Long Short-Term Memory (BiL-
A. Evaluation of Temporal Agent STM) [38], Stacked LSTM [39], LSTM with attention mech-
The experiments of the Temporal Agent mainly include the anism [40], GridLSTM [41], and Transformer. MLP and
assessmentofpredictionmodelsandhyperparameteroptimiza- Transformer are non-recurrent neural networks, while the rest
tion algorithms. are commonly used deep learning models in time-series data
1) Performance of Prediction Model: The datasets used analysis tasks.
in this section are the publicly available CityPulse dataset Configuration. The maximum number of iterations for all
and the SML2010 dataset [34]. The CityPulse dataset [35] models, including the proposed model, is set to 200, and the
comprises IoT spatiotemporal data collected in the city of optimizer used is the Adam optimizer provided by PyTorch.The initial learning rate is set to e−3. To prevent overfitting, Configuration. In manual search, the GridLSTM network
regularization techniques are applied in the models with a has 64 hidden units. For grid search, candidate numbers of
weight decay of e−5. The loss function used for training is neural units per layer are 16, 32, 64, 128, 256, and 512.
the mean squared error loss function (MSELoss) provided by In other experiments, the number of hidden layer units is
the PyTorch framework. Each training sample for the models determined by each method. BO and HEBO have a solution
consists of the feature values of the past 12 time steps, and range from 1 to 512, with Gaussian processes as surrogate
the batch size for model training is set to 200. models. BO uses 1 point per iteration, while HEBO uses
8 points. GA initializes with a population size of 12. PGA
TABLE I: Prediction Experiment Results launches 2, 4, and 6 processes successively, dividing sub-
populations accordingly. PGA concurrently runs genetic al-
CityPulseDataset SML2010Dataset
Model gorithms in multiple processes for automatic hyperparame-
RMSE MAE R2 RMSE MAE R2
ter optimization. When exchanging between sub-groups, the
MLP 0.2876 0.2206 0.9218 0.0531 0.2315 0.9526
maximum exchange number is set to 20% of the population
GRU 0.0682 0.0599 0.9951 0.0422 0.1533 0.9795
LSTM 0.0681 0.0595 0.9953 0.0459 0.1664 0.9744 size, with a minimum of 1 exchange. Other hyperparameter
BiLSTM 0.0675 0.0594 0.9952 0.0386 0.1518 0.9808
configurations for prediction models remain consistent with
StackedLSTM 0.0678 0.0597 0.9954 0.0417 0.1586 0.9787
GridLSTM 0.0677 0.0594 0.9955 0.0337 0.1167 0.9983 previous comparative experiments.
AttentionalLSTM 0.0679 0.0596 0.9952 0.0341 0.1222 0.9885
Transformer 0.0673 0.0972 0.9948 0.0335 0.1031 0.9992
CityGPT 0.0666 0.0593 0.9955 0.0320 0.0913 0.9994 TABLE II: The Evaluation Metrics with Different Hyperparameter
Optimization Methods in SML2010 Dataset
The performance metrics of each model on the prediction
tasks for the two datasets are presented in Table I. For MLP, Methods RMSE MAPE R2
anon-temporalmodel,itsperformanceonthepredictiontasks
PGA (ours) 0.0320 0.1009 0.9997
for both datasets is inferior to that of other temporal models. GA 0.0384 0.1434 0.9996
This is attributed to the fact that non-temporal models rely BO 0.0389 0.1314 0.9995
solelyontheinformationavailableatthecurrenttimestepfor HEBO 0.0355 0.1097 0.9996
makingpredictions.Incontrast,temporalmodelscanleverage Grid Search 0.0345 0.1264 0.9997
Manual Optimization 0.0402 0.1525 0.9996
both the information from the current time step and the past
timestepsforprediction.Resultsindicatethatvariousvariants TableIIpresentsthefinalpredictionresultsoftheprediction
of LSTM, which have been enhanced, demonstrate superior modelsontherelevantfeaturesoftheSML2010datasetunder
performance across all performance metrics. Particularly, the different hyperparameter configuration algorithms. Overall,
Attentional LSTM outperforms other models across all met- hyperparameter configuration methods based on PGA out-
rics. This phenomenon suggests that the introduction of at- perform other algorithms. From RMSE and MAE, PGA and
tention mechanisms in deep learning models enhances feature HEBO perform well, indicating that these two hyperparam-
extractioncapabilities,thusimprovingpredictionperformance. eter configuration methods are suitable for optimizing deep
ComparingLSTMwith GridLSTM,itis observedthatGridL- learning models. Regarding R2 , the performance of various
STM, which extracts features from two dimensions, exhibits algorithms is similar, with only PGA and BO showing a
more prominent capabilities in spatiotemporal data analysis. slight advantage. This is because R2 reflects the extent to
Furthermore,comparingGridLSTMwithCityGPTrevealsthat whichthedependentvariableisdeterminedbytheindependent
incorporatingacross-attentionmechanisminthedecoderstage variable, focusing on the correlation between the two, and
tofuseinformationfrombothdimensionsfurtherenhancesthe the input features of the comparative experimental models are
predictive capabilities of the model. consistent. Therefore, the performance of each experiment on
2) Hyperparameter Optimization: The experiment con- this indicator is similar.
ducted in this section aims to compare the hyperparameter
optimization efficacy of PGA employed by us with that of
other hyperparameter optimization algorithms concerning the
task of data feature prediction using the SML2010 dataset.
By documenting the prediction performance and configura-
tion time of each model, a comparison of the performance
amongdifferentmodelsinhyperparameterconfigurationtasks
is facilitated. Regarding the prediction performance metrics
of the models, the metrics utilized in this section align with
those employed in the preceding experiments, encompassing
RMSE, MAE, and R2. As for the configuration time, it
denotesthedurationfromtheinitiationofeachhyperparameter
Fig. 7: Running time of each model
configurationmethodtotheconclusionoftheiterationleading
to the derivation of the hyperparameter configuration plan. Fig. 7 illustrates the time taken for each configuration
Baselines.Wecompareditwiththegeneticalgorithm-based model. Manual parameter tuning time is not included due to
(GA) automated hyperparameter optimization method [42], difficulty in accurate tracking. PGA utilized 2 processes in
manual search, grid search [43], Bayesian optimization the figure. Both PGA and BO had the shortest runtime, with
(BO) [44] and Heteroscedastic Evolutionary Bayesian Opti- PGA slightly outperforming BO. Comparing GA with PGA,
misation (HEBO) [45]. GA’s runtime was nearly double that of PGA due to PGA’smulti-process environment, leveraging parallelism for faster denotes the geographical distance between nodes i and j.
runtime. However, PGA involves additional inter-process data Cos(X ,X ) represents the cosine similarity value between
i j
exchange,resultinginaslightlylongerruntime,approximately the representation vectors of these two nodes, indicating the
half of GA’s. HEBO’s runtime was significantly longer than similarityintermsofdatafeaturedimensions.αisaparameter
BO’sduetocomputingtheeffectivenessofeighthyperparame- used to control the influence of these two features on the
terconfigurationsperiteration,increasingcomputationalload. similarity between nodes, with its value ranging between 0
Grid search had a relatively short runtime as only one hyper- and 1.
parameter was optimized. If multiple hyperparameters were In this experiment, we set α = 0.5, indicating an equal
optimized, grid search’s computational load would increase, weighting between the two types of features. Additionally,
potentially exceeding GA’s computation time. due to the cosine similarity values falling within the range
of [0,1], the value of Cos(X ,X ) is normalized during the
i j
actual computation process, as shown in Eq. (22).
B. Evaluation of Spatial Agent
To validate Cross-Graph CosimHeat’s effectiveness within g −g
dis(i,j)=1− i,j min (22)
the Spatial Agent, we applied it to the CityPulse dataset g −g
max min
for pollution data analysis, emphasizing inter-regional corre-
whereg representstheactualgeographicaldistancebetween
lations. i,j
nodesiandj.g andg aretheminimumandmaximum
1) SensorSpatialDistribution: TheCityPulsedatasetcom- min max
distance values among all pairs of nodes.
prises data collected from 217 sensors, with the geographic
information of each sensor summarized in a table in terms of
latitude and longitude. Based on the geographical locations of
these sensors, they are plotted on a map to provide an initial
visualization of the distribution of data collection points in
the area. Fig. 8 (a) illustrates the overall distribution of all
sensors in the Aarhus region. It is observed from this figure
that most sensors are concentrated in the urban areas of the
region, with fewer sensors located in suburban or rural areas.
Fig 8 (b) presents the positions of sensors on a smaller scale.
Asdepictedinthisfigure,thesensorsarepositionedalongthe
roads.
Fig. 9: Average similarity heat map
Fig. 9 presents the visualization results of the averaged
similarity matrix computed with CoSimHeat. Brighter node
colors indicate higher average similarity with all other nodes,
reflecting stronger connections in vehicle movement. Con-
versely, darker colors denote lower average similarity. Spatial
distribution patterns of node average similarity are evident.
Nodes with higher average similarity are concentrated in a
(a)OverallDistribution (b)LocalDistribution grid-like area with longitude between 10.15 and 10.20 and
Fig. 8: Sensor Distribution Map latitude between 56.14 and 56.20. Surrounding this central
area, nodes in adjacent regions show lower average similarity
2) Graph Construction and Similarity Calculation: By compared to others. Bright areas suggest higher similarity in
treating the region covered by the CityPulse dataset as a vehicleflow,indicatingbustlingurbanareaswithlargertraffic
graph and the sensors in the dataset as nodes in the graph, volumes. Conversely, similarity gradually decreases outward,
an abstract graph structure of the area is constructed. Each signifyingrelativelymarginalizedareaswithlowertrafficflow.
node’srepresentationinthefeaturespaceisformedbyamulti- By comparing with Fig. 8, brighter regions correspond to
dimensional vector composed of different data features. Then, densely populated urban areas, while darker regions indicate
the initial similarity relationship between nodes is established suburban areas with higher greenery levels.
by computing the representation vectors of pairwise nodes, 3) Spectral Cluster Analysis: Based on the node similarity
resulting in the construction of the initial similarity matrix matrix, spectral clustering is employed to cluster the nodes,
for the graph structure of the area. Subsequently, leveraging withthenumberofclustersvaryingfrom2to8.Visualizations
CoSimHeatonthismatrixcomputesthefinalsimilaritymatrix of clustering results for 4, 5, 6, and 7 categories are shown in
results for each node. The initial similarity between nodes is Fig. 10. Comparing Fig. 10 (a) to Fig. 10 (b), a new category
defined as Eq. (21). emergesfromthepartitioningofcategories0and3.Similarly,
comparingFig.10(b)toFig.10(c),thenewlyaddedcategory
mainly originates from the partitioning of category 0. Further
Similarity(i,j)=α·dis(i,j)+(1−α)·Cos(X ,X ) (21)
i j comparison between Fig. 10 (c) and Fig. 10 (d) reveals that
where i and j represent node i and node j. dis(i,j) charac- the new category arises from the partitioning of category 2.
terizes the spatial similarity between the two nodes, which Despite changes in some categories with increased clusteringas the cosine similarity of their value vectors. If nodes from
different clusters were located on the same street, they were
considered connected, with edge weights calculated similarly
based on cosine similarity. This initialization provides all
necessary data for the Cross-Graph CoSimHeat.
(a)Thenumberofclustersis4 (b)Thenumberofclustersis5
(a)Edgesinsideclusters (b)Edgesbetweencluster0andcluster1
Fig. 11: Edges between clusters
Fig. 11 (a) delineates the intra-cluster edge relationships,
while Fig. 11 (b) elucidates the preliminary inter-cluster node
(c)Thenumberofclustersis6 (d)Thenumberofclustersis7
associationsspecificallybetweenclusters0and1.Withinboth
Fig. 10: Results for different number of clusters
representations,nodesallocatedtodistinctclustersarevisually
distinguished by diverse-colored scatter points. The intercon-
categories, certain node clusters remain stable, particularly in
necting lines between scatter points symbolize the presence
the geographic area with longitude ranging from 10.17 to
of edges linking the respective nodes, thereby signifying their
10.22 and latitude ranging from 56.13 to 56.17. Additionally,
adjacency along shared thoroughfares. Notably, in Fig. 11 (a),
the classification of nodes in the upper right corner of the
certain nodes may exhibit isolation owing to their remote
geographic area remains consistent, indicating stable spatial
positioning,whereintheylacksharedthoroughfareswithother
similarity and vehicular traffic patterns.
nodes. Correspondingly, in Fig. 11 (b), certain nodes within
Table III presents the values of three commonly used
cluster 0 may lack direct edge connections with nodes in
clustering performance metrics, the Silhouette Coefficient
cluster1.Nonetheless,leveragingtheCross-GraphCoSimHeat
(SC)index,Calinski-Harabaz(CH)index,andDavies-Bouldin
facilitates the inference of similarity relationships among all
(DB), for spectral clustering results under different numbers
nodes spanning across the two delineated clusters.
of clusters. When the number of clusters is set to 3, spectral
clustering exhibits the most favorable SC index. However,
when the number of clusters is 5, the algorithm demonstrates
optimal performance in terms of the CH index and DB index.
Furthermore, when the number of clusters is 5, the silhouette
coefficientofspectralclusteringisonlyslightlylowerthanthat
when the number of clusters is 3. Considering these factors
comprehensively, this study selects the spectral clustering
resultswith5clustersasthebasisforsubsequentdataanalysis.
TABLE III: Clustering Evaluation Results
cluster number SC index CH index DB index
2 0.277 21.744 1.268
3 0.328 23.017 1.870
Fig. 12: Similarity between clusters
4 0.315 25.893 2.044
5 0.316 40.797 1.317 After obtaining adjacency matrices for each cluster and
6 0.172 36.024 1.568 initialclusterrelationships,wecomputedthesimilaritymatrix
7 0.188 33.515 1.468 betweenclustersusingEq.(20).Togaugetheoverallsimilarity
8 0.190 29.213 1.521
between clusters, we summed all elements in the similarity
4) Comparative Analysis between Clusters: To assess the matrix, providing a measure of their overall similarity. With
differences between clusters quantitatively, this study utilized nodesclassifiedintofivecategoriesthroughspectralclustering,
the Cross-Graph CoSimHeat outlined in Section IV-B to weconductedinter-clustersimilaritycalculationsamongthese
computethesimilaritybetweeneachpairofclusters.Arefined five clusters, resulting in 10 comparisons. The heatmap in
graphstructurewasconstructedusingroadtrafficnetworkdata Fig. 12 visually represents the overall similarity relationships
from OpenStreetMap in the Aarhus area. Nodes within the amongclusters,withdarkercolorsindicatinghighersimilarity
same street in the same cluster were considered connected and lighter colors indicating lower similarity. Each cluster
when constructing the adjacency matrix. Each node was asso- exhibits perfect self-similarity, while variations exist in inter-
ciatedwithavaluevector,similartotherepresentationvectors cluster similarities. For example, clusters 0 and 1 demonstrate
mentioned earlier. Edge weights between nodes were defined a high similarity score of 0.983, indicating similar nodePleaseclusterthecitiesin2018according Helpmeanalyzethedatacharacteristicsof
to the pollutant data and cluster them at thesetwoclusters
differenttimes.
Thesetwoclustersshowthecharacteristics
Thisistheclusteringresultchartforthe of concentrated distribution in various
fourmonthsof2018-04,2018-06,2018- indicatorsduringthe2018-06period.Except
09,and2018-12. forozone,thelevelsofotherpollutantsin
Visualizinganalysis cluster0aresignificantlyhigherthanthose
results for Space incluster4.Inaddition,urbanagglomeration
Agent. 0 is concentrated at high ozone
concentrations,whileurbanagglomeration4
showsacertaindispersion.
Helpmeanalyzetheairqualitychanges
ofthemostpollutedsensorincluster0
thismonth.
The most polluted sensor in cluster 0 is
numbered36.Thisistheairqualitychange
ofNode36inthefirstandsecondweeksof
Iwouldliketoknowthecomparisonof thismonth.Itcanbeseenfromthefigure
databetweenthetwoclusterswiththe that the air quality at node 36 shows a
bestandworstairqualityin2018-06. certainperiodicity.Worseairqualitytendsto
Visualizing analysis
occuronweekends,whileindicatorvalues
resultsfor Temporal
areslightlyloweronweekdays.Thismaybe
During2018-06,thebestairqualitywasin related to changes in travel traffic on Agent.
cluster4,andtheworstincluster0.Here workingdaysandholidays.
is a comparison of the parallel axis
Basedonfeedback, coordinatesystemsofthetwoclusters.
the agent further
adjusts its task
output
Fig. 13: Analysis of air pollution data by CityGPT
features. Conversely, cluster 4 shows a lower similarity score agglomeration 4 shows a certain dispersion.” In the fourth
of 0.927 than cluster 2, suggesting significant differences round, the user requests the display of data for specific nodes
in pollutant values. Urban clusters (0, 1, 2) display higher within a cluster. At this point, the system visualizes the data
similarity, reflecting consistent pollutant concentration values. through the time visualization sub-agent within the spatio-
This analysis identifies regions with similar environmental temporal fusion agent and provides the corresponding data
characteristics and underscores differences in pollutant distri- analysis results.
bution among areas. These four rounds of dialogue demonstrate that the system
can allocate tasks according to user input execute tasks, and
presentresultsusingdifferentmodulesofagents.Additionally,
C. Case Study
the third round of dialogue showcases that the system can
This section demonstrates how the system in this paper
modify tasks based on user feedback to produce the desired
conducts data analysis and visualization with a specific case
results.
study. Fig. 13 shows the analysis of air pollution data across
severalChinesecitiesusingtheproposedagent,involvingfour
VI. RELATEDWORK
interaction rounds.
A. Spatiotemporal Data Processing
Inthefirstround,theuserrequestsclusteringanalysisofthe
data from a spatial perspective. Upon receiving the command, LSTM variants. RNNs [46] can handle long-delayed tasks
theagentcomputesthesimilaritybetweenthesecitiesthrough without predefined time steps, but often face gradient issues
spatial representation and subsequently applies spectral clus- in longer time series. Long Short-Term Memory (LSTM)
teringtocategorizethem.Theclusteringresultsarethentrans- networks[47],anRNNvariant,solvethiswithagatingmech-
mittedtothespatio-temporalfusionagent.Uponreceivingthe anism for memory cells. However, single LSTMs only retain
visualization task, the spatio-temporal fusion agent inputs the memory in the time direction and cannot process complex
clustering results into the clustering visualization sub-agent features.StackedLSTMs[19]andBi-DirectionalLSTMs[48]
andpresentsthecityclusteringgraphsforthemonthsofApril improve this by stacking layers and processing data forward
2018, June 2018, September 2018, and December 2018 to the and backward, respectively, enabling longer-range patterns.
user. In the second and third rounds of interaction, the user Yet,theylackmultidimensionalfeaturelearningduetolimited
provides feedback and requests further comparative analysis verticalcomputation.GoogleDeepMind’sGridLSTMextends
of the data for June 2018. In response, the system conducts LSTM cells along multiple dimensions, including network
a comparative analysis of the regions represented by different depth, enhancing performance for tasks like single-channel
clusters over time using parallelcoordinate plots and provides speech separation [49]. For IoT-specific features, adaptive
corresponding analytical descriptions: ”Except for ozone, the changes to the Grid LSTM mechanism are needed to effec-
levels of other pollutants in cluster 0 are significantly higher tively learn time series data from various sensors.
than those in cluster 4. In addition, urban agglomeration 0 Graphsimilaritycomputation.Graphsimilaritycomputation
is concentrated at high ozone concentrations, while urban isvitalingraphtheory,aimingtogaugethesimilaritybetweentwo graphs. The core concept involves computing similarity prevent it from being widely applied. Simple data pattern
metrics by comparing their structures or other attributes. The analysis will lose a lot of potentially useful information.
main methods for graph similarity computation are graph Therefore,asageneralconcern,enhancingtheinterpretability
kernel-based and graph matching-based. Graph kernel-based and generalized understanding of IoT data has important
methods transform non-linearly separable problems in low- implications.
dimensional space into linearly separable problems in high-
dimensional space. These methods encompass path-based VII. CONCLUSION
graph kernels [50], subgraph-based graph kernels [51], and ThispaperpresentsCityGPTforIoTdataanalysis,facilitat-
subtree-based graph kernels [52]. On the other hand, graph ing natural language interaction between users and the system
matching-based similarity computation maps one graph onto to aid in task completion. Initially, a requirement analysis
another and calculates similarity by comparing the degree agent translates user inputs into actionable tasks. Leveraging
of correspondence between the mapped graph and the orig- the reasoning capabilities of the large language model, tasks
inal graph. This approach often involves techniques such as are decomposed into subtasks for execution by individual
graph isomorphism matching and maximum common sub- system agents. Intermediary agents, including temporal and
graph matching, making it suitable for handling correspon- spatial agents, analyze IoT data from distinct temporal and
dences between two graphs [53]–[55]. spatial perspectives. The spatiotemporal fusion agent amal-
gamates results from these agents and inputs them into a
B. Hyperparameter Optimization visualization sub-agent, presenting visualizations in various
formats and providing corresponding textual analysis results.
In order to realize the automatic setting of multiple steps in
Experimental validation of the system’s primary proxies is
machinelearning,AutoMLhasbeenproposedandhasbecome
conducted to verify its reliability, along with showcasing the
aresearchhotspotinacademiaandindustry.Thakuretal. [56]
workflowandeffectivenessthroughacasestudy.Futureefforts
proposed the AutoCompete framework for machine learning
will involve integrating additional agents for handling more
competitions. The framework tries to build a predictive model
complex tasks.
throughlearningwithouthumanintervention.Liangetal.[57]
proposedLEAF,anAutoMLframework.Thelatestevolution-
REFERENCES
aryalgorithmsanddistributedcomputingframeworksareused
simultaneouslytooptimizehyperparameters,networkstructure [1] G. Zhixiang, “Research on the origin and development background of
the internet of things,” ModernEconomicInformation, vol. 1, pp. 157–
and network size. HPO, essential in AutoML, includes meth-
158,2010.
ods like grid search, random search, BO, and gradient-based [2] A. Mirzai, A. Z. Coban, M. Almgren, W. Aoudi, and T. Bertilsson,
optimization [58]–[60]. Recently, some researchers have also “Scheduling to the rescue; improving ml-based intrusion detection for
iot,”inProceedingsofthe16thEuropeanWorkshoponSystemSecurity,
startedtousegeneticalgorithmstoimplementhyperparametric
2023,pp.44–50.
optimization. [61] presents a genetic algorithm method for [3] A.F.Khan,A.A.Khan,A.M.Abdelmoniem,S.Fountain,A.R.Butt,
optimizing the CNN hyperparameter. With the need for time- andA.Anwar,“Float:Federatedlearningoptimizationswithautomated
tuning,” in Proceedings of the Nineteenth European Conference on
sensitive and simultaneous training, parallel processing is
ComputerSystems,2024,pp.200–218.
expected but rarely tackled in AutoML. [4] Z. Jin, N. Cao, Y. Shi, W. Wu, and Y. Wu, “Ecolens: visual analysis
of ecological regions in urban contexts using traffic data,” Journal of
Visualization,vol.24,pp.349–364,2021.
C. AI Agent with Human-AI Interaction [5] Z. Feng, H. Li, W. Zeng, S.-H. Yang, and H. Qu, “Topology density
map for urban data visualization and analysis,” IEEE transactions on
Artificial intelligence (AI) agents, as a rising technological visualizationandcomputergraphics,vol.27,pp.828–838,2020.
framework, have facilitated the transition of system building [6] D. Weng, C. Zheng, Z. Deng, M. Ma, J. Bao, Y. Zheng, M. Xu, and
Y. Wu, “Towards better bus networks: A visual analytics approach,”
from the initial data flow research phase to the application
IEEEtransactionsonvisualizationandcomputergraphics,vol.27,pp.
phase of big data theory and analysis [62], [63]. This revolu- 817–827,2020.
tionaryadvancementhasenabledtheIoTfieldtogainunheard [7] C. Wei, C. Jing, S. Wang, and D. Li, “Urban flood visualization
frameworkbasedonspatialgrid.”Sensors&Materials,vol.33,2021.
of growth potential to enhance the manageability of complex
[8] J. Li and C. Bi, “Visual analysis of air pollution spatio-temporal
Big Data systems for ordinary people. patterns,”TheVisualComputer,vol.39,pp.3715–3726,2023.
Several studies have revealed the potential of using AI [9] X.-M.Wang,T.-Y.Zhang,Y.-X.Ma,J.Xia,andW.Chen,“Asurveyof
visualanalyticpipelines,”JournalofComputerScienceandTechnology,
agents to optimize big data systems. For example, Tang et
vol.31,pp.787–804,2016.
al. [64] used ChatGPT to model a large number of road [10] J. Xia, F. Ye, W. Chen, Y. Wang, W. Chen, Y. Ma, and A. K. Tung,
trafficpoliciesandfoundthatusingChatGPTfortrafficpolicy “Ldsscanner:Exploratoryanalysisoflow-dimensionalstructuresinhigh-
dimensionaldatasets,”IEEEtransactionsonvisualizationandcomputer
optimization and increasing the average speed of vehicles.
graphics,vol.24,pp.236–245,2017.
Villarreal et al. [65] found that using a large amount of cross- [11] L.Giovannangeli,R.Bourqui,R.Giot,andD.Auber,“Towardautomatic
domain expertise to train a reinforcement learning-related comparisonofvisualizationtechniques:Applicationtographvisualiza-
tion,”VisualInformatics,vol.4,pp.86–98,2020.
agent can enable novice people to solve complex mixed flow
[12] W. Chen, J. Xia, X. Wang, Y. Wang, J. Chen, and L. Chang, “Rela-
control problems, which typically cover an extremely large tionlines: Visual reasoning of egocentric relations from heterogeneous
amount of data and span a wide range of domains. urban data,” ACM Transactions on Intelligent Systems and Technology
(TIST),vol.10,pp.1–21,2018.
However,intheIoTfield,theprominentproblemisthehuge
[13] M. Riveiro, M. Lebram, and M. Elmer, “Anomaly detection for road
volume of data and the complex structure of spatiotemporal traffic:Avisualanalyticsframework,”IEEETransactionsonintelligent
data, which makes it difficult for unusual AI agent systems transportationsystems,vol.18,pp.2260–2270,2017.
[14] K.Fukushima,“Neocognitron:Aself-organizingneuralnetworkmodel
to interpret it in a generalized way. IoT data has a very high
foramechanismofpatternrecognitionunaffectedbyshiftinposition,”
potentialforapplication,butthedatavolumeanddomainspan Biologicalcybernetics,vol.36,pp.193–202,1980.[15] Z. C. Lipton, J. Berkowitz, and C. Elkan, “A critical review of [40] J. Sun and W. Guo, “Time series prediction based on time attention
recurrent neural networks for sequence learning,” arXiv preprint mechanismandlstmneuralnetwork,”in2023IEEEInternationalCon-
arXiv:1506.00019,2015. ferenceonIntegratedCircuitsandCommunicationSystems(ICICACS),
[16] A.Vaswani,N.Shazeer,N.Parmar,J.Uszkoreit,L.Jones,A.N.Gomez, 2023,pp.1–5.
Ł. Kaiser, and I. Polosukhin, “Attention is all you need,” Advances in [41] C.Xu,W.Rao,X.Xiao,E.S.Chng,andH.Li,“Singlechannelspeech
neuralinformationprocessingsystems,vol.30,2017. separationwithconstrainedutterancelevelpermutationinvarianttraining
[17] S. Wang, J. Cao, and S. Y. Philip, “Deep learning for spatio-temporal usinggridlstm,”in2018IEEEInternationalConferenceonAcoustics,
data mining: A survey,” IEEE transactions on knowledge and data SpeechandSignalProcessing(ICASSP),2018,pp.6–10.
engineering,vol.34,pp.3681–3700,2020. [42] S.R.Young,D.C.Rose,T.P.Karnowski,S.-H.Lim,andR.M.Patton,
[18] L. Ouyang, J. Wu, X. Jiang, D. Almeida, C. Wainwright, P. Mishkin, “Optimizing deep learning hyper-parameters through an evolutionary
C. Zhang, S. Agarwal, K. Slama, A. Ray et al., “Training language algorithm,”2015,pp.1–5.
modelstofollowinstructionswithhumanfeedback,”Advancesinneural [43] P. M. Lerman, “Fitting segmented regression models by grid search,”
informationprocessingsystems,vol.35,pp.27730–27744. Journal of The Royal Statistical Society Series C-applied Statistics,
[19] D.Wu,Z.Jiang,X.Xie,X.Wei,W.Yu,andR.Li,“Lstmlearningwith vol.29,pp.77–84,1980.
bayesian and gaussian processing for anomaly detection in industrial [44] T. Yu and H. Zhu, “Hyper-parameter optimization: A review of algo-
iot,” IEEE Transactions on Industrial Informatics, vol. 16, no. 8, pp. rithmsandapplications,”arXivpreprintarXiv:2003.05689,2020.
5244–5253,2019. [45] A.I.Cowen-Rivers,W.Lyu,Z.Wang,R.Tutunov,H.Jianye,J.Wang,
[20] H. Lin, R. Bai, W. Jia, X. Yang, and Y. You, “Preserving dynamic andH.B.Ammar,“Hebo:Heteroscedasticevolutionarybayesianopti-
attentionforlong-termspatial-temporalprediction,”inACMKDD,2020, misation,”arXive-prints,pp.arXiv–2012,2020.
p.36–46. [46] A. Saeed, T. Ozcelebi, and J. Lukkien, “Multi-task self-supervised
[21] P. Boniol, M. Meftah, E. Remy, and T. Palpanas, “dcam: Dimension- learningforhumanactivitydetection,”ACMIMWUT(UbiComp),vol.3,
wiseclassactivationmapforexplainingmultivariatedataseriesclassi- no.2,pp.61:1–61:30,2019.
fication,”inSIGMOD’22:InternationalConferenceonManagementof [47] S. Hochreiter and J. Schmidhuber, “Long short-term memory,” Neural
Data,2022,pp.1175–1189. computation,vol.9,no.8,pp.1735–1780,1997.
[22] J.Audibert,P.Michiardi,F.Guyard,S.Marti,andM.A.Zuluaga,“Usad: [48] M. Schuster and K. K. Paliwal, “Bidirectional recurrent neural net-
Unsupervised anomaly detection on multivariate time series,” in ACM works,” IEEE Transactions on Signal Processing, vol. 45, no. 11, pp.
KDD,2020,p.3395–3404. 2673–2681,1997.
[23] C. Qian, X. Cong, C. Yang, W. Chen, Y. Su, J. Xu, Z. Liu, and [49] A. Banino, C. Barry, B. Uria, C. Blundell, T. Lillicrap, P. Mirowski,
M.Sun,“Communicativeagentsforsoftwaredevelopment,”CoRR,vol. A.Pritzel,M.J.Chadwick,T.Degris,J.Modayil,G.Wayne,H.Soyer,
abs/2307.07924,2023. F.Viola,B.Zhang,R.Goroshin,N.Rabinowitz,R.Pascanu,C.Beattie,
[24] Y. Lin and Y. Chen, “Llm-eval: Unified multi-dimensional automatic S.Petersen,A.Sadik,S.Gaffney,H.King,K.Kavukcuoglu,D.Hass-
evaluationforopen-domainconversationswithlargelanguagemodels,” abis,R.Hadsell,andD.Kumaran,“Vector-basednavigationusinggrid-
CoRR,vol.abs/2305.13711,2023. likerepresentationsinartificialagents,”Nature,vol.557,no.7705,pp.
[25] S. Zhang, D. Fu, Z. Zhang, B. Yu, and P. Cai, “Trafficgpt: Viewing, 429–433,2018.
processing and interacting with traffic foundation models,” Arxiv, vol. [50] J. Huang, Z. Fang, and H. Kasai, “Lcs graph kernel based on wasser-
2001.02908,2020. stein distance in longest common subsequence metric space,” Signal
[26] G.Li,H.Hammoud,H.Itani,D.Khizbullin,andB.Ghanem,“CAMEL: Processing,vol.189,p.108281,2021.
communicativeagentsfor”mind”explorationoflargelanguagemodel [51] Z. Wang, Q. Cao, H. Shen, X. Bingbing, M. Zhang, and X. Cheng,
society,” in NIPS, A. Oh, T. Naumann, A. Globerson, K. Saenko, “Towards efficient and expressive gnns for graph classification via
M.Hardt,andS.Levine,Eds.,2023. subgraph-awareweisfeiler-lehman,”inLearningonGraphsConference,
[27] F. Yang, A. S. Thangarajan, S. Michiels, W. Joosen, and D. Hughes, 2022,pp.17–1.
“Morphy:Softwaredefinedchargestoragefortheiot,”inACMSenSys, [52] T. H. Schulz, T. Horva´th, P. Welke, and S. Wrobel, “A generalized
2021,p.248–260. weisfeiler-lehmangraphkernel,”MachineLearning,vol.111,pp.2601–
[28] Y. Deng, W. Chen, J. Ren, F. Lyu, Y. Liu, Y. Liu, and Y. Zhang, 2629,2022.
“Tailorfl: Dual-personalized federated learning under system and data [53] M. Fuchs and K. Riesen, “Matching of matching-graphs-a novel ap-
heterogeneity,”inACMSenSys,2022,pp.592–606. proachforgraphclassification,”in202025thInternationalConference
[29] K. Park, K. Saur, D. Banda, R. Sen, M. Interlandi, and K. Karanasos, onPatternRecognition(ICPR),2021,pp.6570–6576.
“End-to-end optimization of machine learning prediction queries,” in [54] S. Zeng, Y. Li, Z. Liu, and T. Edna, “Learning graph matching with
SIGMOD’22:InternationalConferenceonManagementofData,2022, gnccp,” in Proceedings of the 9th International Conference on E-
pp.587–601. Education, E-Business, E-Management and E-Learning, 2018, pp. 66–
[30] S.Katoch,S.S.Chauhan,andV.Kumar,“Areviewongeneticalgorithm: 70.
past, present, and future,” Multimedia tools and applications, vol. 80, [55] W.Li,X.Liu,andY.Yuan,“Sigma:Semantic-completegraphmatching
pp.8091–8126,2021. fordomainadaptiveobjectdetection,”inProceedingsoftheIEEE/CVF
[31] D.I.Arkhipov,D.Wu,andA.C.Regan,“Asimplegeneticalgorithm Conference on Computer Vision and Pattern Recognition, 2022, pp.
parallelization toolkit (sgaptk) for transportation planners and logistics 5291–5300.
managers,”management,vol.42,no.43,p.44,2015. [56] A.ThakurandA.Krohn-Grimberghe,“Autocompete:Aframeworkfor
[32] S. Rothe and H. Schu¨tze, “Cosimrank: A flexible & efficient graph- machinelearningcompetition,”ArXiv,vol.abs/1507.02188,2015.
theoreticsimilaritymeasure,”inACL,2014,pp.1392–1402. [57] J.Liang,E.Meyerson,B.Hodjat,D.Fink,K.Mutch,andR.Miikku-
[33] W.Yu,J.Yang,M.Zhang,andD.Wu,“Cosimheat:Aneffectiveheat lainen,“Evolutionaryneuralautomlfordeeplearning,”inProceedings
kernel similarity measure based on billion-scale network topology,” in oftheGeneticandEvolutionaryComputationConference,ser.GECCO
ProceedingsoftheACMWebConference2022,2022,pp.234–245. ’19,2019,p.401–409.
[34] P.Romeu-GuallartandF.Zamora-Martinez,“SML2010,”UCIMachine [58] S. Garg and P. Pundir, “Mofit: A framework to reduce obesity using
LearningRepository,2014. machine learning and iot,” in 2021 44th International Convention on
[35] M.I.Ali,F.Gao,andA.Mileo,“Citybench:Aconfigurablebenchmark Information,CommunicationandElectronicTechnology(MIPRO),2021,
to evaluate rsp engines using smart city datasets,” in International pp.1733–1740.
semanticwebconference,2015,pp.374–389. [59] X.YeandJ.V.Milanovic´,“Applicationofmachinelearningandhyper-
[36] G. Lai, W.-C. Chang, Y. Yang, and H. Liu, “Modeling long-and parameter optimisation for efficient prediction of transient stability,”
short-term temporal patterns with deep neural networks,” in The 41st in 2023 IEEE PES Innovative Smart Grid Technologies Europe (ISGT
international ACM SIGIR conference on research & development in EUROPE),2023,pp.1–5.
informationretrieval,2018,pp.95–104. [60] D. Bassi and H. Singh, “A comparative study on hyperparameter
[37] Z. Zhao, W. Chen, X. Wu, P. C. Chen, and J. Liu, “Lstm network: a optimization methods in software vulnerability prediction,” in 2021
deep learning approach for short-term traffic forecast,” IET intelligent 2ndInternationalConferenceonComputationalMethodsinScience&
transportsystems,vol.11,pp.68–75,2017. Technology(ICCMST),2021,pp.181–184.
[38] C.Ma,G.Dai,andJ.Zhou,“Short-termtrafficflowpredictionforurban [61] N.M.AszemiandP.Dominic,“Hyperparameteroptimizationinconvo-
road sections based on time series analysis and lstm bilstm method,” lutionalneuralnetworkusinggeneticalgorithms,”InternationalJournal
IEEE Transactions on Intelligent Transportation Systems, vol. 23, pp. ofAdvancedComputerScienceandApplications,vol.10,2019.
5615–5624,2021. [62] D.Wang,E.F.Churchill,P.Maes,X.Fan,B.Shneiderman,Y.Shi,and
[39] “A revisit of sparse coding based anomaly detection in stacked rnn Q.Wang,“Fromhuman-humancollaborationtohuman-aicollaboration:
framework,” in Proceedings of the IEEE international conference on DesigningAIsystemsthatcanworktogetherwithpeople,”inExtended
computervision,2017,pp.341–349. Abstractsofthe2020CHIConferenceonHumanFactorsinComputingSystems, CHI 2020, Honolulu, HI, USA, April 25-30, 2020. ACM,
2020,pp.1–6.
[63] D.Wu,J.Ouyang,N.Dai,M.Wu,H.Tan,H.Deng,Y.Fan,D.Wang,
and Z. Jin, “Deepbrain: Enabling fine-grained brain-robot interaction
through human-centered learning of coarse EEG signals from low-
costdevices,”Proc.ACMInteract.Mob.WearableUbiquitousTechnol.,
vol.6,no.3,pp.147:1–147:27,2022.
[64] Y.Tang,X.Dai,andY.Lv,“Chatgptparticipatesintrafficcontrolasa
traffic manager assistant,” in 2023 IEEE 3rd International Conference
onDigitalTwinsandParallelIntelligence(DTPI),2023,pp.1–6.
[65] M.Villarreal,B.Poudel,andW.Li,“Canchatgptenableits?thecase
ofmixedtrafficcontrolviareinforcementlearning,”in2023IEEE26th
InternationalConferenceonIntelligentTransportationSystems(ITSC),
2023,pp.3749–3755.