Learnings from Implementation of a BDI
Agent-based Battery-less Wireless Sensor
Ganesh Ramanathan1,3, Andres Gomez2, and Simon Mayer3
1 Siemens AG, Switzerland
2 TU Braunschweig, Germany
3 University of St. Gallen, Switzerland
Abstract. Battery-less embedded devices powered by energy harvest-
ingareincreasinglybeingusedinwirelesssensingapplications.However,
their limited and often uncertain energy availability challenges design-
ing application programs. To examine if BDI-based agent programming
canaddressthischallenge,weuseditforareal-lifeapplicationinvolving
an environmental sensor that works on energy harvested from ambient
D
light. This yielded the first ever implementation of a BDI agent on a
low-powerbattery-lessandenergy-harvestingeEmbeddedsystem.Further-
more,ituncoveredconceptualintegrationchallengesbetweenembedded
T
systems and BDI-based agent programming that, if overcome, will sim-
plifythedeploymentofmoreautonomToussystemsonlow-powerdevices
with non-deterministic energy availability. Specifically, we (1) mapped
I
essential device states todefaultMinternal beliefs,(2) recognized and ad-
dressed the need for beliefs in general to be short- or long-term, and
(3)proposedynamicannotBationofintentionswiththeirrun-timeenergy
impact.Weshowthatincorporatingtheseextensionsnotonlysimplified
U
theprogrammingbutalsoimprovedcodereadabilityandunderstanding
of its behavior. S
Keywords: Battery-less embedded systems · BDI Agents · Resource-
constrained devices · Agent-oriented Programming.
1 Introduction
Embedded wireless sensors in cyber-physical systems are increasingly adopting
energyharvestingasapowersourcebecauseoftheotherwisehighcostofwiring
or maintenance that would be involved. However, in energy-harvesting devices
(e.g.,usingphotovoltaicsources),theavailableenergyisconstrainedandcanalso
be nondeterministic. Therefore, programmers writing code for controlling the
functioningofsuchdevicesneedtocarefullyconsider,amongstotherfactors,the
energystorageand(expected)harvestingcapacityaswellaspowerconsumption
characteristics of the hardware.
We argue that the design and coding complexity encountered in energy-
constrained embedded devices could be reduced through the adoption of a BDI-
based agent-oriented programming paradigm [4], which has proven benefits in
4202
nuJ
52
]AM.sc[
1v30371.6042:viXra2 Ramanathan et al.
applications that face complex, dynamic, and uncertain environments [1]. The
availability of a lean BDI framework suitable for embedded devices [7,5] and
its demonstrated energy efficiency [6] makes it possible to apply this approach
to energy- and resource-constrained devices in principle. However, the usage of
BDIinindustrialpracticeandbyembeddedsystemsprogrammerstodayremains
elusive due to the missing conceptual bridging of several key aspects.
We implemented a BDI agent-based control program for a real battery-less
embeddedhardwareplatformthatispoweredbyenergy-harvestingphotovoltaic
cells(seeFigure1).Basedontheexperiencegatheredfromourimplementation,
we share three vital design-related insights that lie in the confluence of energy-
constrained embedded systems and BDI-style programming: First, we identified
key states of the device which play an important role in managing its energy-
efficientoperationandrecommendthemtobemodeledasdefaultinternalbeliefs.
These internal beliefs then aid in the contextualization of the plans in a library
and direct the developer’s attention towards handling changes in them (e.g.,
through explicit event handlers). Second, we discuss ways through which the
energyimpactofintentsandtheircontainedactionscaDnbeincludedasmetadata
that enables evaluating the feasibility of achieving goals at run time. We show
E
that the agent can also update this information as it learns from experience
T
abouttheseenergyimpacts.Third,becauseenergy-constraineddevicesareoften
designed to enter into deep-sleep modes wThere they power down their RAM, we
propose that beliefs, which serve to model the mental state of the agent, be
I
flagged as being short- or long-termMed so that the state of the program can be
persisted and restored correctly when the device switches back to active mode.
B
Together, our propositions lead to a significant and highly relevant align-
U
ment of the considerations of embedded systems developers with agent-oriented
programming, and specSifically with the BDI framework. After a brief overview
of related work, we detail our approach in Section 3. In Section 4, we discuss
our evaluation of these proposals in the scope of a re-implementation of a con-
trolprogramforaconstrainedembeddeddevice,whichshowsaclearqualitative
improvement in the design (e.g., concerning the clearer contextualization and
legibility of intentions) without disadvantaging energy efficiency.
16kB SRAM 128kB Flash
PV Array
MCU
EMU 48 MHz
25mm CYBLE-022 BLE
S6AE103a
Buffer 0.22F Sensor
T+Rh
Si7020
Fig.1. The hardware and a block diagram of the battery-less sensor for which we
implemented BDI agent-based energy-conscious application.Title Suppressed Due to Excessive Length 3
2 Related Work
Achieving optimal control of low-power and energy-constrained embedded de-
vices is a widely researched topic [2]. Frameworks and operating systems like
Contiki[3]provideinfrastructuralsupportforprogrammingresource-constrained
devices through libraries of functions for managing memory, event handling,
and communication in an energy-efficient and resource-conscious manner. How-
ever, the design of the application logic itself can often become complex when
the available energy is not deterministic [2]. For such circumstances, BDI-style
agent programming offers benefits because the plans in its library could be for-
mulated and contextualized according to energy-related aspects. In [6], the Em-
bedded BDI framework [7] was used to program low-power sensors. Extending
this work, to the best our knowledge, our research is the first to demonstrate
a successful implementation of BDI agents on an embedded system which is
low-power, energy-harvesting, and battery-less. We use our implementation to
highlight some vital design integration points between such embedded systems
and BDI-based agent programming.
D
E
3 Approach
T
We based our battery-less sensor to observTe room temperature and humidity on
a hardware platform4 that is powered by an onboard energy-harvesting system
I
(see Figure 1 for details). We impleMmented the control logic for this sensor us-
ing the Embedded BDI framework. We find that the use of the BDI model in
energy-constrained devices is bBeneficial because the selection of a control strat-
egy(whichultimatelyrealizestheagent’sintentions)canbeexplicitlyandvisibly
U
contextualizedinthecurrentstateofthedevice(e.g.,theenergyavailableinthe
S
buffer), goal priorities, and concurrent desires (e.g., to conserve energy) while
simultaneously being reactive to changes (e.g., in available energy or network
state).
Afterthefirstiterationofimplementation,weexaminedtheapplicationpro-
gram and identified three key aspects that played a significant role in design-
ing the control logic. We now present these findings by abstracting away the
implementation-specific details and instead focusing on the high-level design-
related learnings that we believe are more widely valid (and interesting) for
agent-oriented programming for resource-constrained devices overall.
Energy impact of intents: A control program that operates unaware of
energy constraints risks emptying the buffer to the extent that it causes the
CPU to lose power unexpectedly. Therefore, the expected energy consumption
of actions such as using a peripheral device or the radio is estimated upfront
usingthehardwaredesignspecification,andtheprogramfunctionsaredesigned
accordingly. However, the actual consumption may vary at run time depending
ontheexactoperationalconditions.Forsuchcases,acontrolprogramcanpoten-
tiallyaccesstheEMUtoretrieveandlearn theenergyimpact.Forthispurpose,
4 https://www.infineon.com/cms/en/product/evaluation-boards/cyalkit-e02/4 Ramanathan et al.
we modeled the energy requirement of each intent as an associated belief. We
followed the convention that these beliefs carry the names of their associated
plans, with a prefixed e_. These beliefs can either be set at compile time (based
on estimates) or dynamically updated at run time before and after the intent
has been executed. As shown in Listing 1.1, this helps the agent choose a plan
which can be accomplished given the current state of the energy buffer.
Listing 1.1. Example code showing how an intents are contextualized by energy-
relatedbeliefs(whichinturn,areenrichedbyannotationspertainingtotheplatform)
1 e_meas_temperature(30)[persist("fram")]. //energy estimate (uJ)
2 e_available(0). //Energy (uJ) available for the application
3 e_tendency(0). //Rate of change in input energy (uJ/hr)
4 transmit_power(8)[impact(101)]. //8dBm needs 101mJ
5 transmit_power(4)[impact(30)]. //4dBm needs 30mJ
6
7 +!broadcast(A):transmit_power(P)[impact(E)] & A > E
8 <- start_ble_adv(P). //Tx power is chosen based Don available energy
9
10 +!meas_temperature: e_available(A) & e_meas_tE emperature(R) & A > R
11 <- energy_checkpoint(); T
12 read_trh_sensor();
13 !transmit_data; T
14 update_estimate("e_meas_temperaIture");
15 deep_sleep(). M
16
17 +!transmit_data: e_availableB (A) & e_tendency(I) & I > 50
18 <- !broadcast(A - 50). //U50mJ is held as reserve
19
20 +!transmit_data // AgS gregate and send later
21 <- store_for_later_tx().
Incorporating energy-related states as internal beliefs: Plans are of-
tencontextualizedbythestateoftheembeddeddevice.Specifically,information
aboutthestateoftheEmbeddedMicrocontrollerUnit(EMU)appearstobenec-
essary in most cases. We examined our implementation to identify states that
played a role in designing the energy-efficient control of the sensor and grouped
them into broad categories (see Table 1). As a general design suggestion, we
proposethatagentprogrammers(orevenembeddedsystemsdesigners)examine
the availability and relevance of device states in these categories to determine if
theycanplayaroleincontextualizingtheplansand,ifso,modelthemasbeliefs.
Further, since some device states such as network role have a relevant impact
onenergyconsumption,thefeasibilitytoannotatingbeliefswiththeirestimated
power consumption is helpful to contextualize plans in a more granular manner.
Lines 4-8 in Listing 1.1 illustrate this possibility.
Distinguishing the lifetime of beliefs: Low-power embedded platforms
often support something known as the deep-sleep mode where the RAM andTitle Suppressed Due to Excessive Length 5
Table 1. Relevant device states for determining energy-conscious agent behavior.
State Use in control logic
Device mode Entering active mode signals agent to add measurement goal
Network role Remain in BLE peripheral role when energy is low
Network state Update BLE advertisement payload only when the radio is initialized
Buffer size To determine the advertisement interval
Buffer state Adapt BLE transmit power to conserve energy
Buffer input rateReduce advertisement interval when ambient light decreases
most peripherals are powered down to save energy. Before entering this mode,
applications can store required data in non-volatile memory. However, this has
to be used with constraint since accessing it impacts energy consumption. Fur-
thermore, multiple different options for non-volatile storage (e.g., Flash as well
as FRAM) may be available on the same device. To enable distinguishing be-
liefs that should be persisted, we propose to annotate beliefs with a custom
fieldpersist(none|fram|flash).Weextendedthecross-compilertocreatetwo
D
functionskeletonspersistandrestore,whicharecalledwithalistofvariables
E
(and their storage location) when the device mode changes.
T
4 Evaluation T
I
M
In the second iteration of our implementation, we systematically considered the
designaspectsdescribedintheprecedingsection.Thebroadcategoriesofthede-
B
vicestateweidentifiedasrelevanttocontextualizingtheplansservedasahelpful
guidelineduringprogrammiUng.Amorepracticaladoptionofthisapproachcould
be facilitated by a toolSthat automatically extracts such beliefs from variables
flagged in the hardware abstraction layer of the embedded system.
The platform-agnostic assignment of beliefs as long- or short-term can be
achieved through annotations; beyond the advantages this brings for embedded
BDI, such annotations could furthermore be used to qualify the use of a belief
whencontextualizingaplan:forinstance,aplanmayonlyrelyonbeliefsthatare
long-term. By quantifying the energy impact of each intent, we can ensure that
the agent never chooses an intent that is expected to cause the device to power
downunexpectedly.Thisapproachalsosimplifiestheintroductionofalternative
plans, potentially leading to a more efficient utilization of energy.
Our initial comparisons of the energy consumption of the BDI-based im-
plementation with a traditional C program did not reveal a large difference;
however, further tests are required to quantify this.
In conclusion, our findings demonstrate that infusing agent programs with
energy-relevant knowledge is highly beneficial for creating BDI-based software
for energy-conscious settings. This approach facilitates the construction of con-
trol logic that achieves higher utilization of the available energy and addresses
challenges from the conflation of energy-related aspects and functional aspects
of the system, a significant advantage in energy-conscious settings.6 Ramanathan et al.
References
1. Boissier,O.,etal:Multi-agentorientedprogrammingwithjacamo.ScienceofCom-
puter Programming 78(6), 747–761 (2013)
2. Gomez, A.: Design and Specification of Batteryless Sensing Systems. Ph.D. thesis,
ETH Zurich (2018)
3. Oikonomou, G., et al: The Contiki-NG open source operating system for next
generation IoT devices. SoftwareX 18, 101089 (2022). https://doi.org/https:
//doi.org/10.1016/j.softx.2022.101089
4. Rao, A.S., Georgeff, M.P., et al.: Bdi agents: from theory to practice. In: Icmas.
vol. 95, pp. 312–319 (1995)
5. dos Santos, M.M., Hübner, J.F., de Brito, M.: Directions for implementing bdi
agents in embedded systems with limited hardware resources
6. Vachtsevanou, D., et al: Embedding autonomous agents into low-power wireless
sensor networks. In: International Conference on Practical Applications of Agents
and Multi-Agent Systems. pp. 375–387. Springer (2023)
7. William,J.,etal:Increasingtheintelligenceoflow-powersensorswithautonomous
agents.In:Proceedingsofthe20thACMConferenceonEmbeddedNetworkedSen-
sor Systems. pp. 994–999 (2022) D
E
T
T
I
M
B
U
S