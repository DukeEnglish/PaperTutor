AI METROPOLIS: SCALING LARGE LANGUAGE MODEL-BASED
MULTI-AGENT SIMULATION WITH OUT-OF-ORDER EXECUTION
ZhiqiangXie1 HaoKang2 YingSheng1 TusharKrishna2 KayvonFatahalian1 ChristosKozyrakis 1
ABSTRACT
Withmoreadvancednaturallanguageunderstandingandreasoningcapabilities,largelanguagemodel(LLM)-
poweredagentsareincreasinglydevelopedinsimulatedenvironmentstoperformcomplextasks,interactwithother
agents,andexhibitemergentbehaviorsrelevanttosocialscienceresearchandinnovativegameplaydevelopment.
However, current multi-agent simulations frequently suffer from inefficiencies due to the limited parallelism
causedbyfalsedependencies,resultinginperformancebottleneck. Inthispaper,weintroduceAIMetropolis,a
simulationenginethatimprovestheefficiencyofLLMagentsimulationsbyincorporatingout-of-orderexecution
scheduling. Bydynamicallytrackingrealdependenciesbetweenagents,AIMetropolisminimizesfalsedepen-
dencies,enhancingparallelismandenablingefficienthardwareutilization. OurevaluationsdemonstratethatAI
Metropolisachievesspeedupsfrom1.3×to4.15×overstandardparallelsimulationwithglobalsynchronization,
approachingoptimalperformanceasthenumberofagentsincreases.
1 INTRODUCTION canserveaspredictivemodels,forecastingreal-worldhu-
manbehaviors,whichishighlyvaluableforsocialscience
Large Language Models (LLMs) are advanced machine
research(Ziemsetal.,2023;Grossmannetal.,2023).
learningmodelstrainedonvastamountsofdata,excellingin
understandingandgeneratingnaturallanguage. Theyhave Despite the significance of simulation environments for
transformed natural language processing, enabling high- LLMagents,theefficiencyofmanagingsimulationstates
accuracy applications like text completion (Merity et al., andschedulingLLMrequestsinsimulationsareoftenover-
2016), summarization(Narayanetal.,2018), andreason- looked,leadingtoslowandinefficientsimulationprocesses.
ing(Cobbeetal.,2021). Beyondsimplequeriesandchat- Recent research work commonly implements their LLM
botinteractions(OpenAI,2024a),thereisgrowinginterest agents simulation (Park et al., 2023; Gong et al., 2023)
in using LLMs to create self-planning, decision-making, directlyadheringtoaparadigmborrowedfromreinforce-
problem-solving,andreasoningengines(Wangetal.,2024). ment learning agent training and traditional multi-agent
Theseadvancementsaimtodevelophuman-likeagents(Xi simulation (Emau et al., 2011), where simulation time is
et al., 2023) capable of performing complex tasks, inter- discretizedintotimestepsandastep(orsimilar)function
acting with environments and other agents, and making is invoked to apply agents’ actions, synchronize the en-
informeddecisionsbasedoncontext. vironment, and coordinate agents at each interval. This
pattern, illustrated in Algorithm 1, is prevalent in promi-
ThisinterestisparticularlypronouncedindevelopingLLM-
nent reinforcement learning frameworks such as OpenAI
poweredagentswithinsimulatedenvironments,wheretwo
Gym(Brockmanetal.,2016),MetaPearl(Zhuetal.,2024),
uniqueopportunitiesarise. First,simulationenvironments
and TensorFlow Agents (Guadarrama et al., 2018). The
provide an efficient platform for testing and tuning LLM
rationalebehindthisdesignisthatglobalsynchronization,
agents (Dubois et al., 2024; Liu et al., 2023; Wang et al.,
enforcedthroughthestepfunction,easilymaintainstempo-
2023b),withpotentialapplicationsextendingtoreal-world
ralcausalitywithinthesimulationbyserializingtasksalong
settingsorvirtualenvironmentslikegaming. Second,the
thesimulationtimeaxis.
enhancednaturallanguageunderstandingandreasoningca-
pabilitiesofLLMshavesparkedatrendofexaminingemer- Whilethisdesignsuitstheneedsofreinforcementlearning
gentsocialbehaviorsoftheseagentsingame-likesimula- andtraditionalmulti-agentsimulations,wefounditineffi-
tions(Parketal.,2023;Altera.ALetal.,2024).Suchstudies cientforLLMagentsduetotheiruniqueperformancechar-
acteristics,necessitatinganewschedulingapproach. Sim-
1StanfordUniversity2GeorgiaInstituteofTechnology.Corre-
ulationsinvolvingLLMagents, likeotherLLM-powered
spondenceto:ZhiqiangXie<xiezhq@cs.stanford.edu>.
applications,areheavilydominatedbyinferencetime. Tak-
ingthepioneeringworkongenerativeagents(Park,2024)
4202
voN
5
]CD.sc[
1v91530.1142:viXraAIMetropolis
(GenAgent)asanexample,ourtraceanalysisrevealsthat theoriginalGenAgentimplementation(Park,2024)across
approximately95%ofthesimulationtimeisdedicatedto differentmodels,GPUs,andsimulationscales. Theresults
LLM inference. Consequently, inference throughput be- demonstratethatAIMetropolisoutperformsthestandard
comes crucial, as higher throughput directly translates to approach of parallel simulation with global step synchro-
shortercompletiontimesandlowercosts. Furthermore,re- nization,achievingspeedupsfrom1.3×to4.15×,andap-
centstudiesonLLMservingengines(Kwonetal.,2023; proachinganorderofmagnitudeimprovementovertheorig-
Zheng et al., 2024) indicate that large batch sizes are es- inalGenAgentimplementation. Asthenumberofagents
sentialforachievinghighinferencethroughput. Unfortu- increases,AIMetropolisrapidlynearsoptimalperformance,
nately,thetraditionalapproach,whichenforcesstep-wise demonstratingitsscalabilityandeffectivedependencyman-
temporalcausalityacrosssimulationsteps,introducesexces- agement. We plan to open-source AI Metropolis to ac-
sivesynchronizationthatsignificantlyreducesparallelism, celerateresearchinlarge-scaleLLMagentsimulationand
therebyreducingachievablebatchsizesandleadingtolow releasethecollectedtracestofillacriticalgapinLLMserv-
throughput. Thisreductioninparallelismoccursbecause ingbenchmarks,particularlygiventheuniqueandcomplex
theexecutiontimesofLLMqueriesfromdifferentagents dependencypatternsamongLLMcalls.
withinasimulationstepcanvarysignificantlyduetotwo
mainreasons: (1)variationsintheinputandoutputlengths
Algorithm1TraditionalSimulationScheduling
of queries, and (2) differing numbers of queries sent by
differentagents. Asaresult,enforcingglobalsynchroniza- 1: Input: target step,agents,world
tioncausesmanyagentstowaitunnecessarilyforeachstep 2: Initialize: step←0
tocomplete,limitingconcurrentLLMqueriesandfurther 3: whilestep<target stepdo
reducing throughput. This reduction in parallelism also 4: actions←[ ]
hampersscalability,asaddingmoreresourcesfailstomean- 5: forallagentinagentsdo
ingfullydecreasetheoverallsimulationcompletiontime. 6: actions.append(agent.proceed(world))a
7: endfor
Our key observation is that temporal causality in simula-
8: world.step(actions)
tionscanbemaintainedwithoutthecostlyglobalstep-wise
9: step←step+1
synchronizationinthesimulation. Intuitively,iftwoagents
10: endwhile
arefarapartinasimulatedworld,theactionsofoneagent
willnotbeimmediatelyvisibletotheother. Thismeansthat aTheproceedfunctioninvolvesLLMcallstoprocesstasks.
itisoftenunnecessaryforallagentstowaitforeachstepto
finishbeforeproceeding,revealingafalsedependencythat 2 SIMULATION OF LLM AGENT
canberemovedtoimproveefficiencyinthesimulation.
INTERACTION
Toaddresstheaforementionedchallenge,inthispaper,we
2.1 Background
presentAIMetropolis,amulti-agentsimulationenginefor
LLM-powered agents that introduces the concept of out- Whilesimulationenvironmentscanbediversewithcomplex
of-orderexecutiontosimulationscheduling. Bycarefully actionspacesandinteractions,thehigh-levelprocedureofa
trackingrealdependenciesbetweenagentsduringruntime, simulationgenerallyfollowsacommonpatternasoutlined
wecaneffectivelyeliminatemostfalsedependencies. This in Algorithm 1. In this pattern, agents determine future
approach allows certain agents to advance in simulation actions based on the current world states as well as their
timeaheadofotherswithoutaffectingthesimulation’sout- internalstates,andtheseactionsaffecttheworldasthesim-
come, which significantly enhances parallelism and thus ulationprogresses. Notetheagent.proceedandworld.step
better utilizes hardware with larger inference batch sizes. functionsaredefinedbytheagentdevelopersandenviron-
Dependencytrackingisachievedbyanalyzingthetemporal- mentrespectively,andcanbeimplementedbymanualrules
spatialrelationshipsbetweenagents,wherethenumberof orviainvokingLLMs(orboth)fordecisionmaking.
steps an agent can advance is determined by its distance
Toillustratethechallengeofachievingefficientsimulation,
fromotheragents. Similartothescoreboardinout-of-order
weuseGenAgentasaconcreteexamplewithinthebroad
executionalgorithms,AIMetropolismaintainsaspecialized
familyofsimulationsforLLMagentinteraction. GenAgent
dependencygraphtoefficientlytracktheserelationships.
proposes a comprehensive agent architecture and interac-
AIMetropolisprovidesLLMagentdeveloperswithinter- tionmechanismsthathaveinspiredmanysubsequentworks.
facessimilartoOpenAIGym(Brockmanetal.,2016),while Their concepts and workflows are widely adopted in the
seamlesslymanagingsimulationstateupdates,databaseI/O, community. InGenAgent,25agentsinhabitaworldcalled
scheduling,andLLMinferenceprocesses. WeevaluatedAI SmallVille,akintoagrid-basedgame.Eachagentpossesses
Metropolisbyreplayingtracescollectedfrominstrumenting itsownpersonality,socialrelationships,anddailyroutines.AIMetropolis
0 100 200 300 400 500
Time (s)
Figure1.Asnippetoftheexecutiontraceofasimulation. The
x-axisshowstheelapsedexecutiontime,witheachrowrepresent-
inganagent’sstreamofLLMinvocations. Coloredbarsdenote Figure2.Thedependencybetweenagents’tasksisintroducedby
differentagentfunctions,andblackdashedverticallinesindicate temporal causality. The top illustration shows an overly strict
thecompletionofeachstep. enforcement of this dependency, while the bottom illustration
depictsacaseofactualdependency.
Theynavigatetheworld,interactwithobjects,andconverse
withotheragents. Theagent.proceedfunctiononline6of by different agents, further introducing imbalance. Our
Algorithm 1 is expanded to Algorithm 2 to detail several measurementsindicatethatforafull-daysimulationof25
steps: perceivingsurroundings,planningactionsbasedon agents, there are, on average, only 1.94 concurrent LLM
recentevents,recallingrelevantpasteventsfrommemory, queriesthroughoutthesimulation.
followingastructureddailyroutine,andoccasionallyreflect-
ingontheiractionsorexperiences. Eachofthesestepscan
FalseDependency. Whiletheworkloadimbalanceacross
involveLLMcalls. Eachstepcorrespondingtotenseconds
agentsmightbeinevitable,lowparallelismisnot. Wefound
insimulatedtimeinGenAgent.
that the primary cause of idleness is the overly strict en-
forcement of time causality. Requiring all events in one
Algorithm2ProceedfunctioninGenAgent
time step to complete before advancing to the next step
1: Input: agent,world introduces unnecessary dependencies. As shown in Fig-
2: Output: action ure2,thisapproachcreatesanimplicitall-to-alldependency
3: perceived events←agent.perceive(world) acrossagentsinconsecutivesteps. However,someagents,
4: retrieved events←agent.retrieve(perceived events) such as agent A, may be sufficiently isolated and unable
5: action←agent.plan(world,retrieved events) tointeractwithothers,thusnotcreatingdependencieson
agentslikeBorC. Ourtraceanalysisforawholedaysim-
ulationofGenAgentindicatesthat,onaverage,eachagent
isdependentononly1.85agents(includingitself)fromthe
2.2 MotivationandChallenges
priorstep, farlessthanthedefault25. Theissueoffalse
Imbalanced workload reduces available parallelism. dependenciesworsensastheagentcountgrows, asmore
Althoughline5inAlgorithm1suggeststhatparallelismcan falsedependenciesareenforced,diminishingthebenefits
beachieveduptothenumberofagents,theeffectiveparal- of increased parallelism. Although agents’ behaviors are
lelismisoftenmuchlessprimarilyduetotheimbalanced drivenbyresponsesfromLLMs,whichlimitsascheduler’s
workload across agents. As illustrated in Figure 1, there abilitytooptimallymanagedependencieswithoutforesight,
are moments when many agents send out LLM requests agentbehaviorisstillsomewhatpredictable.Agentsarecon-
uniformly. However,forthemajorityoftheexecutiontime, strainedbytheirmovementspeedandlimitedactionspace,
afewagentsdominateeachstep,resultinginprolongedidle providinganopportunitytoreducemostfalsedependencies
periodsformanyotheragentswhoissuenoLLMqueries. throughanalysisofagents’temporal-spatialrelationships.
Thissparsityisaninherentfeatureofsimulation,asdiffer-
entagentshavetheirownschedulesandencounteredevents, RequestsofDifferentPriorities. Thedependencylens
makingevendistributionsunlikely. Additionally,asshown alsorevealssomethinguniqueaboutsimulationcomparedto
inFigure1,evenforthesametypeofLLMcalls,comple- commonLLMserviceslikechatbots: therearelongcritical
tionscanvarysignificantlydependingoninputsprovided paths in the task of simulation, consisting of a chain ofAIMetropolis
LLMcallsthatcannotbeparallelized. Therefore,requests tioncorrectness. Thisisformallydefinedin§3.2.
havedifferentpriorities;thoseonthecriticalpathshouldbe
servedbeforenon-criticalrequeststominimizetheoverall • Coupled: AgentsAandB, becomecoupled ifthey
completiontimeasmuchaspossible. aresufficientlyclose,interactwitheachother,andthus
mustproceedtogether. Thisisformallydefinedin§3.2.
3 DESIGN OF AI METROPOLIS • Cluster: Aclusterisagroupofcoupledagentsatthe
samestep.Eachagentcanindependentlyissuerequests
Motivated by observations described in §2.2, we design
to LLMs within its proceed function. However, the
AIMetropolis,anoptimizedsimulationenginethatserves
entiregroupneedstosynchronizeattheendofthestep
as middleware between the developer-defined world and
to resolve potential conflicts and avoid dependency
agentsandtheLLMservingengine,efficientlymanaging
violationsasdescribedin§3.2.
state updates and scheduling LLM queries. By allowing
agents to progress at varying speeds based on their LLM • Worker: Aworkerisaprocessthathandlesoneclus-
callloads,AIMetropoliseliminatestheneedforfrequent ter,toproceedonestepatatime. Withintheworker
global synchronization, reducing false dependencies and process,eachagentintheclusteroperatesinitsown
maximizingparallelism. Algorithm3providesanoverview threadtocommunicatewiththeLLMservingengine
ofthenewschedulingworkflowadoptedbyAIMetropolis, and process its tasks. Workers are independent pro-
contrasting it with the traditional time step synchronized cesseswithoutsynchronizationbetweenthem,andthe
schedulingshowninAlgorithm1. numberofworkerscanbeadjustedbasedonavailable
CPUresources.
Algorithm3AIMetropolisSchedulingWorkflow
• Controller: The controller is the main process of
1: Input: target step,agents,world
the simulation engine. After initializing the world,
2: Initialize: base step←0,ready agents←agents
it periodically communicates with workers through
3: worker pool←InitProcessPool(process routine)
two queues: it prepares tasks for workers via the
4: ready queue←PriorityQueue()
ready queueandconfirmsthecompletionofclusters
5: ack queue←PriorityQueue()
fromworkersthroughtheack queue.
6: dependency graph←Graph(agents)
{Controller}
During a simulation, workers continuously pull clusters
7: whilebase step<target stepdo
fromtheready queue. Afterfinishingthestepforacluster,
8: ready clusters←geo clustering(ready agents)
aworkerupdatesthedependencygraphstoredinadatabase
9: ready queue.put(ready clusters)
forallagentsintheclusterandthenplacesthecompleted
10: ack cluster←ack queue.get()
clusterintheack queueasacompletionconfirmation. Si-
11: ready agents←update agents(agents,ack cluster)
multaneously,thecontrollercontinuouslypullsnotifications
12: base step←update base step(ack cluster)
from the ack queue. Each time it processes a confirma-
13: endwhile
tion,itqueriesthedependencygraphtofilterouttheagents
{Worker}
that are not blocked, creating new ready clusters out of
14: whilebase step<target stepdo
the ready agents and placing them into the ready queue
15: cluster←ready queue.get()
promptly. This workflow allows agents to advance steps
16: actions←[]
ahead of others as long as dependency permits. Notably,
17: forallagentinclusterdo
boththeready queueandack queuearepriorityqueuesthat
18: actions.append(agent.proceed(world))
automaticallysorttasksbasedontheirassociatedsteps.
19: endfor
20: world.resolve conflict and commit(actions) Wediscussthethedependencytrackingmechanismin§3.2,
21: dependency graph.update(cluster) thespatiotemporaldependencygraphrealizingthemecha-
22: endwhile nismin§3.3,agentclusteringin§3.4,priorityschedulingin
§3.5,andkeyimplementationdetailsin§3.6.
3.1 Overview 3.2 DependencyTracking
BelowweexplaintheessentialtermsinAIMetropolis: Asdescribedin§2.2andshowninFigure2,temporalcausal-
ityintroducesthedependenceoftasksinasimulation.Using
• Blocked: AnagentAbecomesblockedifithastowait thelanguageofcomputersystems,temporalcausalitycre-
foranotheragentBtofinishthecurrentstepbeforeit atesanorderofasetofreadsandwritesonasharedmemory.
canproceed,ensuringtemporalcausalityandsimula- At the beginning of each step, agents read different partsAIMetropolis
oftheenvironmentandattheend, theycommitwritesto
differentparts. Therefore,thetasksofanagentacrossdiffer-
A@x C@y F@z
entstepsmustbeserialized,asitreadswhatitwroteinthe
laststep. Thedependencybetweentasksofdifferentagents
can then also beformulated as a read-after-write data de- B@x D@y E@y
pendency. FortwoagentsAandB,ifAisabouttoobserve
apartoftheworldatstepStep ,andB isabouttowrite
A
tothatpartoftheworldatstepStep . ifStep issmaller
B B
Figure3.Anexampleofaspatiotemporaldependencygraph.Each
thanStep ,meaningthewriteisdesignedtohappenbefore
A node,suchasA@x,representsanagent(A)ataspecifictimestep
theread,thenAmustwaitforB tocompletestepStep
B (x). Singlearrowsindicatedependencies, whiledoublearrows
beforestartthetasksinstepStep .
A represent coupled relationships between agents. Purple boxes
denoteclustersofagents,wheregreennodesindicateagentsthat
In simulations, each agent typically perceives only a por-
arereadyforexecutionandorangenodesrepresentblockedagents.
tion of the world, defined as the surrounding area within
aspecifiedsize—denotedasradius p. Wealsoassumea
maximumspeedlimit,denotedasmax vel,governingboth
regiontofinish,evenifthewritedoesnotoccureventually.
agents’movementandinformationpropagationwithineach
Whilethismaystillpreservesomefalsedependencies,we
step. Forinstance,inGenAgent,anagentperceivesanarea
showin§4thatitachievesperformanceclosetotheoptimal.
withinaradiusof4gridunitsandcanmodifythestatusof
Additionally,thisdesigndoesnotrequireadataracedetector
anadjacentgridbyinteractingwithanobjectoragentonit
and correction mechanism, making it more scalable and
ormovingtoit. Thisdefinestheregiontheagentcanread
easiertoimplement.
from and write to. Consequently, to maintain read-after-
writedatadependency,thefollowingconditionmusthold
3.3 SpatiotemporalDependencyGraph
throughoutthesimulation:
Therulesdefinedin§3.2defineaspecializeddependency
∀agentsA,B, andtheircurrentstepsStep andStep ,
A B graphthattracksdependenciesbetweenagents. Eachnode
ifStep A ̸=Step B,thendist(A,B)>radius p in the graph represents an agent, containing its temporal
+(|Step −Step |−1)×max vel (timestep)andspatial(coordinatesonthemap)information.
A B
AnedgeA→BindicatesthatagentBiscurrentlyblocked
wheredist(A,B)denotesthedistancebetweenAandB. byagentA,whileA↔BsignifiesthatagentsAandBare
Thisensuresthatareadinalaterstepwillnevertouchthe coupledasshowninFigure3.
regionthatawriteinapriorstepmightinfluence.Intuitively,
Oursystemmaintainsthisgraphinanin-memorydatabase,
thismeansthatagentsneverperceiveotheragentswhoexist
andwheneveraworkeradvancesaclustertothenextstep,
atdifferenttimes. Toenforcethiscondition,wecanderive
itappliestherulestore-examinetherelationshipsofeach
thefollowingrulestodeterminetherelationshipsbetween
agent in the cluster with any other relevant agents. Any
thetasksofagents. Thecompletederivationcanbefoundin
changesarethenwrittentothedatabase. Theexamination
AppendixAandthefollowingaretherulesAIMetropolis
and graph updates are encapsulated within a transaction
uses: foranytwoagentsAandB andtheirtasksinsteps
toensuredataconsistency. Afterward,theworkerprocess
Step andStep ,
A B placesacompletionconfirmationintotheack queue.
• WedefinethatAandBarecoupledifStep =Step The dependency graph will be utilized by the controller
A B
anddist(A,B)≤radius p+max vel,whichmeans process for efficiently identifying the agents that are not
theymustbegroupedintothesameclusterandproceed blocked,allowingittoreleasemaximumparallelism.
tothenextsteptogether.
3.4 AgentClustering
• We define that A is blocked by B if dist(A,B) ≤
(Step −Step +1)×max vel+radius p,which Whenagentsarecloseenoughtoeachother,theyperceive
A B
meansAcannotstartitstasksinstepStep untilB each other’s actions committed in the last step. In other
A
hasproceededtothenextstep. words, they collectively read what they wrote in the last
step. Theymightalsoencounterwriteconflictsthatmust
• Aclustercanfreelyadvancetothenextstepifnoneof beresolvedbydeveloper-specifiedrules;forexample,two
itsagentsareblockedbyanyotheragent. agentsmightbothwanttousethebathroom,butonlyone
canstepin. Thesepotentialinteractionscouplethemintoa
Notethatthissetofrulesareconservative,meaningtheread clusterthatmustproceedtogether. Whenevertherearenew
inthelaterstepwillwaitforallpotentialwritestoacertain ready agents who are not blocked, the controller processAIMetropolis
runs geo clustering to group coupled agents into clusters DecouplingSimulationEnginefromLLMServingEn-
basedontheruledescribedin§3.2. Ifnoneofthemembers gine. InAIMetropolis,onlyworkerscommunicatewith
ofaclusterareblocked,theclusterisconsideredreadyand theLLMservingenginethroughathinshimlayer,providing
willbeplacedintotheready queue. Usingclustersasthe easyobservabilityandscalability.
minimalsynchronizedunits,asopposedtosynchronizing
We implemented the core of AI Metropolis in about 1k
allagentsasdescribedinAlgorithm1,effectivelyreduces
linesofC++and2klinesofPythoncode. Anadditional3k
falsedependenciesandschedulingoverhead.
linesofPythoncode(excludingassetsandprompts)were
writtentoporttheGenAgentsimulationusingourinterfaces.
3.5 PriorityScheduling
This is about 50% of the code compared to the original
Asmotivatedin§2.2,allowingagentstoprocesstasksas- implementation, achieving up to an order of magnitude
sociated with different time steps simultaneously creates speed-upandpromisingscalability,asdemonstratedin§4.
requestsofvaryingpriorities. Wefoundthatthetimestep
associatedwitharequestservesasagoodmeasureofits 4 EVALUATION
priority. Awriteoperationinapriorstepcanblockmany
readsinsubsequentsteps;intuitively,thesmallerthetime Intheevaluation,weaimtoanswerthefollowingquestions:
step, the more future actions it can potentially block. To
enhanceparallelism,wemaintainboththeready queueand • DoesAIMetropoliseffectivelyenhanceparallelismby
ack queueaspriorityqueues,prioritizingtheexecutionof trackingrealdependencies,andhowdoesthistranslate
tasksfromearliersteps. NopreemptionduringLLMinfer- toshortercompletiontimes?
enceisappliedasthatmightcauseextraoverhead(Sheng
• DoesAIMetropolisscaleasthesizeofthesimulated
et al., 2023b). We demonstrate the effectiveness of this
worldincreasesandthenumberofagentsgrows?
priorityschedulingin§4.4.
• GiventhatAIMetropolisdoesnoteliminateallfalse
3.6 SystemImplementation dependenciesasillustratedin§3.2,howwelldoesit
performcomparedtotheoptimalsolution?
Inadditiontothedesignchoicesarounddependencyman-
agement,clustering,andpriorityschedulingthatenableAI
Wedescribetheexperimentalsetupin§4.1anddiscussthe
Metropolistoexposemoreparallelismfromthesimulation,
performanceresultsoffull-daysimulationsatasmallscale
itisalsoworthhighlightingsomeofthedesignchoicesthat
in§4.2,whichusesthesamesimulationsettingsreported
makeAIMetropolisscalable:
intheGenAgentpaper. Wethenexaminetheperformance
comparisonsasthesizeoftheworldincreasesandthenum-
ProperMappingofParallelism. Choosingtherightpro-
berofagentsgrowstoathousand,assessingscalabilityin
grammingabstractionfordifferenttasksiscriticaltoscala-
§4.3. Finally,weconductaperformancebreakdownin§4.4
bility.AIMetropolisemploysthreadsforagents,astheneed
todemonstratetheeffectivenessofpriorityscheduling.
forsynchronizationwithinclustersrequireslow-overhead
communication. Processesareusedforthecontrollerand
4.1 Methodology
workerstoavoidthePythonGILandtoenablescalingbe-
yondasinglemachine. Serving Engine. We use SGLang (Zheng et al., 2024)
(v0.1.17) as the LLM serving engine, as it is not only
LightandFastCriticalPathontheControllerProcess. one of the state-of-the-art LLM serving engines but also
All tasks on the critical path are implemented in C++ to lightweightandeasytoinstrumentandmodify. Forconsis-
reduceoverheadandbypassthelimitationsofthePython tentandstableperformancebenchmarkresults,weturned
GIL.Furthermore,heavylifting,includingcomplexagent offitsautomaticcommonprefixcachingfeature;however,
processinglogicanddependencygraphupdates,isoffloaded enablingthecachegenerallyprovidesabouta20%through-
toconcurrentworkers. Thisapproachlightensthecritical putgainacrossallsettings.
pathforthecontrollerprocess,minimizingworkers’waiting
timefortaskallocation. Model and Hardware Platform. We benchmarked AI
MetropoliswithvariousmodelsandGPUstoassessitseffec-
ScalableI/O. Exceptforready queueandack queue,all tivenessacrossdifferentsizesandcomplexities. Wechose
inter-process synchronization are handled through an in- state-of-the-artopen-sourceLLMsfromtheMetaLlama-3
memory(Redis)database. Thisdatabasealsohandlestrans- instructseries(Meta,2024). Communitybenchmarks(Chi-
actionalupdatesforallsimulationstatesandstoresinstru- angetal.,2024)indicatethatthesmallest8Bmodelalready
mentationdata,supportingautomaticscalabilitybeyonda surpassestheChatGPT-3.5modelusedintheoriginalGenA-
singlenode. gentpaper,makingitidealforperformanceevaluation. WeAIMetropolis
(a)SimulationusingLlama-3-8b-instruct (b)SimulationusingLlama-3-70b-instruct
onNVIDIAL4GPU onNVIDIAA100GPUs (c)LLMquerydistributioninsimulation
Figure4.(4a,4b)End-to-end25agentsfulldaysimulationcompletiontimewithdifferentnumberofGPUs.(4c)showsthedistributionof
LLMcallsoverthesimulatedhours,notethelowactivityperiodduring1am-4amisbecauseallagentsaresleeping.
benchmarkedoursystemwithboththe8Band70Bmodels. forafullsimulationday.
The8Bmodeloffersalightweightdeploymentoption,while
Thefollowingexperimentsettingsareusedinbenchmark:
the 70B model provides advanced capabilities, though at
a higher cost. For the Llama-3 8B experiments, we used
• single-threademploysasinglethreadtohandlesimu-
NVIDIAL4GPUsonGCPG2instances,scalingfromone
lationstatesandissueLLMrequests,asperthedesign
toeightGPUstoassessdataparallelism. FortheLlama-3
adopted by the original implementation to simplify
70Bexperiments,weusedNVIDIAA100-80GBGPUs,ap-
simulatorimplementation. Noparallelismisexposed
plyingtensorparallelismacrossfourGPUs,andexpanding
forLLMrequestsfromdifferentagents.
toeightGPUsforahybriddataandtensorparallelismcon-
figuration. Additionally, we benchmarked AI Metropolis • parallel-sync is a stronger baseline where all agents
usingtheMixtral-8×7B-Instruct-v0.1(MistralAI,2023)
operatewithinthesametimestepandissueLLMre-
model,amixtureofexpertmodels,onthesameA100plat-
questsindependently,thoughglobalsynchronization
formwhichcanleveragehigherdataparallelismtoreveal
limitsachievableparallelismasdiscussedin§2.2. We
moreperformancecharacteristics.
implementedthisbaselineasamodeofAIMetropolis.
Traces. Wecollectedworkloadtracesfor40simulation • oraclerepresentstheoptimaldependencymanagement
daysofGenAgentbyinstrumentingtheoriginalimplemen- solution for comparison. This setting constructs an
tation(Park,2024)andrunningitmultipletimesusingthe optimaldependencygraphbyanalyzingthefulltrace
samesettingsreportedinthepaper. OpenAIGPT-3.5API andminingallnecessarydependenciesbasedonagent
service(OpenAI,2024b)wasusedastheLLMengineas interactions. Forexample,iftwoagentsappearineach
thesamesettinginthepaper. Onaverage,eachsimulation other’sobservationspace,theysynchronizebeforeand
day’straceconsistsof56.7kLLMcallevents. Eachevent afterthesteptoensuretemporalcausality. Thissetting
includestheinputprompt,configurations,LLMresponse, isunattainableinrealsystemsandservestoillustrate
callingstep,andcaller’sidentity. Aseparatetracefiletracks thepotentialimprovementofdependencymanagement.
theagent’smovementsthroughoutthesimulation. Theaver- By having an optimal dependency graph, the most
agelengthofinputtokensis642.6,andtheaveragelength availableparallelismwillbereleased.
of output tokens is 21.9. We conducted the performance
• criticalreferstothecriticalpathofthesimulation,ex-
benchmarkusingthereplaymodeofAIMetropolis,faith-
tractedfromtheoptimaldependenciesusedintheor-
fullyreplayingthesetracestoensurethesamemovements,
aclesetting. Itidentifiesthepathcontainingthemost
interactionpatterns,inputs,andthesamelengthofgenera-
LLMinputandoutputtokens,settinganlowerbound
tionoutputbysettingignore eosinSGLangforcomparable
ofcompletiontimeregardlessofavailableresources.
andstableperformanceresults.
First, AI Metropolis outperforms the single-thread and
4.2 FullDaySimulationinSmallVille
parallel-sync baselines by 2.38× and 1.44× on a single
We benchmark AI Metropolis using the same setup de- L4GPU.AsmoreGPUsareadded,requiringgreaterpar-
scribedintheGenAgentpaper,whichinvolves25agents allelism, the speedup increases to 3.25× and 1.67× re-
withinaworldnamedSmallVille,a100x140grid,running spectively on 8 GPUs. We also measured the achievedAIMetropolis
Figure5.Benchmarkofbusy(12a.m.-1p.m.)andquiet(6a.m.-7a.m.)hoursusingLlama-3-8b-instructonNVIDIAL4GPUs,with
agentcountsscaledfrom25to1000.Single-threadresultsfor500and1000agentsareprojectedbasedonworkloadestimations.
parallelism for each simulation by averaging the number ducesstraightforwardparallelism,ratherthanfocusingon
ofoutstandingrequestsovertheexecutiontime,whereAI thecriticalpath,whichisartificiallyshortenedduetothe
Metropolisreached3.46,comparedto0.95forsingle-thread lackofinteractionbetweendifferentpartsofthelargeville,
and1.94forparallel-syncon8GPUs. Theseresultsalign weintroduceno-dependencyasamoresuitablelowerbound
withtheobservedspeedups,asgreaterparallelismimproves forcompletiontimewhenscalingagents. Inthissetting,all
GPUutilizationandoverallperformance. LLMcallscanbeissuedsimultaneously,maximizinghard-
wareutilization. InFigure5,7and6,thegpu-limitusesthe
AIMetropolisalsoapproachesoracleperformance,reach-
shortercompletiontimeofthecriticalandno-dependency
ing 74.7% of the oracle performance on 8 GPUs and up
settings. Moreover,forbenchmarkwithalargernumberof
to82.9%onasingleGPU.Thegapstemsfromthelonger
agents,weoptedtofocusontwospecificintervalsfroman
criticalpathinAIMetropoliscomparedtooracle,asitcon-
entireday’ssimulation,asillustratedinFigure4c: thebusy
servativelyrestrictscertainagentsfromadvancingtoprevent
hour (12 PM - 1 PM, approximately 5,000 calls) and the
potentialtemporalcausalityviolations,aselaboratedin§3.
quiethour(6AM-7AM,approximately800LLMcalls).
Wefurtherdiscussthisgapin§6.
Thissetupshortensexperimenttimeandhighlightsscaling
A similar trend is observed in benchmarks conducted on effects across different workloads, where busy hours fea-
A100GPUswithlargermodels. AIMetropolisachievesa turelongconversations,andquiethoursaremainlyroutine
2.45×and1.45×speedupcomparedtosingle-threadand activitieswithlessLLMqueriesasagentsjustwakeup.
parallel-sync, respectively, andattains82%oftheoracle
ThebenefitsofAIMetropolisincreasewithincreasingnum-
performance on 8 GPUs. Additional speedups are antic-
bersofagents. Figure5showsthatAIMetropolisachieves
ipated with higher data parallelism, given the oracle-to-
closer performance to oracle as the number of agents in-
criticalratioof64.7%onA100sversus88%onL4GPUs,
crease: it achieves 90% of oracle on one GPU with 100
asmemorydemandsfor70Bmodels(8.75×higher)limit
agents, reaching parity with oracle at 500 agents. On 8
processingcapacity.
GPUs, AI Metropolis improves from 53.1% to 97.0% of
oracle across settings. Speedups over single-thread and
4.3 ScalinguptoaThousandAgents
parallel-syncalsoscalewithagentcount,increasingfrom
Giventhelimitedresearchonaccommodatinghundredsof 3.37×and1.88×at25agentsto19.5×and4.15×at500
agents,wesimulatealargerenvironmentbyconcatenating agents. Unlikesingle-thread,whichcannotleverageparal-
multipleSmallVillesintoasingle,largevilleforbenchmark- lelism,andparallel-sync,whichsuffersfromcostlysynchro-
ing. Agentsineachsegmentreplaydifferenttracesthatwe nization,AIMetropolisutilizesparallelismmoreeffectively,
collectedindependently,buttheyoperatewithinthesame maximizingspeedupasagentcountgrows.
time and space. Since the concatenation approach intro-AIMetropolis
Figure6.Benchmarkofbusy(12a.m.-1p.m.)andquiet(6a.m.-7a.m.)hourusingLlama-3-70b-instructonNVIDIAA100GPUswith
scalingnumberofagentsrom25to1000.
Similartrendsalsoholdforlargermodelson8A100GPUs.
AIMetropolispeaksata1.97×speedupoverparallel-sync
with500agentsinthebusyhourbenchmarkand2.01×in
the1000-agentquiethourbenchmark,asshowninFigure6.
Tofurtherexploremodelvariability,webenchmarkedthe
MistralMoE8×7bmodelonthesame8A100platform,
whichuses80%ofa70bmodel’smemorywithlighterI/O
andcomputation. Withthe8×7bMoEmodel,weobserve
higher peak speedups of 2.97× and 2.29× over parallel-
syncat500agentsforbusyandquiethourbenchmarks,re-
Figure7.BenchmarkofMistral8×7on8A100GPUs,withagent spectively,duetogreaterresourceavailabilityontheGPUs,
countsscaledfrom25to1000. whichallowsforbetterparallelismutilization.
4.4 PrioritySchedulingBreakdown
After reaching peak speedup over parallel-sync at 500
agents,thespeedupplateaus,slightlydecreasingto3.94×at
#GPUs metropolis oracle
1000agents. Thisisbecause,asagentcountgrowsrelative
toavailablecomputationalresources,evenlessefficientde- 4 8 4 8
pendencymanagementachievesadequatehardwareutiliza-
w/priority(s) 8611 6148 8392 5683
tion. Meanwhile,AIMetropolisreaches97%oforacleper-
w/opriority(s) 8942 7114 8484 5689
formance,indicatingthatadditionalparallelismislesseffec-
Speedup(%) 3.84% 15.7% 1.10% 0.11%
tive. ThistrendappearsearlieronasingleL4GPU,where
computationalresourcesaremorelimited. AIMetropolis
Table1.Performancebreakdownofmetropolisandoraclewith
achievesamaximumspeedupof1.87×overparallel-sync
andwithoutpriorityschedulingonL4GPUs.Thefirsttworows
at100agents,taperingto1.60×asAIMetropolis’sperfor- arecompletiontimeinseconds.
mance approaches oracle—from 90.9% at 100 agents to
100%at500agents. Alltheexperimentsdiscussedsofarhavepriorityscheduling
enabled, where every request includes a step count, and
Similartrendsappearinthequiethourbenchmark,asshown
requestswithsmallercountshavehigherexecutionpriority.
in Figure 5, with some variation: the lighter and less fre-
Thisappliestotheoraclebaselineaswell. Werepeatedthe
quentLLMcallsinthequiethourbenchmarkreducethesyn-
experimentofbusyhourswith500agentson4and8L4
chronizationoverheadforparallel-sync,allowingmorepar-
GPUsforAIMetropolisandtheoracle,butwithpriority
allelism.Asaresult,AIMetropolisshowsasmallerspeedup
schedulingturnedoff.
over parallel-sync with the same agents and GPUs—for
instance, 1.28× in the 25-agent, 8-GPU setting, where As shown in Table 1, priority scheduling does not signif-
achievedparallelismis2.25forparallel-syncand2.80for icantly impact performance of oracle because it already
AIMetropolis. Bycomparison,thebusyhourbenchmark achieves sufficient parallelism, and its dependency graph
achievesparallelismvaluesof1.89and3.74onthesame is sparse as discussed in §2.2, making priority less criti-
setting,respectively. Nevertheless,asthenumberofagents cal for unlocking additional parallelism. In contrast, we
increases,thespeedupforAIMetropolisrisesfrom1.28× observed up to a 15.7% speedup for AI Metropolis with
to2.79×at500agentson8GPUs. priorityscheduling. ThisisbecausetheconservativerulesAIMetropolis
definedin§3.2makeagentsfallingbehindtoblockothers 2024)inLLMinferenceoptimizationhasbeenmakingcon-
more frequently. Priority scheduling reduces this block- tinuousadvancementsinincreasingthroughputandreduc-
ing,allowingAIMetropolistoperformclosertotheoracle. ing latency from various angles. These engines typically
Withpriorityenabled,theaverageachievedparallelismin achieveoptimalperformancewhenthereareamplerequests
the 500-agent, 8-GPU benchmark increases from 41.9 to availableforschedulingbutgenerallydonotaddressrequest
50.9forAIMetropolis,comparedtoaminorincreasefrom dependencies. AIMetropoliscomplementstheseefficient
69.4to69.9fororacle. engines by increasing parallelism within the simulation,
therebyenhancingoverallthroughput. SinceAIMetropolis
decouplesthesimulationenginefromtheservingengine,
5 RELATED WORK
improvementsinservingenginesdirectlyboostsimulation
LLMAgentSocietySimulationandMulti-agentsCollab- throughput. Whileasubstantialbodyofresearchexistson
oration. WithincreasinginterestinLLMagents,several generalinferenceandserving,itremainslargelyorthogonal
recentframeworks,suchasCamel(Lietal.,2023),Auto- to our work. Some studies address dependencies among
GPT(SignificantGravitas,2023),andOpenAISwarm(Ope- LLMrequests,suchas(Kimetal.,2023)forfunctioncall-
nAI,2024d),haveemergedtosimplifythedevelopmentof ingand(Zhengetal.,2024)forLLMprogramstoachieve
multi-LLMagentinteractions. However,theseframeworks higherparallelization. However,theseapproachesassume
primarilyprovideinterfacesforconnectingLLMagentsbut rigiddependencies,unlikeAIMetropolis,whichfocuseson
lackasharedenvironmentorstatesynchronization,making reducingfalsedependenciestofurtherenhanceefficiency.
multi-agent interactions more akin to microservices con-
nectedviaremoteprocedurecalls. Incontrast,GenAgent 6 DISCUSSION AND FUTURE WORK
andsimilarexplorations(Wangetal.,2023a;Gongetal.,
2023;Altera.ALetal.,2024)representadifferentapproach, ConservativeorSpeculativeExecution. Asdiscussedin
which we call AI society. In these systems, agents exist §3.2, AIMetropolisappliesconservativerulestoprevent
withinavirtualworld,interactingwithbotheachotherand causalityviolation,whichcanextendthecriticalpathand
theenvironment. However, thislineofresearchtypically reduceoverallparallelism. Nonetheless,asdemonstrated
emphasizesagentarchitecturesandpromptengineering,of- in §4, AI Metropolis achieves performance close to the
tenresultinginalock-stepsimulationprocessforsimplic- oraclesettinginmostcases,primarilyduetoeffectiveprior-
ity,whichcanleadtoslowersimulations. AITown(a16z ityscheduling. Althoughscenariosexistwhereadditional
infra, 2023), although inspired by generative agents and parallelism could enhance performance, the performance
resemblingAIsocietyframeworks,offersanopen-source gapbetweenAIMetropolisandtheoracleremainsminor,
platform where the environment is only minimally inter- as evidenced by the quiet hour benchmark in §4.3. This
activeforagents. Agentinteractionsarelimitedtosimple gap,however,highlightsopportunitiestofurtherimprove
rule-basedoperations,whichconstrainsitsversatility. AI AIMetropolis. Introducingspeculativeexecutionwithrace
Metropolistacklestheperformancechallengesinherentto detection could potentially bridge this gap, although do-
AI society simulation, offering a solution that enhances ingsomaychallengethesystem’sscalabilityprinciples—a
efficiencywithoutcompromisingthefunctionality. directionweleaveopenforfuturework.
GeneralMulti-agentSimulation. WhileLLMagentsim-
ulation may appear superficially similar to general multi- OfflineandInteractive. WhileAIMetropoliscurrently
agentsimulations,suchasthoseusedinreinforcementlearn- focusesonthroughputforofflinesimulation,itscoreprin-
ing(Brockmanetal.,2016;Zhuetal.,2024;Shacklettetal., ciplesincludingfine-graineddependencymanagementand
2023)andmulti-agentprocessing(Emauetal.,2011),they priorityschedulingarealsoapplicabletointeractiveenviron-
presentfundamentallydifferentschedulingchallengesdue mentlikevideogames. Thekeydifferencebetweenareal
to the high per-agent computational demands and signifi- gameandasimulationliesininteractivity,whichimposes
cantworkloadimbalancesinherentinLLMexecution,as latencyrequirements. WeviewgameslikeTheSims(Elec-
discussedin§2.2. Theseuniquedemandsnecessitatespe- tronicArts,2000)ashybridsofinteractiveandofflinesimu-
cializedschedulingstrategies. AIMetropolisisdesignedto lationcomponents. Thepartwithwhichtheplayerinteracts
offerauserexperiencecomparabletothatprovidedbyestab- musthavelowlatencyforreal-timeresponsiveness,while
lishedreinforcementlearningframeworks,whileseamlessly backgroundagentsshouldoperateinasimulationmanner
managingtheadditionalcomplexitiesbehindthescenes. to exhibit realistic social behaviors. An important future
workofAIMetropolisistosupportsuchhybriddeployment,
LLM Serving Optimizations. An active line of re- balancingrequestprioritizationtoreducelatencyininter-
search(Yuetal.,2022;Kwonetal.,2023;Agrawaletal., activecomponentsandoptimizethroughputinbackground
2023;Zhengetal.,2024;Shengetal.,2023a;Chenetal., simulations.AIMetropolis
ApplicationsofAIMetropolis. Althoughthispaperhigh- Anthropic. Claude 3: An overview. https://www.
lights GenAgent as the primary use case, AI Metropolis anthropic.com/claude-3,2024.
offersbroadapplicabilityacrossvariousdomains: 1)Asa
Brockman, G., Cheung, V., Pettersson, L., Schneider, J.,
pioneeringframeworkforsimulatingsocialbehaviorswith
Schulman, J., Tang, J., andZaremba, W. Openaigym,
LLMs,GenAgenthasinfluencedmanystudies,expanding
2016.
itsimpact. AnefficientengineforGenAgentreachesawide
audience,astheobservedimbalancedloadandsparsedepen-
Chen,L.,Ye,Z.,Wu,Y.,Zhuo,D.,Ceze,L.,andKrishna-
dencypatternsarecommonacrosshuman-likesimulations.
murthy,A. Punica: Multi-tenantloraserving. Proceed-
Additionally,thedependencyrulesinAIMetropoliscanbe
ingsofMachineLearningandSystems,6:1–13,2024.
adaptedtootherenvironmentsbyadjustingparameterslike
perceptionradiusandmovementspeedtosuitdifferentdy- Chiang,W.-L.,Zheng,L.,Sheng,Y.,Angelopoulos,A.N.,
namics. 2)Whileourderivationsfocusontemporal-spatial Li,T.,Li,D.,Zhang,H.,Zhu,B.,Jordan,M.,Gonzalez,
relationships in Euclidean space, they can extend to non- J. E., and Stoica, I. Chatbot arena: An open platform
Euclideanspaces,suchassocialnetworks,highlightingAI for evaluating llms by human preference, 2024. URL
Metropolis’sflexibilityfordiversesimulationsneedingde- https://arxiv.org/abs/2403.04132.
pendencymanagement.
Cobbe,K.,Kosaraju,V.,Bavarian,M.,Chen,M.,Jun,H.,
OnlineAPIsandLocalModels. WhileproprietaryAPIs Kaiser,L.,Plappert,M.,Tworek,J.,Hilton,J.,Nakano,
likeGPT-4(OpenAI,2024c)andClaude3(Anthropic,2024) R.,Hesse,C.,andSchulman,J.Trainingverifierstosolve
lead in performance, open-source models are on the rise. mathwordproblems.CoRR,abs/2110.14168,2021.URL
AIMetropolissupportslocalmodelservingwithoptimized https://arxiv.org/abs/2110.14168.
dependencymanagementforfaster,cost-effectivesimula-
Dubois,Y.,Li,C.X.,Taori,R.,Zhang,T.,Gulrajani,I.,Ba,
tions,yetremainscompatiblewithonlineAPIs,enhancing
J.,Guestrin,C.,Liang,P.S.,andHashimoto,T.B. Al-
parallelismandsimplifyingstatemanagementforusers.
pacafarm:Asimulationframeworkformethodsthatlearn
fromhumanfeedback. AdvancesinNeuralInformation
7 ACKNOWLEDGMENT
ProcessingSystems,36,2024.
WethankJoonSungPark,BrennanShacklett,MarkZhao, Electronic Arts. The sims, 2000. URL https://www.
AthinagorasSkiadopoulos,QizhengZhang,PieroMolino ea.com/games/the-sims. Videogame.
and(Altera.AL)fortheirvaluablediscussionsandfeedback.
ThisresearchwaspartlysupportedbytheStanfordPlatform Emau, J., Chuang, T., and Fukuda, M. A multi-process
Lab and its affiliates, and by ACE, one of the seven cen- libraryformulti-agentandspatialsimulation. InProceed-
tersinJUMP2.0,aSemiconductorResearchCorporation ingsof2011IEEEPacificRimConferenceonCommuni-
(SRC)programsponsoredbyDARPA.Thisresearchwas cations,ComputersandSignalProcessing,pp.369–375.
alsopartlysupportedbyNSFCNS-2047283. IEEE,2011.
Gong,R.,Huang,Q.,Ma,X.,Vo,H.,Durante,Z.,Noda,Y.,
REFERENCES
Zheng,Z.,Zhu,S.-C.,Terzopoulos,D.,Fei-Fei,L.,and
a16z infra. Ai town: An open-source platform in- Gao,J. Mindagent: Emergentgaminginteraction. 2023.
spiredbygenerativeagents. https://github.com/ URLhttps://arxiv.org/abs/2309.09971.
a16z-infra/ai-town,2023.
Grossmann,I.,Feinberg,M.,Parker,D.C.,Christakis,N.A.,
Agrawal,A.,Panwar,A.,Mohan,J.,Kwatra,N.,Gulavani, Tetlock,P.E.,andCunningham,W.A. Aiandthetrans-
B. S., and Ramjee, R. Sarathi: Efficient llm inference formationofsocialscienceresearch. Science,380(6650):
bypiggybackingdecodeswithchunkedprefills. arXiv 1108–1109,2023.
preprintarXiv:2308.16369,2023.
Guadarrama, S., Korattikara, A., Ramirez, O., Castro, P.,
Altera.AL. Buildingdigitalhumans. https://altera. Holly, E., Fishman, S., Wang, K., Gonina, E., Wu,
al. Accessed: 2024-11-04. N., Kokiopoulou, E., Sbaiz, L., Smith, J., Barto´k, G.,
Berent, J., Harris, C., Vanhoucke, V., and Brevdo, E.
Altera.AL, Ahn, A., Becker, N., Carroll, S., Christie, N., TF-Agents: A library for reinforcement learning in
Cortes,M.,Demirci,A.,Du,M.,Li,F.,Luo,S.,Wang, tensorflow. https://github.com/tensorflow/
P. Y., Willows, M., Yang, F., and Yang, G. R. Project agents, 2018. URL https://github.com/
sid: Many-agentsimulationstowardaicivilization,2024. tensorflow/agents. [Online; accessed 25-June-
URLhttps://arxiv.org/abs/2411.00114. 2019].AIMetropolis
Kim,S.,Moon,S.,Tabrizi,R.,Lee,N.,Mahoney,M.W., Redis. Redis: In-memory data structure store. https:
Keutzer,K.,andGholami,A.Anllmcompilerforparallel //redis.io. Accessed: 2024-06-25.
functioncalling. arXivpreprintarXiv:2312.04511,2023.
Shacklett,B.,Rosenzweig,L.G.,Xie,Z.,Sarkar,B.,Szot,
Kwon, W., Li, Z., Zhuang, S., Sheng, Y., Zheng, L., Yu, A., Wijmans, E., Koltun, V., Batra, D., and Fatahalian,
C.H.,Gonzalez,J.,Zhang,H.,andStoica,I. Efficient K. An extensible, data-oriented architecture for high-
memorymanagementforlargelanguagemodelserving performance,many-worldsimulation. ACMTransactions
with pagedattention. In Proceedings of the 29th Sym- onGraphics(TOG),42(4):1–13,2023.
posiumonOperatingSystemsPrinciples,pp.611–626,
Sheng, Y., Cao, S., Li, D., Hooper, C., Lee, N., Yang, S.,
2023.
Chou,C.,Zhu,B.,Zheng,L.,Keutzer,K.,Gonzalez,J.E.,
Li,G.,Hammoud,H.A.A.K.,Itani,H.,Khizbullin,D.,and andStoica, I. S-lora: Servingthousandsofconcurrent
Ghanem,B. Camel: Communicativeagentsfor”mind” loraadapters. arXivpreprintarXiv:2311.03285,2023a.
explorationoflargelanguagemodelsociety. InThirty-
Sheng,Y.,Cao,S.,Li,D.,Zhu,B.,Li,Z.,Zhuo,D.,Gonza-
seventh Conference on Neural Information Processing
lez,J.E.,andStoica,I. Fairnessinservinglargelanguage
Systems,2023.
models. arXivpreprintarXiv:2401.00588,2023b.
Liu,R.,Yang,R.,Jia,C.,Zhang,G.,Yang,D.,andVosoughi,
Significant Gravitas. AutoGPT, 2023. URL https:
S. Trainingsociallyalignedlanguagemodelsonsimu-
//github.com/Significant-Gravitas/
lated social interactions. In The Twelfth International
AutoGPT.
ConferenceonLearningRepresentations,2023.
Wang,G.,Xie,Y.,Jiang,Y.,Mandlekar,A.,Xiao,C.,Zhu,
Merity,S.,Xiong,C.,Bradbury,J.,andSocher,R. Pointer
Y., Fan, L., and Anandkumar, A. Voyager: An open-
sentinelmixturemodels,2016.
endedembodiedagentwithlargelanguagemodels. arXiv
Meta.Llama3:Advancingairesearch.https://llama. preprintarXiv:2305.16291,2023a.
meta.com/llama3/,2024. Accessed: 2024-06-25.
Wang, L., Ma, C., Feng, X., Zhang, Z., Yang, H., Zhang,
Mistral AI. https://mistral.ai/news/mixtral-of-experts/, J., Chen, Z., Tang, J., Chen, X., Lin, Y., Zhao, W. X.,
2023. Wei,Z.,andWen,J. Asurveyonlargelanguagemodel
basedautonomousagents.FrontiersofComputerScience,
Narayan,S.,Cohen,S.B.,andLapata,M. Don’tgiveme
18(6), March 2024. ISSN 2095-2236. doi: 10.1007/
thedetails,justthesummary! topic-awareconvolutional
s11704-024-40231-1. URLhttp://dx.doi.org/
neuralnetworksforextremesummarization,2018.
10.1007/s11704-024-40231-1.
OpenAI. Chatgpt: Openai language model. https://
Wang,Z.,Cai,S.,Chen,G.,Liu,A.,Ma,X.,andLiang,Y.
chat.openai.com/,2024a. Accessed: 2024-06-22.
Describe,explain,planandselect: Interactiveplanning
with large language models enables open-world multi-
OpenAI. Openai gpt-3.5 api. https://platform.
taskagents. arXivpreprintarXiv:2302.01560,2023b.
openai.com/docs/models/gpt-3-5, 2024b.
Accessed: 2024-06-25.
Xi, Z., Chen, W., Guo, X., He, W., Ding, Y., Hong, B.,
Zhang,M.,Wang,J.,Jin,S.,Zhou,E.,Zheng,R.,Fan,
OpenAI. Introducing gpt-4. https://openai.com/
X.,Wang,X.,Xiong,L.,Zhou,Y.,Wang,W.,Jiang,C.,
research/gpt-4,2024c.
Zou, Y., Liu, X., Yin, Z., Dou, S., Weng, R., Cheng,
OpenAI. Swarm: Scalable infrastructure for multi-agent W.,Zhang,Q.,Qin,W.,Zheng,Y.,Qiu,X.,Huang,X.,
coordination,2024d. URLhttps://github.com/ and Gui, T. The rise and potential of large language
openai/swarm. Accessed: 2024-10-29. model based agents: A survey, 2023. URL https:
//arxiv.org/abs/2309.07864.
Park,J.S. Generativeagents. https://github.com/
joonspk-research/generative_agents, Yu,G.-I.,Jeong,J.S.,Kim,G.-W.,Kim,S.,andChun,B.-
2024. GitHubrepository. G. Orca: Adistributedservingsystemfor{Transformer-
Based}generativemodels. In16thUSENIXSymposium
Park,J.S.,O’Brien,J.C.,Cai,C.J.,Morris,M.R.,Liang,
onOperatingSystemsDesignandImplementation(OSDI
P.,andBernstein,M.S. Generativeagents: Interactive
22),pp.521–538,2022.
simulacraofhumanbehavior. InInthe36thAnnualACM
SymposiumonUserInterfaceSoftwareandTechnology Zheng,L.,Yin,L.,Xie,Z.,Sun,C.,Huang,J.,Yu,C.H.,
(UIST’23),UIST’23,NewYork,NY,USA,2023.Asso- Cao, S., Kozyrakis, C., Stoica, I., Gonzalez, J.E., Bar-
ciationforComputingMachinery. rett, C., and Sheng, Y. Sglang: Efficient executionAIMetropolis
of structured language model programs, 2024. URL whichmeanstheyarecoupledandcaneitherwaitto-
https://arxiv.org/abs/2312.07104. getherorproceedtogether.
Zhu, Z., de Salvo Braz, R., Bhandari, J., Jiang, D., Wan, • AssumestepsStep >Step . Thereshouldbe
A B
Y.,Efroni,Y.,Wang,L.,Xu,R.,Guo,H.,Nikulkov,A.,
Korenkevych, D., Dogan, U., Cheng, F., Wu, Z., and dist(A′,B)>(Step A−Step B +1−1)×max vel
Xu,W. Pearl: Aproduction-readyreinforcementlearn- +radius p
ingagent,2024. URLhttps://arxiv.org/abs/
2312.03814. Sincedist(A′,B)≥dist(A,B)−max vel,weneed:
Ziems,C.,Held,W.,Shaikh,O.,Chen,J.,Zhang,Z.,and
dist(A,B)−max vel
Yang,D. Canlargelanguagemodelstransformcomputa-
>radius p+(Step −Step )×max vel
tionalsocialscience? arxiv. Technicalreport,Retrieved A B
2023-10-06,fromhttp://arxiv.org/abs/2305.03514,2023.
Therefore,ontheotherside,AgotblockedbyBif
dist(A,B)≤(Step −Step +1)×max vel
A RULES DERIVATION A B
+radius p
Atanypointduringtheout-of-ordersimulation, thestate
includeseachagent’slocationandthesteptheyhaveexe- • AssumestepsStep <Step . Thereshouldbe
A B
cuted. For a given state, let dist(A,B) represent the dis-
tancebetweenagentsAandB,radius pdenotetheradius dist(A′,B)>(Step −Step −1−1)×max vel
B A
ofanagent’sperception,andmax veldenotethemaximum +radius p
speedofagentmovementandinformationpropagationper
step. AccordingtoSection3.2,avalidexecutionneedsto Sincedist(A′,B)≥dist(A,B)−max vel,weneed:
makesurethefollowingconditionholdsatanystate:
dist(A,B)−max vel
∀agentsA,B, andtheircurrentstepsStep andStep ,
A B >(Step −Step −2)×max vel+radius p
B A
ifStep ̸=Step ,thendist(A,B)>radius p
A B
+(|Step −Step |−1)×max vel
A B
⇒dist(A,B)>(Step −Step −1)×max vel
B A
Tosatisfythecondition,wederivethefollowingsimulation +radius p
conditionstoensurethestateremainsvalid. Noticethatour
whichisthesamevalidconditionofthecurrentstate.
simulationconditionsareover-estimations,whichissound
Therefore,Aisnotblockedbyanyfutureagents.
incorrectnessbutnotnecessarilycomplete.
Startingfromanyvalidstate,givenanytwoagentsAand
B at steps Step and Step , respectively, we derive the
A B
simulation conditions of A by case study. Let A′ denote
thenewstateofAafteronemorestepsothatdist(A′,B)
denotesthenewdistancebetweenAandB afterthenext
stepofA.
• AssumestepsStep = Step . Aisallowedtopro-
A B
ceedtothenextstepifavalidstateisreachedafterone
furtherstepofA. Formally,thereshouldbe
dist(A′,B)>(Step −Step +1−1)×max vel
A B
+radius p
Sincedist(A′,B)≥dist(A,B)−max vel,weneed:
dist(A,B)−max vel>radius p
Therefore,ontheotherside,AandBmuststayatthe
samestepif:
dist(A,B)≤max vel+radius p