© 2024 IEEE. This is the author’s version of the article that has been published in the proceedings of IEEE
Visualizationconference. Thefinalversionofthisrecordisavailableat: xx.xxxx/TVCG.201x.xxxxxxx/
PyGWalker: On-the-fly Assistant for Exploratory Visual Data Analysis
YueYu * LeixianShen † FeiLong ‡ HuaminQu § HaoChen ¶
HongKongUniversityof HongKongUniversityof KanariesData HongKongUniversityof KanariesData
ScienceandTechnology ScienceandTechnology ScienceandTechnology
KanariesData
Figure1:AnexamplewalkthroughwithPyGWalkerinaJupyterNotebook.TheanalystinitiallyloadsthedatasetintoPyGWalkerto
activatetheinterfacewithonelineofcode(A). ThedatasetoverviewisprovidedundertheDatatab(B 1). UndertheVisualization
tab,theanalystcreatesmulti-facetedcharts(B)bydraggingdatacolumnstotheX-Axis(B 2)andY-Axis(B 3)andselectingthemark
type(B 4).Filtersarefurtheraddedtonarrowthedataset(C 1),andthecolorencoding(C 2)canbediversifiedforvariedvisualizations
(C). Detailscanbeviewedbyhoveringoverchartelements(C 3). Inadditiontocharts,pivottablescanbeconstructed(D)with
collapsiblehierarchicalheaders(D 1). Finally,thevisualizationsgeneratedintheexploratoryanalysisprocesscanbedocumented
(E). Theanalystadjustedandchartstyle(B 5),renamedcharts(B 6),andexportedthem(B 7)asaJSONspecification(E 1)andan
HTMLfileofthenotebook(E 2),whichcanbesharedandhostedtoreproducetheanalysisprocess(E 2),accessibleatthislink.
ABSTRACT computational environments to accommodate varying data sizes.
Since its release in February 2023, PyGWalker has gained much
Exploratoryvisualdataanalysistoolsempowerdataanalyststoef-
attention, with 612k downloads on PyPI and over 10.5k stars on
ficientlyandintuitivelyexploredatainsightsthroughouttheentire
GitHubasofJune2024.Thisdemonstratesitsvaluetothedatasci-
analysiscycle. However,thegapbetweencommonprogrammatic
enceandvisualizationcommunity,withresearchersanddevelopers
analysis(e.g.,withincomputationalnotebooks)andexploratoryvi-
integratingitintotheirownapplicationsandstudies.
sualanalysisleadstoadisjointedandinefficientdataanalysisex-
perience. Tobridgethisgap,wedevelopedPyGWalker,aPython Index Terms: Human-centered computing — Visualization —
librarythatofferson-the-flyassistanceforexploratoryvisualdata Visualizationsystemsandtools
analysis. It features a lightweight and intuitive GUI with a shelf
buildermodality.Itslooselycoupledarchitecturesupportsmultiple 1 INTRODUCTION
Exploratoryvisualdataanalysistoolscanhelpdataanalystseffec-
*e-mail: yue.yu@connect.ust.hk. ThisworkwasdoneduringYueYu’s
internshipatKanariesData. tivelyandintuitivelyexploredatainsightsandguidefurtheranaly-
†e-mail:lshenaj@connect.ust.hk ses.Thisprocessisiterativeandspanstheentiredataanalysiscycle.
‡e-mail:feilong@kanaries.net However, when analysts engage in programming, such as within
§e-mail:huamin@cse.ust.hk computational notebooks, numerous data variables are generated.
¶e-mail:haochen@kanaries.net.HaoChenisthecorrespondingauthor. Mappingthesevariablesintovisualrepresentationsthatalignwith
the user’sintentions andsupporting exploratory visualanalysis is
non-trivial,especiallyforthosewhoareunfamiliarwithvisualde-
sign. Analystsareoftenfacedwiththechoiceofeitherexporting
thedataandimportingitintoexistingexploratoryvisualdataanal-
1
4202
nuJ
71
]CH.sc[
1v73611.6042:viXra© 2024 IEEE. This is the author’s version of the article that has been published in the proceedings of IEEE Visualization
conference.Thefinalversionofthisrecordisavailableat:xx.xxxx/TVCG.201x.xxxxxxx/
ysistools(e.g.,Voyager[39]andDeeyEye[15])orrelyingoncom-
plexprogrammingtorepeatedlyvisualizetheirdata. Thegapbe-
tweenprogrammaticanalysisandexploratoryvisualanalysisleads
toadisjointeddataanalysisexperience.
To address these issues, we developed PyGWalker, a Python
library that offers on-the-fly assistant for exploratory visual data
analysis in computational notebooks, available as open source at
github.com/Kanaries/pygwalker. PyGWalker enables users to ef-
fortlesslyinvokealightweightexploratoryvisualdataanalysistool
with just a single line of code, as shown in Fig. 1. The intuitive
graphicuserinterface(GUI)featuresashelfbuildermodality[27],
allowing users to intuitively drag and drop variables onto visual
Figure2:OverviewofPyGWalker.
channels and dynamically experiment with various visual repre-
sentations. Furthermore,itsarchitecture,whichdecouplesinterac- Furthermore,tosupportvariouscomputingparadigmsandenviron-
tion,computation,andrendering,supportstheintegrationofmulti- ments(e.g., browsers, databases, cloudcomputing, etc.), wehave
plecomputationalenvironments,suchasJavaScript,Pythonkernel, also derived a computation-driven scheme, called Compute-Link
andexternaldatabases,toaccommodatevaryingdatasizes. (Sec.3.4),fromGraphic-Link,aimingtodecoupleviewdatapro-
PyGWalker’srapidadoptionunderscoresitsvaluetothedatasci- cessingfromvisualizationspecifications.Compute-Linkallowsthe
enceandvisualizationcommunity. Communitymembershaveen- generatingofuser-intent-basedviewdataorSQLqueries. Theag-
thusiasticallycontributedtutorialsanddemos[3,5,6,12,18,23], gregateddatafromthesequeries,aswellasGraphic-Link,isthen
with researchers and developers integrating PyGWalker into their renderedintointeractivevisualizationsinrealtime. Astheuserit-
ownapplicationsandstudies. erativelyconductsexploratoryvisualanalysisonGraphicWalker,
thecorrespondingspecificationiscontinuouslyupdated.
2 RELATEDWORK
PyGWalker draws upon existing works about exploratory visual 3.2 UsageScenario
dataanalysisandassistanceincomputationalnotebooks. ImagineAlice,adataanalystinasuperstoreenterprise,isassigned
Exploratory Visual Data Analysis: Data analysis often in- atasktoanalyzetheglobalsuperstoredataset[17].Fig.1illustrates
volvesuserscontinuouslyexploringinsightsthroughiterationsand howsheintegratesPyGWalkerintoherprogrammingworkflowto
drillingdown. Existingexploratoryvisualdataanalysistoolscan seamlesslyconductexploratoryvisualdataanalysis.
help users effectively and intuitively complete these tasks. For
InherJupyterNotebook, Alicebeginsbyimportingtheglobal
example, Voyager[39]usesstatisticalandperceptualmeasuresto
salesdatasetfromaCSVfile,applyingafiltertonarrowheranaly-
recommendsuitablechartsandsupportsfacetedbrowsing. MED-
sistotheAsiaPacificmarket.ShetheninitiatesPyGWalkerbyex-
LEY[24]andTaskVis[30,31]supportuser-intention-drivenvisual ecutingpyg.walk(df)withinhernotebook(A),andPyGWalker’s
dataanalysis.DMiner[11]andMultiVision[40]automaticallygen-
interactiveGUIdirectlyappearsintheoutputcell. Afterglancing
erate multi-view dashboards based on user data. However, these
overthedatasetoverviewundertheDatatab(B ),sheturnstothe
1
areallindependentanalysissystems. Theseparationbetweencod-
Visualizationtabandstartsherexploration. Aliceisinterestedin
ing and exploratory visual data analysis requires users to switch
thesalesoveryearsofdifferentregionsforabroadpicture. There-
betweentwomodes,hinderingaseamlessdataanalysisprocess.
fore, shedragstheYear fieldfromtheFieldListanddropstothe
AssistanceinComputationalNotebooks:Computationalnote- X-Axisshelf(B ),andRegionandSumofSalesfieldstotheY-Axis
2
books are a popular data analysis environment, and many studies shelf(B ),usingtheLinemarktype(B ). Theinterfaceresponds
3 4
havedevelopedcorrespondingassistivefeaturesforvisualanalysis bydisplayingfourlinecharts(B),facetedbyregion,showingasig-
andstorytelling. Forexample,Lux[9]isanalways-onframework
nificant drop in sales for North Asia in 2012, prompting Alice to
thathelpsusersquicklypreviewinsightsintheirdata.Notable[10]
investigatethisanomalymoredeeply.
canautomaticallyconvertdatafactsthatusersareinterestedindur-
AlicethusremovestheRegionfromtheX-Axisandaddsafil-
ingtheiranalysisprocessintoslidestofacilitatedatacommunica-
terbydraggingtheRegionfieldintotheFilterspanel,filteringfor
tion. InkSight[11]allowsuserstosketchinterestingdatainsights
“NorthAsia”(C ).Toexploresalesbycategory,shedragstheCat-
1
directlyonvisualizationsandthenusesLLMstogeneratedescrip-
egoryfieldtotheColorencodingshelf(C )andswitchesthemark
2
tions.B2[41]usesdataqueriesasasharedrepresentationtobridge
typetoBar. Theresultingbarchart(C)showsanotablysharpde-
thegapbetweencodeandinteractivevisualizations,automatically
clineinthebluesegmentin2012. Hoveringonthesegment(C ),
3
generatingdashboards.Althoughthesetoolscanquicklyhelpusers
thetooltipshowsthesegmentisthe“Furniture”category.
generatedataanalysisandcommunicationresults,theyalllacksup-
Curiousaboutthespecificcitiescontributingtothedecline,Al-
portforon-the-flyprocess-orientedexploratoryvisualanalysis.
iceshiftstoamoregranular-levelanalysisbyexaminingtheexact
numbersoffurnituresalesacrossdifferentcitiesovertheyears.She
3 PYGWALKER
appliesafilterfor“Furniture”,setsthemarktypetoTable,andor-
In thissection, wewill first givean overviewof PyGWalker, and ganizesthedatahierarchicallywithYearontheY-AxisandCountry
thenwalkthroughausagescenariotodemonstratetheinteraction andCityontheX-Axis.Thiscreatesapivottablethatgroupscities
workflowforusers. Next,wewilldiscussthecomputationengine withintheircountriesbyyear(D). Astherearehundredsofcities,
behindPyGWalkerandintroducetherenderingofvisualizations. shefirstcollapsesthecountry-levelheaders(D )andnotesthatbe-
1
tween2011and2012,salesinChinaandSouthKoreadroppedsig-
3.1 Overview
nificantly. Byexpandingtheheadersofthesecountries,sheiden-
The main workflow is as follows: users can easily insert a line tifies major cities like Beijing, Jining, and Seoul, which showed
of code to call PyGWalker during data analysis, which will acti- drastic sales declines from robust figures in 2011 to near-zero in
vate the interactive GUI (named Graphic Walker) and automati- 2012,pinpointingthemastheprimarysourcesofthedownturn.
cally load the relevant data. To represent the user’s intent infor- Alice finally documents and shares her findings (E). Af-
mation and data information during interactions on the GUI, we ter adjusting the chart style (B ) and renaming the chart tabs
5
havedesignedadeclarativescheme,calledGraphic-Link(Sec.3.3). (B ), she exports the visualization specifications into a JSON file
6
2© 2024 IEEE. This is the author’s version of the article that has been published in the proceedings of IEEE Visualization
conference.Thefinalversionofthisrecordisavailableat:xx.xxxx/TVCG.201x.xxxxxxx/
config.json (B ) and shares it with her colleagues responsible
7
forthesupplychainintheaffectedcities. Theycanreplicateher
visualizations by loading the specification using pyg.walk(df,
spec="./config.json")intheirownnotebooks(E ).Addition-
1
ally,AliceexportstheentirenotebookasanHTMLfile1andhosts
itonline,enablingcolleagueswithoutaprogrammingenvironment
toviewherexplorationstepsindifferenttabsandinteractwithher
visualizations(E ).
2
3.3 InformationRepresentation
After the user loads their data with PyGWalker and interacts on
the Graphic Walker GUI, the data and user’s analysis intents Figure3:ComputationmechanismsofPyGWalker.
throughinteractionsarestoredinadeclarativespecification,named
Graphic-Link2.Itmainlyencodesthefollowingprimitivetypes: GrammarofGraphics[38](i.e.,cross,nest,andblendoperators),
DataCharacteristic: Graphic-Linkencodesdatacolumnsand which determines how different data attributes are combined and
their automatically inferred semantic information. Each data col- representedtocomputetheviewdata,particularlyforconstructing
umn is assigned a semantic data type (nominal, ordinal, or quan- pivottablesandmulti-facetedcharts.
titative)andananalytictype,whichiseithera“dimension”(cate- Compute-Linkconsistsofaseriesofdataqueriesthatdescribe
goricaldescriptorsthatsegmentdata)ora“measure”(quantifiable howtocomputetheviewdatafromtherawdata: FilterQueryse-
metrics)[8]. Thishelpsthatvisualizationsfaithfullydepictthein- lectsspecificdatasubsetsbasedonusers’definedcriteria; Trans-
herentrelationshipspresentinthedata. form Query applies calculations and transformations to the data
Data Transformation: Graphic-Link keeps a record of users’ columns,suchascalculatingthelogarithmorbinning;ViewQuery
datatransformationoperations. Userscan interactively definefil- structuresthedataintothedesiredformatforvisualization,which
tering criteria, enabling the specification of value sets or ranges canbeaggregatedbydifferentoperationsordirectlystructuredas
fordatacolumns. Moreover,userscanexplicitlyspecifyaggrega- raw;andSortQueryorderstheresultdata.
tionfunctionssuchas“sum”and“average”, andperformingfield This separation not only maintains a clear decouple from the
transformations(suchaslogarithmsorbinning)willresultinanew visualization specification but flexibly supports a wide array of
transformeddatacolumn. Userscanalsosortandstacktheirdata computational modes and environments such as web browsers,
withdifferentstyles. databases,andcloudcomputingplatforms,asillustratedinFig.3.
VisualEncoding: Graphic-Linkcapturesandrecordsusers’in- Thefollowingillustratessomecomputationalscenarios:
teractions with the GUI, which represents their intentions for vi- JavaScript Computation: By default, when a user executes
sual data analysis. Users can define the fundamental geometric pyg.walk(df),thecomputationoccurswithintheJavaScripten-
primitives employed in the visualization, such as “line,” “bar,” vironment of the application, utilizing a pipeline of web workers
“point,” and more. Additionally, to enhance the exploration pro- for asynchronous data processing. These workers parse and exe-
cess, a default mark type is automatically generated based on cutetheseriesofoperationsdefinedinCompute-Link, ultimately
heuristicrulesinspiredbyexistingautomaticvisualizationcreation producingthefinalizedviewdata.
systems [16, 39]. Furthermore, users can intuitively assign their Python Kernel Computation: While JavaScript computation
datacolumnstovariousvisualchannels, includingtheX-axis, Y- maybelimitedtosmall-scalecomputation,userscanoptforPython
axis,color,size,shape,opacity,andmore,bysimplydraggingand kernel computation by setting kernel_computation=True for
droppingthem. Furthermore,itsupportsautomaticfacetingwhen moresubstantialdatasetsthatexceedthecapabilitiesofJavaScript.
multipledimensionsarehierarchicallyorganizedalonganaxis. ThismodeparsesCompute-LinkspecificationsintoanalyticalSQL
StyleandConfiguration: Tofacilitatecross-platformviewing queries to be processed by the DuckDB engine [26], an open-
and sharing, Graphic-Link also encodes additional configurations sourceanalyticdatabasewithhighcomputationperformance,inthe
relatedtocoordinatesystems(chartorgeographic),layoutmodes, PythonKernel.TheresultsarethenconveyedbacktotheJavaScript
chartstyles,scaleranges,colorpalettes,etc.Thisensuresthatvisu- environmentforrendering.
alizationsremainconsistentandaccurateacrossdifferentplatforms
External Database Computation: For users who need to an-
anddevices,preservingtheintendedvisualaesthetics.
alyze large datasets stored in non-local databases or online data
Graphic-Link provides a comprehensive representation of data
warehouses,PyGWalkeralsooffersanexternalcomputationcapa-
characteristics and user interaction information, establishing a bility. To utilize this functionality, users can import Connector
foundationforsubsequentcomputationandrenderingprocesses. classfromthedatabase_parsermoduleandcreateaConnector
object(e.g.,conn)bysupplyingtheSQLAlchemyconnectionURI
3.4 ViewDataComputation
andaSQLquerytoretrievethedataset.Onceconfigured,theanaly-
To enable adaptability across diverse computational paradigms, siscanbeconducteddirectlyontheexternaldatabasebyexecuting
weadditionallyintroduceCompute-Link3,acomputation-oriented
pyg.walk(conn). Similartokernelcomputation,analyticalSQL
specificationthatseparatesviewdataprocessingfromvisualization querieswillbegeneratedandsenttotheexternaldatabase,andthe
specifications. WhileGraphic-Linkaimstodeclarethevisualiza- resultsarethenfetchedandpassedtotheJavaScriptenvironment.
tion contents, Compute-Link extracts the necessary view data for
agivenvisualizationfromthecomprehensiveGraphic-Linkspeci- 3.5 VisualizationRendering
fication. ThederivationfromGraphic-LinktoCompute-Linkmir-
Graphic-Link specifications, combined with the computed view
rorstheuser’sprocessofmappingdatacolumnstovisualchannels
data, are finally translated into visual representations, which sup-
intheGUI.Thistransformationisguidedbyalgebraicrulesinthe
porttherenderingofdifferentvisualizationtypes:GeneralCharts:
1https://kanaries.net/gallery/pygwalker/notebooks/sup For common chart types (e.g., lines, bars, points, etc.), Graphic-
erstore.html Link is initially converted into a Vega-Lite specification [28],
2https://graphic-walker.kanaries.net/chartinfo.json leveraging the Vega-Lite rendering engine for its expressiveness,
3https://github.com/Kanaries/graphic-walker/blob/main/ widespread usage, and adherence to the principles of the Gram-
computation.md mar of Graphics [38]. Pivot Tables: When a table mark type is
3© 2024 IEEE. This is the author’s version of the article that has been published in the proceedings of IEEE Visualization
conference.Thefinalversionofthisrecordisavailableat:xx.xxxx/TVCG.201x.xxxxxxx/
chosen,apivottableisdirectlyrenderedtoeffectivelydisplayag- Researchers from diverse fields, including meteorology [7], traf-
gregateddata.GeographicVisualizations:Inthecaseofdrawinga fic[13],biomechanics[19],andwastemanagement[21],haveem-
geographicvisualization,anOpenStreetMapbaselayerwillbees- braced PyGWalker, showcasing its potential effectiveness across
tablished,overlaidbyencodingsthataremappedtolongitudeand disciplines.Besidesresearchapplications,PyGWalkerisalsointro-
latitude,ensuringaccuratespatialrepresentationofdataelements. ducedindatascienceeducationprograms. Forinstance,thebook
chapter Data Visualization for Business Intelligence [35] features
3.6 Cross-Platform PyGWalkerfordatavisualizationinbusinessintelligence,statingit
“simplifiesthedataanalysisanddatavisualizationworkflow.”Fur-
In addition to providing support for Jupyter Notebooks, PyG-
thermore,Pythoncrashcourseslikebetter-py/learn-py[2]integrate
Walkerexpandsitscapabilitiestocatertodataanalystsworkingon
PyGWalker,emphasizingitsuser-friendlynatureandlow-codeap-
differentplatformsandutilizingvariousprogramminglanguages.
proach.ThesecasesshowPyGWalker’scapabilitiestoenablelearn-
PyGWalkerseamlesslyintegrateswithpopularnotebook-based erstoexploredatasetsquicklyandgainvisualinsights,enhancing
analysis environments like Colab and Kaggle Notebook, promot- theirdataanalysisskills.
ing collaboration and knowledge sharing. Furthermore, PyG-
Walker can also be embedded into Python frameworks that sup- 5 DISCUSSION
portHTMLrendering,suchasStreamlit[34]andGradio[1]. This
WediscussthelimitationsofPyGWalkerandpotentialfuturedirec-
empowersdeveloperstocreatebespokevisualizationanalysisinter-
tionstoenhanceit.
faceswithintheirownapplicationsswiftly.
ExpandVisualizationCapabilities: PyGWalker’sarchitecture
OwingtotheflexibledesignofthearchitectureofPyGWalker,
is intentionally designed to separate visualization rendering from
the interactive GUI, Graphic Walker4, can be viewed as a stan-
information representation and data processing, allowing flexible
dalone TypeScript-based React library to enable flexible integra-
integration of diverse rendering libraries and engines. Currently,
tion into other environments, such as web applications and other
PyGWalker primarily relies on Vega-Lite, benefiting from its ex-
programminglanguages.Forexample,recognizingthediversedata
pressiveness and ease of use. However, we acknowledge that
sciencelandscape,we’vedevelopedasimilarpackagefortheRpro-
forspecializedorinteractivevisualizationswithcomplexrequire-
grammingenvironment5.Thisopensthedoortoexploratoryvisual
ments,alower-levellibrarylikeD3[4]maybeindispensable.Inthe
analysisforalargecommunityofR-focuseddatascientists.
future, we plan to empower users with greater customization and
control,allowingthemtocreateawiderrangeofvisualnarratives
4 RELEASEANDUSAGE withtheirdata,includingsupportformorevisualizationtypes[32]
PyGWalker6wasfirstreleasedandopen-sourcedinFebruary2023. andnarrativetypes[33].
As of June 2024, it has gained significant popularity, with over DesignIntelligentInteractions: Whileourcurrentinteraction
612ktotaldownloads,approximately90kmonthlydownloads,and designisintuitive,itdoesrequireuserstohavesomeunderstanding
over10.5kstarsonGitHub.Thesequantitativemetricsindicatethat of the tool-specific operations to produce effective visualizations.
PyGWalkerhasestablishedastrongpresenceinthedevelopercom- Onepromisingdirectionisintegratingnaturallanguageinterfaces
munity. TodelvedeeperintoPyGWalker’sreal-worldimpact, we withthehelpoflargelanguagemodels(LLMs),allowingusersto
systematicallyanalyzedhowdevelopersandresearchersutilizethe freelytalktheiranalysisintentstothesystemanddirectlygenerate
tool.Ourfindingsarebasedontwokeysources:(1)Metadatafrom correspondingresults[29]. Furthermore,PyGWalker’sinteractive
536publicGitHubrepositorieslistingPyGWalkerasadependency interfaceprovidesopportunitiesforuserstoexploreandrefinethe
and(2)7researcharticlesonGoogleScholarcontainingthekey- visualizationsgeneratedbyLLMs[37], creatingafeedbackloop.
word“PyGWalker”intheirworks. Toleveragethesecapabilities,weareactivelydevelopingafeature
that translates natural language descriptions and dataset metadata
TheanalysisofGitHubrepositoriesrevealedsomeinterestingin-
intoGraphic-Linkspecifications.
sights.Forexample,among536repositoriesusingPyGWalker,358
LeveragePyGWalkerasaLearningTool: Previousresearch
(66.8%) are Python applications, 138 (25.7%) are Jupyter Note-
underscoresthebenefitsofinteractivenotebooksforteachingdata
books, and the remaining 40 (7.5%) utilize other languages like
visualizationovertraditionalslides[14],sheddinglightonthepo-
HTML and JavaScript. We also found 101 repositories (18.8%)
tential for PyGWalker as an effective education tool. Currently,
explicitlymentioningframeworkslike“Streamlit,” “Django,” and
PyGWalkeronlyfocusesonexportingthefinalvisualizationoutput
“Flask”.ThissuggestsPyGWalker’sadaptabilityforseamlessinte-
forfurtheruse.Inthefuture,weplantoenhancetheanalyticprove-
grationintowebapplications,extendingitsvaluetotheopen-source
nance that captures the visualization creation process [20]. This
developercommunitybeyondtraditionaldataanalysisworkflows.
wouldalloweducatorstosharestep-by-stepwalkthroughsoftheir
Looking into some detailed cases, we found developers typically
visual data analysis workflows, enabling students to learn by ac-
leveragePyGWalkerasanout-of-the-boxexploratorydashboardto
tivelyretracingtheexpert’sreasoningandexperimentation.
supportdynamicdatavisualization. Forexample, BICat[36]isa
Streamlit-based application that integrates PyGWalker and Chat-
GPT [22] to enable users to interactively explore an uploaded
6 CONCLUSION
dataset by natural language. Similarly, Diagnostic Expert Ad- This paper proposes PyGWalker, which bridges the gap between
visor [25] juxtaposes PyGWalker with predefined plots, offering programmatic analysis and exploratory visual analysis tools. Its
users both guided views and the freedom of self-directed explo- user-friendly GUI and loosely coupled architecture have gained
ration. These findings underscore how PyGWalker’s convenient considerableattentionfromthedatascienceandvisualizationcom-
andseamlessintegrationempowersdeveloperstobuildwebappli- munity,withusersactivelycontributingtutorialsanddevelopersin-
cationsmovingbeyondstaticvisualizations. tegratingitintotheirownapplications.Wewillcontinuallyenhance
While we understand GitHub may not fully reflect the extent andexpandthetool’sfunctionality,contributingtotheopen-source
of PyGWalker’s use in notebooks due to data privacy considera- community. Wealsoencouragemoreuserstojoininitsdevelop-
tions, we found compelling evidence of its adoption in research. mentandinspirefurtherinterestingandpracticalresearch.
4https://github.com/Kanaries/graphic-walker
ACKNOWLEDGMENTS
5https://github.com/Kanaries/GWalkR The authors wish to thank all of the contributors from our open-
6https://github.com/Kanaries/pygwalker sourcecommunitywhosupportPyGWalkerandrelatedprojects.
4© 2024 IEEE. This is the author’s version of the article that has been published in the proceedings of IEEE Visualization
conference.Thefinalversionofthisrecordisavailableat:xx.xxxx/TVCG.201x.xxxxxxx/
REFERENCES -Management,2023.[lastaccessed16June2024].4
[22] OpenAI. Introducingchatgpt. https://openai.com/blog/chat
[1] A.Abid,A.Abdalla,A.Abid,D.Khan,A.Alfozan,andJ.Zou.Gra-
gpt,2022.[lastaccessed16June2024].4
dio: Hassle-freesharingandtestingofMLmodelsinthewild,June [23] B. Paget. Pygwalker: Simplifying exploratory data analysis with
2019.4 python. https://bryanpaget.medium.com/pygwalker-2f1
[2] betterpy.learn-py.https://github.com/better-py/learn-py, de396df1f.[lastaccessed16June2024].2
2024.[lastaccessed16June2024].4 [24] A. Pandey, A. Srinivasan, and V. Setlur. MEDLEY: Intent-based
[3] S.Bosau.Atableaualternativeinpythonfordataanalysis(instreamlit RecommendationstoSupportDashboardComposition. IEEETrans-
&jupyter)—pygwalkertutorial. https://www.youtube.com/wa actionsonVisualizationandComputerGraphics,29(1):1135–1145,
tch?v=Ynt7Etci1KU.[lastaccessed16June2024].2 2023.2
[4] M. Bostock, V. Ogievetsky, and J. Heer. D³ data-driven docu- [25] R.Polzin,S.Fritsch,K.Sharafutdinov,G.Marx,andA.Schuppert.
ments. IEEETransactionsonVisualizationandComputerGraphics, Diagnosticexpertadvisor:Aplatformfordevelopingmachinelearn-
17(12):2301–2309,2011.4
ingmodelsonmedicaltime-seriesdata.SoftwareX,23:1–5,2023.4
[5] BugBytes. Pygwalker-pythondatavisualizationtool/streamlitin- [26] M.RaasveldtandH.Mu¨hleisen. Duckdb: anembeddableanalytical
tegration. https://www.youtube.com/watch?v=ogyxjkYRgPE. database. In Proceedings of the 2019 International Conference on
[lastaccessed16June2024].2
ManagementofData,SIGMOD’19,p.1981–1984.ACM,2019.3
[6] M.Das. Pygwalker: Agraphicwalkthroughoftableau-styleuserin- [27] A.Satyanarayan, B.Lee, D.Ren, J.Heer, J.Stasko, J.Thompson,
terfaceinjupyter(python). https://medium.com/@HeCanThink M.Brehmer, andZ.Liu. CriticalReflectionsonVisualizationAu-
/pygwalker-a-graphic-walkthrough-of-tableau-style thoringSystems. IEEETransactionsonVisualizationandComputer
-user-interface-in-jupyter-python-15674be950bb. [last Graphics,26(1):1–11,2019.2
accessed16June2024].2 [28] A.Satyanarayan,D.Moritz,K.Wongsuphasawat,andJ.Heer. Vega-
[7] M.ElTaweel, S.Alfaro, G.Siour, A.Coman, S.Robaa, andM.A. lite: Agrammarofinteractivegraphics. IEEETransactionsonVisu-
Wahab. Predictionandforecastofsurfacewindusingmltree-based
alizationandComputerGraphics,23(1):341–350,2017.3
algorithms.MeteorologyandAtmosphericPhysics,136(1):1,2024.4 [29] L. Shen, E. Shen, Y. Luo, X. Yang, X. Hu, X. Zhang, Z. Tai, and
[8] P.JanusandG.Fouche´. Cubes,Dimensions,andMeasures,pp.15– J.Wang. TowardsNaturalLanguageInterfacesforDataVisualiza-
39.Apress,Berkeley,CA,2009.3 tion: ASurvey. IEEETransactionsonVisualizationandComputer
[9] D.J.-L.Lee,D.Tang,K.Agarwal,T.Boonmark,C.Chen,J.Kang,
Graphics,29(6):3121–3144,2023.4
U. Mukhopadhyay, J. Song, M. Yong, M. A. Hearst, and A. G. [30] L.Shen,E.Shen,Z.Tai,Y.Song,andJ.Wang.TaskVis:Task-oriented
Parameswaran. Lux:Always-onVisualizationRecommendationsfor Visualization Recommendation. In Proceedings of the 23th Euro-
ExploratoryDataframeWorkflows.ProceedingsoftheVLDBEndow- graphicsConferenceonVisualization(ShortPapers),EuroVis’21,pp.
ment,15(3):727–738,2021.2 91–95.Eurographics,2021.2
[10] H.Li,L.Ying,H.Zhang,Y.Wu,H.Qu,andY.Wang. Notable:On- [31] L.Shen,E.Shen,Z.Tai,Y.Xu,J.Dong,andJ.Wang. VisualData
the-flyAssistantforDataStorytellinginComputationalNotebooks. AnalysiswithTask-BasedRecommendations. DataScienceandEn-
In Proceedings of the 2023 CHI Conference on Human Factors in gineering,7(4):354–369,2022.2
ComputingSystems,CHI’23,pp.1–16.ACM,2023.2 [32] L. Shen, Z. Tai, E. Shen, and J. Wang. Graph Exploration with
[11] Y. Lin, H. Li, L. Yang, A. Wu, and H. Qu. InkSight: Leverag-
Embedding-GuidedLayouts.IEEETransactionsonVisualizationand
ingSketchInteractionforDocumentingChartFindingsinComputa-
ComputerGraphics,pp.1–15,2023.4
tionalNotebooks. IEEETransactionsonVisualizationandComputer [33] L.Shen,Y.Zhang,H.Zhang,andY.Wang. DataPlayer: Automatic
Graphics,30(1):944–954,2024.2 GenerationofDataVideoswithNarration-AnimationInterplay.IEEE
[12] L. Liu. Pygwalker: Revolutionizing data analysis in jupyter note- Transactions on Visualization and Computer Graphics, 30(1):109–
books. https://medium.com/@yuxuzi/pygwalker-revolutio 119,2024.4
nizing-data-analysis-in-jupyter-notebooks-3c17eecb2 [34] Streamlit. Streamlit — a faster way to build and share data apps.
000.[lastaccessed16June2024].2 https://streamlit.io,2023.[lastaccessed16June2024].4
[13] K.Lo. Optimisationdetraficdecamionsdansuncontexteportuaire [35] S.R.SukhdeveandS.S.Sukhdeve. Datavisualizationandbusiness
paruneapproched’apprentissagemachine.PhDthesis,Universite´du intelligence. InGoogleCloudPlatformforDataScience: ACrash
Que´beca`Trois-Rivie`res,2023.4
CourseonBigData,MachineLearning,andDataAnalyticsServices,
[14] L.Y.-H.Lo,Y.Ming,andH.Qu. Learningvistools: Teachingdata pp.121–147.Springer,2023.4
visualizationtutorials. In2019IEEEVisualizationConference(VIS), [36] E.Wang.Bi-chatbot:Ai-poweredbi.https://github.com/Ewen2
pp.11–15,2019.4
015/BICat,2023.[lastaccessed16June2024].4
[15] Y.Luo,X.Qin,N.Tang,andG.Li.Deepeye:towardsautomaticdata [37] Y. Wang, Z. Hou, L. Shen, T. Wu, J. Wang, H. Huang, H. Zhang,
visualization. InProceedingsofthe34thIEEEInternationalConfer- andD.Zhang. TowardsNaturalLanguage-BasedVisualizationAu-
enceonDataEngineering,ICDE’18,pp.101–112.IEEE,2018.2 thoring.IEEETransactionsonVisualizationandComputerGraphics,
[16] J.Mackinlay,P.Hanrahan,andC.Stolte. Showme: Automaticpre- 29(1):1222–1232,2023.4
sentationforvisualanalysis. IEEETransactionsonVisualizationand [38] L.Wilkinson.TheGrammarofGraphics.Springer,2011.3
ComputerGraphics,13(6):1137–1144,2007.3 [39] K.Wongsuphasawat,D.Moritz,A.Anand,J.Mackinlay,B.Howe,
[17] A.Mahalingappa.Globalsuperstoredataset.https://www.kaggle andJ.Heer. Voyager:ExploratoryAnalysisviaFacetedBrowsingof
.com/datasets/apoorvaappz/global-super-store-dataset. VisualizationRecommendations.IEEETransactionsonVisualization
[lastaccessed16June2024].2
andComputerGraphics,22(1):649–658,2016.2,3
[18] A.McDonald.Pygwalkerforexploratorydataanalysisinjupyternote- [40] A.Wu,Y.Wang,M.Zhou,X.He,H.Zhang,H.Qu,andD.Zhang.
books. https://www.youtube.com/watch?v=3WjWeH3HIMo&t. MultiVision: DesigningAnalyticalDashboardswithDeepLearning
[lastaccessed16June2024].2 Based Recommendation. IEEE Transactions on Visualization and
[19] H.MokhtarzadehandS.Bagheri. Streamliningc3dfileprocessing
ComputerGraphics,28(1):162–172,2022.2
andvisualization: Auser-friendlyapproachusinggooglecolaband [41] Y.Wu,J.M.Hellerstein,andA.Satyanarayan.B2:BridgingCodeand
open-sourcepythonpackages.2023.4
InteractiveVisualizationinComputationalNotebooks.InProceedings
ofthe33rdAnnualACMSymposiumonUserInterfaceSoftwareand
[20] C.North,R.Chang,A.Endert,W.Dou,R.May,B.Pike,andG.Fink.
Analyticprovenance: process+interaction+insight. InExtendedAb- Technology,UIST’20,pp.152–165.ACM,2020.2
stracts on Human Factors in Computing Systems, CHI EA ’11, p.
33–36.ACM,2011.4
[21] OmdenaAI. Berlin-chapter-challenge-waste-management. https:
//github.com/OmdenaAI/Berlin-Chapter-Challenge-Waste
5