1
SoK: Detection and Repair of Accessibility Issues
Liming Nie, Hao Liu, Jing Sun*, Kabir Sulaiman SAID, Shanshan Hong, Lei Xue, Zhiyuan Wei, Yangyang Zhao,
and Meng Li*
Abstract—There is an increasing global emphasis on informa-
tion accessibility, with numerous researchers actively developing
automated tools to detect and repair accessibility issues, thereby
ensuringthatindividualswithdiverseabilitiescanindependently
accesssoftwareproductsandservices.However,currentresearch
still encounters significant challenges in two key areas: the
absenceofacomprehensivetaxonomyofaccessibilityissuetypes,
and the lack of comprehensive analysis of the capabilities of
detectionandrepairtools,aswellasthestatusofcorresponding
datasets. To address these challenges, this paper introduces
the Accessibility Issue Analysis (AIA) framework. Utilizing this
framework, we develop a comprehensive taxonomy that cate-
gorizes 55 types of accessibility issues across four pivotal di-
mensions:Perceivability,Operability,Understandability,andRo-
bustness.Thistaxonomyhasbeenrigorouslyrecognizedthrough
a questionnaire survey (n=130). Building on this taxonomy, we
conduct an in-depth analysis of existing detection and repair
tools,aswellasthestatusofcorrespondingdatasets.Intermsof
tools,ourfindingsindicatethat14detectiontoolscanidentify31
issue types, achieving a 56.3% rate (31/55). Meanwhile, 9 repair
tools address just 13 issue types, with a 23.6% rate. In terms
of datasets, those for detection tools cover 21 issue types, at a
38.1% coverage rate, whereas those for repair tools cover only
7 types, at a 12.7% coverage rate.
Fig. 1: The examples of accessibility issues
Index Terms—Accessibility Issues, Taxonomy, Detection tools,
Repair tools.
createautomatedtoolsfordetectingandrepairingaccessibility
I. INTRODUCTION issues [13], [14], [15], [11], [16], [17], [6], [4], [18], [19],
WITH the rapid advancement of information technol- [5], [20], [21], [22], [23], [24], [25], [26]. Specifically, In
ogy,accessibilityconsiderationsaregarneringgrowing the realm of detection, Krishnavajjala et al. [4] developed
attention within the realm of software engineering [1] [2]. MotorEase, a tool that integrates the Faster-RCNN model,
However, the design and implementation of current software computer vision, and text processing to automatically identify
and websites frequently neglect the needs of people with accessibility issues impacting users with motor impairments
disabilities, posing substantial barriers to their access to infor- in mobile app interfaces. Taeb et al. [27] created AXNav,
mation and social participation [3].For instance, small touch a system leveraging large language models and pixel-based
targets in user interfaces—such as buttons and icons—as well UI understanding models to transform natural language ac-
as icons positioned too closely together(in Fig 1.a,c), impede cessibilitytestinstructionsintoreproducible,navigablevideos
users with motor impairments from engaging in effective for issue identification and testing. He et al. [16] created Ad-
interaction [4], [5], [6], [7], [8], [9]. Similarly, insufficient Mole,anautomatedtoolbasedonGroundhogforaccessibility
contrast between text and background colors (below 3.0) (in evaluation, which leverages UI screenshot analysis and ad
Fig 1.b)complicates reading and information access for those elementrecognitiontodetectaccessibilityissuesspecificallyin
with visual impairments [10], [11], [12]. ads within Android applications. In the area of repair, Zhang
To address pervasive accessibility issues in mobile appli- et al. [5] proposed AccessFixer, a method utilizing a graph
cations and websites, researchers have leveraged a variety of convolutional neural network to automatically modify GUI
technologies, including large language models, convolutional component properties for enhanced accessibility. Zhang et al.
neuralnetworks,naturallanguageprocessing,amongothers,to [19]developedIris,atoolintegratingautomationandcontext-
awareness technologies to tackle color-related accessibility is-
L. Nie, H. Liu, S. Hong and M. Li are with Shenzhen Technology suesinAndroidapps.Alotaibietal.[20]proposedtheSALEM
University,Shenzhen,China
, which combines the SRG model with genetic algorithms to
J.SumiswithJiliangUniversity,Hangzhou,China
K. Sulaiman SAID is with Aliko Dangote University of Science and fix small touch target issues in mobile applications.
Technology,Wudil,Kano,Nigeria Despite notable advancements, current research confronts
Z.WeiiswithUniversityofChicago,Chicago,USA.
severalchallenges.Firstly,existingstudieshavenotthoroughly
Y.ZhaoiswithZhejiangSci-TechUniversity,Hangzhou,China.
L.XueiswithSunYat-SenUniversity,Shenzhen,China collected and classified the accessibility issues users face
4202
voN
92
]ES.sc[
1v72791.1142:viXra2
when using mobile applications and websites.A comprehen- practice.This paper makes the following contributions:
sive taxonomy for accessibility issue types would enhance • Constructed a comprehensive taxonomy for accessibility
understanding of these issues and aid developers in crafting issuetypes,providingastandardizedreferenceframework
more accessible software applications [8].Secondly, the lack for future research.
ofintegratedanalysesofdetectionandrepairtoolscapabilities • Analyzed the capabilities of current detection and repair
and the current status of related datasets.The effectiveness of tools and revealed their limitations.
detection and repair tools directly influences the efficiency of • Evaluated the current status of datasets for detection and
issue identification and resolution, yet no study has analyzed repair tools and provided guidance for future dataset
their capabilities within a comprehensive taxonomy. Further- development.
more, high-quality datasets are crucial for tool performance
[28]. Despite the proposal of some datasets, research on their
II. BACKGROUNDANDRELATEDWORK
current status remains inadequate.
In this section, we briefly describe the prevalent accessi-
Inthispaper,weproposeforthefirsttimetheAccessibility
bility issues in mobile applications and websites, the Web
IssueAnalysisFramework(AIA),anovelmultistageapproach
Content Accessibility Guidelines 2.1, the current research on
designed to address these challenges. In the first stage, we
accessibility issue detection and repair, and existing reviews
systematically gather literature on accessibility issues through
of accessibility issues.
a rigorous literature review and snowballing method. In the
second stage, based on the accessibility issue types collated
and de-duplicated from these studies, we develop a compre- A. Accessibility Issues in Mobile Applications and Websites
hensive taxonomy, classifying each type according to WCAG
Alshaybanetal.[10]analyzedover1,000Androidappsand
2.1. Additionally, we provide detailed annotations for each
foundthatalmostallappsareriddledwithaccessibilityissues,
issue type, including the impacted user groups and potential
hinderingtheirusebydisabledpeople..By2019,approximately
applicationscenarios.Inthethirdandfourthstages,leveraging
70%ofwebsitesonlinecontainedaccessibilitybarriers,which
the constructed taxonomy, we evaluate the capabilities of
restricted individuals with disabilities from accessing key
existing detection and repair tools and analyze the current
featuresandlimitedtheirequalengagementinthedigitalrealm
status of datasets used for accessibility issue detection and
[29]. In February 2024, WebAIM evaluated the accessibility
repair.
ofmorethanonemillionwebsitehomepages,discoveringthat
Based on this framework, we answer three key research
95.9% contained accessibility issues, averaging 56.8 errors
questions (RQs):
per page and totaling 56,791,260 errors.With the increasing
• RQ1: What known accessibility issues do users en- complexity of web elements, it is estimated that users with
counter when using mobile applications or websites? disabilities face accessibility issues with approximately 21
We have developed the most comprehensive taxonomy elements per page [30]. Being able to easily access and
to date, encompassing 55 recognized accessibility issue use information is important for everyone, especially for the
types, recognized through an questionnaire survey. Each approximately15%ofpeoplewithdisabilitiesworldwide[31].
type is annotated with the impacted user groups and Therefore, improving the accessibility of digital environments
potentialapplicationscenarios,enhancingthetaxonomy’s is particularly necessary.
applicability.
• RQ2: What are the capabilities of current tools for B. Web Content Accessibility Guidelines 2.1
detecting and repairing accessibility issues?
The W3C’s Web Accessibility Initiative (WAI) developed
Of the 55 issue types, the 14 detection tools can identify
theWCAGtomakewebcontentmoreaccessibletoindividuals
31types,achievinga56.3%rate.Meanwhile,the9repair
withdisabilities.WCAG2.1[32],themostrecentinternational
tools can address only 13 types, with a 23.6% rate. This
standardpublishedbytheW3C,isfoundedonfourkeyprinci-
indicates significant gaps in the capabilities of current
ples: perceivable, operable, understandable, and robust.These
tools.
principles guarantee that content is accessible, operable, and
• RQ3:Whatisthestatusofdatasetsusedfordetection
understandable for all users and can be consistently presented
and repair tools in relation to the taxonomy?
across different user agents and assistive technologies.WCAG
Currently, the 10 datasets for detection tools encompass
2.1 provides extensive guidance for creating accessible de-
21 out of the 55 types of accessibility issues, achieving
signs.
a coverage rate of 38.1%. Additionally, the 8 datasets
for repair tools address only 7 issue types, resulting in
a coverage rate of 12.7%. The lack of comprehensive C. Detection and Repair of Accessibility Issues
datasets limits the effectiveness of current detection and
In recent years, researchers have proposed diverse tools
repair tools.
and algorithms to enhance the identification and repair of
By answering these questions, this paper enhances our accessibility issues [13], [14], [15], [11], [16], [17], [6], [4],
comprehension of accessibility issue type classification, as [18], [19], [5], [20], [21], [22], [23], [24], [25], [26].
well as the capabilities of detection and repair tools, thereby In terms of detecting accessibility issue, researchers have
providing valuable insights for the field’s future research and proposed multiple tools that often leverage techniques such3
as machine learning, deep learning, dynamic program anal- thesedetectionandrepairtoolsandcomprehensivelyevaluates
ysis, and heuristic rules. For instance, Alshayban et al. [13] their capabilities based on the taxonomy we developed.
developed AccessiText, an automated testing technique that
combines dynamic analysis with heuristic rules to specifi- D. Existing Reviews of Accessibility Issues
cally detect text accessibility issues in Android applications. Beyond the aforementioned research on accessibility is-
Chiou et al. [14] analyzed different approaches to keyboard sue detection and repair, several studies have focused on
navigation of web UIs for keyboard users and constructed comprehensive reviews of accessibility issues. These reviews
a keyboard dialog model to detect navigation failures in can be broadly categorized into two main areas: those that
websites. Salehnamadi et al. [15] designed the automated concentrate on specific disability groups, such as visually
accessibilitytestingtoolGroundhog,whichusesthreedifferent impaired individuals, in their use of digital technologies [33],
agents to simulate user interactions and detect accessibility [34], [35], [36], [37] and the other that explores accessibility
issues in mobile applications. Tazi et al. [11] developed a issuesfacedbyindividualswithdisabilitiesinspecificcontexts
tool based on Accessibility Insights to detect common ac- [38], [39], [40], [41], [42].
cessibility issues through user interface analysis. He et al. Specifically, Kerdar et al. [33] conducted a systematic
[16] created AdMole, an accessibility evaluation tool built review of 49 studies from 2004 to 2019, delving into digital
on Groundhog, that employs UI screenshot analysis and ad accessibilityissuesthroughthefirsthandexperiencesandchal-
element recognition to specifically detect accessibility issues lenges of individuals with visual impairments and blindness.
inadswithinAndroidapplications.Zhangetal.[17]proposed Agrimi et al. [34] focused their review on the accessibil-
adeeplearning-basedmethodthatinfersaccessibilitymetadata ity of games for visually impaired individuals, finding that
by analyzing UI pixels. Salehnamadi et al. [6] combined while some games are specifically designed for this group,
dynamic program analysis with Accessibility Scanner and the the majority do not adequately consider their unique needs,
AppiumtestingframeworktoevaluatetheaccessibilityofGUI leading to numerous barriers within the gaming environment.
elements through automated testing scripts. Krishnavajjala et Khalajzadeh et al. [35] reviewed 38 studies from 2004 to
al. [4] developed MotorEase, which integrates Faster-RCNN, 2021, aiming to explore accessibility issues in low-code ap-
computer vision, and text processing techniques to automati- proaches and noting that users with visual impairments face
callydetectaccessibilityissuesaffectingmotor-impairedusers various challenges when using low-code platforms. Moreno
in mobile app UIs. Bajammal and Mesbah [18] introduced et al. [36] conducted a systematic literature review to explain
AXERAY, which uses hierarchical visual analysis to infer the reasons why accessibility barriers for the elderly remain
the semantic grouping and roles of webpage elements for unresolvedandtoidentifyareasneedingfurthereffort.Borina
automated accessibility testing. et al. [37] reviewed 44 studies from 2015 to 2021 to assess
In terms of repairing accessibility issues, researchers have web accessibility for individuals with cognitive impairments,
used graph models, convolutional neural networks, natural revealing that most websites have poor accessibility. Dai et
language processing, and genetic algorithms for issue repair. al. [38] examined 30 academic publications to analyze the
Specifically, Zhang et al. [19] developed the Iris tool, which challengesfacedbyelderlyindividualsandthosewithneurodi-
combines automated and context-aware technology to ad- verseneedswhenusingonlinebanking;Mountapmbemeetal.
dresscolor-relatedaccessibilityissuesinAndroidapplications. [39]analyzed70paperstoidentifyprogrammingaccessibility
Zhang et al. [5] proposed the AccessFixer method, which barriers encountered by visually impaired individuals learning
uses a relational graph convolutional neural network model tocode;Nevskyetal.[40]systematicallyreviewed181papers
to automatically adjust GUI component attributes. Alotaibi from 1996 to 2022, exploring the primary accessibility chal-
et al. [20] proposed the SALEM tool, which combines the lenges faced by individuals with disabilities when accessing
SRG model with genetic algorithms to repair issues of touch digital audiovisual media and the focus of audiovisual media
target size in mobile apps. Mehralian et al. [21] proposed accessibility research; Deriba et al. [41] analyzed 21 papers
the coala method for generating accurate icon labels. Xu to investigate accessibility barriers in virtual laboratories and
et al. [22] proposed the AGAA method, which converts explorepotentialsolutions;M.AkramandR.BtSulaiman[42]
GUIs into graph structures and uses genetic algorithms to conducted a systematic literature review of 15 studies within
generate accessibility issues on Android apps. Chen et al. and outside Saudi Arabia, examining web accessibility issues
[23] developed the LabelDroid method, which automatically in government and university websites.
predicts natural language labels for GUI components. Zhang Despite providing valuable insights, these review studies
etal.[24]proposedtheSAMtool,whichsupplementsmissing have largely focused on specific disability groups or specific
alternative text in SVG buttons. Alotaibi et al. [25] developed contexts. In contrast, this paper systematically reviews the
the ScaleFix tool, which automatically repairs user interface relevant literature to explore a broader spectrum of accessibil-
scaling accessibility issues. Zhang et al. [26] proposed the ity issues encountered by various disability groups, including
Screen Recognition tool, which combines heuristic rules and those with visual, motor, hearing, cognitive impairments, and
OCR technology to create accessibility metadata from pixels. aphasia, across diverse contexts. Additionally, based on the
Insummary,althoughnumerousstudieshavefocusedonde- WCAG 2.1 guidelines, we have categorized the identified
tectingandrepairingaccessibilityissues,thereisstillasignifi- issuesanddevelopedacomprehensivetaxonomy.Utilizingthis
cantlackofresearchanalyzingthecapabilitiesofdetectionand taxonomy, we conducted an in-depth analysis of the capabili-
repair tools.Building on this, this paper collects and reviews tiesandlimitationsofcurrentaccessibilityissuedetectionand4
repair tools, as well as assessed the status of corresponding in-depth analysis of these tools’ capabilities is crucial
datasets. This paper aims to fill the gaps in existing research, for practitioners to select the most suitable ones and for
providing a more comprehensive reference and guidance for future optimization and expansion of their application
the further development of accessibility technologies. scope.
• RQ3:Whatisthestatusofdatasetsusedfordetection
and repair tools in relation to the taxonomy?
One major obstacle in research related to accessibility
issue detection and repair is the lack of comprehensive
datasets.Althoughsomedatasetsexistforuseindetection
and repair tools, their status has not been adequately
investigated, particularly regarding their actual coverage
of a comprehensive accessibility issue types taxonomy.
Thus, an in-depth analysis of existing datasets is both
necessary and urgent.
B. Framework
AsshowninFigure2,toaddressthethreeresearchquestions
mentioned above, we propose an Accessibility Issue Analy-
sis Framework (AIA), based on the taxonomy construction
approach used by Ladisa et al. [43] and the standardization
methods proposed by Usman et al. [44] and Ralph et al. [45].
Itaimstoconstructacomprehensivetaxonomyofaccessibility
issue types and, based on this taxonomy, provide in-depth
analyses of the capabilities of existing tools and the status
of related datasets. AIA includes four modules: systematic
literature review, taxonomy construction, tool capability anal-
ysis,anddatasetstatusanalysis.First,thesystematicliterature
reviewmodulecomprehensivelycollectsandscreensliterature
on accessibility issues to provide a theoretical foundation
for taxonomy construction. Next, the taxonomy construction
module extracts accessibility issue types from the screened
Fig. 2: The framework of AIA
literature and builds a comprehensive taxonomy, providing a
reference for the analysis of tools and datasets. Third, the
tool capability analysis module selects tools for detecting and
III. METHODOLOGY
repairing accessibility issues and evaluates their capabilities
Thissectionbeginsbyoutliningthethreeresearchquestions based on the taxonomy. Finally, the dataset status analysis
andtheirunderlyingmotivations.Followingthis,weintroduce module assesses the current status of datasets used for detec-
a detailed framework intended to direct our empirical investi- tion and repair tools in relation to the taxonomy.
gation in addressing these questions.
A. Research Questions And Motivation
• RQ1: What known accessibility issues do users en-
counter when using mobile applications or websites?
To effectively understand, detect, and repair accessibil-
ity issues, a comprehensive and widely accepted taxon-
omy of accessibility issue types is necessary. However,
research on developing such a taxonomy is relatively
limited. At present, such a taxonomy does not exist.
Consequently,constructingacomprehensivetaxonomyof
accessibility issues is of paramount importance.
• RQ2: What are the capabilities of current tools for
detecting and repairing accessibility issues?
Fig. 3: Annual Publication Trends of Acccessibility Issue-
Although several automated tools for detecting and re-
Related Research Papers
pairing accessibility issues have been developed, their
capabilities have not yet been thoroughly examined. An5
TABLE I: Conference Venues and Journal Venues List
2) Relevant Literature Screening: To identify the most
relevantpapers,weimplementedafour-stepscreeningprocess:
ICSE*, FSE*,ASE*,ICSME*,MSR*,ICPC*,ISSTA*,
ConferenceVenues ICST*,SANER*,UIST*,CHI*,SPLASH*,OOPSLA*, defining the literature scope, preliminary screening based on
PLDI*,CSCW*,ASSETS*,USS,ICMI,COMPSAC
metadata,adetailedfull-textreview,andapplyingthesnowball
TSE*,TOSEM*,EMSE*,JSS*,ASE*,SoftComputing,
JournalVenues technique to the screened literature.
MTA,BIT,SOCA,WWW,AEJ,SCP,IJHCS,ESWA
Firstly, to define the literature scope, we identified 19 con-
ferences and 14 journals, as listed in the Table I. Journals and
C. Systematic Literature Review
conferencesmarkedwithanasterisk(*)inthetableweretaken
Thissubsectionintroducesthecollectionofliteraturerelated from the study by Vajjala et al. [4]. In addition, we included
to accessibility issue research, as shown in the first module three more conferences (USS, ICMI, COMPSAC) and nine
of Figure 2. To achieve this goal, we followed a structured more journals (such as MTA, Soft Computing, and BIT) to
approach for the systematic literature review [46], [47], com- cover a broader range of literature related to accessibility
prising two stages: candidate literature search and relevant research. We limited the 242 deduplicated papers to the scope
literature screening. of these conferences and journals, ultimately reducing the
candidate literature to 73 papers.
1) Candidate Literature Search: To conduct an effective
candidate literature search, we performed the following three Secondly, to ensure that the selected papers was directly
steps: search query design, actual search execution, and dedu- related to accessibility issue research, we conducted a prelim-
plication of retrieved papers. inary screening based on metadata. In this step, we carefully
examined the publication type, title, abstract, and keywords
Our systematic literature review on accessibility issue re-
of each document, with particular attention to its relevance to
search began with designing an effective search query. To
accessibility issue research. Any papers clearly unrelated to
ensure a robust query, we conducted an initial exploratory
accessibility issue research were excluded. This preliminary
search using the keyword “Accessibility Issues” in the ACM
screening reduced the candidate literature to 67 papers.
Digital Library. This initial search helped us identify several
relatedstudies[4],[7],[10],[24],[16],[48],[49],[50],which Next, to ensure that the selected papers encompasses ad-
providedapreliminaryunderstandingofthetopicandassisted equate information for our subsequent review, we obtained
in identifying a range of keywords related to accessibility the full text of the screened papers for a final review. We
issues. Subsequently, we analyzed these keywords and con- focusedontheintroduction,methodology,andresultssections
structed a search query aimed at retrieving literature pertinent to ensure that these papers were not only related to accessi-
toaccessibilityissues.Thesearchqueryisasfollows:(Acces- bility issue research but also provided detailed descriptions of
sibility OR Accessibility issue OR Assistive Technology OR the accessibility issues, such as their descriptions, occurrence
Mobile accessibility OR Accessibility issue repair OR Color- scenarios, and affected populations. Additionally, all sections
relatedaccessibilityissueORaccessibilityguidelinesORblind of the study had to be written in English to be considered.
and visually impaired OR web accessibility OR WCAG). Papers not meeting these standards were excluded. After this
Using this carefully crafted search query, we conducted round of rigorous screening step, the number of candidate
a systematic literature search across five authoritative digital literature was narrowed down to 37.
libraries:GoogleScholar,IEEEXplore,ACMDigitalLibrary, Finally,togatherascomprehensivelyaspossibleaccessibil-
Science Direct and DBLP. These libraries were selected for ity issue research,we applied a bidirectional snowball strategy
their extensive and high-quality academic resources in com- to the 37 papers selected in the previous step. This approach
puter science and software engineering, ensuring the compre- involved tracing both forward and backward references, fo-
hensiveness and authority of the literature search. During the cusing exclusively on papers that directly cited or were cited
searchprocess,tomaintainresultrelevance,wesetthefollow- by the selected papers, and adhering to a one-layer depth
ingcriteria:searchscopewaslimitedtothetitle,abstract,and to maintain focus and control over the results. During this
keywords of papers, restricted to English, and included only systematic supplementary search, we meticulously screened
academic journals and conference papers. The entire search anyadditionalliteraturefoundaccordingtothesameselection
process was conducted manually over two weeks, ultimately criteria. As a result, we identified and incorporated 5 new
yielding 1060 candidate papers. It is important to note that papers, bringing the total to 42 relevant papers.
duplicatesmayexistamongthesepapersastheywereretrieved TheFigure3showsthepublicationtrendofthe42selected
from different digital libraries. papers by year. Based on our analyses, it is evident that
Lastly, to eliminate duplicate papers, we performed a rig- research on accessibility issues has been gaining substantial
orous manual deduplication process. First, we exported the momentum in recent years. From 2011 onwards, the number
information of all retrieved papers into a table, where each ofstudiesinthisfieldremainedrelativelylow,withonlyoneto
entry represented a document and included title, author list, two papers published annually. However, a significant growth
publication year, and abstract information. Then, the second trend emerged starting in 2021. Specifically, the volume of
author of our team sorted the table by title and conducted a research increased from six papers in 2021 to seven in 2022,
line-by-line manual check, marking and removing duplicate and reached a peak of 10 papers in 2023. Notably, as of July
entries.Afterthiscarefuldeduplicationprocess,weultimately 2024, nine studies have been published, further highlighting
compiled a set of 242 unique papers. the growing interest and sustained investment in this domain.6
D. Construction of the Taxonomy With these essential steps successfully completed, we have
constructed a taxonomy of accessibility issue types that is
This section outlines the methodology for constructing the
as comprehensive as possible. This taxonomy encompasses
taxonomy of accessibility issue types, as well as the question-
known accessibility issue types in current academic research,
nairesurveyonthetaxonomy,asshowninthesecondmodule
aiming to provide a common reference framework for re-
of Figure 2.
searchers,developers, policymakers, andother stakeholdersin
1) Construction: We adopted a multistep approach to con-
theaccessibilityfieldtomoreeffectivelyidentify,discuss,and
structing the taxonomy, which included three main steps:
resolve accessibility issues.
collectionofaccessibilityissuetypes,mergingofsimilartypes 2) Questionnaire Survey: The goal of this survey is to
guided by the WCAG 2.1, and categorization of issue types gather feedback from a wide array of societal individuals
based on the WCAG 2.1. regardingourdevelopedtaxonomyofaccessibilityissuetypes.
First, regarding the collection of accessibility issue types, The survey focuses on four key areas: a). Evaluating the
we followed these steps: we designed a structured table taxonomy’s rationality, completeness, and understandability.
covering key information such as the issue type description, b). Assessing the appropriateness of annotations for ”people
impact, affected user group, and occurrence platform. Then, affected” and ”WCAG 2.1.” c). Evaluating the effectiveness
we conducted a thorough full-text review of the 42 selected of existing tools for detecting and repairing accessibility
relevant papers and manually recorded detailed annotations in issues.d).Assessingtheusabilityofexistingaccessibilityissue
the table. Ultimately, we identified and extracted 124 clearly datasets.
described accessibility issue types from these papers, which The survey consists of three parts:The first part focused
providedafoundationforoursubsequentclassificationandin- on questionnaire design. The questionnaire includes 14 ques-
depthanalysis.Itisworthnotingthatweobservedredundancy tions, each with a specific evaluation objective. Of these,
in accessibility issue types across different papers during the 8 questions use a Likert scale ranging from 1 (lowest) to
extraction process. 5 (highest) to quantify participant feedback. There are also
Second, to eliminate redundancy, we consolidated similar two binary questions (yes/no), such as whether participants
accessibilityissuetypes.Specifically,weconductedathorough reviewed the provided taxonomy document and background
review of all accessibility issue types, identifying redundant materials, and whether they are aware of accessibility issues
ones that often shared similarities in their descriptions, man- in their applications. Additionally, four demographic ques-
ifestations, or affected user groups (e.g., visual impairments, tions were included, such as age, years of work experience,
hearing impairments). These potentially redundant types were occupational and industry background, to enable analysis of
then categorized and flagged for further examination. We perspectivedifferencesacrossvariousbackgrounds.Thesecond
meticulously assessed these types, paying particular attention part covered questionnaire distribution and scoring methods.
towhethertheyviolatedthesameWCAG2.1successcriteria. To ensure broad representation, the survey was distributed
Thisentireprocesswascarriedoutmanually,withtwoauthors to a diverse group. Participants were required to read the
independently evaluating each issue type based on textual de- taxonomy document and background materials before scoring
scriptions, violated success criteria, and affected user groups. each question to ensure accuracy in their feedback.The third
Any discrepancies were resolved through impartial arbitration part focused on privacy protection. We prioritized protecting
by a third author. Ultimately, we merged issue types that participants’privacyandanonymity.Nopersonallyidentifiable
demonstrated high consistency in their definitional descrip- information was collected during the survey, and we strictly
tions, manifestations, affected user groups, and violations of adheredtodataminimizationprinciples.Alldatawassecurely
WCAG 2.1 success criteria, retaining one issue description stored, and only aggregate data was presented in the report to
while consolidating other relevant information into a single protect individual privacy.
entry. As a result, we successfully reduced the initial 124 The survey was launched on August 27, 2024, and ended
accessibility issue types to 55. on September 18, 2024, with a total of 130 responses
Lastly,wecategorizedthededuplicatedissuetypesbasedon collected. Among the 130 respondents, end-users repre-
WCAG2.1.Specifically,wefirstthoroughlyreviewedthefour sented the largest group (55.38%), followed by academic
major principles of the WCAG 2.1 and their corresponding researchers (11.54%), other occupations (12.31%), developers
success criteria. Then, we examined the deduplicated accessi- (10.77%),testers(6.15%),anddesigners(3.85%).Mostpartic-
bility issue types and assigned them to appropriate categories ipants were aged between 18 and 30 years, with 40.77% aged
based on the WCAG 2.1 criterion each issue violated. For 18-25, 33.08% aged 26-30, 16.92% aged 31-40. Participants
example, the issue ”Text and image color contrast is lower under 18 made up 5.38%, while those over 41 accounted for
than 4.5:1” violates WCAG 2.1’s Perceivable principle under just 4.62%.
criterion 1.4.3, Color Contrast (Minimum), so we categorized The survey was conducted using the Wjx.cn platform for
it under Perceivable. Issues not explicitly covered by WCAG questionnaire design, data collection, and analysis. This plat-
2.1 were assigned to appropriate categories based on their form is widely used for survey design and data management.
actual impact on users; for example, ”Icons are too close
E. Analysis of Tool Capabilities
together” affects user operation and was thus assigned to the
Operable category. Through this approach, we developed a Weconductedanin-depthanalysisofthe42selectedarticles
comprehensive taxonomy of accessibility issue types. (refer to Section III-C) with the aim of identifying all auto-7
TABLE II: Taxonomy of Accessibility issue types
Categories ID IssueType WCAG2.1 Platform DetectedOrRepairedByTool PeopleAffected Source
Operability ⃝1 Visualsizeoftouchtargets(suchasbuttonsandicons)istoosmall W2.5.5-AAA app ✓ M BV(M I(BO lT inO dR a) n,
dVisuallyImpaired)
[ [4 5] 2, ],[9 [] 6, ][51],[10],[5],[20],[11],
⃝2 KeyUIelementsdonotmaintainaconsistentpositionacrossscreens. - app ✓ M [4],[9]
⃝3 Pop-upmenusordialoguesintheinterfacecannotbeeasilyclosed - app ✓ M,BVI [4],[9]
⃝4 Iconstooclosetoeachother - app ✓ M [4],[9],[5]
⃝5 Repeatedclickableborders - app ✓ M [51],[10]
⃝6 InvalidAction - app ✓ BVI [16],[15]
⃝7 ExcessiveInteraction - app ✓ BVI [16],[12]
⃝8 Facialrecognitiondoesn’twork - app,web M [53]
⃝9 A ind ted ri at cio tin na gl whe ia thd im nto ev rae cm tie vn ets eli en mV eR ntsm oa un to sie du evr te hs eb fiy elo dld oe fr vp iee wople - vr O(Old) [54]
⃝10 O thl ad te rr ea qd uu irl ets twha ov -e had ni dffi ec du clt oy orp de ir nf ao tr im oninginteractiontasksinVR - vr O [54]
⃝11 Dialogfocusnotinitialized W2.4.7AA web ✓ M,BVI,CI(Cognitiveimpairment( [14]
⃝12 Dialogfocusisnotlimited W2.4.7AA web ✓ M,BVI,CI [14]
⃝13 Dialogboxcannotbeclosed W2.1.2A web ✓ M,BVI,CI [14]
⃝14 Unabletoaccesscertainelementsorfunctionsfromthekeyboard W2.1.1A web ✓ M,BVI,CI [55]
⃝15 KeyboardTraps W2.1.2A web ✓ M,BVI,CI [55]
⃝16 UIelementcollision - app ✓ BVI [25]
⃝17 UIelementsaremissing - app ✓ BVI [25]
⃝34 blanktitle W2.4.6AA web BVI [56]
⃝18 Topcheckbox - web BVI [57]
⃝49 URLSpandoesnotuseabsoluteURLs W2.4.4A app ✓ BVI [51]
⃝50 S acc cr oee rdn inre gad toer ts hed io rhn io et ran ra cv hi ig ca at le oe rl de em rentsonthescreen W2.4.3A app,web ✓ M,BVI [10],[15],[56],[58]
⃝51 VoiceOverNavigationLoop W2.4.3A app ✓ BVI [27],[59]
⃝52 uielementcannotbepositioned - app ✓ BVI [27],[16],[15]
⃝53 labelorder W2.4.3A web BVI [56]
⃝54 Layoutchangesmayoccurastheappnavigatesthroughthescreenreader - app ✓ BVI [48],[12],[6]
⃝55 NeckfatigueinVRuse - vr O [54]
⃝19 InputMethodChallenge - app O [60]
Perceivability ⃝20 Visualdetailsinthevideonotdescribedintheaudio W1.2.3A app,web,vr ✓ BVI [61],[62],[12]
⃝21 Lackofsubtitlesinthevideo W1.2.2A app,web,vr ✓ DHH(DeafandHardofHearing) [62]
⃝22 T ish le esc son thtr aa nst 3b .0etweenthetextcolourandthebackgroundcolour W1.4.3AA app ✓ BVI [51],[10],[63],[50],[5],[11],[52],[12]
⃝23 T ish le esc son thtr aa nst 3b .0etweentheforegroundandbackgroundcoloursoftheimage W1.4.3AA app ✓ BVI [51],[10],[63],[50],[5],[11],[52],[12],[6]
⃝24 Lackoflabelling W1.1.1A app,web ✓ BVI [ [5 21 6] ], ,[ [4 28 1] ], ,[ [1 11 6] ], ,[ [5 12 8] ], ,[ [1 52 6] ], ,[ [6 6] 5, ],[1 [0 6] 6, ],[6 [4 5] 8,
]
⃝25 Olderpeople’sslowerspatialperceptioninVR - vr O [54]
⃝26 Inappropriatefontsize W1.4.4AA app ✓ BVI [52],[12],[60],[22]
⃝27 Poorletterspacing W1.4.12AA app BVI [52]
⃝28 Webcontentistruncatedorhiddenatsmallviewportsizes W1.4.10AA web ✓ M,BVI [49]
⃝29 Buttonshapeissues W1.4.1A app ✓ BVI [27]
⃝30 Editabletextcontent - app ✓ BVI [11]
⃝35 texttruncation W1.4.4AA app ✓ BVI [25]
Understandability ⃝31 Redundantlabelling - app ✓ CI,BVI [51],[10]
⃝32 UIelementswiththesamelabelonthesamescreen. - app ✓ BVI [51],[10]
⃝33 IncorrectlabelcontentforUIelements - web ✓ BVI [18]
⃝36 Webpagecannottranslatecontentintosignlanguage - web DHH [67]
⃝37 Complexnavigation - app O [60]
⃝38 Unintuitivedesignoftheinterface - app O [60]
⃝39 Rapiddialogueorslurredpronunciation - app,web,vr A(aphasia) [68]
⃝40 Thefastpaceofaudiovisualmedia - app,web,vr A [68]
⃝41 Insufficientreadingtimeforon-screentext - app,web,vr A [68]
⃝42 Complexnarrativestructure - app,web,vr A [68]
⃝43 Redundantinformation - app ✓ BVI [22],[69]
⃝44 EditTextandeditableTextViewwithnon-emptycontentDescription - app ✓ BVI [51]
Robustness ⃝45 uielementsarenotsupportedbytextscaling W4.1.2A app ✓ BVI [7],[27]
⃝46 uielementsarenotsupportedbyscreenreaders W4.1.2A app,web ✓ BVI [ [5 51 8] ],[48],[59],[12],[6],[10],[63],[15],
⃝47 UsingAJAXandJavaScript W4.1.2A web BVI [70]
⃝48 compatibilityissue - app O [60]
mated tools capable of detecting and repairing accessibility accessibility issues.
issue types, and further analyzing these tools. This process • Criterion #4:Tools must explicitly state the accessibility
encompassedthreesteps:toolselection,capabilityinformation issues they can detect or repair, with related documenta-
collection, and analysis based on the taxonomy, as illustrated tion or descriptions listing supported issues and explain-
in the third module of Figure 2. Importantly, we did not ing their capabilities.
executethesetoolsourselves;rather,wereliedonthereported
Based on these criteria, we collected 14 detection tools and
capabilities from their performance on the respective datasets.
9 repair tools from 42 related papers.
Firstly,inthetoolselectionstep,toensuretargetedanalysis
We then collected information on tool capabilities. In this
and simplify the selection process, we established the follow-
step, we first identified key information for screening, includ-
ingcriteria,andonlytoolsmeetingthesecriteriawereincluded
ing creation time, name, detectable or repairable accessibility
in the analysis:
issues, main techniques used, training set, and validation
• Criterion #1:Tools must be directly related to the detec- set, among others. We then thoroughly reviewed the papers
tion or repair of accessibility issues, with descriptions proposing these tools, extracting the key information from
containing keywords or synonyms like “identification,” sections like “Methods” and “Results” and compiling it into a
“detection,” “repair,” and “accessibility issues.” table.In instances where tools lacked a designated name, we
• Criterion #2:Tools must be automated, able to perform adopted an abbreviation strategy, leveraging the initial letters
detection or repair tasks independently without manual of the first three authors of the corresponding paper.
intervention. Finally, we conducted a detailed analysis of tool capabil-
• Criterion#3:Toolfunctionalitymustbeclearlydescribed, ities based on the taxonomy we developed, covering tool
including specific operating principles, technical imple- performance in detecting and repairing issue types within
mentation, and the process of identifying or repairing the taxonomy, application scenarios, and evaluation metrics.8
TABLE III: Tools List for Accessibility Issues Detection.
DetectionIssuesID Platform Year Name Technology I Rn aa tc ec (%ess (ible A Cc ot vi ev rit ay ge(%) Accuracy(%) Precision(%) F1-Score Recall(%) Sources Useable
⃝1 ⃝2 ⃝3 ⃝4 Mobile 2024 MotorEase Faster-RCNN,OpticalCharacterRecognition - - 8 95 1. .2 25 3, ,8 97 5. .7 76 5, 1 90 00 .4,8 22 ,7.1 14 .1, 9 7 99 1. .8 26 9, ,8 88 3. .4 16 7, - [4] 1
⃝28 Web 2024 SALAD NaturalLanguageProcessing,MechineLearning - - - 85 - 94 [49] 0
⃝6 ⃝7 ⃝24 ⃝52 Mobile 2024 AdMole ActionExtractor,SnapshotManager 84.4 - - - - - [16] 1
⃝29 ⃝45 ⃝51 ⃝52 Mobile 2024 AXNAV LargeLanguageModel - - 70 - - - [27] 0
⃝11 ⃝12 ⃝33 Web 2023 LOTUS KeyboardDialogFlowGraph,StackingModel - - - 71,70,40 - 83,90,83 [14] 0
⃝45 Mobile 2022 AccessiText OpticalCharacterRecognition,HeuristicRule - - - 87.59 - 95.3 [7] 0
⃝20 ⃝21 Mobile,Web 2022 CrossA11y MultimodalMachineLearning,Cross-modalGrounding - - - 69.4,98.3 81.4,90.8 98.4,84.3 [62] 1
⃝ ⃝31
1
⃝ ⃝35
2
⃝ ⃝2 42
4
⃝ ⃝2 43
6
⃝ ⃝2 44
9
Mobile 2022 Xbot InstrumentationTechnique),StaticProgramAnalysis) - 72.81 - - - - [51] 1
⃝46 ⃝51 Mobile 2022 ATARI Graph-basedModels,DynamicAnalysis - - - 92 - 94 [59] 0
⃝6 ⃝46 ⃝52 Mobile 2022 Groundhog ActionExtractor,SnapshotManager - 98 - 86 - 83 [15] 1
⃝1 ⃝24 ⃝46 ⃝54 Mobile 2021 Latte DynamicProgramAnalysis - - - 100 - - [6] 1
⃝14 ⃝15 Web 2021 KAFE K Poe iy nb t-o Car lid ckN Nav ai vg ia gt aio tin onFl Fo lw owG Gra rp ah p, hs - - - 92,90 - 100,100 [55] 0
⃝24 ⃝33 Web 2021 AXERAY C No atn uv ro al lu Ltio ann gal uaN ge eu Pra rl ocN ee st sw ino grk, - - 85 - 87 - [18] 1
⃝1 ⃝23 ⃝24 ⃝30 Web 2017 AIFA Axe-Android 5 49 6. .4 3, 43 ,0 1. .2 37 3, - - - - - [11] 1
TABLE IV: Tools List for Accessibility Issues Repair.
RepairSuccess Accessibility
RepairIssuesID Platform Year Name Technology Accuracy(%) Recall(%) F1-Score(%( Exactmatch(%( Rate(%( Rate(%( Sources Usable
⃝1 ⃝4 ⃝22 ⃝23 Mobile 2024 AccessFixer R Ce ol na vt oio lun ta il o- nG ar lap Nh e, uralNetwork - - - - 83.75,80.7,80.3,80.3 - [5] 1
⃝22 ⃝23 Mobile 2023 Iris Context-awareColorSelection - - - - 93.6,70.4 - [50] 1
⃝26 ⃝43 Mobile 2023 AGAA G De en ne sit ti yc -BA alg seo drit Chm lu, steringAlgorithm - - - - 95.3,83.8 - [22] 1
⃝24 Web 2023 SAM RegularizedMethod 93.4 91.9 92.6 - - - [24] 1
⃝16 ⃝17 ⃝35 Mobile 2023 ScaleFix O Mp ut li tc ia -Ol bC jh ea cr tia vc ete Gr eR ne ec to icgn Ait li go on r, ithm - - - - 90 - [25] 0
⃝1 Mobile 2021 SALEM SizeRelationGraph - - - - 99 99 [20] 1
⃝24 Mobile 2021 coala R Ce oc nu vr or le un tit oN nae lur Na el uN rae ltw No er tk w, ork - - - 38 - [21] 1
⃝24 ⃝46 ⃝50 Mobile 2021 ScreenRecognition O Hp euti rc ia sl ticCh Ra ur la ecterRecognition, 71.3 - - - - - [26] 0
⃝24 Mobile 2020 LabelDroid C Tro an nv so folu rt mio en ra MlN odeu elralNetwork, - - - 60.7 - - [23] 1
First, we evaluated the number of issue types each tool could Based on these criteria, we identified 10 datasets for detec-
detect or repair based on the constructed taxonomy. For this, tion tools and 8 for repair tools from the 42 selected articles.
we introduced the metric “ratio of successfully detected or Secondly, we collected key information on these datasets.
repaired types” to measure the tools’ capabilities, calculated Specifically,weidentifiedtheessentialinformationneededfor
as:thenumberofsuccessfullydetectedorrepairedissuetypes systematic documentation of each dataset, including dataset
divided by the total number of issue types. Next, we analyzed name, data type (e.g., Apk, Image), the number of instances
the application scenarios of each tool to understand their in the dataset, types of accessibility issues covered, and
suitability for different platforms (e.g., mobile applications, datasetcreationtime,amongotherdetails.Wethenthoroughly
website).Finally,weexaminedtheevaluationmetricsusedby reviewed the relevant papers, extracting this information from
each tool, focusing on metrics like precision and recall. sections like “Introduction,” “Methods,” and “Results,” and
compiled it into a table.
Finally, We systematically analyzed the current status of
F. Analysis of Dataset Status
thesedatasetsacrossthreeaspects:coveragescope,datatypes,
Inordertocomprehensivelyunderstandthecurrentstatusof and scale. To assess the coverage scope of these datasets, we
datasets used for accessibility issue detection and repair tools, examined the alignment of each dataset with the constructed
weconductedafilteringandanalysisofrelevantdatasets.This taxonomyofaccessibilityissuetypes.Forthis,weintroduceda
process comprised three steps: dataset selection, key informa- “coveragerate”metrictomeasurethecoveragescopeofthese
tion collection, and taxonomy-based analysis, as illustrated in datasets, calculated as: the number of issue types included in
the fourth module of Figure 2. the dataset divided by the total number of issue types. We
Firstly, in terms of dataset selection, to ensure targeted then analyzed the data type of the datasets and evaluated the
analysis and dataset usability, we established the following dataset scale by the number of instances.
criteria,andonlydatasetsmeetingthesecriteriawereincluded
in the subsequent analysis:
IV. RESULTSANDFINDINGS
Building on the framework outlined in section III-B, this
• Criterion #1:Datasets should explicitly contain screen-
section provides responses to the three research questions.
shots or videos of webpages or mobile applications
with accessibility issues, providing direct instances of
A. Taxonomy
accessibility issues for research.
• Criterion #2:The dataset must be publicly available and For RQ1, we constructed a comprehensive taxonomy of
accessiblewithoutrestrictions,asdisclosedbyitsauthors. accessibility issues types following the process outlined in9
Section III-D warranting priority consideration in design and development.
Thistaxonomyencompasses55typesofaccessibilityissues, Regarding the platforms where these issue types arise, out of
systematically categorized into four main groups: Operability, the 55 issue types, 29 occur in mobile applications (52.7%),
Perceivability,Understandability,andRobustness,asshownin 12 in websites, 4 in both mobile applications and websites ,
Table II. 4 in VR applications, and 6 in all application contexts. This
Wepresentthetaxonomyanalysisresultsfromthreedistinct suggests that mobile applications are the primary context for
perspectives:thecategories,thecomprehensiveanalysisofthe accessibilityissuetypes,underscoringtheneedfordevelopers
taxonomy, and the result of the questionnaire survey. to focus on enhancing mobile accessibility.
1) Categories: Rregarding specific categories, the first cat- 3) QuestionnaireSurveyResult: Regardingtheresultofthe
egory,“Operability,”whichrequiresthattheuserinterfaceand questionnaire survey, our taxonomy received broad endorse-
navigation be operable by all users, includes 27 accessibility mentfromvarioussectors.AsshowninTableVI,over86%of
issue types, accounting for 49.09% of the total and represent- the128validrespondentsratedthetaxonomy’srationalityand
ing the category with the most issue types. These issue types completenessasgoodorverygood,withscoresof4or5.More
primarily affect users with motor and visual impairments, than 60% provided positive feedback on the taxonomy’s un-
highlighting the significant challenges they face in interface derstandability.Over80%believedthatourannotationsforthe
interactionandoperation.Amongthese27issuetypes,11have peopleaffectedandWCAG2.1wereappropriate.Additionally,
explicit WCAG 2.1 guidance, and 19 can be detected or re- 10 respondents suggested providing screenshots or videos for
pairedbyexistingtools.Thesecondcategory,“Perceivability,” each issue type to enhance understanding, which explains the
emphasizing that information and user interface components slightly lower comprehensibility score. Additionally, 41.54%
must be perceivable, contains 12 issue types, mainly affecting of respondents were aware of accessibility issue types in
users with visual and auditory impairments. Of these 12 issue their applications, 7.69% were unaware, and 50.77% were
types, 10 have explicit WCAG 2.1 guidance, and 10 can be uncertain, reflecting a general lack of awareness regarding
detectedorrepairedbytools.Thethirdcategory,“Understand- accessibility issues.
ability,” requiring that information and interfaces be clear and Overall, the survey results indicate widespread recognition
straightforward, includes 12 issue types. These issue types of our taxonomy’s rationality , completeness, and annotation
primarily affect users with visual impairments and aphasia, accuracy, though there remains room for improvement in
centeringaroundinformationcomprehensionchallenges.None comprehensibility.
of these issue types have explicit WCAG 2.1 guidance, while
five can be identified and addressed by detection and repair Answer to RQ1:Through a review of 42 relevant
tools. The fourth category, “Robustness,” which ensures a literature, we constructed a taxonomy encompassing
consistent and accessible experience regardless of technology 55 accessibility issue types, grouped into four major
or tools used, encompasses 4 issue types, mainly affecting categories: Operability, Perceivability, Understandabil-
users with visual impairments and older adults. Among these ity, and Robustness. This taxonomy has received broad
4 issue types, 3 have WCAG guidance, and 2 can be detected endorsement from various sectors, with over 84% of
or repaired by existing tools. feedback indicating high ratings for reasonableness,
In comparison, the operability category encompasses the completeness, and accuracy in annotating people af-
highest number of issue types, suggesting that users face fected and WCAG 2.1.
greater obstacles during interaction. Moreover, none of the
issue types in the understandability category is explicitly
covered by current guidelines, underscoring a limitation of B. Capabilities of Detection and Repair Tools
WCAG 2.1 in addressing understandability-related issues. To address RQ2, this section aims to assess the capabilities
2) Comprehensive Analysis: WCAG 2.1 Coverage, Plat- of existing detection and repair tools collected from the
forms,andAffectedUserGroups: Inourcomprehensiveanal- literature, based on the constructed taxonomy of accessibility
ysisofthetaxonomy,weevaluatedthecoverageofWCAG2.1, issue types. Following the methodology outlined in Section
identifiedtheusergroupsaffected,andexaminedtheplatforms III-E, we identified 14 representative detection tools and 9
where these issue types arise. Specifically, in terms of guide- repair tools, as detailed in Table III and Table IV.
line coverage, out of the 55 accessibility issue types, only 24 Next, we present the analysis results from two main per-
haveexplicitWCAG2.1guidance,accountingfor43.6%.The spectives: detection tools and repair tools.
remaining31issuetypesarenotadequatelycoveredinWCAG 1) CapabilitiesofDetectionTools: Wepresentstheanalysis
2.1, highlighting the limitations of the current accessibility results for 14 detection tools, including MotorEase, SALAD,
guidelines and the need for future research and expansion. AccessiText, CrossA11y, and Xbot,among others, focusing
For primary affected user groups, Among the 55 issue types, on detection capability, application platforms, and evaluation
35 impact visually impaired users (63.6%). In comparison, metrics.
users with motor impairments face 13 issue types, those with Firstly, regarding the detection capabilities of these tools,
auditoryimpairmentsencounter2issuetypes,aphasiapatients these 14 tools collectively identify 31 out of the 55 acces-
areaffectedby4issuetypes,userswithcognitiveimpairments sibility issue types in the taxonomy, achieving a detection
face6issuetypes,andolderadultsencounter8issuetypes.Vi- successrateof56.3%(i.e.,31/55).Amongthese,themajority
sually impaired users face particularly significant challenges, of issue types can be detected by one or two tools. Notably,10
TABLE V: Datasets List for Accessibility Issues Detection and Repair.
Use Name Data Type Instances Covery Issues ID Used by Year
Detection TSO Apk 248 ⃝ 1 ⃝ 23 ⃝ 24 ⃝ 30 [11] 2023
⃝ ⃝ ⃝ ⃝ ⃝
1 5 22 23 24
CCF Apk 2,270 [51] 2022
⃝ ⃝ ⃝ ⃝ ⃝
31 32 44 46 49
SMM Apk 57 ⃝ 1 ⃝ 5 ⃝ 22 ⃝ 23 ⃝ 24 [15] 2022
SAL Apk 20 ⃝ 1 ⃝ 24 ⃝ 46 ⃝ 54 [6] 2021
HHM Images 500 ⃝ 6 ⃝ 7 ⃝ 24 ⃝ 52 [16] 2024
MotorCheck Images,Xml 1,599 ⃝ 1 ⃝ 2 ⃝ 3 ⃝ 4 [4] [9] 2024
YouDescribe Video 20 ⃝ 20 ⃝ 21 [62] 2022
AudioSet Video 2,000,000 ⃝ 20 ⃝ 21 [62] 2017
HowTo100M Video 1,000,000 ⃝ 20 ⃝ 21 [62] 2019
BM Web 30 ⃝ 24 ⃝ 33 [18] 2021
Repair ZCF Apk 10,078 ⃝ 22 ⃝ 23 [50] 2023
ACH Apk 48 ⃝ 1 [20] 2021
XLL Images 31 ⃝ 26 ⃝ 43 [22] 2023
ZZG-1 Images 18,317 ⃝ 24 [24] 2023
LabelDroid-ex Images 21,864 ⃝ 24 [21] 2021
LabelDroid Images 19,233 ⃝ 24 [23] 2020
ZLC Images,Xml 2,209 ⃝ 1 ⃝ 4 ⃝ 22 ⃝ 23 [5] 2024
ZZG-2 Web 30 ⃝ 24 [24] 2023
TABLE VI: Feedback Results of Questionnaire Survey.
People Affected WCAG 2.1
#Feedback #Valid Feedback Rationality Completeness Understandability
Annotation Annotation
130 128 86.92% 86.16% 66.15% 84.61% 85.39%
only one issue type (i.e., ’Lack of Label’) can be detected AXERAY are focused on web application issues. Regrettably,
by multiple tools, including Xbot, AIFA, AdMole, Latte, noneofthesetoolsofferdualsupportforbothmobileapplica-
and AXERAY. Interestingly, none of these 31 issue types tions and websites , which points to a lack of cross-platform
are detectable by every tool. Considering the capabilities of detection capabilities.
individual tools, their detection ranges vary from 1 to 10
Finally, regarding evaluation metrics, the detection tools
issue types. Specifically, Xbot exhibits the highest detection
employadiversesetofmetrics.Forinstance,SALAD,Acces-
capability, identifying up to 10 issue types, whereas SALAD
siText,LOTUS,ATARI,andKAFEprioritizeprecisionandre-
and AccessiText can each detect only one issue type, with
call, while Xbot, Groundhog, AIFA, and AdMole concentrate
the remaining tools capable of detecting between 2 to 5 issue
on activity coverage and inaccessibility rate.The remaining
types.Overall,comparedtothe55accessibilityissuetypeswe
tools also consider accuracy and the F1 score. This diversity
have cataloged, the current detection tools exhibit a relatively
in metrics hinders straightforward performance comparisons.
low detection rate, with the highest success rate at 18.1%.
For example, although MotorEase, Xbot, AIFA, and Latte all
This underscores the inadequacy of the detection capabilities
detect the ”Touch Target Size” issue type, each employs a
of existing tools.
uniquemetric:MotorEaseutilizesaccuracy,precision,andthe
F1 score, Xbot focuses on activity coverage, AIFA measures
Secondly, concerning application platforms, our findings
inaccessibility rate, and Latte considers precision alone. Such
reveal a prevalence of tools tailored for mobile applications
diversity complicates the direct identification of the most
over those designed for websites. Specifically, tools such as
effective tool for a particular issue type.
MotorEase, AccessiText, Xbot, ATARI, Groundhog, AIFA,
AdMole, Latte, and AXNAV are dedicated to mobile appli- In summary, the detection tools collectively address only
cation issue detection, whereas SALAD, LOTUS, KAFE, and 31 out of 55 accessibility issue types in the taxonomy, re-11
sulting in a detection success rate of 56.3%. Furthermore, toolisdesignedforwebsites,underscoringthepaucityoftools
24 issue types remain undetectable, highlighting substantial dedicatedtowebsiterepairs,whilethediversesetofevaluation
room for improvement in detection capabilities. In terms of metrics further complicates direct performance assessments.
application contexts, tools designed for mobile applications
are more prevalent than those for websites, and the diverse Answer to RQ2: Collectively, the 14 detection tools
evaluationmetricsamongtoolscomplicatedirectperformance identify 31 of the 55 issue types in the taxonomy,
comparisons. achieving a detection success rate of 56.3%. The 9
2) Capabilities of Repair Tools: We details the analysis repair tools address only 13 of these issues, with a
resultsfor9repairtools,includingIris,AccessFixer,SALEM, repairsuccessrateof23.6%.Thediversityinevaluation
andScaleFix(amongothers),withrespecttorepaircapability, metrics across tools complicates direct performance
application platforms, and evaluation metrics. comparisons, posing challenges in selecting the most
Firstly, in terms of repair capability, the 9 repair tools effective tools.
collectively address 13 out of the 55 issue types in the
taxonomy, yielding a repair success rate of 23.6%. Notably,
the ”Lack of Label” issue type is the only one that can be C. Dataset Status
repairedbymultipletools,includingcoala,LabelDroid,SAM, To address RQ3, our aim is to evaluate the current state
andScreenRecognition.However,noneofthese13issuetypes of pertinent datasets based on the established taxonomy. In
areuniversallyrepairablebyalltools,furtheremphasizingthe accordance with the methodology outlined in Section III-F,
limitedcapabilitiesofcurrentrepairtools.Thenumberofissue we identified 18 publicly accessible datasets. Among these,
types each tool can repair ranges from 1 to 4. Specifically, 10 datasets are used for detection tools, while the remaining
AccessFixer exhibits the highest repair capability, addressing 8 are used for repair tools, as shown in Table V,
4 issue types, whereas SALEM, coala, LabelDroid, and SAM We present the analysis results from two aspects: datasets
can each repair only one issue type. The remaining tools can for detection tools and datasets for repair tools.
repair between 2 and 3 issue types. Overall, the number of 1) Status of Datasets for Detection Tools: We offers an in-
issue types that repair tools can address is significantly lower depth examination of the 10 datasets employed by detection
than the number detectable by detection tools. Compared to tools, encompassing datasets such as TSO, CCF, SMM, SAL,
the 55 issue types identified in the taxonomy, existing repair among others, with a focus on the coverage of issue types,
tools show a much lower capacity for repair, with the highest data types, and the quantities of instances.
success rate being a mere 7.2%. This finding suggests that Firstly, regarding the coverage of issue types, these 10
future research should aim to expand the scope of repair tools datasets collectively cover 21 of the 55 accessibility issue
to address a wider range of issues types. types in our taxonomy, achieving an overall coverage rate of
Secondly,regardingapplicationplatforms,weobserveasig- 38.1%.However,whenconsideredindividually,eachdataset’s
nificant predominance of repair tools for mobile applications coverage range narrows to between 2 and 10 issue types.
overthoseforwebsites.Specifically,eighttools—namelyIris, Among these, the CCF dataset covers the most issue types
AccessFixer, SALEM, coala, AGAA, LabelDroid, ScaleFix, (10types),whereasYouDescribe,AudioSet,HowTo100M,and
and Screen Recognition—are tailored for addressing accessi- BMdatasetseachcoveronly2types,showingsignificantvari-
bilityissuetypeswithinmobileapplications,whileSAMisthe ationacrossdatasets.Notably,issuetype24(“LackofLabels”)
sole tool dedicated to websites. Like detection tools, there are appears most frequently across TSO, CCF, SAL, HHM, and
norepairtoolsthatcurrentlyofferdualsupportforbothmobile BM datasets and is found in both mobile applications and
applications and websites. In summary, the preponderance websites. This finding indicates the prevalence of this issue
of repair tools is directed at mobile applications, with a type in accessibility detection. In contrast, other types such
conspicuous lack of tools catering to both mobile applications as “Editable Text Content” (type 30) appear only in the TSO
and websites, underscoring the limitations of cross-platform dataset, while “UI Element Unlocatable” (type 52) appears
repair capabilities. only in SMM, and “Incorrect Label Content” (type 33) only
Finally,in the realm of evaluation metrics,repair tools em- in BM. These infrequent issue types, appearing in just one
ployavarietyofevaluationmetrics.Forinstance,toolssuchas dataseteach,suggestlowerprominenceacrosscurrentdatasets.
Iris, AccessFixer, AGAA, and ScaleFix prioritize the success Overall, these datasets cover only 21 of the 55 types in the
rate of repairs, while coala and LabelDroid utilize the exact taxonomy, while the absence of 34 issue types highlights the
match rate as their primary criterion. Other tools factor in current limitations.
metrics such as accuracy,the recall, the F1 score, and the Secondly, regarding data types, the datasets encompass
accessibility rate. As with detection tools, the heterogeneity a diverse range, including APK, Images, Video, and Web.
of evaluation metrics hinders straightforward performance Notably, APK-type datasets are the most prevalent, with four
comparisons among tools, making the selection of the most in total (TSO, CCF, SMM, SAL). Image-type datasets feature
appropriate tool a more intricate process. HHM and MotorCheck, the latter of which also incorporates
In summary, repair tools address a more limited range of XMLfilesassociatedwithimages.Additionally,therearethree
issuetypescomparedtodetectiontools,tacklingjust13outof Video-type datasets (YouDescribe, AudioSet, HowTo100M)
the 55 issues in the taxonomy, and achieving a modest repair and one Web-type dataset (BM). Regrettably, none of these
success rate of only 23.6%. Furthermore, a mere one repair 10 datasets incorporate two or more data types, a limitation12
that may also contribute to the inability of current tools to (ZCF and ACH) have a total of 10,126 instances, with ZCF
perform cross-platform detection. leading at 10,078. The Web-type dataset ZZG-2 contains only
Finally,intermsofinstancequantities,thereisconsiderable 30 instances. In total, Web-type datasets are limited in both
variation across datasets. Video-type datasets have the highest quantity and instance count, reflecting the shortage in web
instance totals, with 3,000,020 instances overall, led by Au- accessibility data sampling. Furthermore, each of these 8
dioSet with 2,000,000 instances, while YouDescribe has only datasets has been cited in only one paper, suggesting limited
20. Image-type datasets (HHM and MotorCheck) total 2,099 coverage of issue types and general applicability.
instances. The APK-type datasets have a combined total of In summary, datasets for repair tools cover only 7 out
2,595 instances, with CCF leading with 2,270 instances, and of 55 accessibility issue types, achieving a coverage rate of
SAL with only 20. The Web-type dataset BM contains only 12.7%,with48typescompletelymissing.Thesingledatatype
30instances,revealinganotableshortageofwebaccessibility focus and limited general applicability further underscore the
data samples. Furthermore, all datasets except MotorCheck limitations of existing datasets. These findings highlight the
have been used in only one paper, indicating they are often critical need to develop datasets with diverse data types and
utilized in a single study. This may be due to limited issue broader accessibility issue coverage.
type coverage, which reduces broader applicability and gener-
alizability. Answer to RQ3: Our analysis of the 18 datasets found
In summary, datasets for detection tools collectively cover that the 10 datasets used in detection tools cover 21
21ofthe55accessibilityissuetypes,achievingacoveragerate of the 55 types in the taxonomy, achieving a coverage
of only 38.1%, while 34 types remain completely uncovered, rate of 38.1%, while the 8 datasets used in repair tools
highlightinglimitationsincoverage.Furthermore,thedatasets’ cover only 7 out of the 55 issue types, with a coverage
single data type and limited generalizability further indicate rate of 12.7%. Additionally, the datasets used in both
the limitations of existing datasets. These findings underscore detection and repair tools are characterized by single
the necessity for developing datasets with varied data types datatypesandlimitedgeneralapplicability.Thesefind-
and broader accessibility issue type coverage. ings underscore the crucial importance of constructing
2) Status of Datasets for Repair Tools: We provides a de- datasets with diverse data types and broader coverage
tailedanalysisof8datasetsusedinrepairtools,includingZCF, of accessibility issue types.
ACH,XLL,ZZG-1,LabelDroid-ex,amongothers,focusingon
coverage of issue types, data types, and instance quantities.
Firstly, regarding coverage of issue types, these 8 datasets V. DISCUSSION
collectively cover 7 out of the 55 accessibility issue types in
This sector discusses the significance of the study, threats
the taxonomy, with an overall coverage rate of 12.7%. When
to its validity, and identifies challenges.
considered individually, these datasets cover between 1 and
4 accessibility issue types, in contrast to the broader range
A. Takeaway
(2-10 types) seen in detection tool datasets. Specifically, the
ZLC dataset covers the most (4 types), while ACH, ZZG- Our research aims to build a comprehensive taxonomy of
1, LabelDroid-ex, LabelDroid, and ZZG-2 each cover only accessibility issue types and analyze detection tools, repair
1 type. This shows relatively low coverage for repair tool tools, and related datasets based on this taxonomy, with
datasets in terms of our cataloged 55 issue types. Notably, significant implications for both academia and industry:
issue type 24 (“Lack of Labels”) appears most frequently, • Standardization:Forresearchers,developers,anddesign-
covered in ZZG-1, LabelDroid-ex, LabelDroid, and ZZG- ers,thetaxonomyprovidesastandardizedframeworkfor
2, reflecting its prominence in accessibility repair research. classifying accessibility issues, helping reduce interpre-
Overall, these datasets cover only 7 of the 55 issue types, tivebiasesandfosteringimprovedcommunicationamong
with 48 types entirely absent, underscoring the limitations of stakeholders.
current dataset. • ImpactAssessmentofAccessibilityIssues:Fordevelop-
Secondly, in terms of data types, datasets for repair tools ers,productmanagers,andtesters,thistaxonomyclarifies
spanthreeforms:APK,Images,andWeb.Image-typedatasets known accessibility issue types and the affected user
are the most numerous, with five (XLL, ZZG-1, LabelDroid- groups, aiding efforts to enhance accessibility and user
ex, LabelDroid, and ZLC, the ZLC includes XML files of experience in product design and development.
images). APK-type datasets include two (ZCF and ACH), • Enhancement of the WCAG 2.1 Guidelines: For re-
while the Web-type dataset includes only one (ZZG-2). Un- searchers and standards bodies, our taxonomy highlights
fortunately, none of these 8 datasets contain two or more data the accessibility issues that are not yet addressed in
types, limiting support for cross-platform repair tools. This WCAG 2.1, encouraging further guideline expansion to
limitation affects the versatility of current repair tools across cover these gaps.
multiple platforms. • OptimizationofDetectionandRepairTools:Fordevel-
Finally, regarding instance quantities, results show that opers, researchers, and testers, our systematic evaluation
Image-type datasets contain the most instances (61,654 in ofexistingtoolsprovidesinsightsintotheirstrengthsand
total), with LabelDroid-ex having the largest count at 21,864 limitations,supportingeffortstocreatemorecomprehen-
instances,whileXLLhasonly31.ThetwoAPK-typedatasets sive tools with broader coverage.13
• Improvement of Datasets for Detection and Re- • Limitations of Detection Tools: Current detection tools
pair:Improvement of Datasets for Detection and Repair: are limited in coverage, with many identifying only 1–4
For developers and researchers, our dataset analysis re- issue types, leaving 24 types undetected. This limits
vealscurrentlimitations,particularlyregardingissuetype developers’ ability to fully address accessibility issues in
coverage, offering guidance for building more diverse diverse scenarios. Future research should aim to create
datasets to support comprehensive detection and repair more comprehensive detection tools that can operate
tools. across a wider range of contexts.
In summary, this study provides a systematic taxonomy, tool • LimitationsofDetectionandRepairTools:Currentde-
assessment, and dataset analysis that advances research and tectiontoolsarelimited,identifyingonly1-4issuetypes,
practice in accessibility. These outcomes contribute not only leaving 24 undetected. Repair tools address even fewer
toacademicdiscoursebutalsooffervaluableinsightsforprac- types,leaving42unresolved.Thislimitsdevelopers’abil-
titioners focused on accessibility issue detection and repair. ity to address accessibility issue types comprehensively.
Futureresearchshoulddevelopmorecomprehensivetools
covering a wider range of issue types.
B. Threats to Validity
• Cross-Platform Compatibility:Manyaccessibilitytools
This section examines internal and external threats to the
and datasets focus on specific platforms (e.g., mobile
validity of this research.
or web) without supporting cross-platform functionality,
1) Internal Threats: The study’s internal validity may be
resulting in inconsistent accessibility experiences across
affected by limitations in literature selection and potential
devices.Futureworkshouldexploredevelopingtoolsthat
subjectivity in constructing the taxonomy, as summarized as
function seamlessly across multiple platforms.
follows: • LackofaStandardizedEvaluationFramework:Exist-
• Limitations in Literature Selection:Our literature re- ingtoolsusediverseevaluationmetrics,suchasprecision,
view concluded in June 2024, excluding any subsequent recall, and success rates, making direct comparisons
studies.Thisdaterestrictionmayhaveledtotheomission challenging.Astandardizedframeworkisneededtounify
of recent advancements, potentially introducing selection performanceevaluation,aidingresearchersandpractition-
bias and affecting comprehensiveness. ers in tool selection.
• Subjectivity in Taxonomy Construction:The manual • LimitedPublicAccesstoToolsandDatasets:Ourstudy
merging and classification of accessibility issues based revealedthatsometoolsanddatasetsarenotpubliclyac-
on existing literature and guidelines could introduce sub- cessible, restricting comprehensive evaluation. Increased
jectivejudgments,possiblyaffectingtheaccuracyofboth public access would enable researchers to verify and
the merging and classification outcomes. improve these resources.
2) External Threats: External validity threats include the In summary, these challenges outline clear directions for
emergence of new accessibility issues and limitations in the future research in accessibility, emphasizing the need for dy-
survey process, as summarized as follows: namic taxonomies, robust tools, comprehensive datasets, and
• Emergence of New Issues:With the rapid development standardized evaluation frameworks to enhance detection and
oftechnology,newaccessibilityissuesmayarisefromthe repaircapabilitiesandpromoteinclusivedigitalenvironments.
introduction of novel interaction devices and platforms,
potentially limiting the taxonomy’s applicability. To ad-
VI. CONCLUSION
dressthis,wehavedevelopedandmaintainedadedicated
This study addresses gaps in the accessibility research
website for ongoing updates.
landscape by constructing a taxonomy of accessibility issue
• Survey Limitations:Our validation survey may not fully
types, evaluating detection and repair tools, and assessing
capture perspectives across diverse cultural backgrounds,
the current state of available datasets. Through a compre-
as individuals from different cultures may have varying
hensive analysis of 42 studies, we developed a taxonomy
understandings of and expectations for accessibility. Fu-
encompassing 55 different types of accessibility issues. This
ture work will aim to broaden participation, especially
taxonomy categorizes each issue type and annotates WCAG
from accessibility professionals worldwide, to gather
2.1guidelines,affectedusergroups,andapplicationscenarios,
more comprehensive feedback.
helping developers, designers, and stakeholders better under-
stand accessibility issues and fostering more inclusive design
C. Challenges
practices.Socialsurveyfeedbackalsoconfirmedbroadsupport
Building on this study, we identify seven challenges in for this taxonomy.
accessibility issue research. Additionally, based on the taxonomy, we conducted a com-
• Dynamic Taxonomy Updates: With advancements in prehensive evaluation of existing tools and datasets, uncov-
technologies such as VR, AR, smart devices, and IoT, ering limitations in issue detection, repair capabilities, and
new accessibility issues are emerging rapidly, presenting dataset coverage. Overall, this study provides a more system-
unique challenges that traditional taxonomies may not atic understanding of real-world accessibility issues, offering
fully capture. Future research may need to develop a dy- valuable insights for future research and practice. We hope
namic taxonomy that can evolve with new technologies. these findings inspire further exploration, drive advancements14
inaccessibilitytechnologies,andcontributetobuildingamore [15] N. Salehnamadi, F. Mehralian, and S. Malek, “Groundhog: An
inclusive and accessible digital society. automated accessibility crawler for mobile apps,” in Proceedings
of the 37th IEEE/ACM International Conference on Automated
Software Engineering, ser. ASE ’22. New York, NY, USA:
Association for Computing Machinery, 2023. [Online]. Available:
REFERENCES https://doi.org/10.1145/3551349.3556905
[16] Z. He, S. F. Huq, and S. Malek, ““i tend to view ads almost like a
pestilence”: On the accessibility implications of mobile ads for blind
[1] S. Sanchez-Gordon, M.-L. Sa´nchez-Gordo´n, M. Yilmaz, and R. V. users,” in 2024 IEEE/ACM 46th International Conference on Software
O’Connor, “Integration of accessibility design patterns with the Engineering(ICSE),2024,pp.2432–2444.
software implementation process of iso/iec 29110,” Journal of [17] X. Zhang, L. de Greef, A. Swearngin, S. White, K. Murray, L. Yu,
Software: Evolution and Process, vol. 31, 2018. [Online]. Available: Q. Shan, J. Nichols, J. Wu, C. Fleizach, A. Everitt, and J. P.
https://api.semanticscholar.org/CorpusID:116240206 Bigham, “Screen recognition: Creating accessibility metadata for
[2] P. Acosta-Vargas, L. Salvador-Ullauri, J. Jada´n-Guerrero, C. Guevara, mobile applications from pixels,” in Proceedings of the 2021 CHI
S. Sanchez-Gordon, T. Calle-Jimenez, P. Lara-Alvarez, A. Medina, Conference on Human Factors in Computing Systems, ser. CHI ’21.
and I. L. Nunes, “Accessibility assessment in mobile applications for New York, NY, USA: Association for Computing Machinery, 2021.
android,” in International Conference on Applied Human Factors and [Online].Available:https://doi.org/10.1145/3411764.3445186
Ergonomics, 2019. [Online]. Available: https://api.semanticscholar.org/ [18] M. Bajammal and A. Mesbah, “Semantic web accessibility testing via
CorpusID:198360750 hierarchical visual analysis,” in 2021 IEEE/ACM 43rd International
[3] T.Bi,X.Xia,D.Lo,andA.Aleti,“Afirstlookataccessibilityissues ConferenceonSoftwareEngineering(ICSE),2021,pp.1610–1621.
inpopulargithubprojects,”in2021IEEEInternationalConferenceon [19] Y. Zhang, S. Chen, L. Fan, C. Chen, and X. Li, “Automated and
SoftwareMaintenanceandEvolution(ICSME),2021,pp.390–401. context-aware repair of color-related accessibility issues for android
[4] A. Krishnavajjala, S. H. Mansur, J. Jose, and K. Moran, “Motorease: apps,” in Proceedings of the 31st ACM Joint European Software
Automateddetectionofmotorimpairmentaccessibilityissuesinmobile Engineering Conference and Symposium on the Foundations of
appuis,”in2024IEEE/ACM46thInternationalConferenceonSoftware Software Engineering, ser. ESEC/FSE 2023. New York, NY, USA:
Engineering(ICSE),2024,pp.2580–2592. Association for Computing Machinery, 2023, p. 1255–1267. [Online].
[5] M.Zhang,H.Liu,C.Chen,G.Gao,H.Li,andJ.Zhao,“Accessfixer: Available:https://doi.org/10.1145/3611643.3616329
Enhancingguiaccessibilityforlowvisionuserswithr-gcnmodel,”IEEE [20] A. S. Alotaibi, P. T. Chiou, and W. G. Halfond, “Automated repair of
TransactionsonSoftwareEngineering,vol.50,no.2,pp.173–189,2024. size-based inaccessibility issues in mobile applications,” in 2021 36th
[6] N. Salehnamadi, A. Alshayban, J.-W. Lin, I. Ahmed, S. Branham, IEEE/ACMInternationalConferenceonAutomatedSoftwareEngineer-
and S. Malek, “Latte: Use-case and assistive-service driven automated ing(ASE),2021,pp.730–742.
accessibilitytestingframeworkforandroid,”inProceedingsofthe2021 [21] F.Mehralian,N.Salehnamadi,andS.Malek,“Data-drivenaccessibility
CHI Conference on Human Factors in Computing Systems, ser. CHI repair revisited: on the effectiveness of generating labels for icons
’21. New York, NY, USA: Association for Computing Machinery, in android apps,” in Proceedings of the 29th ACM Joint Meeting on
2021.[Online].Available:https://doi.org/10.1145/3411764.3445455 European Software Engineering Conference and Symposium on the
[7] A. Alshayban and S. Malek, “Accessitext: automated detection of text Foundations of Software Engineering, ser. ESEC/FSE 2021. New
accessibility issues in android apps,” in Proceedings of the 30th ACM York, NY, USA: Association for Computing Machinery, 2021, p.
Joint European Software Engineering Conference and Symposium on 107–118.[Online].Available:https://doi.org/10.1145/3468264.3468604
theFoundationsofSoftwareEngineering,ser.ESEC/FSE2022. New [22] Y. Xu, Z. Li, H. Liu, and Y. Liu, “Agaa: An android gui accessibility
York, NY, USA: Association for Computing Machinery, 2022, p. adapter for low vision users,” in 2023 IEEE 47th Annual Computers,
984–995.[Online].Available:https://doi.org/10.1145/3540250.3549118 Software, and Applications Conference (COMPSAC), 2023, pp. 412–
[8] A.Alshayban,I.Ahmed,andS.Malek,“Accessibilityissuesinandroid 421.
apps:Stateofaffairs,sentiments,andwaysforward,”in2020IEEE/ACM [23] J.Chen,C.Chen,Z.Xing,X.Xu,L.Zhut,G.Li,andJ.Wang,“Unblind
42ndInternationalConferenceonSoftwareEngineering(ICSE),2020, yourapps:Predictingnatural-languagelabelsformobileguicomponents
pp.1323–1334. by deep learning,” in 2020 IEEE/ACM 42nd International Conference
[9] A. Krishnavajjala and K. Moran, “Engineering accessible software,” onSoftwareEngineering(ICSE),2020,pp.322–334.
in 2023 IEEE International Conference on Software Maintenance and [24] M. Zhang, Y. Zhang, G. Gao, and H. Liu, “Enhancing accessibility of
Evolution(ICSME),2023,pp.597–600. web-based svg buttons: An optimization method and best practices,”
[10] A. Alshayban, I. Ahmed, and S. Malek, “Accessibility issues in Expert Syst. Appl., vol. 238, no. PB, Feb. 2024. [Online]. Available:
android apps: state of affairs, sentiments, and ways forward,” https://doi.org/10.1016/j.eswa.2023.121883
in Proceedings of the ACM/IEEE 42nd International Conference [25] A.S.Alotaibi,P.T.Chiou,F.M.Tawsif,andW.G.J.Halfond,“Scalefix:
on Software Engineering, ser. ICSE ’20. New York, NY, USA: Anautomatedrepairofuiscalingaccessibilityissuesinandroidapplica-
Association for Computing Machinery, 2020, p. 1323–1334. [Online]. tions,”in2023IEEEInternationalConferenceonSoftwareMaintenance
Available:https://doi.org/10.1145/3377811.3380392 andEvolution(ICSME),2023,pp.147–159.
[11] F. Tazi, S. Saka, G. Opp, S. Neupane, S. Das, L. De Carli, and [26] X. Zhang, L. de Greef, A. Swearngin, S. White, K. Murray, L. Yu,
I. Ray, “Accessibility evaluation of iot android mobile companion Q. Shan, J. Nichols, J. Wu, C. Fleizach, A. Everitt, and J. P.
apps,” in Extended Abstracts of the 2023 CHI Conference on Human Bigham, “Screen recognition: Creating accessibility metadata for
Factors in Computing Systems, ser. CHI EA ’23. New York, NY, mobile applications from pixels,” in Proceedings of the 2021 CHI
USA:AssociationforComputingMachinery,2023.[Online].Available: Conference on Human Factors in Computing Systems, ser. CHI ’21.
https://doi.org/10.1145/3544549.3585652 New York, NY, USA: Association for Computing Machinery, 2021.
[12] A. D. A. Oliveira, P. S. H. Dos Santos, W. E. Marc´ılio Ju´nior, W. M. [Online].Available:https://doi.org/10.1145/3411764.3445186
Aljedaani,D.M.Eler,andM.M.Eler,“Analyzingaccessibilityreviews [27] M. Taeb, A. Swearngin, E. Schoop, R. Cheng, Y. Jiang, and
associatedwithvisualdisabilitiesoreyeconditions,”inProceedingsof J. Nichols, “Axnav: Replaying accessibility tests from natural
the2023CHIConferenceonHumanFactorsinComputingSystems,ser. language,” in Proceedings of the 2024 CHI Conference on Human
CHI’23. NewYork,NY,USA:AssociationforComputingMachinery, Factors in Computing Systems, ser. CHI ’24. New York, NY, USA:
2023.[Online].Available:https://doi.org/10.1145/3544548.3581315 Association for Computing Machinery, 2024. [Online]. Available:
[13] A. Alshayban and S. Malek, “Accessitext: automated detection of text https://doi.org/10.1145/3613904.3642777
accessibility issues in android apps,” in Proceedings of the 30th ACM [28] F.Mehralian,N.Salehnamadi,andS.Malek,“Data-drivenaccessibility
Joint European Software Engineering Conference and Symposium on repair revisited: on the effectiveness of generating labels for icons
theFoundationsofSoftwareEngineering,ser.ESEC/FSE2022. New in android apps,” in Proceedings of the 29th ACM Joint Meeting on
York, NY, USA: Association for Computing Machinery, 2022, p. European Software Engineering Conference and Symposium on the
984–995.[Online].Available:https://doi.org/10.1145/3540250.3549118 Foundations of Software Engineering, ser. ESEC/FSE 2021. New
[14] P. T. Chiou, A. S. Alotaibi, and W. G. J. Halfond, “Detecting dialog- York, NY, USA: Association for Computing Machinery, 2021, p.
related keyboard navigation failures in web applications,” in 2023 107–118.[Online].Available:https://doi.org/10.1145/3468264.3468604
IEEE/ACM 45th International Conference on Software Engineering [29] 2019. the internet is unavailable. [Online]. Available: https:
(ICSE),2023,pp.1368–1380. //nucleusresearch.com/research/single/the-internet-is-unavailable/15
[30] Webaim: The webaim million - the 2024 report on the accessibility [48] N. Salehnamadi, Z. He, and S. Malek, “Assistive-technology aided
of the top 1,000,000 home pages. [Online]. Available: https: manual accessibility testing in mobile apps, powered by record-and-
//webaim.org/projects/million/#errors replay,” in Proceedings of the 2023 CHI Conference on Human
[31] World health organization: World report on disability. [Online]. Factors in Computing Systems, ser. CHI ’23. New York, NY, USA:
Available:https://www.who.int/disabilities/world report/2011/report/en/ Association for Computing Machinery, 2023. [Online]. Available:
[32] Web content accessibility guidelines (wcag) 2.1. [Online]. Available: https://doi.org/10.1145/3544548.3580679
https://www.w3.org/Translations/WCAG21-zh-20190311/ [49] P. T. Chiou, R. Winn, A. S. Alotaibi, and W. G. J. Halfond,
[33] S.HamidehKerdar,L.Ba¨chler,andB.M.Kirchhoff,“Theaccessibility “Automatically detecting reflow accessibility issues in responsive web
ofdigitaltechnologiesforpeoplewithvisualimpairmentandblindness: pages,”inProceedingsoftheIEEE/ACM46thInternationalConference
ascopingreview,”DiscoverComputing,vol.27,no.1,p.24,2024. on Software Engineering, ser. ICSE ’24. New York, NY, USA:
[34] E. Agrimi, C. Battaglini, D. Bottari, G. Gnecco, and B. Leporini, Association for Computing Machinery, 2024. [Online]. Available:
“Game accessibility for visually impaired people: a review,” Soft https://doi.org/10.1145/3597503.3639229
Comput., vol. 28, no. 17–18, p. 10475–10489, Jul. 2024. [Online]. [50] Y. Zhang, S. Chen, L. Fan, C. Chen, and X. Li, “Automated and
Available:https://doi.org/10.1007/s00500-024-09827-4 context-aware repair of color-related accessibility issues for android
[35] H.KhalajzadehandJ.Grundy,“Accessibilityoflow-codeapproaches:A apps,” in Proceedings of the 31st ACM Joint European Software
systematicliteraturereview,”InformationandSoftwareTechnology,vol. Engineering Conference and Symposium on the Foundations of
177, p. 107570, 2025. [Online]. Available: https://www.sciencedirect. Software Engineering, ser. ESEC/FSE 2023. New York, NY, USA:
com/science/article/pii/S0950584924001757 Association for Computing Machinery, 2023, p. 1255–1267. [Online].
Available:https://doi.org/10.1145/3611643.3616329
[36] L. Moreno and P. Mart´ınez, “A review of accessibility requirements
in elderly users’ interactions with web applications,” in Proceedings [51] S. Chen, C. Chen, L. Fan, M. Fan, X. Zhan, and Y. Liu, “Accessible
of the 13th International Conference on Interaccio´n Persona- or not? an empirical investigation of android app accessibility,” IEEE
Ordenador, ser. INTERACCION ’12. New York, NY, USA:
TransactionsonSoftwareEngineering,vol.48,no.10,pp.3954–3968,
2022.
Association for Computing Machinery, 2012. [Online]. Available:
[52] K. T. W. Choo, R. K. Balan, and Y. Lee, “Examining augmented
https://doi.org/10.1145/2379636.2379682
virtuality impairment simulation for mobile app accessibility design,”
[37] M. Borina, E. Kalister, and T. Orehovacˇki, “Web accessibility for
in Proceedings of the 2019 CHI Conference on Human Factors in
people with cognitive disabilities: A systematic literature review from
Computing Systems, ser. CHI ’19. New York, NY, USA: Association
2015 to 2021,” in HCI International 2022 – Late Breaking Papers:
for Computing Machinery, 2019, p. 1–11. [Online]. Available:
HCI for Health, Well-Being, Universal Access and Healthy Aging:
https://doi.org/10.1145/3290605.3300605
24th International Conference on Human-Computer Interaction, HCII
[53] D. Astler, H. Chau, K. Hsu, A. Hua, A. Kannan, L. Lei,
2022, Virtual Event, June 26 – July 1, 2022, Proceedings. Berlin,
M. Nathanson, E. Paryavi, M. Rosen, H. Unno, C. Wang, K. Zaidi,
Heidelberg: Springer-Verlag, 2022, p. 261–276. [Online]. Available:
X. Zhang, and C.-M. Tang, “Increased accessibility to nonverbal
https://doi.org/10.1007/978-3-031-17902-0 19
communication through facial and expression recognition technologies
[38] J. Dai, J. Miedema, S. Hernandez, A. Sutton-Lalani, and K. Moffatt,
for blind/visually impaired subjects,” in The Proceedings of the
“Cognitive accessibility of digital payments: A literature review,” in
13th International ACM SIGACCESS Conference on Computers and
Proceedingsofthe20thInternationalWebforAllConference,ser.W4A
Accessibility, ser. ASSETS ’11. New York, NY, USA: Association
’23. New York, NY, USA: Association for Computing Machinery,
for Computing Machinery, 2011, p. 259–260. [Online]. Available:
2023,p.116–121.[Online].Available:https://doi.org/10.1145/3587281.
https://doi.org/10.1145/2049536.2049596
3587294
[54] Z. Wu, D. Wang, S. Zhang, Y. Huang, Z. Wang, and M. Fan,
[39] A. Mountapmbeme, O. Okafor, and S. Ludi, “Addressing accessibility
“Toward making virtual reality (vr) more inclusive for older adults:
barriers in programming for people with visual impairments: A
Investigating aging effect on target selection and manipulation tasks
literature review,” ACM Trans. Access. Comput., vol. 15, no. 1, Mar.
in vr,” in Proceedings of the 2024 CHI Conference on Human
2022.[Online].Available:https://doi.org/10.1145/3507469
Factors in Computing Systems, ser. CHI ’24. New York, NY, USA:
[40] A. Nevsky, T. Neate, E. Simperl, and R.-D. Vatavu, “Accessibility
Association for Computing Machinery, 2024. [Online]. Available:
research in digital audiovisual media: What has been achieved and
https://doi.org/10.1145/3613904.3642558
what should be done next?” ser. IMX ’23. New York, NY, USA:
[55] P. T. Chiou, A. S. Alotaibi, and W. G. J. Halfond, “Detecting
Association for Computing Machinery, 2023, p. 94–114. [Online].
and localizing keyboard accessibility failures in web applications,” in
Available:https://doi.org/10.1145/3573381.3596159
Proceedings of the 29th ACM Joint Meeting on European Software
[41] F. Heikkinen, M. Saqr, and M. Tukiainen, “Exploring barriers and EngineeringConferenceandSymposiumontheFoundationsofSoftware
challenges to accessibility in virtual laboratories: A preliminary Engineering,ser.ESEC/FSE2021. NewYork,NY,USA:Association
review,”inTELL,2023.[Online].Available:https://api.semanticscholar.
for Computing Machinery, 2021, p. 855–867. [Online]. Available:
org/CorpusID:259106409
https://doi.org/10.1145/3468264.3468581
[42] M. Akram and R. B. Sulaiman, “A systematic literature review to [56] J. P. Bigham, J. T. Brudvik, and B. Zhang, “Accessibility by
determine the web accessibility issues in saudi arabian university demonstration: enabling end users to guide developers to web
and government websites for disable people,” International Journal of accessibility solutions,” in Proceedings of the 12th International ACM
Advanced Computer Science and Applications, vol. 8, no. 6, 2017. SIGACCESSConferenceonComputersandAccessibility,ser.ASSETS
[Online].Available:http://dx.doi.org/10.14569/IJACSA.2017.080642 ’10. NewYork,NY,USA:AssociationforComputingMachinery,2010,
[43] P. Ladisa, H. Plate, M. Martinez, and O. Barais, “Sok: Taxonomy p.35–42.[Online].Available:https://doi.org/10.1145/1878803.1878812
of attacks on open-source software supply chains,” in 2023 IEEE [57] A.Garrido,S.Firmenich,G.Rossi,J.Grigera,N.Medina-Medina,and
SymposiumonSecurityandPrivacy(SP),2023,pp.1509–1526. I.Harari,“Personalizedwebaccessibilityusingclient-siderefactoring,”
[44] M. Usman, R. Britto, J. Bo¨rstler, and E. Mendes, “Taxonomies IEEEInternetComputing,vol.17,no.4,pp.58–66,2013.
in software engineering: A systematic mapping study and a [58] X. Zhang, A. S. Ross, and J. Fogarty, “Robust annotation of
revised taxonomy development method,” Information and Software mobile application interfaces in methods for accessibility repair and
Technology, vol. 85, pp. 43–59, 2017. [Online]. Available: https: enhancement,”inProceedingsofthe31stAnnual ACMSymposiumon
//www.sciencedirect.com/science/article/pii/S0950584917300472 User Interface Software and Technology, ser. UIST ’18. New York,
[45] P. Ralph, “Toward methodological guidelines for process theories and NY, USA: Association for Computing Machinery, 2018, p. 609–621.
taxonomies in software engineering,” IEEE Transactions on Software [Online].Available:https://doi.org/10.1145/3242587.3242616
Engineering,vol.45,no.7,pp.712–735,2019. [59] A. S. Alotaibi, P. T. Chiou, and W. G. Halfond, “Automated detection
[46] B. Kitchenham, O. Pearl Brereton, D. Budgen, M. Turner, J. Bailey, oftalkbackinteractiveaccessibilityfailuresinandroidapplications,”in
andS.Linkman,“Systematicliteraturereviewsinsoftwareengineering 2022IEEEConferenceonSoftwareTesting,VerificationandValidation
- a systematic literature review,” Inf. Softw. Technol., vol. 51, no. 1, (ICST),2022,pp.232–243.
p.7–15,Jan.2009.[Online].Available:https://doi.org/10.1016/j.infsof. [60] A. Khamaj and A. M. Ali, “Examining the usability and
2008.09.009 accessibility challenges in mobile health applications for older
[47] L. Nie, K. S. Said, L. Ma, Y. Zheng, and Y. Zhao, “A systematic adults,” Alexandria Engineering Journal, 2024. [Online]. Available:
mapping study for graphical user interface testing on mobile https://api.semanticscholar.org/CorpusID:270344969
apps,” IET Softw., vol. 17, pp. 249–267, 2023. [Online]. Available: [61] M. Huh, S. Yang, Y.-H. Peng, X. A. Chen, Y.-H. Kim, and
https://api.semanticscholar.org/CorpusID:257345934 A. Pavel, “Avscript: Accessible video editing with audio-visual16
scripts,” in Proceedings of the 2023 CHI Conference on Human
Factors in Computing Systems, ser. CHI ’23. New York, NY, USA:
Association for Computing Machinery, 2023. [Online]. Available:
https://doi.org/10.1145/3544548.3581494
[62] X. B. Liu, R. Wang, D. Li, X. A. Chen, and A. Pavel, “Crossa11y:
Identifying video accessibility issues via cross-modal grounding,” in
Proceedings of the 35th Annual ACM Symposium on User Interface
Software and Technology, ser. UIST ’22. New York, NY, USA:
Association for Computing Machinery, 2022. [Online]. Available:
https://doi.org/10.1145/3526113.3545703
[63] L.SeixasPereira,M.Matos,andC.Duarte,“Exploringmobiledevice
accessibility:Challenges,insights,andrecommendationsforevaluation
methodologies,” in Proceedings of the 2024 CHI Conference on
HumanFactorsinComputingSystems,ser.CHI’24. NewYork,NY,
USA:AssociationforComputingMachinery,2024.[Online].Available:
https://doi.org/10.1145/3613904.3642526
[64] R. Fok, M. Zhong, A. S. Ross, J. Fogarty, and J. O. Wobbrock, “A
large-scale longitudinal analysis of missing label accessibility failures
in android apps,” in Proceedings of the 2022 CHI Conference on
HumanFactorsinComputingSystems,ser.CHI’22. NewYork,NY,
USA:AssociationforComputingMachinery,2022.[Online].Available:
https://doi.org/10.1145/3491102.3502143
[65] H. Takagi, S. Kawanaka, M. Kobayashi, D. Sato, and C. Asakawa,
“Collaborative web accessibility improvement: challenges and
possibilities,”inProceedingsofthe11thInternationalACMSIGACCESS
Conference on Computers and Accessibility, ser. Assets ’09. New
York, NY, USA: Association for Computing Machinery, 2009, p.
195–202.[Online].Available:https://doi.org/10.1145/1639642.1639677
[66] S.Naranjo-Puentes,C.Escobar-Vela´squez,C.Vendome,andM.Linares-
Va´squez, “A preliminary study on accessibility of augmented reality
features in mobile apps,” in 2022 IEEE International Conference on
Software Analysis, Evolution and Reengineering (SANER), 2022, pp.
454–458.
[67] M. Debevc, P. Kosec, and A. Holzinger, “Improving multimodal
web accessibility for deaf people: sign language interpreter module,”
Multimedia Tools Appl., vol. 54, no. 1, p. 181–199, Aug. 2011.
[Online].Available:https://doi.org/10.1007/s11042-010-0529-8
[68] A. Nevsky, T. Neate, E. Simperl, and M. N. Cruice, “Lights,
camera, access: A closeup on audiovisual media accessibility and
aphasia,” in Proceedings of the 2024 CHI Conference on Human
Factors in Computing Systems, ser. CHI ’24. New York, NY, USA:
Association for Computing Machinery, 2024. [Online]. Available:
https://doi.org/10.1145/3613904.3641893
[69] S.Giraud,P.The´rouanne,andD.D.Steiner,“Webaccessibility:Filtering
redundant and irrelevant information improves website usability for
blindusers,”Int.J.Hum.-Comput.Stud.,vol.111,no.C,p.23–35,Mar.
2018.[Online].Available:https://doi.org/10.1016/j.ijhcs.2017.10.011
[70] J. M. Hailpern, L. G. Reid, R. Boardman, and S. Annam, “Web 2.0:
blind to an accessible new world,” in The Web Conference, 2009.
[Online].Available:https://api.semanticscholar.org/CorpusID:16409612