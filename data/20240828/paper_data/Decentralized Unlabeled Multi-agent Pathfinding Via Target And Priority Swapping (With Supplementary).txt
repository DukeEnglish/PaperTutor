Decentralized Unlabeled Multi-agent Pathfinding Via
Target And Priority Swapping (With Supplementary)
StepanDergacheva,b,* andKonstantinYakovleva,b,c
aFederalResearchCenter“ComputerScienceandControl”oftheRussianAcademyofSciences
bHSEUniversity
cAIRI
ORCID(StepanDergachev): https://orcid.org/0000-0001-8858-2831,ORCID(KonstantinYakovlev):
https://orcid.org/0000-0002-4377-321X
Abstract. Inthispaperwestudyachallengingvariantofthemulti-
agentpathfindingproblem(MAPF),whenasetofagentsmustreach
asetofgoallocations,butitdoesnotmatterwhichagentreachesa
specificgoal–AnonymousMAPF(AMAPF).Currentoptimaland
suboptimal AMAPF solvers rely on the existence of a centralized
controllerwhichisinchargeofbothtargetassignmentandpathfind-
ing.WeextendthestateoftheartandpresentthefirstAMAPFsolver
capableofsolvingtheproblemathandinafullydecentralizedfash-
ion,wheneachagentmakesdecisionsindividuallyandreliesonlyon
thelocalcommunicationwiththeothers.Thecoreofourmethodis
a priority and target swapping procedure tailored to produce con-
sistent goal assignments (i.e. making sure that no two agents are (a) Consistent Assignment (b) Inconsistent Assignment
heading towardsthe samegoal). Coupled withan establishedrule-
Figure1. AnexampleofadecentralizedAMAPFinstancewithaconsistent
based path planning, we end up with a TP-SWAP, an efficient and
(leftside)andaninconsistent(rightside)initialassignments.Solidcircles
flexibleapproachtosolvedecentralizedAMAPF.Onthetheoretical
depictagents.Redsquaresarethegoals.Thecoloredareaaroundeachagent
side, we prove that TP-SWAP is complete (i.e. TP-SWAP guaran-
isitscommunicationzone(itisabletocommunicatewiththeothersonlyif
tees that each target will be reached by some agent). Empirically,
theyresideinsidethiszone).
we evaluate TP-SWAP across a wide range of setups and compare
ittobothcentralizedanddecentralizedbaselines.Indeed,TP-SWAP
thattheagentsareinterchangeableinasensethatforasingleagent
outperformsthefully-decentralizedcompetitorandcanevenoutper-
there is no strict requirement to achieve a particular goal. It is this
form the semi-decentralized one (i.e. the one relying on the initial
problemthatwefocusoninthiswork.
consistentgoalassignment)intermsofflowtime(awidespreadcost
NumerousmethodshavebeenrecentlyproposedtosolveMAPF.
objectiveinMAPF).
Someofthemareintendedtofindoptimalsolutionsw.r.t.space-time
discretization(CBS[16],M*[21],ICTS[15]tonameafew),while
1 Introduction the others trade-off optimality for lower runtimes in a controlled
fashion,likeECBS[2],EECBS[9],ODrM*[5],orcompletelyig-
Multi-agentnavigationisavitalandnon-trivialproblemwhicharises nore the cost objective in favor of smaller runtime and scalability
invariouspracticalapplicationssuchasmobilerobotics,transporta- likePushandRotate[4],PIBT[12]andothers.Thesameappliesto
tion systems, video-games etc. Generally, the problem asks to find AMAPF,wherebothoptimalsolvers[24]andmorescalablesubop-
asetofnon-collidingtrajectories(paths)foragroupofagentsop- timalsolvers[11]doexist.
eratinginasharedworkspace.Numerousmodifications,setupsand Still,mostofthestate-of-the-art(A)MAPFsolversintrinsicallyas-
approachesforthisproblemexist.Oneofthemostwell-studiedse- sumethatthereexistacentralizedcontrollerthatfullyobservesthe
tups is when each agent is asked to reach a specific goal location, environment and is in charge of constructing plans that the agents
i.e., the assignment of goals to agents is given as the problem in- needtoexecute.Inpractice,however,deployingsuchcentralizedsys-
put [18]. Another variant is the so-called, unlabeled or anonymous temsmaybecostlyanddecentralizedmethodstotackle(A)MAPF
multi-agentpathfinding(AMAPF)[24].Inthissettingitisassumed aredesirable.Inthiscaseeachagenthastodecideonitsown,based
onthelimitedobservation/communication,howtochoosethetarget
∗CorrespondingAuthor.Email:dergachev@isa.ru andmovetowardsitwhileavoidingthecollisions.
This is a pre-print of the paper accepted to ECAI 2024. Its main body is
MostoftherecentdecentralizedMAPFsolversarelearning-based:
similar the camera-ready version of the conference paper. In addition this
pre-printcontainsSupplementaryMaterialincorporatingextendedempirical PRIMAL [14], G2RL [22], SCRIMP [23], FOLLOWER [17] to
resultsandanalysis. name a few. Surprisingly, the decentralized AMAPF is much less
4202
guA
72
]AM.sc[
1v84941.8042:viXrastudied and to the best of our knowledge no established decentral- anteetheabsenceofcollisionsbetweentheagents.Thelatterpaper
izedAMAPFsolverexists.Ourworkaimstofillthisgap. presentsanotherdecentralizedmethodthatisbasedonconsideration
We start with a prominent (suboptimal) centralized AMAPF ofdifferentnumberofpotentialgoalassignments.Thisnumbercan
solver, i.e. TSWAP [11], and show how can one build a semi- beprohibitivelylarge.Moreover,thealgorithmitselfisnotsuitedto
decentralizedandthenfullydecentralizedAMAPFalgorithmontop operateinthenon-emptyenvironments.
of it. The main bottleneck in doing so is resolving inconsistencies Finally, a rapidly evolving research line is the one that suggests
inindividualgoalassignments,i.e.dealingwiththeproblemwhen utilizationofdeeplearningandmulti-agentreinforcementlearning
several agents are heading towards the same goal – see Fig. 1. We forbothcentralized[6]anddecentralizednavigationandgoalassign-
introducebothanaivewaytocopewithitandamoreinvolvedone, ment,see[10,7,8].However,thelearnablemethodsarenottypically
thatreliesonlyonthelocalcommunicationandisbasedonaspecific abletoprovideanysortsofguarantees,requireextensivetrainingand
targetandpriorityswappingprocedure.Weprovethatthemostad- oftenperformpoorlyontheprobleminstancesthatarenotalikethe
vancedversionofoursolver,whichwecallTP-SWAP,iscomplete, onesusedfortraining.
i.e.itguaranteesthateachagentwillarrivetoauniquegoal,thusall
goalswillbereached.
3 ProblemStatement
Weconductathoroughempiricalevaluationoftheproposedde-
centralizedAMAPFsolversandcomparethemwiththecentralized
We first present the centralized variant of the problem and then
baseline, i.e. TSWAP. We show that our most enhanced algorithm,
switchtothedecentralizedone.
i.e. TP-SWAP, indeed, outperforms the other suggested decentral-
izedvariants.Moreover,itsflowtime(oneofthewidelyusedmea- CentralizedAMAPF ConsiderasetN ofnagents,eachconfined
suresofthesolutioncost)isconsistentlylower(better)comparedto to a connected, undirected graph G = (V,E). There is a mapping
the centralized TSWAP with the random goal assignment, and its s : N → V thatassignseachagenttoaspecificstartvertex,anda
makespan (another widely used measure of the solution cost) ap- setT ⊂Vofntarget/goalvertices.
proachestheoneofthelatterwhenthenumberofagentsincreases. Timeisdiscretizedintotimesteps.Ateachtimestep,anagentcan
Overall, our findings pave the way to creating efficient fully de- choose either to move to an adjacent vertex (a move action) or to
centralizedAMAPFsolversthatrelyonlyonthelocalcommunica- remain at its current vertex (a wait action). A path for an agent i
tion/observations,whilestillguarantyingcompleteness. fromvertexv∈Vtovertexv′ ∈V,denotedbyπi(v,v′),isdefined
asasequenceofactionsthattakestheagentfromvtov′.Thecostof
thepathisdeterminedbythetimestepatwhichtheagentreachesits
2 RelatedWorks
finaldestination.Additionally,weassumethatonceanagentreaches
MAPFisawell-studiedproblemwithalargenumberofdifferentfor- itstarget,itremainsthereandwaits.
mulations [18]. The dominant number of papers devoted to MAPF Pathsshouldnotincludetwotypesofconflicts:
assume the existence of a centralized controller and rely on a dis-
• Vertexconflict:occursbetweentheagentsi,j ∈ N iff theystay
cretizedrepresentationoftheworkspace(e.g.agrid).
atthesamevertexatthesametimestep.
TheclassicalMAPFproblemformulationassumesthateachagent
• Swapping conflict: occurs between the agents i,j ∈ N iff they
is assigned a specific target to reach. It is known that finding an
traversethesameedgeatthesametimestep.
optimal solution, whether in terms of makespan or flowtime, is an
NP-hard problem [24]. The techniques to solve MAPF are plenti-
Theproblemistofindasequenceofactions(apath)foreachagent
ful.Someofthemareaimedatobtainingprovablyoptimal[16]or
suchthat(i)eachindividualpathforagentistartsatthepredefined
bounded-suboptimal [2] solutions. These methods typically do not
startlocations(i)andendsatoneofthepredefinedgoalsτ ∈T;(ii)
scale well to a large number of agents. On the other hand, if it is
allgoallocationsarereached;and(iii)allpairsofpathsareconflict-
necessarytoquicklyfindasolutionandthecostisnotofutmostim-
free.
portance,thentherule-basedsolverscanbeapplied[4].Apossible
The quality of an AMAPF solution is typically evaluated using
compromisebetweenthesolutioncostandtheperformancemaybe
eitherflowtimeormakespan,withlowervaluesindicatingbetterso-
providedbytheprioritizedplanning[3],whichoftenfindsclose-to-
lutions. Flowtime is the sum of the costs of all paths in the solu-
optimalsolutionsandisalsofastandscalable.However,prioritized
tion,whilemakespanisthemaximumcostamongthesepaths.Inthis
planningisincompleteingeneral.
work,wedonotimposeastrictrequirementtooptimizethecostof
Another variant of MAPF is the anonymous/unlabeled MAPF
thesolution,butnaturally,solutionswithlowercostsarepreferable.
(AMAPF)[18,11,24],whenthegoalsarenotassignedtotheagents
initially. Unlike classical MAPF, AMAPF is always solvable [11]. Decentralized AMAPF In a decentralized setup, each agent in-
SimilarlytoMAPF,mostoftheAMAPFsolverarecentralized.One dependently decides on its actions at each timestep, based on the
ofthekeyapproachesismethod[24],thatallowsfindingmakespan- limited information it obtains through local observation and com-
optimal solutions in polynomial time (in contrast to the classical munication.Weassumethateachagenthasknowledgeoftheentire
MAPF),althoughmakingpracticalproblemsonlargegraphsisin- graphandcanexchangeinformationwithotheragentslocatedwithin
efficient. The paper [1] addresses this limitation and proposes im- adistanceofkedgesfromitscurrentvertex.Inourexperiments,we
provementstofindsolutionsmoreefficiently.Alternatively,thereis usegridenvironmentswherethecommunicationrangeisdefinedby
thefastTSWAPsolver[11],whichallowsobtainingsuboptimalso- a(2k+1)×(2k+1)cellareawiththeagentpositionedatthecenter.
lutions. Moreover, we allow for chain communication between agents.
Thenumberofmethodsthatconsiderbothdecentralizedscenar- Thismeansthatifagentiiswithinthecommunicationrangeofagent
ios and unlabeled case is very limited. An adaptation of the cen- j, and agent j is within the communication range of agent k, then
tralized method of [20] to the decentralized setting was presented agenticanexchangeinformationwithagentkthroughagentj,and
inthesamepaper.However,aswasshownin[13],itdoesnotguar- viceversa.Forthepurposesofthisstudy,weabstractawayfromcommuni-
cation issues and assume instantaneous, error-free information ex-
change.
4 Methods
Ourdecentralizedsolver,TP-SWAP,isdevelopedonthebasisofthe
rule-basedcentralizedmethod,TSWAP[11].Therefore,webeginby
explainingTSWAPandthengraduallyexplorehowitcanbeadapted
forthedecentralizedseeting.
4.1 TSWAP
TSWAP[11]solvestheAMAPFproblemintwostages.Inthefirst
stage, it creates an initial consistent goal assignment, i.e. the one
whereeachgoalisuniquelyassignedtoasingleagent,ensuringthat
Figure 2. Examples of conflict and deadlock resolutions in TSWAP: (a)
notwoagentssharethesamegoal.Inthesecondstage,thealgorithm
Illustrationofthetarget-swappingmechanismwhenanagentoccupyingits
iterativelymovestheagentstowardtheirassignedgoalsand,ifnec-
targetlocationblocksthepathforanotheragent.(b)Illustrationofthedead-
essary,reassignsgoalsbetweenthemwhilealwaysmaintainingthe
lockresolutionmechanism,whereasequenceofagentsformsaloop,causing
consistencyofthegoalassignment.
themtoblockeachother’spaths.
InitialGoalAssignment Ingeneral,TSWAPcanhandleanycon-
sistent goal assignment. In their work, the authors of TSWAP ex- priority pr of the other members. We assume that each agent i is
plored several methods for initial goal assignment and evaluated identifiedbyauniquenumber(e.g.,theserialnumberoftherobot).
them empirically. For our experiments, when using TSWAP as a For simplicity, we will assume that the agent, its identifier, and its
centralizedbaseline,weadoptedtheassignmentmethodthatdemon- priorityareidentical,i.e.,pr=i.
stratedthemostpromisingresultsintheoriginalpaper. Second,eachagentinthesubgroupmustbeawareofthepositions
oftheothersubgroupmembersandtheirassignedtargets.Thisinfor-
Movingtowardsthegoalswithtargetswapping Ateachplan-
mationisessentialforavoidingvertexconflictsandforperforming
ning iteration, TSWAP sequentially examines all agents. For each
target-swappingordeadlockresolution.
agenti,itidentifiesthecurrentvertexvanddeterministicallyselects
Finally, we must establish the communication conditions that
thenextvertexv′ basedontheshortestpathtoitsgoal.Ifvertexv′
are sufficient to safely and correctly execute the TSWAP iteration.
isfree,thenitismarkedasoccupiedbyagenti.
Specifically,weneedtoensurethatforeachagentianditsnextver-
If vertex v′ is already occupied by another agent j, the agent i
texv′,nootheragentjislocatedatv′orplanstomovethereinthe
picksawaitactionandcheckstwopossiblecases.First,ifvertexv′
nextstep.Tomeetthisrequirement,eachagentmusthaveinforma-
isthetargetofagentj,agentsiandjswaptheirtargets,asillustrated
tionaboutotheragentswithinarangeofatleasttwoverticesfrom
inFig.2-a.Otherwise,TSWAPcheckswhetheragentiisinvolved
itsownlocation.Therefore,theminimumnecessarycommunication
in a deadlock. A deadlock occurs when a loop sequence of agents
rangemustcoverthisdistance.
(including i) is formed, such that each agent’s next vertex in their
Additionally,todetectandresolvedeadlocks,anagentmusthave
shortestpathiscurrentlyoccupiedbythenextagentinthesequence.
informationaboutanychainofadjacentagentstowhichitbelongs.
Ifadeadlockisdetected,thetargetsoftheagentswithinthesequence
Thisconditionissatisfiedifchaincommunicationisallowed,asdis-
arerotated,meaningeachagentisreassignedthetargetofthenext
cussedinthesectiononthedecentralizedscenarioinSection3.
agentintheloop.ThisscenarioisdepictedinFig.2-b.
Itisimportanttonotethatiftheinitialassignmentisinconsistent,
Aftertheplanningiterationiscomplete,thealgorithmmoveseach
thedescribedvariantofTSWAPmayfailtosolvetheinstance.Thus,
agenttoitsdesignatedvertex,ifnecessary.
itcanarguablybeconsideredsemi-decentralized,asachievingacon-
sistentinitialgoalassignmentrequiressomeformofcentralization,
4.2 DecentralizedTSWAPwithConsistentTarget suchasglobalinformationsharing.
Assignment Inthenextsection,wewillfocusonfullydecentralizedAMAPF
solvers(basedonTSWAP)thatdonotrequiretheinitialassignment
TSWAPcan,inprinciple,beadaptedtoadecentralizedsetupwhere
tobeconsistent.
acentralizedcontrollerisnotpresent,andagentshavelimitedcom-
munication capabilities within a certain range. However, an initial
consistenttargetassignmentisstillmandatory. 4.3 NaiveFully-decentralizedTSWAP
Ateachstep,eachagentcanexecuteaniterationoftheTSWAP
algorithmusingonlytheinformationavailablewithinitscommuni- In a fully decentralized setting, each agent must independently
cationrange.Itisimportanttonotethatallagentswithinthesame chooseitsgoal.Thismightbedonerandomly,oreachagentmight
subgrouphaveaccesstothesameinformation,ensuringthattheout- selecttheclosestgoaltoitsstartinglocation.However,insuchcases,
comeofthealgorithm’sexecutionwillbeconsistentacrossallmem- multiple agents may head toward the same goal, while some goals
bersofthegroup. might remain unassigned. A naive approach to resolve these in-
TocorrectlyperformtheTSWAPiteration,anagentneedsspecific consistencies involves memorizing which goals have already been
information. First, all members of the subgroup must examine the achieved by other agents and selecting a different goal from those
agents in the same order. Therefore, each agent needs to know the notonthislistifnecessary.Algorithm1:TP-SWAPAlgorithm Algorithm2:TP-UPDATEProcedure
Input:i–agentuniqueid;G–graph;T –setofallgoals. Input:i–agentuniqueid;NH–currentsubgroup;V –positionsof
agentsinthecurrentgroup;TA–targetassignmentofthe
1 τ ←SELECTTARGET(G,T);
currentgroup;PR–tableofprioritiesforagentsinthe
2 pr←GENERATEUNIQUEPRIORITY(i);
currentgroup;TP –tableoftargetsandcorresponding
3 TP[τ′]←−∞∀τ′∈T;TP[τ]←pr; agents’priorities;T –setofalltargets;G–graph.
4 whileTRUEdo
5 NH←IDENTIFYLOCALAVAILABLEAGENTS(); 1 NH←SORTDECREASINGPRIORITIES(NH,PR);
6 TA←{};PR←{};V ←{}; 2 forj∈NHdo
7 V[j]←RECIEVEPOSITION(j)∀j∈NH; 3 ifTP[TA[j]]>PR[j]then
8 TA[j]←GETTARGET(j)∀j∈NH; 4 TA[j]←τ′∈T s.t.closesttoV[j],TP[τ′]≤PR[j];
9 PR[j]←GETPRIORITY(j)∀j∈NH; 5 TP[TA[j]]←PR[j];
10 TP[τ]← max TPj[τ]∀j∈NH; 6 forj∈NHdo
j∈NH 7 ifS[j]=TA[j]then
11 τ′,pr′,v′,TP′←TP-UPDATE(i,NH,V,TA,PR,TP,T); 8 continue;
12 τ ←τ′;pr←pr′;TP ←TP′; 9 v←NEXTVERTEX(V[j],TA[j],G);
13 MOVETO(v′); 10 if∃k∈NHs.t.V[k]=vthen
11 ifv=TA[k]then
12 SWAP(TA[j],TA[k]);
Specifically,ateachstep,everyagentimustverifythroughlocal 13 SWAP(PR[j],PR[k]);
communication that its current goal (the one it is heading toward) 14 elseifINDEADLOCK(j,V,TA)then
is not already occupied by another agent. If it is, the agent should 15 D←GETDEADLOCKSEQUENCE(j,V,TA);
16 ROTATETARGETSPRIORITIES(D,TA,PR);
addthisgoaltoadedicatedlistofoccupiedgoals(initializedas∅)
17 else
and then select another goal (randomly or according to a specific 18 V[j]←v;
rule) from those not included in this list. Additionally, agents can 19 returnTA[i],PR[i],V[i],TP;
exchangetheirlistsofoccupiedgoalstoincreasethelikelihoodthat
eachagentwillchooseanunoccupiedgoal. Aniterativeprocessthenbegins,guidingtheagenttowarditsgoal.
Whilethisapproachcanindeedrestoreconsistencyingoalassign- Eachiterationstartsbyidentifyingtheagentsavailableforcommu-
mentsandresolveconflictswheremultipleagentsareheadingtoward nication (line 5) and gathering information about them. The agent
thesamegoal,itdoesnotfullyutilizethepotentialoflocalinforma- collectsinformationonthelocations(V),currenttargets(TA),and
tion exchange. As a result, agents may still need to explore all the current priorities (PR) of the members in the connected subgroup
targetsindividuallyuntilfindinganunoccupiedone.Toaddressthis (lines6-9).
limitation,weproposeTP-SWAP–animproved,fullydecentralized Thesetablesarepopulatedwithup-to-datedatarelevanttothecur-
AMAPFsolverthatallowsagentstoselectgoalsinamoreinformed rentgrouptowhichtheagentbelongs,andtheyareupdatedateach
manner. step.Thepositionofaneighboringagentjatthecurrenttimestepis
denotedasV[j],itstargetasTA[j],anditspriorityasPR[j].
4.4 TP-SWAP:Target-PrioritySwappingFor Next,theagentupdatesitsTP tableusingthecollectiveknowl-
DecentralizedAMAPF edgeofallsubgroupmembers.Iftheagentreceivesinformationthat
a target τ was selected by another agent (who may not be part of
Theapproachusedtoenhancethepreviouslydescribedfullydecen- the current subgroup) with a priority pr′ ∈ N higher than what is
tralizedAMAPFsolverisbasedontwokeyideas.First,itisadvanta- currentlyrecordedinthetable(pr′ >TP[τ]),theagentupdatesthe
geousnotonlytoidentifyandmemorizealreadyoccupiedgoals(and tabletoTP[τ]=pr′(line10).
possiblysharethisinformation)butalsototrackthedesiredgoalsof
Onceallnecessaryinformationhasbeengathered,theagentini-
otheragents.Second,agentprioritiescanbeutilizedtorestorecon-
tiatestheprocedureforresolvingassignmentconflicts,updatingtar-
sistencyingoalassignments,withthepossibilityofexchangingthese
getsandpriorities,andselectingthenextvertex.Thisisdonebya
priorities,aswillbeexplainedlater.
(core) routine named TP-UPDATE(line 11). It eliminates inconsis-
Toachievethis,eachagentindividuallymaintainsatarget-priority
tenciesingoalassignmentwithinthecurrentsubgroupandprevents
assignmenttable,TP,whichisamappingfromagentpriorities(not
collisions, similarly to the TSWAP algorithm. A more detailed de-
identifiers!) to targets. The TP table is maintained throughout the
scription of the target-priority update procedure is provided in the
entireprocessandisusedbyagentstoresolveconflictsintheircur-
nextsection.
rentgoalassignments.
Finally,thealgorithmupdatestheagent’scurrentstateandmoves
Inadditiontothetarget-prioritymapping,agentsalsotemporarily
theagenttoitsnextdeterminedlocation(lines12-13).
createandshareinformationateachtimestepregardingtheircurrent
locations (graph vertices), targets, and priorities. To facilitate this,
temporarytables/dictionariesV,TA,andPRareintroduced,which 4.4.1 TP-UPDATE:Proceduretoresolveconflictsin
aregeneratedfromscratchateachiterationofthealgorithm. TP-table
ThegeneraloutlineofTP-SWAPispresentedinAlgorithm1.Sim-
The most critical component enabling the correct execution of the
ilartothenaiveapproach,eachagentindividuallyselectsitstarget
suggest algorithm is the target-priority update procedure, which is
(line 1) and determines its priority pr (line 2) before starting the
describedbelow1.
movement.
TheTP-UPDATEprocedurepursuestwogoals.First,itresolves
Initially,thevalueforeachtargetτ ∈ {T}inthetableissetto
assignment conflicts and updates the target-priority table, ensuring
TP[τ] = −∞. When an agent selects a goal τ ∈ T, it updates
the corresponding entry in the table to TP[τ] = pr (line 3). This
1 Itisimportanttonotethattheoperationsdescribedbelowareperformed
indicates that, at the start, the agent only has information about its solelybasedoninformationavailabletoaspecificgroupofagentsthatare
owngoal. abletocommunicateandshareinformationwitheachother.tionrangeofeachagentismarkedbythedashedlinesmatchingthe
agents’colors.
Attimet=0,eachagentselectstheclosesttargetandplansapath
towardsit,shownbythecoloredarrow.Initially,allagentschoosethe
sametarget,τ ,andassignthemselvespriorities,displayedinsidethe
1
circles.Theagentsthenbeginmovingtowardtheirselectedtargets.
Bytimet = 4,theblueagenthasreachedτ andiswithincom-
1
municationrangeofthegreenagent.Thegreenagent,havingalower
priority,switchestoanewtarget,τ ,andrecalculatesitspath.Mean-
3
while,theorangeagentcontinuesmovingtowardτ ,unawarethata
1
higher-priorityagenthasalreadyreachedit.
Attimet = 7,theorangeandgreenagentsmeet,andtheorange
agentreceivesinformationthatbothτ andτ havebeenclaimedby
1 3
higher-priorityagents.Theorangeagentthenchoosestheremaining
target,τ .
2
Between t = 7 and t = 16, the green agent reaches τ before
3
theorangeagentcanreachτ ,blockingtheorangeagent’spath.To
2
resolvetheconflict,theorangeandgreenagentsswaptheirgoalsand
priorities.Bytimet=16,theorangeagenthassuccessfullyreached
τ ,whilethegreenagentisnowheadingtowardτ .
3 2
Figure3. AnexampleofsolvingadecentralizedAMAPFinstance.Agents
4.4.3 TheoreticalAnalysis
aredepictedasdisks(withthenumbershowingtheircurrentpriority).The
dashedlinesillustratetheagents’communicationranges.Theredcellsrepre- Theorem 1. There exists a finite time t at which all goals will be
sentthegoalsthattheagentsneedtoreach. achievedbytheagentsutilizingAlg.1.
thatthetargetassignmentwithinthecurrentconnectedsubgroupis Proof. Considerthefollowingfunctionϕ:
consistent.Second,italignsthetarget-priorityassignmentofthecur-
rent group with the available information. This alignment prevents
ϕ(t)=ϕ (t)+ϕ (t)+C·ϕ (t)
1 2 3
anyagentinthegroupfrombeingassignedatargetthathasalready
(cid:88)
been selected by another agent with a higher priority. This rule is ϕ 1(t)= dist(V t[i], TA t[i])
enforced even if the higher-priority agent is not part of the current i∈N
group,providedthatitsinformationispresentintheTP table. ϕ 2(t)=(cid:88)(cid:12) (cid:12){j : j ∈N, TA t[j]∈Π(V t[i], TA t[i])}(cid:12) (cid:12) (1)
This approach not only ensures the correct execution of the
i∈N
T reS aW dyA cP laa imlg eo drit bh ym hb igu ht ea rl -s po rip or re iv tyen at gs ea ng te s,nt ts hef rr eo bm ys mel ae ic nt ti an ig nit na grg ge lt os ba al-
l
ϕ 3(t)=
(cid:88) (cid:12)
(cid:12){τ : τ ∈T, TP
tpr[τ]≤pr}(cid:12)
(cid:12)
consistency. pr∈PRt
Let’sexamineAlg.2inmoredetail.Toimplementthekeyideas, where
allagentswithinthecurrentgroupareconsideredandsortedaccord- • dist(v,v′)–theshortestpathlengthbetweenverticesv,v′ ∈V,
ing to their priority (lines 1-5). If the TP table indicates that the • Π(v,v′)–asetofverticesintheshortestpathbetweenv,v′ ∈V,
targetofaparticularagentihasbeenselectedbyanotheragentwith
• V –thetableofagents’positionsonthegraphattimet
t
ahigherpriority,thentheagentiwillselectanewtarget(line4).
• TA –theglobalgoalassignmentattimet
t
The new target is selected based on the following rules: (i) it
• PR –theglobalpriorityassignmentattimet
t
must be the closest available target to the agent, and (ii) the prior- • TPpr–thetarget-prioritytableattimetofagentwithprioritypr
ity recorded for it in the TP table must be lower than the current
•
C–t finitescalarvalue,atleastequal(cid:0)
2 max
dist(v,v′)+1(cid:1)
priorityoftheagent.InSection4.4.3,wewilldemonstratethatthere v,v′∈V
alwaysexistsatargetsatisfyingtheseconditions. Thefunctionconsistsofthefollowingcomponents:
AftertheTP tableisupdated(alongwiththeauxiliaryTAand
• ϕ (t)representsthetotaldistancefromeachagent’scurrentposi-
PR tables),theseupdatedtablesareusedasinputfortheiteration 1
tiontoitsassignedtarget.
of the TSWAP algorithm (lines 6-18). Additionally, if two agents
• ϕ (t)countsforeachagentthenumberofotheragentsthatliein
exchangetargetsduringthisTSWAPstep,theymustalsoexchange 2
itspath.
theirpriorities(lines13,16).
• ϕ (t) counts for each agent the number of targets that agent ei-
As a result, an agent gets an updated table TP along with the 3
therknowsnothingaboutorknowsarechosenbylower-priority
updatedpriority,targetandavertextomoveto(line19).
agents.
Let’sdemonstratethatthereexistsaspecificmomentintimewhen
4.4.2 RunningExample
all agents will have successfully achieved their goals. To establish
Let’sexamineanexampleofsolvinganAMAPFprobleminade- this,itsufficestoshowthat(i)theTP-UPDATEprocedureiscorrect,
centralizedfashion,asillustratedinFig.3. i.e.itwillalwaysfindconsistenttargetassignmentforaconnected
Here, three agents (shown as blue, green, and orange disks) are subgroupofagents(ii)thefunctionϕisboundedfrombelow,(iii)ϕ
confined to a grid. The goals (known to each of the agents) are isdecreasing,and(iv)ϕreachingthelowerboundcanoccuriff all
depicted as the red squares labeled as τ , τ , τ . The communica- agentshaveachievedtheirtargets.
1 2 3TP-UPDATECorrectness ItcanbeobservedthatAlg.2(lines2-
5)createsandmaintainsaconsistentgoalassignmentTAwithina
subgroupofagents.Crucially,eachagentisguaranteedtofindanew
targetifitmustabandonitscurrentone(line4ofAlg.2).
Toprovethis,let’sassignanewnumberingtotheagents,reversed random-32-32-10 maze-32-32-4 den404d room-64-64-16 den312d
(32 x 32) (32 x 32) (34 x 28) (64 x 64) (65 x 81)
accordingtotheirpriorities(i.e.,theagentwiththehighestpriority
Figure4. Mapsthatareusedintheexperiments.
isnumbered1,andthelastoneisn).Wewillprovebyinductionthat
anagentkcanrejectnomorethank−1targets.
• Base case: the first agent can reject no targets (see lines 2-5 of
Alg.2).
• Inductionstep:assumethatanagentk canrejectnomorethan
k−1targets.Now,consideranagentk+1.Supposethisagent
can reject more than k targets. Among these rejected targets, at
leasttwomusthavebeentargetsthatwerenotrejectedbyagent
k.Ifagentk+1rejectedthesegoals,itmeanstheywereatsome
pointchosenbyagentswithprioritieshigherthank+1.Sincethe
priorityassociatedwitheachgoaldoesnotdecrease,therearetwo
possibilities: either both of these goals were achieved by agent
k (which is impossible), or one of the targets must have been
achieved by an agent with a higher priority than k. This would
meanagentkwouldhavealsohadtorejectthattarget.Hence,this
Figure 5. Average flowtime, makespan and standard deviations (shaded
isacontradiction.
ahead)oftheevaluatedAMAPFsolvers.
Boundedness Functionsϕ andϕ areeachboundedfrombelow
1 2
by0foranyassignment,whileϕ isthesumofafinitesetofnon-
3
negativeintegers.Thisimpliesthatϕ isalsoboundedfrombelow.
3
Consequently,theoverallfunctionϕisboundedbelow. 5 EmpiricalEvaluation
Monotonicity Ifaconsistenttargetassignmentisprovidedasinput
Algorithms Our evaluation considers the proposed decentralized
toAlg.2andremainsunchangedbetweenlines2and5,thefunction
AMAPFsolversandacentralizedbaseline,TSWAP.Thelatterisde-
ϕ (t) + ϕ (t) strictly decreases, as established in the analysis of
1 2
notedasC-TSWAP(where“C”meanscentralized).Inparticularthe
TSWAPin[11].
followingdecentralizedmethodsareevaluated:decentralizedadapta-
Thefunctionϕ (t)isnon-increasingbecause,ateachtimestep,the
3
tionofTSWAPthatreliesontheinitialrandombutconsistenttarget
algorithmupdatesTP tables,ensuringtheknownnumberoftargets
assignment–D-TSWAP-C;naivefullydecentralizedAMAPFsolver
selectedbylower-priorityagents,orleftunselected,eitherstaysthe
thatdoesnotrelyonconsistentinitialtargetassignment–D-SWAP-
sameordecreases(line10ofAlg1).
N; its advanced variant that utilizes the suggested target and prior-
Ifϕ remainsunchangedatatimestep,soϕ +ϕ decreasesun-
3 1 2
ityswappingprocedure–TP-SWAP.Alldecentralizedmethodsare
lessalltargetsareachieved.Otherwise,ifthesubgroupconfiguration
implemented by us2. For C-TSWAP we used the original authors’
changes,ϕ decreases.Althoughϕ +ϕ mayincrease,themagni-
3 1 2
implementation that utilize the bottleneck assignment (as this way
tudeofchangein(C ·ϕ )isalwaysgreater,ensuringϕdecreases
3
ofassigningtargetswasshowntoperformbetteronaverageinthe
overall.
originalpaper).
Sinceagentsubgroupsdonotintersect,ϕcanbeexpressedasthe
sumofϕvaluesforeachsubgroup,makingitasumofdecreasing ProblemInstances WeutilizedthreegridmapsfromtheMovin-
functions. gAI benchmark, which is well-known within the MAPF commu-
TargetsAchievement Finally,wedemonstratethatthefunctionϕ nity [18, 19]. The selected maps include random-32-32-10,
reachesitslowerboundiff allagentshavereachedtheirgoals. maze-32-32-4andden404d(seeFig.4).Theyallhaveroughly
Itcanbeseenthat,ifallagentsreachtheirtargets,ϕstopschang- thesamesize(32×32)butdiffersignificantlyintopology.
ingafterthenexttimestep,reachingitslowerbound. Foreachmap,wegenerate250differentscenarios.Everyscenario
Conversely,assumeϕisatitsminimum,butatleastoneagentin isalistof100start/targetlocations.Tocreateaninstanceofnagents
aconnectedsubgrouphasn’treacheditstarget.Iftargetassignments fromascenario,wetakefirstnstart-goalpairsfromthelist.Inour
withinthissubgroupremainunchangedduringlines2-5ofAlg.2,ϕ experiments,wevariedthenumberofagentsfrom10to100withan
3
staysconstantwhileϕ +ϕ decreases,leadingtoacontradiction. incrementof10.Intotal,foreachmapandeachnumberofagents,
1 2
Ifthetargetassignmentchanges,newgoalinformationreducesϕ , wehave250differentprobleminstances.
3
decreasing ϕ, which contradicts the assumption that ϕ has stopped The communication range for the decentralized algorithms was
changing. settoanarea5×5cellswithanagentin thecenter.Theprimary
performance indicator we are interested in is the solution quality,
measuredasmakespanandflowtime.
Note that while the proof idea is inspired by the completeness
proof of the TSWAP algorithm, our scenario is significantly more Makespan and Flowtime Metrics Top row of Fig. 5 shows the
complex due to its decentralized nature. To the best of our knowl- averageflowtime.ThefirstimportantobservationisthatTP-SWAP,
edge, this is the first time completeness has been proven in such a
context. 2Sourcecode:https://github.com/PathPlanning/TP-SWAPn 5×5 11×11 21×21 Step den312d room-64-64-16
limit TP-SWAP D-TSWAP-N TP-SWAP D-TSWAP-N
20 819 508 414
40 1423 755 727 600 100% 100% 100% 100%
60 1906 994 989 500 100% 96% 100% 92%
80 2279 1297 1284 400 94% 67% 92% 62%
100 2464 1598 1560 300 60% 26% 52% 21%
200 11% 4% 12% 2%
Table 1. Average flowtime for TP-SWAP with varying communication
rangesonthemaze-32-32-4map. Table2. ThesuccessratesofthefullydecentralizedAMAPFsolversunder
differenttimesteplimits.
indeed,notablyoutperformsitsnaivedecentralizedcounterpart,D-
SWAP-N.Thedifferenceintheirperformanceisgettingmorepro- wegenerate250differentinstancesinvolving100agents.Moreover,
nounced when the number of agents increases. On average, TP- weintroduceatimesteplimitT max –iftheagentsdonotreachall
SWAPis2.3timesbetterthanD-SWAP-Nacrossallthemapsand thegoalsbeforethetimestepT maxwecountthisrunasfailure(suc-
numbersofagents.Thestandarddeviationofflowtimevaluesisalso cessotherwise).WevaryT max from200to600withanincrement
consistentlysmallerforTP-SWAP. of100.Theresults(successrate)areshowninTable2.
Interestingly, TP-SWAP also surpasses a semi-decentralized Asonecansee,TP-SWAPsolvesalargernumberofinstancesun-
TSWAPvariantwithconsistentinitialtargetassignment,suggesting der any limit except 600 (when both methods solve all the tasks).
thatTP-SWAP’sinitialassignment(whereeachagentpicksthenear- Coupledwiththeresultspresentedintheprevioussection,thiscon-
esttarget)ismoreeffective,evenifagentshavetorestoretheassign- firmsthattheproposedtarget-priorityswappingprocedureisofut-
mentconsistency. mostimportancetotheperformanceofthedecentralizedsolvers.
Theimportanceoftheinitialassignmentisalsoexemplifiedbythe
Extended Results In the Supplementary material, extended em-
performance of C-TSWAP (which is much better compared to the
piricalresultsareprovided,includingtheonesonmapsofdifferent
decentralizedsolvers).Itconfirms,thatincaseofsmartcentralized
sizesandamoredetailedanalysisforvariouscommunicationranges,
initialtargetassignment,onecanachievemuchbetterflowtime.
includingstatisticsontheaveragenumberandsizeofconnectedsub-
Regarding makespan (the bottom row of Fig. 5), similar trends
groups.
emerge,thoughTP-SWAPdoesnotoutperformD-TSWAP-C.This
indicatesthatconsistenttargetassignmenthasastrongerimpacton
makespanthanflowtime.Notably,TP-SWAP’smakespannearlycon- 6 DiscussionandLimitations
vergeswithD-TSWAP-Casthenumberofagentsincreases.More-
over, other algorithms (except D-TSWAP-C) also show decreased Thispaperprimarilyaddressesthetheoreticalaspectsofdecentral-
makespanwithmoreagents. izedmulti-agentnavigation,focusingontargetselectionandaction
Thisdecreaseinmakespanmayresultfromhigheragentdensity, choice,butseveralpracticalissuesremainunaddressed.
whichaidsinquickerrecoveryofaconsistentassignment.C-TSWAP Firstly, we assume that the agents possess all the necessary in-
also benefits, as more agents allow finding closer targets initially. formationabouttheotherswithintheirsubgroupwhenchoosingac-
Incontrast,D-TSWAP-C’sconsistentassignmentnegatesthiseffect, tions,whichwouldrequireaspecializedinformation-sharingmech-
because its assignment is initially consistent, eliminating the need anisminpractice.
to restore consistency. Since the assignment is random, there is no Secondly, we assume synchronized movements of agents. In the
advantagefromgoalproximity. realworld,e.g.whenimplementingouralgorithmonrobots,adecen-
tralizedmotionsynchronizationmightbeneeded,which,webelieve,
ImpactoftheCommunicationRange Toinvestigatetheimpact couldbeachievedviacommunication.
ofcommunicationrangeontheperformanceoftheproposedalgo-
rithm, we conducted a series of experiments on maze-32-32-4
mapusingthreedifferentcommunicationrangesizes:5×5,11×11, 7 Conclusion
and21×21cells.
Inthiswork,wehaveproposedanovelmethodtoaddresstheprob-
Table1displaystheflowtimevaluesforvaryingcommunication
lemwhereasetofagentsneedstoreachasetoftargets,anditdoes
rangesacrossdifferentnumbersofagents.Theresultsdemonstrate
notmatterwhichagentreachesaparticulartarget.Wefocusedona
asignificantperformanceboostwhenthecommunicationradiusin-
particularlychallengingandpreviouslyunsolvedscenarioinwhich
creasesfrom5×5to11×11.However,thisimprovementdimin-
thesystemisdecentralized,allowingonlylocalcommunicationbe-
isheswhentheradiusisfurtherextendedto21×21.Thesefindings
tweentheagents,andtheinitialgoalassignmentisinconsistent.To
suggestthatexpandingthecommunicationrangeenhancesproblem-
tacklethis,weintroducedanalgorithm,TP-SWAP,specificallyde-
solvingefficiency,butonlyuptoacertainpoint.Beyondthispoint,
signed to solve this problem, and studied it both theoretically and
the overlap in communication ranges likely causes most agents to
empirically.
formasingle,largeconnectedgroup,meaningthatfurtherincreases
The experimental results demonstrated that TP-SWAP outper-
inthecommunicationrangedonotsubstantiallyimproveagentcon-
forms fully decentralized competitors in various scenarios and can
nectedness.
achieve parity with, or even surpass, a semi-centralized solver that
AdditionalComparisonoftheFullyDecentralizedSolvers To has access to consistent goal assignments, particularly in terms of
getamorenuancedpictureofhowtheperformanceofTP-SWAPdif- flowtime.Futureresearchdirectionsincludeexploringmoregeneral
fersfromthatofthebasicfully-decentralizedsolver,D-TSWAP-N, AMAPFproblemsettings(e.g.,coloredMAPF),addressingcommu-
werunadditionalexperimentsontwoextramapsofslightlybigger nicationissues,andimplementingandevaluatingourmethodonreal
size:room-64-64-16andden312d(seeFig.4).Foreachmap, robots.Acknowledgements onComputationalIntelligenceandAIinGames,4(2):144–148,2012.
URLhttp://web.cs.du.edu/~sturtevant/papers/benchmarks.pdf.
[20] M.Turpin,N.Michael,andV.Kumar.Capt:Concurrentassignmentand
The reported study was supported by the Ministry of Science and
planningoftrajectoriesformultiplerobots. TheInternationalJournal
Higher Education of the Russian Federation under Project 075-15- ofRoboticsResearch,33(1):98–112,2014.
2024-544. [21] G. Wagner and H. Choset. M*: A complete multirobot path plan-
ningalgorithmwithperformancebounds. InProceedingsofThe2011
IEEE/RSJInternationalConferenceonIntelligentRobotsandSystems
(IROS2011),pages3260–3267,2011.
References [22] B.Wang,Z.Liu,Q.Li,andA.Prorok. Mobilerobotpathplanningin
dynamicenvironmentsthroughgloballyguidedreinforcementlearning.
[1] Z.A.AliandK.Yakovlev. ImprovedAnonymousMulti-AgentPath IEEERoboticsandAutomationLetters,5(4):6932–6939,2020.
FindingAlgorithm.InProceedingsoftheAAAIConferenceonArtificial [23] Y.Wang,B.Xiang,S.Huang,andG.Sartoretti.Scrimp:Scalablecom-
Intelligence,volume38,pages17291–17298,2024. municationforreinforcement-andimitation-learning-basedmulti-agent
[2] M.Barer,G.Sharon,R.Stern,andA.Felner.Suboptimalvariantsofthe pathfinding. InProceedingsofThe2023IEEE/RSJInternationalCon-
conflict-based search algorithm for the multi-agent pathfinding prob- ferenceonIntelligentRobotsandSystems(IROS2023),pages9301–
lem. InProceedingsofThe7thAnnualSymposiumonCombinatorial 9308,2023.
Search(SoCS2014),pages19–27,2014. [24] J.YuandS.M.LaValle. Multi-agentpathplanningandnetworkflow.
[3] M.Cˇáp,P.Novák,A.Kleiner,andM.Selecky`. Prioritizedplanning In Algorithmic Foundations of Robotics X: Proceedings of the Tenth
algorithmsfortrajectorycoordinationofmultiplemobilerobots. IEEE WorkshopontheAlgorithmicFoundationsofRobotics,pages157–173.
TransactionsonAutomationScienceandEngineering,12(3):835–849, Springer,2013.
2015.
[4] B.deWilde,A.W.terMors,andC.Witteveen. Pushandrotate:co-
operative multi-agent path planning. In Proceedings of the 12th In-
ternationalConferenceonAutonomousAgentsandMultiagentSystems
(AAMAS2013),pages87–94,2013.
[5] C.Ferner,G.Wagner,andH.Choset. Odrm*optimalmultirobotpath
planninginlowdimensionalsearchspaces.InProceedingsofThe2013
IEEE International Conference on Robotics and Automation (ICRA
2013),pages3854–3859.IEEE,2013.
[6] X.Ji,H.Li,Z.Pan,X.Gao,andC.Tu.Decentralized,unlabeledmulti-
agentnavigationinobstacle-richenvironmentsusinggraphneuralnet-
works. InProceedingsofIEEE/RSJInternationalConferenceonIntel-
ligentRobotsandSystems(IROS2021),pages8936–8943,2021.
[7] A.Khan,C.Zhang,S.Li,J.Wu,B.Schlotfeldt,S.Y.Tang,A.Ribeiro,
O.Bastani,andV.Kumar. Learningsafeunlabeledmulti-robotplan-
ning with motion constraints. In Proceedings of IEEE/RSJ Interna-
tional Conference on Intelligent Robots and Systems (IROS 2019),
pages7558–7565,2019.
[8] A.Khan,V.Kumar,andA.Ribeiro. Largescaledistributedcollabo-
rativeunlabeledmotionplanningwithgraphpolicygradients. IEEE
RoboticsandAutomationLetters,6(3):5340–5347,2021.
[9] J.Li,W.Ruml,andS.Koenig.Eecbs:Abounded-suboptimalsearchfor
multi-agentpathfinding. InProceedingsofthe35thAAAIConference
onArtificialIntelligence(AAAI2021),pages12353–12362,2021.
[10] R.Lowe,Y.I.Wu,A.Tamar,J.Harb,O.PieterAbbeel,andI.Mor-
datch.Multi-agentactor-criticformixedcooperative-competitiveenvi-
ronments. ProceedingsoftheAdvancesinneuralinformationprocess-
ingsystems(NIPS2017),30,2017.
[11] K.OkumuraandX.Défago. Solvingsimultaneoustargetassignment
andpathplanningefficientlywithtime-independentexecution. Artifi-
cialIntelligence,321:103946,2023.
[12] K.Okumura,M.Machida,X.Défago,andY.Tamura. Priorityinheri-
tancewithbacktrackingforiterativemulti-agentpathfinding.Artificial
Intelligence,310:103752,2022.
[13] D. Panagou, M. Turpin, and V. Kumar. Decentralized goal assign-
mentandsafetrajectorygenerationinmultirobotnetworksviamultiple
lyapunovfunctions. IEEETransactionsonAutomaticControl,65(8):
3365–3380,2019.
[14] G.Sartoretti,J.Kerr,Y.Shi,G.Wagner,T.S.Kumar,S.Koenig,and
H.Choset. Primal:Pathfindingviareinforcementandimitationmulti-
agent learning. IEEE Robotics and Automation Letters, 4(3):2378–
2385,2019.
[15] G.Sharon,R.Stern,M.Goldenberg,andA.Felner.Theincreasingcost
treesearchforoptimalmulti-agentpathfinding. Artificialintelligence,
195:470–495,2013.
[16] G.Sharon,R.Stern,A.Felner,andN.R.Sturtevant. Conflict-based
searchforoptimalmultiagentpathfinding. ArtificialIntelligenceJour-
nal,218:40–66,2015.
[17] A.Skrynnik,A.Andreychuk,M.Nesterova,K.Yakovlev,andA.Panov.
LearntoFollow:DecentralizedLifelongMulti-AgentPathfindingvia
PlanningandLearning. InProceedingsoftheAAAIConferenceonAr-
tificialIntelligence,volume38,pages17541–17549,2024.
[18] R.Stern,N.R.Sturtevant,A.Felner,S.Koenig,H.Ma,T.T.Walker,
J.Li,D.Atzmon,L.Cohen,T.K.S.Kumar,E.Boyarski,andR.Bartak.
Multi-agentpathfinding:Definitions,variants,andbenchmarks.Sympo-
siumonCombinatorialSearch(SoCS),pages151–158,2019.
[19] N.Sturtevant. Benchmarksforgrid-basedpathfinding. TransactionsSupplementaryMaterial
Numberofgroups Groups’sizes
n 5×5 11×11 21×21 5×5 11×11 21×21
A ExtendedExperiments 10 9 6 2 1 2 6
20 16 7 1 1 3 18
30 21 5 1 1 7 29
40 24 3 1 2 15 40
50 27 2 1 2 29 50
60 28 2 1 2 45 60
70 28 1 1 3 60 70
80 28 1 1 3 74 80
90 27 1 1 3 86 90
100 25 1 1 4 97 100
room-32-32-4 empty-32-32 den520d Table3. Averagenumberofsubgroupsandaveragesubgroupsizeduring
(32 x 32) (32 x 32) (256 x 257) taskexecutionbytheTP-SWAPalgorithmonthemaze-32-32-4map.
A.2 AdditionalEvaluationOfTheImpactOfVarying
CommunicationRange
Tables3and4presentsadditionaldetailsoftheexperimentinvolving
variationofthecommunicationrange.Table4showsthemakespan,
flowtimeandTable3containsstatisticsrelatedtothesubgroupsof
warehouse-20-40-10-2-1 agents for each communication range across different numbers of
(321 x 123) agents.Additionally,Table3includesresultsfortheTSWAPalgo-
rithm with a consistent random initial assignment, denoted as D-
Figure6. Mapsthatareusedintheextendedexperiments.
TPSWAP-C.
A.1 FurtherEvaluationOnAdditionalMaps The results for the makespan and flowtime are consistent with
thosepresentedinSection5.Notably,theproposedmethodsurpasses
Tofurthervalidatetheperformanceandscalabilityoftheproposed
the D-TPSWAP-C approach once a certain agent density threshold
decentralizedalgorithm,weconductedanadditionalseriesofexper-
isreached.ThisadvantagearisesbecauseTP-SWAPinitiallyselects
iments on two small (random-32-32-10, empty-32-32) and
targets based on proximity, whereas D-TPSWAP-C assigns targets
twolarge(warehouse-20-40-10-2-1,den520d)mapsfrom
randomly, potentially leading to greater initial distances between
theMovingAIbenchmark[18].
agents and their targets. As agent density increases, decentralized
Similarlytotheexperimentsreportedinthemainbody,wegener-
agentsinTP-SWAPcanrapidlyre-establishaconsistentassignment,
ated250differentscenariosforeachmap,eachscenariocontaining
oftenreachingbettertargetsandtherebyoutperformingD-TPSWAP-
100start/targetpairsonsmallmapsand200start/targetpairsonthe
C.
largeones.Thenumberofagentsvariedfrom10to100(20to200),
Examiningthestatisticsontheaveragenumberofsubgroupsand
withincrementsof10(20).Thecommunicationrangeforthedecen-
theaveragenumberofagentswithinthesesubgroups(Table3),we
tralizedalgorithmswassetto5x5cellswithanagentinthecenter
observe that with a communication range of 5×5, even with 100
(asbefore).
agentsontherelativelysmall32×32map,theagentsdonotconsol-
The results are presented in Fig. 7-8. They generally align with
idate into a single large group. Instead, they form multiple smaller
those described in Section 5. However, on the large maps, the dif-
subgroups. When fewer agents are present on the map, they tend
ference between decentralized and centralized algorithms becomes
to operate largely independently, only occasionally exchanging in-
morepronouncedasthemapsizeincreases.Notably,thealgorithm
formation.Despitethislimitedcommunication,thealgorithmeffec-
withtheconsistentinitialgoalassignment(D-TSWAP-C)showssu-
tivelysolvestheproblem,asdemonstratedbytheresults.Remark-
periorityinmakespancomparedtothefullydecentralizedone(TP-
ably, it competes well with the partially centralized D-TPSWAP-C
SWAP).Despitethis,thetotalsolutionduration(flowtime)remains
method,evenundertheseconditions.
similaracrossthesolvers.Furthermore,asthenumberofagentsin-
Ontheotherhand,increasingthecommunicationradiusfacilitates
creases, TP-SWAP begins to outperform D-TSWAP-C in terms of
fullcoordinationamongagentsacrossthemap,oftenleadingtothe
flowtime.
formation of a single large connected group. However, it is impor-
These effects can be attributed to the fact that the larger map
tanttonotethatevenwithacommunicationrangeof11×11and
sizesignificantlycomplicatesthecoordinationamongdecentralized
100agentsonthemap,theaveragenumberofagentsinagroupdoes
agents.Theinabilitytoquicklyrecoveraconsistentassignmentleads
notequalthetotalnumberofagents.Thissuggeststhateveninthese
tothesituationswheresomeagentsmustvisitmultipleoccupiedtar-
scenarios,someagentsoccasionallyoperateindependentlyandwith-
getsbeforeeventuallyfindinganavailableone.Thisinefficiencycon-
outconstantcommunicationwiththerest.
tributestowideningoftheperformancegapbetweendecentralized
andcentralizedapproachesonthelargermaps.
Overall, the conducted additional experiments confirm that the
proposed method is robust and capable of functioning effectively
across various environments, including larger-scale settings. How-
ever,thesizeoftheenvironmentandthedensityofagentscanno-
tablyimpactthequalityofitssolutions,particularlywhencompared
tothecentralizedalgorithm.Figure7. Averageflowtimeanditsstandarddeviation(shadedahead)oftheevaluatedAMAPFsolversonanextendedsetofmaps
Figure8. Averagemakespananditsstandarddeviation(shadedahead)oftheevaluatedAMAPFsolversonanextendedsetofmaps
makespan flowtime
n 5×5 11×11 21×21 D-TSWAP-C 5×5 11×11 21×21 D-TSWAP-C
10 118 87 68 80 445 340 266 439
20 132 83 68 87 819 508 414 920
30 134 78 72 89 1139 642 586 1419
40 134 73 72 91 1423 755 727 1933
50 134 74 73 93 1725 889 864 2479
60 130 71 71 95 1906 994 989 3045
70 127 73 74 98 2118 1130 1143 3643
80 122 74 73 101 2279 1297 1284 4273
90 117 75 74 103 2372 1437 1424 4944
100 110 76 75 107 2464 1598 1560 5665
Table4. AveragemakespanandflowtimeforTP-SWAPwithvaryingcommunicationrangesizesonthemaze-32-32-4map.Forcomparison,resultsfrom
TSWAPwitharandomconsistentinitialassignment(D-TSWAP-C)arealsopresented.