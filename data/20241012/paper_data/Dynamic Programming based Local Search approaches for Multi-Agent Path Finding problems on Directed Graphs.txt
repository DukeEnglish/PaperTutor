Dynamic Programming based Local Search approaches for
Multi-Agent Path Finding problems on Directed Graphs
I.Saccania,S.Ardizzonia,L.Consolinia,M.Locatellia
aDipartimentodiIngegneriaeArchitettura,UniversitàdiParma,ParcoAreadelleScienze,181/A,Parma,Italy
ABSTRACT
Amongsub-optimalMulti-AgentPathFinding(MAPF)solvers,rule-basedalgorithmsareparticularly
appealingsincetheyarecomplete. Evenincrowdedscenarios,theyallowfindingafeasiblesolution
thatbringseachagenttoitstarget,preventingdeadlocksituations. However,generally,rule-based
algorithmsprovidemuchlongersolutionsthantheshortestone. Themaincontributionofthispaper
isintroducinganewlocalsearchprocedureforimprovingaknownfeasiblesolution. Westartfroma
feasiblesub-optimalsolution,andperformalocalsearchinaneighborhoodofthissolution. Ifwe
areabletofindashortersolution,werepeatthisprocedureuntilthesolutioncannotbeshortened
anymore. At the end, we obtain a solution that is still sub-optimal, but generally of much better
qualitythantheinitialone. Weproposetwodifferentlocalsearchpolicies. Inthefirst,weexplore
all paths in which the agents positions remain in a neighborhood of the corresponding positions
of the reference solution. In the second, we set an upper limit to the number of agents that can
changetheirpathwithrespecttothereferencesolution. Thesetwodifferentpoliciescanalsobe
alternated. Weexploretheneighborhoodsbydynamicprogramming. Thefactthatoursearchislocal
isfundamentalintermsoftimecomplexity. Indeed,ifthedynamicprogrammingapproachisapplied
tothefullMAPFproblem,thenumberofexploredstatesgrowsexponentiallywiththenumberof
agents. Instead,theintroductionofalocalityconstraintallowsexploringtheneghborhoodsinatime
thatgrowspolynomiallywithrespecttothenumberofagents.
1 INTRODUCTION
WeconsidertheMulti-AgentPathFinding(MAPF)problem. Thisproblemisdefinedonadirectedgraph. Thenodes
represent the positions occupied by a set of agents. The arcs represent the allowed motions between nodes. Each
agentoccupiesadifferentnodeandcanmovetofreenodes(i.e.,nodesnotoccupiedbyotheragents). TheMAPF
problemconsistsincomputingasequenceofmovementsthatrepositionsallagentstoassignedtargetnodes,avoiding
collisions. Themainmotivationcomesfrommanagingfleetsofautomatedguidedvehicles(AGVs). AGVsmoveitems
betweenlocationsinawarehouse. EachAGVfollowspredefinedpaths,thatconnectthelocationswhereitemsare
storedorprocessed. Werepresentthewarehouselayoutwithadirectedgraph. Thenodesrepresentpositionswhere
itemsarepickedupanddelivered,togetherwithadditionallocationsusedforrouting. Thedirectedarcsrepresentthe
precomputedpathsthatconnecttheselocations. IfvariousAGVsmoveinasmallscenario,eachAGVrepresentsan
obstaclefortheothers. Insomecases,thefleetcanreachadeadlocksituation,inwhichsomevehiclesareunableto
reachtheirtarget. Hence,itisimportanttofindafeasiblesolutiontoMAPF,evenincrowdedconfigurations.
Literaturereview. VariousworksaddresstheproblemoffindingtheoptimalsolutionofMAPF(i.e.,thesolution
withtheminimumnumberofmoves). Forinstance,ConflictBasedSearch(CBS)isatwo-levelalgorithmthatusesa
searchtree,basedonconflictsbetweenindividualagents(see[13]). However,findingtheoptimalsolutionofMAPF
isNP-hard(see[17]),andcomputationaltimegrowsexponentiallywiththenumberofagents. Therefore,typically,
optimalsolversareonlyappliedwhenthenumberofagentsisrelativelysmall. Conversely,sub-optimalsolversare
usuallyemployedwhenthenumberofagentsislarge. Insuchcases, theaimistoquicklyfindafeasiblesolution.
Thatis,asequenceofmotionsthatpositionseachagentontheassignedtargetconfiguration. Ingeneral,theprovided
solutionisnottheoptimalone. Amongsub-optimalsolvers,wecandistinguishsearch-basedandrule-basedapproaches.
4202
tcO
01
]AM.sc[
1v45970.0142:viXraSearch-basedsolversaimtoprovideahigh-qualitysolutionbutarenotcomplete(i.e.,theyarenotalwaysabletoreturn
afeasiblesolution). AprominentexampleisHierarchicalCooperativeA∗(HCA∗)[15],inwhichagentsareplanned
oneatatime,accordingtosomepredefinedorder. Instead,rule-basedapproachesincludespecificmovementrules
for different scenarios. They favor completeness at low computational cost over solution quality. One of the first
importantresultsforrule-basedalgorithmsisfromKornhauser’sthesis[8],whichpresentsarule-basedprocedureto
solveMAPF(ortoestablishthatMAPFhasnofeasiblesolution). Kornhausershowsthatthesolutionsfoundwith
hismethodhavecubiclengthcomplexity,withrespecttothenumberofnodesandagents. However,thealgorithm
proposedbyKornhauserisquitecomplexand,toourknowledge,hasneverbeenfullyimplemented. Tworelevant
rule-basedalgorithmsareTASS[7]andPushandRotate[16][1]. TASSisatree-basedagentswappingstrategythat
is complete on every tree, while Push and Rotate solves every MAPF instance on graphs that contain atleast two
unoccupiedvertices. Reference[9]presentsamethodthatconvertsthegraphintoatree(asin[6])andsolvesthe
resultingproblemwithTASS.Recently,reference[4]proposedtheLeavesProcedure,simpleandeasytoimplement,
whichfindssolutionstoMAPFontreeswithalowerlengthcomplexity,comparedtobothTASSandKornhauser’s
algorithm. Rule-basedalgorithmsarealsousedfordirectedgraphswithatleasttwounoccupiednodes. Inparticular,
reference [2] presents the diSC algorithm, which solves any MAPF instance on strongly connected digraphs (i.e.,
directedgraphsinwhichitispossibletoreachanynodestartingfromanyothernode). Anotherrelevantreference
is[5],whichsolvesMAPFonthespecificclassofbiconnecteddigraphs(i.e.,stronglyconnecteddigraphswherethe
undirectedgraphsobtainedbyignoringtheedgeorientationshavenocuttingvertices). TheproposeddiBOXalgorithm
has polynomial complexity with respect to the number of nodes. Among sub-optimal MAPF solvers, rule-based
algorithmsareparticularlyappealing,sincetheyarecomplete. Evenincrowdedscenarios,theyallowfindingafeasible
solutionthatbringseachagenttoitstarget,preventingdeadlocksituations. However,generally,rule-basedalgorithms
provide solutions that aremuch longer than theshortest one. This isa crucial limitation inindustrial applications.
Forthisreason,athirdclassofalgorithms,combiningoptimalandsub-optimalsolvers,theclassofanytimeMAPF
algorithms,isofparticularrelevance. Approachesinthisclassaimatfirstdetectingquicklyafeasiblesolution,and
thenatimprovingitthroughsuitableprocedures. Amongthem,thosebasedonLargeNeighborhoodSearch(LNS)[14]
areparticularlywell-known. LNSisapopularlocalsearchtechniquetoimprovethesolutionqualityforcombinatorial
optimizationproblems. Startingfromagivensolution,itremovespartofthesolution,calledaneighborhood,andtreats
theremainingpartofthesolutionasfixed. Then,itrepairsthesolutionandreplacestheoldsolutioniftherepaired
solutionisbetter. Thisprocedureisrepeateduntilsomestoppingcriterionismet. Forinstance,MAPF-LNS[10]is
ananytimeMAPFframeworkthatimprovesthequalityofasolutionobtainedfromaMAPFalgorithmovertimeby
replanningsubgroupsofagentsusingLNS.In[10],thenumberofagentstobereplannedisapredefinedparameterN,
andthreedifferentrulestoselectthemareproposed,onebasedonagentpaths,anotherbasedongraphtopology,and,
finally, arandomone. Wealsomention[11], wherealgorithmLNS2isintroduced. Suchalgorithmstartsfroman
infeasiblesolutionandrepeatedlyreplanssubsetsofagentstofindplanswithfewerconflicts,eventuallyconvergingtoa
conflict-freeplan.
Statement of contribution. The aim of this paper is to propose methods to shorten a given feasible sub-
optimal solution of a MAPF instance on a directed graph, expanding the results of our conference paper [3]. In
that reference, we propose an iterative local search approach where neighborhoods are explored through dynamic
programming. Namely,westartfromafeasiblesub-optimalsolution,defineaneighborhood,andsearchforabetter
solution within the neighborhood by dynamic programming. If a better solution is found, we repeat the whole
procedure,otherwisewestopandthecurrentsolutionisalocalminimizerwithrespecttothegivenneighborhood.
Givenadistanceparameterrandafunctionmeasuringthedistancefromthereferencesolution,theneighborhoodis
thesetofsolutionswhosedistancefromthereferencesolutionisnotlargerthanr. Differentwaystomeasurethe
distanceleadtodifferentapproaches. Asexplainedin[3],thefactthatoursearchislocalisfundamentalforreducing
thetimecomplexityoftheproposedalgorithms. Indeed,inprinciple,itispossibletosolveto(global)optimalitythe
MAPF problem by dynamic programming. However, the number of explored states grows exponentially with the
numberofagents,sowecannotapplystandarddynamicprogrammingtoproblemswithmanyagents. Theintroduction
ofalocalityconstraintallowssolvingthe(local)problemthroughdynamicprogramminginatimethatgrowsonly
polynomiallywithrespecttothenumberofagents(seeTheorem8). Thefollowingarethemainnewcontributionswith
respecttoourconferencepaper[3].
1. Wepresentanewlocalsearchmethod,wherethedistancefromareferencefeasiblesolutionismeasuredin
termsofnumberofagentsthatchangetheirpathswithrespecttosuchsolution. Thisisrelatedbutdifferent
withrespecttowhatisdoneinMAPF-LNS[10]. InMAPF-LNS,afixedsubsetofagentswithcardinalityN
isselectedinadvanceandonlytheagentsinthatsubsetareallowedtomove. Instead,inourapproach,wefix
thenumberN ofagentswhichcanchangetheirpositionswithrespecttothereferencesolution,butwedonot
fixinadvancesuchN agents,i.e.,weconsiderallpossiblesubsetsofN agents. Notethat,withrespectto
LNS,weemploylowervaluesforN,toavoidtheexplorationoftoolargeneighborhoods.
22. We propose a more general local search method in which we alternate different policies, namely the one
presented in reference [3] and the new one introduced in this paper. This alternating method allows for
improvementsinthesolutions,asitwillbeshowninthesimulations.
3. Asalreadymentioned,foralltheproposedapproachesweprovepolynomialtimecomplexitywhenthedistance
parameterrisfixed.
4. Weextendournumericalsimulations,comparingtheresultsobtainedthroughthedifferentpolicies.
1.1 Notation
AdirectedgraphisapairG=(V,E)whereV isasetofnodesandE ⊂{(x,y)∈V2 |x̸=y}isasetofdirected
arcs. ApathponGisasequenceofadjacentnodesofV (i.e.,p=σ ···σ ,with(∀i∈{1,...,m})(σ ,σ )∈E).
1 m i i+1
AnalphabetΣ={σ ,...,σ }isasetofsymbols. Awordisanyfinitesequenceofsymbols. Thesetofallwordsover
1 n
ΣisΣ∗,whichalsocontainstheemptywordϵ. Givenawordw ∈ Σ∗,|w|denotesitslength. Givens,t ∈ Σ∗,the
wordobtainedbywritingtaftersistheconcatenationofsandt,denotedbyst∈Σ∗;wecalltasuffixofstandsa
prefixofst. Weuseprefixesandsuffixestorepresentportionsofpaths. AFiniteStateAutomaton(FSA)isaquintuple
(Σ,X,x ,δ,X ),whereΣisafinitesetofsymbols,X isasetofstates,x ∈S istheinitialstate,δ :X×Σ→X is
0 M 0
thetransitionfunctionandX ⊂S isasetoffinalstates. Functionδcanbepartiallydefined,thatis,notdefinedfor
M
allelementsofthedomain. Givenx ∈ X,σ ∈ Σ,ifδ(x,σ)isdefined,weusenotationδ(x,σ)!. Functionδ canbe
extendedtoafunctionδ :X×Σ∗ →X bysettingδ(x,sσ)=δ(δ(x,s),σ)andδ(x,ϵ)=x.
2 Problemdefinition
LetG = (V,E)beadirectedgraph,withvertexsetV andedgesetE. Weidentifyeachagentwithauniquelabel,
and the ordered set P contains these labels. A configuration is a function A : P → V that assigns the occupied
vertex to each agent. A configuration is valid if it is injective (i.e., each vertex is occupied by at most one agent).
SetC ⊂ {P → V}representsallvalidconfigurations. WerepresentaconfigurationA ∈ C alsobyanorderedset
ofvertices(v ,v ,...,v ), wherev , i = 1,...,r isthevertexoccupiedbythei-thagent. Timeisassumedtobe
1 2 r i
discretized. Ateverytimestep,eachagentoccupiesonevertexandexecutesasingleaction. Therearetwotypesof
actions: waitandmove. Wedenotethewaitactionbyι. Anagentthatexecutesthisactionremainsinitscurrentvertex
foranothertimestep. Wedenoteamoveactionbyu→v. Inthiscase,theagentmovesfromitscurrentvertexutoan
adjacentvertexv(i.e.,(u,v)∈E). Therefore,thesetofallpossibleactionsforasingleagentis
E¯ =E∪{ι}.
Functionρ : C ×E¯ → C isapartiallydefinedtransitionfunctionsuchthatA′ = ρ(A,u → v)istheconfiguration
obtainedbymovinganagentfromutov:
(cid:40)
v, ifA(q)=u;
A′(q):= (1)
A(q), otherwise.
Notationρ(A,u→v)!meansthatthefunctioniswell-defined. Inotherwordsρ(A,u→v)!ifandonlyif(u,v)∈E
andA′ ∈C. Moreover,(∀A∈C)ρ(A,ι)!andρ(A,ι)=A. Sincemultipleagentscanmoveatthesametimestep,an
actionofthewholefleetisanelementa=(a ,...,a )ofE =E¯|P|,wherea istheactionofagenti. Wecanextend
1 |P| i
functionρ : C×E¯ → C toρ : C×E → C,bysettingA′ = ρ(A,a)equaltotheconfigurationobtainedbymoving
agentialongedgea (orbynotmovingtheagentifa =ι). Inthiscase,(∀a∈E,A∈C)ρ(A,a)!ifandonlyifthe
i i
followingconditionshold:
1. A′ ∈C: twoormoreagentscannotoccupythesamevertexatthesametimestep;
2. ∀i = 1,...,|P|, if a = (u,v), then ̸ ∃j ∈ {1,...,|P|} such that a = (v,u): two agents cannot swap
i j
locationsinasingletimestep.
Werepresentplansasorderedsequencesofactions. ItisconvenienttoviewtheelementsofE asthesymbolsofa
language. WedenotebyE∗ theKleenestarofE,thatisthesetoforderedsequencesofelementsofE witharbitrary
length,togetherwiththeemptystringϵ:
∞
(cid:91)
E∗ = Ei∪{ϵ}.
i=1
Weextendfunctionρ:C×E →C toρ:C×E∗ →C accordingtothefollowingrules
31. (∀s∈E∗,e∈E,A∈C)ρ(A,se)!ifandonlyifρ(A,s)!andρ(ρ(A,s),e)!
2. ifρ(A,se)!,thenρ(A,se)=ρ(ρ(A,s),e).
Note that ϵ is the trivial plan that keeps all agents at their positions. In some cases, it is convenient to represent
theindividualplanofeachagent, definingaplanf asanelementof((E¯)∗)|P|. Inthisway, f ∈ E∗ isa|P|-tuple
f = (f1,··· ,f|P|), where fi = {a1,··· ,a|f|} represents the ordered sequence of the actions of agent i. For all
i i
i=1,··· ,|P|,wecallfithepathplanofagenti. WedenotebyLthesetofplanssuchthatρ(A,f)iswell-defined:
L={f ∈E∗ : ρ(A,f)!}.
Theproblemofdetectingafeasiblesolutionisthefollowing:
Problem1. (FeasibilityMAPFproblem). GivenadigraphG=(V,E),anagentsetP,aninitialvalidconfiguration
A,andafinalvalidconfigurationAt,findaplanf ∈LsuchthatAt =ρ(A,f).
ItisnaturaltorepresenttheagentsbehaviourbyaFSA(E,C,A,ρ,{At}),wherethealphabetE isthesetofactions,
thestatesetC consistsinvalidconfigurations,Aistheinitialstate,ρisthetransitionfunction,andAtisthefinalstate.
Inthisway,Problem1correspondstoareachabilitytaskfortheFSA.
Forafeasibleplanf,wedefine|f|asthelengthofplanf (i.e.,thenumberoftimestepsneededforallagentstoreach
thefinalconfiguration,throughplanf). Furthermore,givenk ∈N,wedenotebyf thek-thprefixoff (thatis,the
k
prefixoff oflengthk,madeupofthefirstkactionsoff). Notethat|f |=k. Alsonotethat|f|correspondstothe
k
costfunctionusuallycalledMakespan. GivenaMAPFinstance,withinitialconfigurationAandfinalconfigurationAt,
theoptimizationMAPFproblemaimsatfindingafeasibleplanf ofminimallength|f|.
Problem2. (OptimizationMAPFproblem). LetAandAtbevalidconfigurationsonadigraphG,solve
min|f|
s.t. At =ρ(A,f) (2)
f ∈L.
Othercostfunctionshavealsobeenusedintheliterature. Sum-of-costs,forexample,isthesumofthenumberoftime
stepsthateachagentemploystoreachitstarget,withoutleavingitagain. Unfortunately,findingtheoptimalsolution
(i.e.,theminimalMakespanorsum-of-costs)isNP-hard[17]. Intuitively,thishappenssincethesetofpossibleplans
growsexponentiallywithrespecttothenumberofagentsandnodes. Inthispaper,weproposeanapproachtofind
agoodqualitysub-optimalsolutioninpolynomialtime. Roughlyspeaking,themethodweproposeisalocalsearch
outlinedinwhatfollows:
• Usingarule-basedalgorithm,wefindaplanf thatsolvesthefeasibilityMAPFproblem.
• Wedefineaneighborhoodofplanf,whosesizegrowspolynomiallywithrespecttothenumberofagentsand
nodes. Inthisneighborhood,welookforafeasiblesolutionfˆ,shorterthanf.
• Ifwecanfindsuchasolution,wesetf =fˆandreiteratethelocalsearch. Otherwise,westopandreturnthe
currentplan.
Thisalgorithmrunsinpolynomialtimewithrespecttothenumberofagentsandnodes. Indeed,undermildassumptions,
arule-basedalgorithmprovidesafeasiblesolutioninpolynomialtime,andthissolutionhaspolynomiallength. Ateach
iteration,thelengthisdecreasedbyatleastone,sothatthenumberofiterationsispolynomiallybounded. Finally,we
willdefineneighborhoodswithpolynomialcardinalitywithrespecttothenumberofagentsandnodes. Thus,theycan
beexploredinpolynomialtime. Attheendoftheprocedure,weobtain,inpolynomialtime,asolutiontotheMAPF
problemthatislocallyoptimal,withrespecttotheemployedneighborhood,butnotnecessarilygloballyoptimal.
3 Measuringthedistancebetweenplans
The key point of this paper is to define suitable neighborhoods of a reference plan f, whose cardinality grows
polynomiallywithrespecttothenumberofagentsandnodes. Asafirststep,weshowpossiblewaystomeasurethe
distancebetweenagenericplangandareferenceplanf. Weintroducetwofamiliesofdistances:
• Inthefirstfamily(pathdistances)wetakeintoaccountthegraphdistancebetweenthenodesoccupiedbythe
agentsinf andg.
4• Inthesecondfamily(agentdistances)wecountthenumberofagentsinf andgthathavedifferentindividual
plans.
Inthefollowing,wedefinethesetwofamiliesinmoredetail.
3.1 Pathdistances
Inthissection,wefocusondistancesbasedonthelengthoftheshortestpathsconnectingtheverticesofthegraph.
Definition3.1. LetG=(V,E)beadigraphandP beasetofagents. Wedefinethedistanceofvertexufromvertexv
asthelengthoftheshortestpathonGfromvtou:
dˆ:V ×V →N dˆ(u,v)=ℓ(π ), (3)
vu
whereπ istheshortestpathinGfromvtouandℓ(π )isthelengthofthatpath,definedasthenumberofedgesof
vu vu
π .
vu
Notethatdˆisnotsymmetrical,sinceπ andπ canbedifferent.Next,wedefinethedistanceofconfigurationA1from
uv vu
configurationA2asthesumofthedistancesbetweentheverticesthateachagentoccupiesinthetwoconfigurations:
d¯:C×C →N d¯(A1,A2)= (cid:88) dˆ(A1(p),A2(p)).
p∈P
Finally,wedefinetheasymmetricaldistancebetweentwoplansinL. Tothisend,weassociatetoeachplanf afunction
ψ :N→C,sothatψ (k)istheconfigurationcorrespondingtoplanf atstepk. Ifk >|f|,thatisthestepkislarger
f f
thanthelengthoff,ψ (k)isthelastconfiguration:
f
(cid:26)
ρ(A,f ), k <|f|,
ψ (k):= k
f ρ(A,f), k ≥|f|.
Notethatψ (k),theconfigurationatstepk,dependsonf ,thek-thprefixoff. Wedefinethedistanceofplanf from
f k
plangwithrespecttotheassociatedfunctionsψ ,ψ . Weconsiderthefollowingdistances:
f g
1. ∞-distance:
d (f,g):= max d¯(ψ (k),ψ (k)); (4)
∞ f g
1≤k≤min{|f|,|g|}
2. 1-distance:
min{|f|,|g|}
d (f,g):= (cid:88) d¯(ψ (k),ψ (k)); (5)
1 f g
k=1
3. max-mindistance:
d∗ (f,g):=max mind¯(ψ (k),ψ (h)); (6)
∞ k∈N h∈N f g
4. sum-mindistance:
min{|f|,|g|}
d∗(f,g):= (cid:88) mind¯(ψ (k),ψ (h)). (7)
1 h∈N f g
k=1
Namely,the∞-distanceofplansf andg correspondstothemaximum,withrespecttotime-stepk,ofthedistance
betweenthecorrespondingconfigurationsatk. The1-distancecorrespondstothesum,withrespecttotime-stepk,of
thedistancesbetweenthecorrespondingconfigurationsatk. Themax-mindistance(respectively,thesum-mindistance)
correspondstothemaximum(respectively,thesum)withrespecttok,ofthedistanceoftheconfigurationthatplan
f reachesatstepkwithrespecttothesetofallconfigurationsencounteredbyplang. Itiseasytoseethat,foreach
coupleofplansf,g,the1-distanceisthelargestofthefour,whilethemax-mindistanceisthesmallest.
Example 3.1. Figure 1 shows a directed graph with 10 nodes. Tables 1 and 2 define two plans f and g, depicted
0
alsoinFigures1and2. Allconfigurationsfromk = 0tok = 2arethesameinthetwoplans. Allconfigurations
in g, with the exception of the one for step k = 3, are also present in f . At k = 3, plan g has a configuration
0
(7,6,5). Theconfigurationinf thatiscloserto(7,6,5)istheoneatk = 3,thatis(7,10,5). Agent2istheonly
0
agentthatoccupiesdifferentnodes(6and10)inthetwoconfigurations. Theshortestpathbetweennode6andnode
10has3edges. Hence,boththesum-mindistanceandthemax-mindistancebetweenthetwoplansare3. Thatis,
d∗ (g,f ) = 3, d∗(g,f ) = 3. Finally, the configurations of plan g at k = 4 and k = 5 have a distance from the
∞ 0 1 0
correspondingconfigurationsofplanf bothequal8. Therefore,the∞-distanceisequalto8andthe1-distanceis
0
equalto3+8+8=19. Thatis,d (g,f )=8,d (g,f )=19.
∞ 0 1 0
5Figure1: Planf ongraphwith10nodes.
0
k 0 1 2 3 4 5 6 7 8 9 10 11 12 13
1 5 7 7 7 2 3 5 2 2 2 2 3 4 4
2 10 10 10 10 10 10 10 8 4 7 5 1 1 9
3 7 2 3 5 1 1 1 1 3 3 3 5 5 5
Table1: Configurationsofplanf ,thek-thcolumncontainsthenodesoccupiedbytheagentsatstepk
0
Figure2: Plangongraphwith10nodes.
k 0 1 2 3 4 5
1 5 7 7 7 4 4
2 10 10 10 6 1 9
3 7 2 3 5 5 5
Table2: Configurationsofplang.
3.2 AgentDistances
Alternatevely,wecandefinethedistancebetweentwoplansasthenumberofagentsthatoccupydifferentpositionsin
thetwoplans. First,wedefinetheagentdistancebetweentwoconfigurations. LetU :C×C →P(P)beafunctionthat
associatestoeachpairofconfigurationsthesubsetofagentsthatareondifferentnodesinthetwoconfigurations:
(cid:110) (cid:111)
U :C×C →P(P) U(A ,A ):= p∈P : A (p)̸=A (p) , (8)
1 2 1 2
6ThedistancebetweentwoconfigurationsA andA isthecardinalityofU(A ,A ):
1 2 1 2
d˜(A ,A ):=|U(A ,A )|. (9)
1 2 1 2
Similarly,wedefineanewfunctionU whichassociatestoeachpairofplansf andg thesubsetofagentsthathave
differentpositionsinatleastonetimestepk ∈{1,...,max(|f|,|g|)}
(cid:110) (cid:111)
U :L×L→P(P) U(f,g):= p∈P : ∃k ∈{1,...,max(|f|,|g|)}, (ψ (k))(p)̸=(ψ (k))(p) . (10)
f g
Notethat:
max(|f|,|g|)
(cid:91)
U(f,g)= U(ψ (k),ψ (k)), (11)
f g
k=1
or,equivalently:
(cid:110) (cid:111)
U(f,g)= p∈P : fp ̸=gp . (12)
Wedefineanewagentdistancebetweentwoplans,calledu-agentsdistance,asthecardinalityofU(f,g):
(cid:12) (cid:12)
d (f,g):=(cid:12)U(f,g)(cid:12). (13)
U (cid:12) (cid:12)
Namely,thisdistancerepresentsthenumberofagentsthat,inthetwoplans,occupydifferentpositionsinatleastone
time-stepor,equivalently,thenumberofagentsthathaveadifferentpathplaninf andg.
Alternatively,wecandefineanotheragentdistanced calledmax-agentsdistancebetweentwoplansf andgasthe
m
maximumofallthedistancesbetweenthepairsofconfigurationscrossedbythetwoplansasthetimestepvariesfrom
1tomax(|f|,|g|)
d (f,g):= max d˜(ψ (k),ψ (k)), (14)
m f g
k∈{1,...,max(|f|,|g|)},
whered˜(ψ (k),ψ (k))isthedistance(9)betweenconfigurations. Thefollowingrelationshipexistsbetweenthetwo
f g
distancesdefinedabove.
Proposition1. Letf,g ∈Lbetwoplans. Itholdsthat:
d (f,g)≤d (f,g).
m U
Proof. From(11)itfollowsthat:
∀k ∈N, |U(ψ (k),ψ (k))|≤|U(f,g)|,
f g
sothat:
∀k ∈N, d˜(ψ (k),ψ (k))≤d (f,g),
f g U
and,consequently:
max d˜(ψ (k),ψ (k))≤d (f,g).
f g U
k∈N
Example3.2. Considerplanf inTable3,andplanhinTable4,depictedalsoinFigures1and3. Theu-agentsdistance
0
andthemax-agentsdistancebetweenthetwoplansare1becauseonlythefirstagenthasdifferentpathplansinf and
0
h.
k 0 1 2 3 4 5 6 7 8 9 10 11 12 13
1 5 7 7 7 2 3 5 2 2 2 2 3 4 4
2 10 10 10 10 10 10 10 8 4 7 5 1 1 9
3 7 2 3 5 1 1 1 1 3 3 3 5 5 5
Table3: Initialplanf .
0
7Figure3: Planhongraphwith10nodes.
k 0 1 2 3 4 5 6 7 8 9 10 11 12 13
1 5 7 7 7 5 5 5 5 5 4 4 4 4 4
2 10 10 10 10 10 10 10 8 4 7 5 1 1 9
3 7 2 3 5 1 1 1 1 3 3 3 5 5 5
Table4: Secondplanh.
3.3 OptimizationMAPFprobleminaneighborhoodofareferenceplan
Afterhavingdefinedthesedistances,weintroduceavariantoftheoptimizationMAPFproblem(2),theoptimization
MAPFproblemconstrainedtoagivenplan. Weconsiderasub-optimalsolutionf ofaMAPFinstance,andwewant
0
tofindanothersolutionforthesameproblemwhichisnottoofarfromf ,andhasbetterquality(i.e.,shorterlength).
0
LetAandAtbeinitialandfinalvalidconfigurationsonadigraphG. Letf ∈LbesuchthatAt =ρ(A,f )(i.e.,f
0 0 0
isafeasiblesolutionoftheMAPFinstance). Setr ∈Nandletdbeadistancebetweenplans. TheoptimizationMAPF
problem,withMakespan,constrainedtof is:
0
min|f|
s.t. At =ρ(A,f) (15)
f ∈L, d(f,f )≤r.
0
4 IterativelocaloptimizationforFSA
Wepresentthebasicideaofourapproachinaslightlymoregeneralsetting. GivenaFSA(Σ,X,x ,δ,X ),consider
0 M
problem
min |s|
s∈Σ∗ (16)
s.t. δ(x ,s)!andδ(x ,s)∈X .
0 0 M
In Problem (16), we want to find a string s of minimum length such that FSA reaches a state in X . Note that
M
Problem(2)isaspecificcaseof(16),withΣ=E,X =C,x =A,X ={At},δ =ρ. Letd:Σ∗×Σ∗ →R+bea
0 M
functionsuchthat
1)d(s,s)=0,s∈Σ∗,
2)d(sσ,t)≥d(s,t),s,t∈Σ∗,σ ∈Σ,
3)d(ϵ,s)=0,s∈Σ∗.
Roughlyspeaking,fors,t∈Σ∗,d(s,t)representsthedistanceofstot. In1)werequirethatthedistanceofstoitself
is0. In2)werequired(s,t)tobenotsmallerthand(r,t),whererisanyprefixofs. In3)werequiretheemptystring
8ϵtohave0distancetoanystring. NotethatalldistancesdefinedinSection3satisfytheseproperties. Lets ∈Σ∗bea
0
feasiblesolutionof(16)(thatis,δ(x ,s )∈X ). LetLbethesubsetofΣ∗consistingofstringsssuchthatδ(x ,s)!.
0 0 M 0
Considerthefollowingproblem
min |s|
s∈L
s.t. δ(x ,s)∈X (17)
0 M
d(s,s )≤r.
0
Notethat(15)isaspecificinstanceof(17)withs =f . Theoverallideaforsolving(16)consistsofthefollowing
0 0
steps:
• Findafeasiblesolutions of(16).
0
• SolveProblem(17). Ifthefoundsolutions∗issuchthat|s∗|<|s|,sets =s∗andrepeatthisstep.
0
WewouldliketosolveProblem(17)bydynamicprogramming.Oneproblemisthatthedistanceconstraintd(s,s )≤r
0
dependsonstrings,anditisnotafunctionofthestateonly(thatis,ofδ(x ,s)). Toovercomethisproblem,wedefine
0
anequivalenceclass∼onLsuchthat,foranys,t∈Lsuchthats∼t,andanyσ ∈Σ
|s|=|t|,
δ(x ,s)=δ(x ,t), (18)
0 0
d(sσ,s )≤r ⇔d(tσ,s )≤r.
0 0
Inotherwords,ifs∼t,thensandthavethesamelengthanddeterminethetransitionoftheFSAfromtheinitialstate
x tothesamefinalstate. Moreover,ifsσsatisfiesthedistancerequirement,alsotσsatisfiesit.
0
Then,wedefineanotherFSE(Xˆ,S,[ϵ],δˆ,X /∼). ThestatespaceXˆ isdefinedrecursivelyasfollows:
M
1)[ϵ]∈Xˆ
2)if[s]∈Xˆ,δ(s,σ,s )!,andd(sσ,s )≤rthen[sσ]∈Xˆ.
0 0
Notethatcondition2)iswell-posed. Indeed,fromourassumptionson∼,conditiond(sσ,s )≤rdoesnotchangeif
0
wesubstituteswithanyothermemberofequivalenceclass[s].
Wedefinetransitionfunctionδˆ:Xˆ ×S →Xˆ bysetting
1)δˆ([s],σ)!⇔d(sσ,s )≤r,
0
2)δˆ([s],σ)=[sσ].
Then,weconvertProblem(17)intothefollowing
min |s|
s∈L
(19)
s.t. δˆ([ϵ],s)∈X /∼.
M
NotethatinProblem(19),thestatespaceisL/∼,thesetofequivalenceclassesofLwithrespectto∼. Problem(19)
isasimplereachabilityproblemforFSA,andcanbesolvedbydynamicprogramming. Indeed,weremovedfromthe
newstatespaceXˆ allthestatesthatcorrespondtostringsthatviolatethedistanceconstraint. Moreover,δˆallowsonly
thosetransitionsthatleadtostatesinsideXˆ. Thefollowingstatementfollowsbyconstruction.
Proposition2. Stringsisasolutionof(17)ifandonlyifitisasolutionof(19).
4.1 Equivalenceclassesassociatedtothepreviouslydefineddistances
WepresenttheequivalencerelationsonLassociatedtothepreviouslydefineddistances. Theseequivalenceclasses
satisfyproperties(18). Forthe∞-distance(4),themax-mindistance(6),andmax-agentsdistance(14),f ∼gifand
onlyif
1. |f|=|g|;
92. ρ(A,f)=ρ(A,g).
Wedefineaninjectivefunctionα:L/∼→N×C asfollows
α([f])=(|f|,ρ(A,f)). (20)
Thisfunctioniswell-definedbecause,iff ∼f ,then|f |=|f |andρ(A,f )=ρ(A,f ). Moreover,αisinjective
1 2 1 2 1 2
because,iff andf aresuchthatα([f ])=α([f ]),then|f |=|f |andρ(A,f )=ρ(A,f ),therefore,[f ]=[f ].
1 2 1 2 1 2 1 2 1 2
WewillusefunctionαtorepresentequivalenceclassesL/∼inthedynamicprogrammingsolutionalgorithm.
Forthe1-distance(5)andthesum-mindistance(7),f ∼gifandonlyif
1. |f|=|g|;
2. ρ(A,f)=ρ(A,g);
3. d(f,f )=d(g,f );
0 0
where d = d for the 1-distance and d = d∗ for the sum-min distance. Again, we define an injective function α,
1 1
representingequivalenceclasses. Namely,α:L/∼→N×C×Nissuchthat:
α([f])=(|f|,ρ(A,f),d(f,f )). (21)
0
Wecanshowthatthisfunctioniswell-definedandinjectivewiththesameprocedureusedfor(20).
Fortheu-agentsdistance,(13),f ∼gifandonlyif
1. |f|=|g|;
2. ρ(A,f)=ρ(A,g);
3. U(f,f )=U(g,f );
0 0
whereU(f,f )isthesubsetofagentsdefinedin(10).
0
Werepresentthestatewithα:L/∼→N×C×P(P),definedasfollows:
α([f])=(|f|,ρ(A,f),U(f,f )). (22)
0
Again,wecanshowthatthisfunctioniswell-definedandinjective,followingthesameprocedureusedfor(20).
4.2 Neighborhoods
GiventhedistancesdefinedinSection3,andthedefinitionoftheequivalenceclassesinSection4.1,wecandefinethe
neighborhoodofaconfigurationandofanequivalenceclass. Moreover,wecanupperestimatethecardinalityofsuch
neighborhoods. Suchanestimateisneededtoevaluatethetimeneededtoexploretheneighborhoods,anoperationthat
iscentraltotheapproachproposedinthispaper.
WedefineaneighborhoodofaconfigurationasaballcenteredinA∈C ofradiusr
B (A):={A∗ ∈C : d(A∗,A)≤r}, (23)
r
where d(A∗,A) can be either d¯(A∗,A) or d˜(A∗,A). Given a distance d between plans and r ∈ N, we define the
neighborhoodofanequivalenceclass[f]∈Las:
B ([f]):={[g],g ∈L: |g|≤|f|, d(g,f)≤r}. (24)
r
4.2.1 PathsNeighborhoods
LetusconsiderthedistancesdefinedinSection3.1andcomputetheupperboundforthecardinalityofbothneighbor-
hoodsdefinedin(23)and(24). First,wedefineaballB (v)centeredatv ∈V ofradiusr ∈N:
r
B (v):={u∈V : dˆ(u,v)≤r}.
r
Notethat,forsimplicity,weusethesamenotation(B )forballsofvertices,configurations,andplans. Themeaningof
r
setB dependsontheargument(vertex,configuration,orplan). WedenotebyB¯ (v)theborderoftheball,obtainedby
r r
replacing≤with=inthedefinition. Letϕ = outdeg(G)bethemaximumout-degreeofdigraphG = (V,E). The
followingpropositionprovidesanupperboundonthecardinalityofB¯ (v).
r
10Proposition3. Itholdsthat
|B¯ (v)|≤ϕr. (25)
r
Proof. Letn bethenumberofnodesatdistancehfromv. Notethatn ≤ ϕ,and∀h ≥ 2n ≤ n (ϕ−1). By
h 1 h h−1
induction,n ≤ϕ(ϕ−1)h−1∀h≥1. Therefore,anupper-boundforthenumberofnodesontheborderoftheballis
h
|B¯ (v)|≤ϕ(ϕ−1)r−1 ≤ϕr.
r
Next,wetakeintoaccounttheballdefinedin(23),denotingwithB¯ (A)itsborder. Anupperboundforthecardinality
r
oftheballisgivenbythefollowingproposition.
Proposition4. Itholdsthat
(cid:18) (cid:19)
k+r
|B (A)|≤ ϕr. (26)
r r
wherek =|P|andϕ=outdeg(G).
Proof. Firstofall,wefindanupperboundforthenumberofconfigurationsatdistancehfromA,i.e.,anupperbound
forthecardinalityoftheborderoftheballcenteredinAofradiush:
 
|P|
B¯ (A)= A∗ ∈C : (cid:88) dˆ(A(p ),A∗(p ))=h .
h i i
 
i=1
Let(h ,··· ,h )bea|P|-decompositionofh(i.e.,
(cid:80)|P|
h = h). TakingintoaccountProposition3, anupper
1 |P| i=1 i
boundforthenumberofconfigurationsforwhichdˆ(A(p ),A∗(p ))=h ,i=1,...,|P|,is
i i i
|P| |P|
(cid:89) |B¯ (A(p ))|≤(cid:89) ϕhi =ϕh.
hi i
i=1 i=1
Bystandardcombinatorialarguments,thenumberof|P|-decompositionsofhis
(h+(|P|−1))!
.
h!(|P|−1)!
Therefore,thecardinalityoftheborderoftheballofradiushcanbeboundedfromaboveby:
|P|
|B¯ (A)|= (cid:88) (cid:89) |B¯ (A(p ))|≤
h hi i
(h1,...,h|P|):(cid:80)| iP =| 1hi=hi=1
(h+(|P|−1))!
≤ ϕh,
h!(|P|−1)!
andthetotalnumberofconfigurationsinB (A)canbeoverestimatedasfollows:
r
r r
|B (A)|=1+(cid:88) |B¯ (A)|≤1+(cid:88) (h+|P|−1)! ϕh =
r h h!(|P|−1)!
h=1 h=1
r (cid:18) (cid:19)
(cid:88) (h+|P|−1)! |P|+r
= ϕh ≤ ϕr.
h!(|P|−1)! r
h=0
Fromthesebounds,wecancomputeanupperboundofthecardinalityofB ([f])forf ∈Ldefinedin(24). Here,we
r
considerthemax-mindistance(6). Sincethemax-mindistanceisthesmallestamongthepathdistances,theupper
boundstatedinthepropositionalsoappliestotheneighborhoodconstructedusingtheotherpathdistancesand,in
particular,thesum-mindistance(7).
11Proposition5. Itholdsthat:
(cid:18) (cid:19)
k+r
|B (f)|≤ |f|2 ϕr (r+1), (27)
r r
wherek =|P|andϕ=outdeg(G). Moreover,∃C =C(r)∈(0,1]suchthat
|B (f)|≤|f|2 C (k+r)r ϕr (r+1).
r
Proof. Letf ∈Landfˆ∈B (f). LetI ={1,··· ,|fˆ|},J ={1,··· ,|f|},andR={0,··· ,r}. Then:
r
 
(cid:91)
α(B r(f))⊂I× B r(ψ f(j))×R.
j∈J
Indeed,itholdsthat|fˆ|≤|f|and,moreover,d∗(fˆ,f)≤rimpliesthat
max min d¯(ψ (i),ψ (j))≤r,
fˆ f
1≤i≤|fˆ|1≤j≤|fˆ|
and,inparticular,fori=|fˆ|thereexistsj ∈J suchthat
d¯(ρ(A,fˆ),ψ (j))≤r,
f
whichmeansthatρ(A,fˆ)∈B (ψ (j)). Therefore,recallingthatαisinjective,
r f
(cid:12) (cid:91) (cid:12)
|B r(f)|≤(cid:12)I× B r(ψ f(j))×R(cid:12).
j∈J
Then,alsoinviewof(26),wehavethat:
 
|f|
(cid:88)
|B r(f)|≤|f| |B r(ψ f(j))| (r+1)≤
j=1
(cid:18) (cid:19)
k+r
≤|f|2 ϕr (r+1).
r
Thelaststatementofthepropositionfollowsfrom
(cid:18) k+r(cid:19) (k+r)r
≤ ,
r r!
andsettingC := 1.
r!
Note that given the last statement of the above proposition, we have that the neighborhood of f of radius r has a
polynomialcardinalitywithrespecttothenumberofnodesforeachfixedintegervaluer.
4.2.2 AgentsNeighborhoods
WeconsidertheagentdistancesdefinedinSection3.2,andcomputeupperboundsforthecardinalityoftheneighbor-
hoodsdefinedin(23)and(24).
First,wetakeintoaccounttheneighborhoodofaconfigurationdefinedin(23)withtheagentdistance,definedin(9).
Thefollowingresultgivesanupperboundonthecardinalityofthecorrespondingball.
Proposition6. Itholdsthat
(cid:18) (cid:19)
k (n−k+r)!
|B (A)|≤ , (28)
r r (n−k)!
wherek =|P|isthenumberofagentsandn=|V|thenumberofnodes.
12Proof. Fromthedefinitionsoftheballin(23)andofthedistancein(9),itfollowsthateachconfigurationA∗inB (A)
r
hasatmostragentsoccupyingdifferentpositionscomparedtoconfigurationA. WedenotewithP ⊂P thesubset
r
ofr agentsthatchangetheirpositions. Thenumberofdifferentchoicesofr agentscorrespondstothenumberof
r-combinationsofasetofcardinalityk.
Itisthebinomialcoefficient(cid:0)k(cid:1)
. SincetheremainingagentsP \P arek−r,
r r
theavailablenodesthatcanbeoccupiedbytheagentsinagivensubsetP aren−k+r. So,forafixedsubsetP ,the
r r
newpositionscanbechosenin (n−k+r)! differentways. Therefore,thetotalnumberofdifferentconfigurationsA∗in
(n−k)!
B (A)is
r
(cid:18) (cid:19)
k (n−k+r)!
|B (A)|≤ .
r r (n−k)!
Then,wecancomputeanupperboundforthecardinalityofB (f),withf ∈L,forthemax-agentsdistancedefinedin
r
(14).
Proposition7. Ifweconsiderthemax-agentsdistance(14),itholdsthat:
(cid:18) (cid:19)
k (n−k+r)!
|B (f)|≤ |f| . (29)
r r (n−k)!
Moreover,wehavethat,forfixedr,theneighborhoodhasapolynomialcardinalitywithrespecttothenumberofnodes.
Inparticular,∃C =C(r)∈(0,1]suchthat
|B (f)|≤C |f|kr (n−k+r)r.
r
Proof. Letf ∈L,fˆ∈B (f),I ={1,··· ,|fˆ|}andJ ={1,··· ,|f|}. Let
r
P ={P : P ⊂P, |P |=r},
r r r r
bethefamilyofsubsetofP ofcardinalityequaltor. Then:
 
(cid:91)
α(B r(f))⊂I× B r(ψ f(j))×P r. (30)
j∈J
Indeed,itholdsthat|fˆ|≤|f|andd∗(fˆ,f)≤rimpliesthat,forj =|fˆ|,
1
dˆ(ρ(A,fˆ),ψ (|fˆ|))=dˆ(ψ (|fˆ|),ψ (|fˆ|))≤d∗(fˆ,f)≤r,
f f f 1
whichmeansthatρ(A,fˆ)∈B (ψ (|fˆ|)). From(30),notethat:
r f
∀fˆ∈B (f) α(fˆ)∈{|fˆ|}×B (ψ (|fˆ|))×P .
r r f r
Therefore,|α(fˆ)|≤(cid:12)
(cid:12)B r(ψ f(j))×P
r(cid:12)
(cid:12). Wecanalsostatethat,forafixedr,thesubsetofagentswhosepositionvaries
inψ (j)isasubsetoftheagentsimovedwithinpathfi. Sothechoiceofthesubsetisalreadyaccountedforinthe
f
binomialcoefficientinsidethecardinalityofB (ψ (j)).
r f
Recallingthatαisinjective,itfollowsthat:
|f| (cid:18) (cid:19)
(cid:12) (cid:91) (cid:12) (cid:88) k (n−k+r)!
|B r(f)|≤|α(B r(f))|≤(cid:12) B r(ψ f(j))(cid:12)≤ |B r(ψ f(j))|≤|f|
r (n−k)!
,
j∈J j=1
wherethelastinequalityfollowsfromProposition6.
Thelaststatementofthepropositionfollowsfrom
(cid:18) k(cid:19) kr (n−k+r)! (cid:18) n−k+r(cid:19)
≤ , =r! ≤(n−k+r)r,
r r! (n−k)! r
aftersettingC := 1.
r!
Weprovedtheseresultsusingthemax-agentsdistance. However,fromProposition1itfollowsthattheupperbounds
computedarealsovalidforneighborhoodsdefinedwiththeu-agentsdistance(13).
134.3 IterativeNeighborhoodSearch
Weproposeaniterativeapproachforfindingasub-optimalsolutionofProblem(19). Thereturnedsolutionislocally
optimalwithrespecttotheneighborhoodofareferencesolution.Ateachiteration,wesolveaninstanceofProblem(19).
Thealgorithmtakesasinputafeasiblesolutionf ,thatmaybeofpoorquality. Forinstance,wecanobtainf froma
0 0
rule-basedalgorithm,suchasdiSC[2]. Weaimatimprovingf ,obtainingashortersolution. Tothisend,wesolve
0
Problem(19)withadynamicprogrammingalgorithm. Foranassignedplandistance,wesearchintheneighborhood
B (f )forplansshorterthanf ,throughalgorithmDynprog,whichwewilldescribebelow. Ifwecannotobtaina
r 0 0
solutionshorterthanf (thatis,f islocallyoptimal)westopthealgorithm. Otherwise,ifweobtainanimproved
0 0
solution f∗, we redefine the reference solution as f = f∗ and repeat the whole procedure. We iterate until we
0
cannotshortenthecurrentsolutionanyfurther. ThisalgorithmcanbeclassifiedasaNeighborhoodSearchalgorithm
(see[12,14]).
TodefinetheneighborhoodB (f ), wecanuseanydistancefunctionamongthosepresentedinSection3. Inour
r 0
numericalexperiments,weusedthesum-mindistanceandtheu-agentsdistancedefinedin(13). Algorithm1presents
thestepsoftheprocedurejustdescribed.
Algorithm1NeighborhoodSearch
Input: f ,A,At,r
0
Output: f∗
f∗ ←f
0
f ←f∗
0
f∗ ←DynProg(f ,B (f ),A,At)|f∗|<|f |
0 r 0 0
returnf∗
Also,wecanalternatedifferenttypesofneighborhoods. Thismayallowustofindsolutionsofbetterquality,sincewe
areactuallyexploringlargerneighborhoods. Forexample,weproposeAlgorithm2,thatfirstdefinesB (f )withthe
r 0
sum-mindistance,andthendefinesitwiththeu-agentsdistance(13). Inthiscase,thefinalsolutionislocallyoptimal
withrespecttobothneighborhoods.
Algorithm2AlternatedNeighborhoodSearch
Input: f ,A,At,r
0
Output: f∗
f∗ ←f
0
f ←f∗
0
f ←NeighSearch(f ,A,At,B (f )),usingu-agentsdistance
1 0 r 0
f∗ ←NeighSearch(f ,A,At,B (f )),usingsum-mindistance|f∗|<|f |
1 r 1 0
returnf∗
Theinputofthisalgorithmismadeupoftheinitialplanf ,theinitialandfinalconfigurationsA,andAtandtheradius
0
r. Theoutputisthelocallyoptimalsolutionf∗.
4.4 DynamicProgrammingAlgorithmwithDominance
TosearchfortheoptimalsolutiontoProblem(19)weemployaDynamicProgramming(DP)algorithm. IngenericDP
problems,wearegivenastatespaceS whereA ⊂ S isthesetoftargetstates,atransitionfunctiong : S → P(S),
whereP isthepowersetofS,andanobjectivefunctionc:S →R. Startingfromaninitialstates ∈S,weiteratively
0
expandstatesthroughasuitablydefinedtransitionfunctiong,untilwereachastates ∈Awithminimumobjective
t
functionvalue.
4.4.1 StatesandtransitionfunctionforPathDistances
Whenweemploythesum-mindistance,thestatesrepresenttheequivalenceclassesofrelation∼,definedinSection4.1
forthisdistance. Namely,weusethecorrespondinginjectionα:L/∼→N×C×Ntoassociatetoeachequivalence
class[f]atriple(β,γ,σ)=α([f]),whereβisthelengthoff,γ theconfigurationobtainedbyapplyingf totheinitial
14stateA,andσisthedistanceoff fromreferenceplanf . Namely,thestatespaceis
0
S :=α(L/∼)⊂N×C×N,
whereαisdefinedin(21).Eachstates=(β,γ,σ)∈S representstheequivalenceclass:
α−1(s)={f ∈L : β =|f|, γ =ρ(A,f), σ =d∗(f,f )}.
1 0
Theinitialstateiss =α(ϵ)=(0,A,0). WeuseapriorityqueueQtostorethestatesthathavenotbeenvisitedyet.
0
Atthebeginning,Q = {s }. WedefineapartialorderingonS basedonlength. Namely,ifs = (β ,γ ,σ ),s =
0 1 1 1 1 2
(β ,γ ,σ ),s <s ifβ <β . WeordertheelementsofQaccordingtothisordering.
2 2 2 1 2 1 2
Astates =(β ,γ ,σ )dominatess =(β ,γ ,σ )if
1 1 1 1 2 2 2 2
β ≤β , γ =γ , σ ≤σ .
1 2 1 2 1 2
Inotherwords,s dominatess iftheplansf ,f ,correspondingtos ands ,satisfythefollowingproperties: Planf
1 2 1 2 1 2 1
isnotlongerthanf ,f andf leadtothesamefinalconfiguration,andthedistanceoff fromthereferencesolution
2 1 2 1
f isnotlargerthantheoneoff . Ifs dominatess ,wecandiscards . Ingeneral,weremovefromQalldominated
0 2 1 2 2
states.
Wealsodefinethefollowingtransitionfunction,whichallowsusto(possibly)addnewstatestothepriorityqueue:
ρ˜:S×E →S
ρ˜((β,γ,σ),e):=(β+1,ρ(γ,e),σ+mind¯ (ρ(γ,e),ψ (k))).
k∈N
A f0
Applyingthisfunctiontostates=(β,γ,σ):
• adds1tolengthβ,
• updatesthefinalconfigurationγ,applyingfunctionρ(γ,e)toγ,whereeisthechosensetofedges;
• updatesσ,addingthecomputedminimumdistancebetweentheupdatedfinalconfigurationρ(γ,e)andthe
referenceplanf .
0
Wedenoteby
(cid:26) (cid:27)
Σ:= ρ˜((β,γ,σ),e) : e∈E and σ+mind¯ (ρ(γ,e),ψ (k))≤r ⊂S,
k∈N
A f0
thesetofstatesgeneratedthroughthetransitionfunctionρ˜,appliedtocurrentstate(β,γ,σ). Moreover,wedenotewith
Γ:=α(B (f ))⊂S,
r 0
thesetofstatesthatcanbevisitedduringaneighborhoodsearch.
4.4.2 StatesandtransitionfunctionforAgentDistances
Usingtheu-agentsdistanceintroducedinSection3.2,thestatesrepresenttheequivalenceclassesofthecorresponding
relation∼,presentedin(22).Weusetheassociatedinjectionα:L/∼→N×C×Ntoassign,toeachequivalenceclass
fˆ,atriple(β,γ,Ω)=α(fˆ). Comparedtotheprevioussection,thethirdelementofthetripleisΩ,whichrepresents
thesubsetofagentssuchthattheirpathplansinarepresentativeoffˆandinf aredifferent.
0
Namely,thestatespaceis
S :=α(L/∼)⊂N×C×P(P),
where α is defined in (22). Since α is injective, S and L/ ∼ are in one-to-one correspondence. Each state s =
(β,γ,Ω)∈S,representstheequivalenceclass:
α−1(s)={f ∈L : β =|f|, γ =ρ(A,f),Ω=U(f,f )}.
0
Wesettheinitialstateass =α(ϵ)=(0,A,∅)anduseapriorityqueueQtostorethestatesthatwillbeexplored. At
0
thebeginning,Q = {s }. WeordertheelementsofQfollowinganorderingonS basedonthelength. Namely,if
0
s =(β ,γ ,Ω ),s =(β ,γ ,Ω ),s <s ifβ <β .
1 1 1 1 2 2 2 2 1 2 1 2
Astates =(β ,γ ,Ω )dominatess =(β ,γ ,Ω )if
1 1 1 1 2 2 2 2
• β =β ,
1 2
15• γ =γ ,
1 2
• Ω ⊆Ω .
1 2
Inotherwords,alltherepresentativesf ∈α−1(s )andf ∈α−1(s )satisfythefollowingproperties:
1 1 2 2
• |f |=|f |: f isaslongasthanf ;
1 2 1 2
• ρ(A,f )=ρ(A,f ): f leadstothesameconfigurationasf ;
1 2 1 2
• U(f ,f )⊆U(f ,f ): alltheagentsp∈P suchthatfp ̸=fp,aresuchthatfp ̸=fp.
1 0 2 0 1 0 2 0
WeremovefromQalldominatedstates. Again,wedefineatransitionfunctionρˆ: S ×E →S,whichallowsusto
(possibly)addnewstatestothepriorityqueue:
ρˆ((β,γ,Ω),e):=(β+1,ρ(γ,e),Ω∪U(ρ(γ,e),ψ (β+1))).
f0
Applyingthisfunctiontostates=(β,γ,Ω):
• adds1tolengthβ,
• updatesconfigurationγ,applyingρ(γ,e)toγ,whereeisthechosensetofedges(notethatthechoicefore
canberestrictedtoasubsetofedgeswithcardinalitynotlargerthanr,andis,thus,polynomialforfixedr,
duetothedefinitionoftheneighborhood);
• updatesΩ,addingtheagentsthatchangetheirconfigurationfromthereferenceplaninthestepβ+1ifthey
arenotalreadyinΩ.
Asintheprevioussection,wedenotebyΣthesetofnewstateswhichcanbegeneratedthroughthetransitionfunction
andwithΓthesetofstatesthatcanbevisitedduringaneighborhoodsearch.
4.4.3 Algorithm
Algorithm3describestheDynamicProgrammingalgorithm. ThepriorityqueueQisasetofstates,sortedaccordingto
thelengthβ oftheirrepresentatives. Thefunctioninsert(Q,x)insertsastatexmaintainingthepartialorderofQ,
inthesensethat,aftertheinsertionofx,alltheelementsofthequeuestillrespecttheorderingpreviouslydefined.
Functionremove(Q,x)removesxfromQ. Theheadofthequeue,thatisthestatewithminimalβ,isdenotedbyQ[0].
Thealgorithmexploresthestatespacestartingfromtheinitialstates . Ateachiteration,astatewithminimumβ is
0
extractedfromthequeue. Ifthestateextractedisatargetstate,thatis,itssecondcomponent(theconfiguration)isAt,
thealgorithmstops,andwereturnarepresentativeoftheoptimalsolutionofProblem(19)(foragivenequivalence
class fˆ, the function repr(fˆ) returns a representative of the class). Otherwise, the algorithm employs function
expand(s,f ,r), based on the transition function previously defined, to generate new states. If a new state is not
0
dominated,thenitisaddedtothequeueQ. Moreover,weremovefromQallstatesdominatedbyoneofthenewly
addedstates.
16Algorithm3DynamicProgrammingwithDominance
Input: f ,r,A,At
0
Output: f
s ←(0,A,0)or(0,A,∅)
0
insert(Q,s )
0
whileQ̸=∅do:
s=(β,γ,σ)←Q[0]
ifγ =A then
t
f ←repr(α−1(s))
Q←∅
else
Σ←expand(s,f ,r)
0
fors ∈Σdo
k
ifs isnotdominatedinQthen
k
insert(Q,s )
k
fors ∈Qdo
i
ifs dominatess then
k i
remove(Q,s )
i
endif
endfor
endif
endfor
endif
endwhile
returnf
4.5 Complexityresults
Inthissectionweprovideacomplexityanalysisoftheproposedalgorithms.
Theorem8. Algorithms1,2and3havepolynomialtimecomplexitywithrespecttothenumberofnodesofthegraph,
forafixedvaluer,andassumingthateachcalloftheprocedureexpandhasunitcost.
Proof. First,weconsiderthecasewiththesum-mindistance. AteachiterationofAlgorithm3weremoveonestate
sfromsetQ. SinceQ⊆Γ,anupperboundforthenumberofiterationsis|Γ|. Ifthestatesisnotafinalstate,then
itisexpandedandgeneratesasetΣofnewstates. Foreachnewlygeneratedstate,weneedtocheckwhetheritis
dominatedfromordominatesstatesthatarealreadyinQ. Aroughimplementationofsuchcheckoperationrequires
O(|Q|)operations. SincethecheckmustberepeatedforallstatesinΣ,theoverallnumberofoperationsinasingle
iterationisO(|Q||Σ|). SinceitalsoholdsthatΣ⊆Γ,recallingtheboundonthenumberofiterations,wehavethat
theoverallnumberofoperationsofthealgorithmisO(|Γ|3). Remindingthatαisinjectiveandusingtheresultof
Proposition5,
|Γ|=|B (f )|≤|f |2C(k+r)rϕr (r+1),
r 0 0
wherek =|P|andϕ=outdeg(G). Therefore,thetimecomplexityofAlgorithm3is
O(|f |6 C3 (k+r)3r ϕ3r (r+1)3).
0
Algorithm1callsAlgorithm3atmost|f |times(aftereachcallthelengthoftheplanisdecreasedbyatleastone),and
0
soithastimecomplexity
O(|f |7 C3 (k+r)3r ϕ3r (r+1)3).
0
Polynomiality,forfixedr,followsfromtheobservationthatrule-basedalgorithmsareabletoreturnaninitialplanf
0
withpolynomiallength.
For the case where the agent distance defined in (13) is used, a similar development, exploiting Proposition
7,leadstothecomplexityO(|f |3 C3 k3r (n−k+r)3r)forAlgorithm3,andO(|f |4 C3 k3r (n−k+r)3r)for
0 0
Algorithm1.
Finally, we observe that also Algorithm 2 has a polynomial time complexity, as it calls Algorithm 1 with the
twodifferentneighborhoodsatmost|f |times.
0
17Then,polynomialtimecomplexityofAlgorithms1,2and3isestablishedifweareabletoprovethattheexpand
procedurehaspolynomialtimecomplexity. Thiswillbeshowninwhatfollows.
4.5.1 Procedureexpand
AsexplainedintheproofofTheorem8,theexpandfunctionreturnsanumberofstatesΣ⊂Γthatgrowspolynomially
with the number of agents. The set of states reachable from a state s , without keeping into account the distance
0
constraintis:
Σ ={ρ˜(s ,e) : e∈E},
0 0
whosecardinality,intheworstcase,growsexponentiallywithrespecttothenumberofagents. Forinstance,ifthe
out-degreeofallthenodesinγ isϕ(themaximumout-degreeofthegraph),thenumberofconfigurationsreachable
fromγ couldbeaslargeasϕ|P| (recallthatE = |E¯||P|). ThismeansthatwecannotcomputeΣbyfirstcomputing
Σ andthendiscardingallitselementswithdistancelargerthanrfromf ,astheresultingtimecomplexitywouldbe
0 0
exponentialwithrespecttothenumberofagents. Wecanusedifferentapproaches,dependingofthetypeofdistance
used,toovercomethisproblem.
U-Agents Distance In case the U-Agents Distance is employed, and the state is s = (β,γ,Ω), the expand
0
procedureispolynomialasthesearchfornewconfigurationscanbeperformedasfollows:
• First,wechoosetheagentsthatwillchangetheirpathwithrespecttotheoriginalpathf . Intheworstcase,Ω,
0
thatisthesetofagentsthathavealreadychangedtheirpath,isempty,sowehavetochooseragents. The
numberofdifferentwayswecanchoosetheagentsis(cid:0)|P|(cid:1)
.
r
• Then,wesearchforthenewpositionsofthoseagents. Astheagentsthatchangetheirpositionsarer,inthe
worstcasethenumberofconfigurationsreachablefromγ isϕr,whereϕisthemaximumout-degreeofthe
graph.
Withthisimplementation,anupperboundforthetimecomplexityoftheexpandprocedureis:
(cid:18) |P|(cid:19) |P|r
ϕr ≤ ϕr,
r r!
andisthuspolynomialwithrespecttothenumberofagents(forfixedr).
Sum-MinDistance Ifweemploythesum-mindistance,weintroduceAlgorithm4asapossibileimplementationof
theprocedureexpand. Themainideaistoupdatethepositionofoneagentatatime,checkingforeachagentthatthe
configurationswearebuildingareinsidetheneighborhood. AconfigurationAoforderedagentsinP canbeseenasa
stringa =n n ...,n suchthatA(q)=n forq =1,...,|P|. Next,wecandefineapartialconfigurationwith
|P| 1 2 |P| q
lengtht≤|P|asastringa =n n ...n . Finally,foragivenplanf ,wecandefinethedistancebetweenthepartial
t 1 2 t 0
configurationa andplanf asfollows:
t 0
t
d(a ,f )=(cid:88) min dˆ(n ,(ψ (k)) ),
t 0
i=1k∈{1,...,|f0|}
i f0 i
where(ψ (k)) isthei-thsymbolofthestringψ (k).
f0 i f0
18Algorithm4ExpandforPathDistance
1: Input: f 0,r,s 0 =(β,γ,σ)
2: Output: Σ
3: L 1 ←{ϵ}
4: forp∈P do
5: N ←adjacent_nodes(γ(p))
6: L 0 ←L 1
7: L 1 ←∅
8: fora 0 ∈L 0do
9: forn∈N do
10: a←a 0n
11: ifσ+d(a,f 0)≤r∧isvalid(a)then
12: L 1 ←L 1∪{a}
13: endif
14: endfor
15: endfor
16: endfor
17: Σ←∅
18: fora∈L 1do
19: s←(β+1,a,σ+d(a,f 0))
20: Σ←Σ∪{s}
21: endfor
22: returnΣ
Algorithm4takesininputtheoriginalplanf ,thedistancerandthestates =(β,γ,σ)andreturnsalistofstatesΣ.
0 0
ThealgorithmfirstinitializesalistL ofstringswiththeemptystringϵ. Then,foreachp∈P,wefirstgeneratetheset
1
N ofnodesadjacenttonodeγ(p)(procedureadjacent_nodes). Next,wecopyL intothelistL andwesetL equal
1 0 1
totheemptycollection. Then,foreachpartialconfigurationa ∈L andeachnoden∈N,wegenerateanewstringa
0 0
appendingnattheendofa . Ifthenewpartialconfigurationadoesnotleadtoaviolationofthedistanceconstraint,
0
i.e.,thesumofσandd(a,f )doesnotexceedr,and,moreover,thepartialconfigurationaisvalid(procedureisvalid
0
checksthateachnodeinsideaisnotrepeated, i.e., thateachnodeisoccupiedbyatmostoneagent), weaddato
L . OnceallagentshavebeenprocessedandL onlycontainsfullconfigurations,wegenerateanewstatewithfirst
1 1
componentβ+1foreachmemberofL ,andweaddittoΣ,whichisthenreturnedbytheprocedure.
1
Proposition9. LetA bethesetofallthepartialconfigurationsgeneratedatline10ofAlgorithm 4. Then,
P
|P|−1 (cid:18) (cid:19)
(cid:88) k+r
|A |≤ ϕr+1 |f |.
P r 0
k=0
Moreover,∃C =C(r)∈(0,1]suchthat:
|A |≤C |P|ϕr (|P|−1+r)r.
P
Proof. ForanorderedsubsetofagentsI = {1,...,i} ⊆ P,wedenotewithA thesetofpartialconfigurationsof
I
lengthin{1,...,i}generateduptoiterationiatline10ofAlgorithm4. Wecanprovethat:
i−1 (cid:18) (cid:19)
(cid:88) k+r
|A |≤ ϕr+1 |f |. (31)
I r 0
k=0
Thiscanbeachievedbyinduction.
• BaseCase: fori = 1wehavethatthenumberofpartialconfigurations|A |issimplythenumberofthe
{1}
nodesadjacenttothepositionofagent1,whichisnotlargerthanϕ,whereϕisthemaximumout-degreeof
thegraph. Then:
1−1 (cid:18) (cid:19) (cid:18) (cid:19)
(cid:88) k+r r
i=1 =⇒ |A |≤ϕ≤ϕr+1 |f |= ϕr+1 |f |=ϕr+1 |f |.
1 0 r 0 r 0
k=0
19• InductionStep: NowweassumethatthestatementistrueforI andweproveitisalsotrueforI∪{i+1}. By
theinductiveassumptionitholdsthat:
i−1 (cid:18) (cid:19)
(cid:88) k+r
|A |≤ ϕr+1 |f |.
I r 0
k=0
Then,wecancomputethenumberofpartialconfigurationsexploredforagenti+1. LookingatAlgorithm
4,allpartialconfigurationsthatareinthelistL whenweaddanodeadjacenttothe(i+1)-thnodeofthe
0
currentconfigurationγ,haveadistancefromf lowerthanorequaltor. LetfI ∈E∗bethepartialplanof
0 0
agents{1,...,i},i.e.,planf restrictedtothefirstiagents. Recallingthedefinitionoftheneighborhoodof
0
aconfigurationin(23),L isasubsetoftheunionofalltheneighborhoodsofthepartialconfigurationsfor
0
agents{1,...,i}insidefI. Wehavethat:
0
(cid:12) (cid:12)
(cid:12) (cid:12) (cid:18) (cid:19)
|L 0|≤(cid:12) (cid:12)
(cid:12)
(cid:91) B r(ψ
f
0I(j))(cid:12) (cid:12) (cid:12)≤ϕr i+
r
r |f 0|.
(cid:12)j=1,...,|fI| (cid:12)
0
ForeachpartialconfigurationinsideL ,weaddthenewpossiblepositionsofagenti+1tocreateallthenew
0
partialconfigurationsforagents{1,...,i+1}. Asthenewpossiblepositionsofagenti+1areatmostϕ,the
setS ofnewpartialconfigurationsissuchthat:
i+1
(cid:18) (cid:19)
i+r
|S |≤ϕr+1 |f |.
i+1 r 0
Therefore,attheendofstepi+1,thenumberofpartialconfigurationsexploredis:
i−1 (cid:18) (cid:19) (cid:18) (cid:19) i+1−1 (cid:18) (cid:19)
(cid:88) k+r i+r (cid:88) k+r
|A |=|A |+|S |≤ ϕr+1 |f |+ϕr+1 |f |= ϕr+1 |f |.
I∪{i+1} I i+1 r 0 r 0 r 0
k=0 k=0
Thepropositionfollowsdirectlyfrom(31)whenI =P.
Thelaststatementofthepropositionfollowsfrom
|P (cid:88)|−1 (cid:18) k+r(cid:19) |P (cid:88)|−1 (k+r)r (|P|−1+r)r
ϕr+1 |f |≤ ϕr+1 |f |≤|P|ϕr+1 ,
r 0 r! 0 r!
k=0 k=0
andsettingC := 1.
r!
Proposition10. Algorithm4hasapolynomialtimecomplexitywithrespecttothenumberofagentsforfixedr.
Proof. ThetimecomplexityofAlgorithm4followsfromProposition9andtheobservationthatthemostexpensive
operation at the i-th iteration, i.e., the computation, performed at line 11, of the distance d between each partial
configuration with length i and plan f , requires i|f | operations. Indeed, for each agent j ∈ {1,...,i} we need
0 0
to compute the minimum distance between the j-th node of the partial configuration and node (ψ (k)) , for k ∈
f j
{1,...,|f |}.
0
5 Experimentalresults
Inthissection,wetestthelocalsearchalgorithmspresentedinthepaper. Inparticular,weperformedexperimentswith
Algorithm1,bothwithpathdistancesandagentdistances,andwiththealternatingAlgorithm2.
We coded Algorithm 1 and Algorithm 2 in C++. We ran all tests on a 11th Gen Intel(R) Core(TM) i7-1165G7 @
2.80GHzprocessorwitha16GBRAM.
Wegeneratedrandomdirectedgraphswith|V|nodesrangingfrom20to100by10,and|E|=4|V|edges. Thegraphs
aregeneratedbycreating|E|randomorderedpairofnodesandusingthemtobuildadirectedgraph. Onlystrongly
connectedgraphsareselected. Thenumberofagents|P|rangesfrom2to18,whileinitialandfinalconfigurationsare
randomlygenerated. Initialsolutions(iftheyexist)aregeneratedthroughthediSCalgorithmdescribedin[2]. Note
20thatthisalgorithmiscomplete,i.e.,italwaysreturnsafeasiblesolutionincaseoneexists. However,thequalityof
suchaninitialsolutionisusuallylow(i.e.,thelengthoftheplanisusuallylong). Foreachsetofexperimentsweshow
thereductionratioobtainedaftertheapplicationoflocalsearch,comparedtotheinitialsolution,andtherunningtime
(inseconds). Thereductionratioisgivenbytheratio |f∗|,wheref andf∗are,respectively,theinitialandthefinal
|f0| 0
solution. Thegraphsreportedshowtheresultswrtto|V|for|P|={5,10,15}andwrtto|P|for|V|={20,50,100}.
5.1 PathDistance
InthefirstsetofexperimentswetesetedAlgorithm1withthesum-mindistance. Asthetimeneededtoexplorethe
neighborhoodincreasesexponentiallywiththeradiusr,wesetr =1toreducecomputationaltimes.
Figure4: AverageReductionRatioper|V|.
Figure5: AverageRunningTimeper|V|.
Figure4andFigure5showthereductionratio(thatis,theratiobetweenthelenghtsofthefinalsolutionandtheinitial
one)andtherunningtimeofAlgorithm1wrttothenumberofnodes|V|,forthreedifferentnumbers|P|ofagents
(namely,|P|=5,10,15). Theredlinerepresentstheaverage. InFigure4thereductionratioslightlyincreasesasthe
numberofnodesgrows,forallthethreedifferentnumbersofagents|P|. Instead,thecomputationtimeremainsnearly
constant.
21Figure6: AverageReductionRatioper|P|.
Figure7: AverageRunningTimeper|P|.
InFigure6andFigure7,wereportthereductionratioandtherunningtime(inseconds),respectively,wrtto|P|,for
threevaluesof|V|(namely,|V| = 20,50,100). Theaverageishighlightedinred. Wenotethatthereductionratio
decreaseswiththenumberofagents,whilethecomputationtimeincreases. Thetrendsintheplots,wrtboththenumber
ofnodesandthenumberofagents,suggestthatalargerimprovementismorelikelyformorecomplexinstances,i.e.,
thosewithalimiteddifferencebetweenthenumberofnodesandthenumberofagents,whichmakesthegraphmore
crowded.
5.2 AgentDistance
Inthesecondsetofexperiments,wetestedAlgorithm1withu-agentsdistance. Wesettheradiusr =1. Thatis,at
eachstep,thelocaloptimizationcanchangethepathofatmostoneagent,withrespecttotheprevioussoution.
22Figure8: AverageReductionRatioper|V|.
Figure9: AverageRunningTimeper|V|.
InFigures8and9wereportthereductionratioandtherunningtime(inseconds),respectively,wrt|V|,forthreevalues
of|P|. Theaverageishighlightedinred. Figure8showsthatthereductionratiodecreaseswrtthenumberofnodes.
Moreover,itismuchhigherinthoseinstanceswithahighernumberofagents|P|. Thissuggeststhatthelocalsearch
basedonagentdistanceisnotefficientincrowdedscenarios,withfewunoccupiedndoes. Figure9showsthatthe
computationtimeincreaseswrttothenumberofnodes,forallthenumberofagentstested.
Figure10: AverageReductionRatioper|P|.
23Figure11: AverageRunningTimeper|P|.
Figures10and11representthereductionratioandthecomputationtimeswrt|P|,forthreevaluesof|V|,withthe
average highlighted in red. The reduction ratio decreases where the number |P| of agents varies from 2 to 4−7
(dependingon|P|),andthenincreaseswrt|P|. TherunningtimeincreaseswhenP variesfrom2to14−16,and
thendecreases. Likely,thisreductionincomputationaltimedependsonthefactthatthelocalsearchprocedureisnot
effectiveforlargervaluesof|P|(assuggestedbyFigure10),sothatthealgorithmperformsfewerlocalsearchiterations.
Ingeneral,Figures8and10suggestthatthelocalsearchalgorithmwithagentdistanceismoreeffectiveinlesscroded
instances,wherefewagentsmoveinsidealargegraph. ItisalsoworthwhiletoremarkthatAlgorithm1tendstodisplay
oppositebehaviorswhenrunwiththepathandtheagentdistance. Thissuggeststheuseofthealternatedneighborhood
search.
5.3 AlternateNeighborhoodSearch
Finally,inthelastsetofexperiments,wetestedAlgorithm2.
Figure12: AverageReductionRatioper|V|.
24Figure13: AverageRunningTimeper|V|.
InFigures12and13,wereportthereductionratioandtherunningtime(inseconds),respectively,wrt|V|forthree
differentvaluesof|P|. Theaverageishighlightedinred. Theresultsshowthatthereductionratioisnearlyconstant
wrteverynumberofnodestested,whereastherunningtimefluctuatesandslightlyincreases.
Figure14: AverageReductionRatioper|P|.
Figure15: AverageRunningTimeper|P|.
Figures14and15showthereductionratioandthecomputationtimeswrt|P|,forthreedifferentvaluesof|V|,withthe
averagehighlightedinred. Thereductionratiohasasimilarbehaviousforallthethreevaluesof|V|. Itdecreases
foralowernumberofagents,andthenincreasesforlargervaluesof|P|. Therunningtimegenerallyincreaseswith
thenumberofagents. Thisalgorithmperformswellfornearlyalltheinstances,withtheworstresults(intermsof
reductionratio)forinstanceswithalowernumberofagents. Likely,thisisbecausetheseinstancesaresimpler,andthe
25initialplansareclosertothelocaloptimum,incomparisiontotheotherinstances.
Wecannowcomparetheaverageresultsofallthethreesetofexperiments.
Figure16: AverageReductionRatioper|V|.
Figure17: AverageRunningTimeper|V|.
Figures16and17comparethereductionratesandthecomputationtimesofallapproaches,wrtthenumberofnodes
|V|. TheAlternateNeighborhoodSearchalwaysreturnstheshortestplan,incomparisontotheotherapproaches. Itis
interestingtocomparetheresultsoftheu-agentsdistanceandthepathdistance. InthefirstplotofFigure16,obtained
usingalownumberofagents(|P|=5),theu-agentsdistancehasbetterresultsfor|V|>30. Ontheotherhand,fora
highnumberofagents,suchasthecaseofthethirdplot(|P|=15),thepathdistanceapproachreturnsmuchshorter
plansforallthenumberofnodes. Thisbehaviorisrelatedtothefactthattheu-agentsdistanceapproachisnotas
effectiveasthepathdistanceapproachincrowdedgraphs(i.e.,wherethenumberofagentsishighcomparedtothe
numberofnodes). Figure17showsthatthealgorithmthatusesthepath-distanceisoverallfasterthantheothertwo
algorithms,whereastheothertwoalgorithmshavecomparablerunningtimesthatincreasewrtthenumberofnodes.
26Figure18: AverageReductionRatioper|P|.
Figure19: AverageRunningTimeper|P|.
Figures18and19comparethereductionratesandthecomputationtimesofalltheapproaches,wrtthenumberof
agents|P|. Asalreadyobservedfortheresultswrt|V|,theperformancesofthethreeapproachesdependingonbothV
and|P|. IntheplotsofFigure18,thereductionratesofbothAlgorithm1withsum-mindistanceandAlgorithm2
decrease wrt the number of agents, whereas the reduction rate of Algorithm 1 with u-agents distance first slightly
decreasesandthenincreases,reachingvaluesnear1(thatcorrespondstoanegligiblereductionofthelengthofthe
startingplan). Thisincreaseismuchfasterinthefirstplot(|V|=20),andslowsdownforhighernumbersofnodes. In
particular,inthelastplot(|V|=100),for|P|<12thealgorithmwithu-agentsdistancepresentsalowerreduction
ratiothanthealgorithmwithsum-mindistance. Therunningtimeappearstoincreasepolynomiallywrt|P|forallthe
algorithmsandallthethreevaluesof|V|. InthefirstplotofFigure19,thethreesetsofexperimentshavedifferent
behaviors. Therunningtimeofthealgorithmthatusesthesum-mindistanceismuchhigherthantheothers. Thisis
probablyduetoalargernumberofiterationwithrespecttothealgorithmthatusestheu-agentsdistance.
6 Conclusionandfutureworks
WeproposeamethodtoimprovefeasiblesolutionstoMAPFproblems. Toobtainshortersolutions,wesearchthe
solutionspaceusingaDynamicProgrammingalgorithm. Toreducethenumberofstatesexplored,andconsequently,
thetimecomplexity,weiterativelydefineaneighborhoodofthegivensolutioninwhichtosearchforbetterones. The
neighborhoodscanbedefinedusingdifferentkindsofdistances. Inthispaper,wefocusedontwodistances:thefirstone
isdefinedbasedonthelengthoftheshortestpathbetweennodes,andthesecondoneconsidersthenumberofagents
thatvarytheirpathsbetweentwosolutions. Inallcases,theproposedalgorithmshavepolynomialtimecomplexitywith
respecttothenumberofagentsandthenumberofnodes. Wetestedthisapproachusingeachdistanceseparatelyand
together. Theexperimentsshowthatusingbothdistances,alternatingtheneighborhoodswherethesolutionissearched,
isavalidproceduretofindsolutionsclosetotheoptimalones.
27References
[1] EbtehalTurkiSahoAlotaibiandHishamAl-Rawi.Pushandspin:Acompletemulti-robotpathplanningalgorithm.
In201614thInternationalConferenceonControl,Automation,RoboticsandVision(ICARCV),pages1–8,Phuket,
Thailand,November2016.IEEE.
[2] S. Ardizzoni, I. Saccani, L. Consolini, and M. Locatelli. Multi-Agent Path Finding on Strongly Connected
Digraphs. In2022IEEE61stConferenceonDecisionandControl(CDC),pages7194–7199,Cancun,Mexico,
December2022.IEEE.
[3] S.Ardizzoni,I.Saccani,L.Consolini,andM.Locatelli. LocaloptimizationofMAPFsolutionsondirectedgraphs.
In202362ndIEEEConferenceonDecisionandControl(CDC),pages8081–8086,2023.
[4] StefanoArdizzoni, IreneSaccani, LucaConsolini, MarcoLocatelli, andBernhardNebel. Analgorithmwith
improved complexity for pebble motion/multi-agent path finding on trees. Journal of Artificial Intelligence
Research,79:483–514,2024.
[5] Adi Botea, Davide Bonusi, and Pavel Surynek. Solving Multi-agent Path Finding on Strongly Biconnected
Digraphs. JournalofArtificialIntelligenceResearch,62:273–314,June2018.
[6] GiladGoralyandRefaelHassin. Multi-ColorPebbleMotiononGraphs. Algorithmica,58(3):610–636,November
2010.
[7] Mokhtar Khorshid, Robert Holte, and Nathan Sturtevant. A Polynomial-Time Algorithm for Non-Optimal
Multi-AgentPathfinding. ProceedingsoftheInternationalSymposiumonCombinatorialSearch,2(1):76–83,
August2021.
[8] D.Kornhauser,G.Miller,andP.Spirakis. CoordinatingPebbleMotionOnGraphs,TheDiameterOfPermutation
Groups, And Applications. In 25th Annual Symposium on Foundations of Computer Science, 1984., pages
241–250,SingerIsland,FL,1984.IEEE.
[9] AthanasiosKrontiris,RyanLuna,andKostasBekris. FromFeasibilityTeststoPathPlannersforMulti-Agent
Pathfinding. ProceedingsoftheInternationalSymposiumonCombinatorialSearch,4(1):114–122,August2021.
[10] JiaoyangLi,ZheChen,DanielHarabor,PeterJStuckey,andSvenKoenig. Anytimemulti-agentpathfindingvia
largeneighborhoodsearch. InInternationalJointConferenceonArtificialIntelligence2021,pages4127–4135.
AssociationfortheAdvancementofArtificialIntelligence(AAAI),2021.
[11] Jiaoyang Li, Zhe Chen, Daniel Harabor, Peter J Stuckey, and Sven Koenig. Mapf-lns2: Fast repairing for
multi-agentpathfindingvialargeneighborhoodsearch. InProceedingsoftheAAAIConferenceonArtificial
Intelligence,volume36,pages10256–10265,2022.
[12] DavidPisingerandStefanRopke. Largeneighborhoodsearch. Handbookofmetaheuristics,pages99–127,2019.
[13] GuniSharon,RoniStern,ArielFelner,andNathanR.Sturtevant. Conflict-basedsearchforoptimalmulti-agent
pathfinding. ArtificialIntelligence,219:40–66,February2015.
[14] Paul Shaw. Using constraint programming and local search methods to solve vehicle routing problems. In
Internationalconferenceonprinciplesandpracticeofconstraintprogramming,pages417–431.Springer,1998.
[15] David Silver. Cooperative Pathfinding. Proceedings of the AAAI Conference on Artificial Intelligence and
InteractiveDigitalEntertainment,1(1):117–122,September2021.
[16] B.deWilde,A.W.TerMors,andC.Witteveen. PushandRotate: aCompleteMulti-agentPathfindingAlgorithm.
JournalofArtificialIntelligenceResearch,51:443–492,October2014.
[17] JingjinYuandStevenLaValle. Structureandintractabilityofoptimalmulti-robotpathplanningongraphs. In
ProceedingsoftheAAAIConferenceonArtificialIntelligence,volume27,pages1443–1449,2013.
28