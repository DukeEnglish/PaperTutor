AnyTool: Self-Reflective, Hierarchical Agents for Large-Scale API Calls
YuDu1* FangyunWei2*† HongyangZhang3
1TsinghuaUniversity 2MicrosoftResearchAsia 3UniversityofWaterloo
duyu20@mails.tsinghua.edu.cn fawe@microsoft.com hongyang.zhang@uwaterloo.ca
*Equalcontribution †Correspondingauthor
Abstract
Query AnyTool
WeintroduceAnyTool, alargelanguagemodel
agentdesignedtorevolutionizetheutilizationof
a vast array of tools in addressing user queries.
…
We utilize over 16,000 APIs from Rapid API,
operatingundertheassumptionthatasubsetof
theseAPIscouldpotentiallyresolvethequeries. API-Retriever
API Pool (16K+ APIs)
AnyTool primarily incorporates three elements:
anAPIretrieverwithahierarchicalstructure,a Solver
solveraimedatresolvinguserqueriesusingase-
lectedsetofAPIcandidates,andaself-reflection
mechanism,whichre-activatesAnyTooliftheini-
Self-Reflection Solution
tial solution proves impracticable. AnyTool is
poweredbythefunctioncallingfeatureofGPT-4, (a)AnyTooladdressesuserqueriesbyleveraging16k+APIs.
eliminatingtheneedfortrainingexternalmodules. ItintegratesahierarchicalAPI-retriever,asolver,andaself-
reflectionmechanisminaclosedloop,alloperatingwithout
Wealsorevisittheevaluationprotocolintroduced
theneedforadditionaltraining.
bypreviousworksandidentifyalimitationinthis
protocolthatleadstoanartificiallyhighpassrate.
Byrevisingtheevaluation protocoltobetterre-
flectpracticalapplicationscenarios,weintroduce
anadditionalbenchmark,termedAnyToolBench.
Experimentsacrossvariousdatasetsdemonstrate
thesuperiorityofourAnyTooloverstrongbase-
linessuchasToolLLMandaGPT-4varianttai-
loredfortoolutilization. Forinstance,AnyTool
outperforms ToolLLM by +35.4% in terms of
average pass rate on ToolBench. Code will be
availableathttps://github.com/dyabel/AnyTool.
1.Introduction (b)ComparisonwithToolLLMandaGPT-4varianttailoredfor
toolutilizationacrosssixsubsetsofToolBench(Qinetal.,2023b),
usingpassratedefinedinEq2astheevaluationmetric.
Fromthedawnofcivilization,humanityhasembarkedon
arelentlessjourneyofdiscoveryandinnovation,mastering Figure 1: (a) Illustration of AnyTool. (b) Comparison in
anever-expandingarrayoftoolstoenhanceourcapabilities performance.
and increase production efficiency. As we have evolved,
so have our tools, transitioning from simple stone imple- lengenowislearninghowtodriveLLMstoeffectivelyuse
mentstocomplexmachinesandbeyond. Today,westand tools (Qin et al., 2023a; Xu et al., 2023; Cai et al., 2023;
at the forefront of a new era, reaping the benefits of the Songetal.,2023;Ruanetal.,2023;Shenetal.,2023;Hao
rapiddevelopmentsinartificialintelligence,particularlythe etal.,2023),ataskthatcouldredefineourinteractionwith
recentadvancesinlargelanguagemodels(LLMs)(Brown technology. Towards this end, we introduce AnyTool, a
etal.,2020;Touvronetal.,2023a;b;Chowdheryetal.,2023; GPT-4-empowered agent, as depicted in Figure 1a. It is
Achiametal.,2023;Ouyangetal.,2022). Apivotalchal- designedtoeffectivelyleveragemorethan16,000APIsto
1
4202
beF
6
]LC.sc[
1v35240.2042:viXraAnyTool:Self-Reflective,HierarchicalAgentsforLarge-ScaleAPICalls
Function List
:Category Agent Query API Retriever
create_agent_category_level(category_name)
:Tool Agent get_tools_in_category(category_name)
Meta-Agent
get_tool_descriptions([tool_list])
finish_search( )
create_agent_tool_level ([tool_list])
y ro
… …
get_tools_in_category(category_name)
g e get_tool_descriptions([tool_list])
ta Finance Sports Music
C finish_search( )
…
add_API_into_API_pool([API_name_list])
get_APIs_in_tool(tool_name)
lo … get_API_details(API_name)
o
T
Tool-1Tool-2 Tool-3 Tool-M check_if_request_solvable( )
finish_search( )
IP A … API-2; API-1 … API-D
API-1 API-2 API-3 API-D
API-Candidate Pool
Structure of 16K+ APIs
Solver Solved Solution or Unsolved Self-Reflection
Figure 2: Overview of AnyTool. It primarily consists of a hierarchical API retriever tasked with identifying the most
relevantAPIcandidatestotheuserqueryfromalargeAPIpool,asolveraimedataddressingthequeriesusingthegenerated
API-candidatepool,andaself-reflectionmechanism. Thehierarchicalstructureincludesameta-agentlinkedwithseveral
categoryagents,eachofwhichmanagesacollectionoftoolagents. WeleveragetheAPIstructuredefinedbyRapidAPIas
aguideline. EachtypeofagentisassignedseveralfunctionsthatitcanusetoexploretheAPIspace. RefertoTable8inthe
appendixforthedetailsofeachfunction.
addressuserqueries,withasignificantperformanceleapas
depictedinFigure1b.
Previous research (Qin et al., 2023b) formulated tool uti-
lizationinadual-phaseapproach: initiallyretrieving,then
resolving.Specifically,thefirstphaseinvolvesretrievingthe
mostpertinentAPIsfromasubstantialcollectionof16K+
APIsinresponsetouserqueries. Thesubsequentphasefo-
cusesonutilizingthesechosenAPIstoaddressuserqueries.
OurAnyToolusesthisdesignprinciplewhileintroducing
fourdistinctcharacteristics(seeFigure2foranoverview):
Plug-and-Play. OurAnyTooldoesnotrequirethetraining Figure 3: The performance of our AnyTool on different
ofanymodules,exceptforthefunction-callingfeatureof datasets(eachdenotedbyacurve)improvesasthenumber
GPT-4(Achiametal.,2023). Thisaspectsetsitapartfrom ofself-reflectionroundsincreases. ATB:AnyToolBench.
existingmethodslikeToolLLM,whichnecessitatestraining
Self-Reflection Mechanism. Our AnyTool is designed to
anAPIretrievercapableofselectingasetofcandidateAPIs
address user queries through a process of initial attempt
fromtheAPIpool(Qinetal.,2023b).
followedbyreflection. Uponreceivingaquery,AnyTool
HierarchicalStructure. ToidentifythemostrelevantAPIs suggestsasolution,whichisthenevaluatedforfeasibility
foruserqueries,wedesignahierarchicalstructurewithin byGPT-4. Incaseswheretheproposedsolutionisdeemed
ourAPIretriever. Thisstructureiscomposedofthreetiers, impractical, AnyTool is re-activated, with the considera-
eachcontainingoneormultipleagentswithdiverseroles. tionofreasonsforfailureandrelevanthistoricalcontexts.
Thisarrangementisinspiredbythedivide-and-conquerap- Thismechanismsignificantlyreducesthetendencyto“over-
proach. Additionally, we effectively incorporate the API search” for simpler queries, while also providing a more
categorizationsuggestedbyRapidAPIintoourhierarchical context-richandin-depthsearchforcomplexqueries. This
structure.Consequently,thissignificantlyreducesthesearch closed-loopsystemenhancestheefficiencyandeffective-
scopeforeachagentandovercomesconstraintsrelatedto nessofthequeryresolutionprocess. Figure3showshow
themaximumcontextlengthinLLMs. thepassrateimprovesw.r.t. theself-reflectionrounds. With
2AnyTool:Self-Reflective,HierarchicalAgentsforLarge-ScaleAPICalls
only4-6self-reflectioniterations,thepassrateimprovesby itself. Yuanetal.(2024)proposedself-rewardinglanguage
upto20%acrossalldatasets. models,wherethelanguagemodelitselfisusedviaLLM-
EvaluationforRealisticScenarios. Theevaluationframe- as-a-Judge prompting to provide its own rewards for the
followingDPOfinetuning(Rafailovetal.,2023). Onthe
workpresentedinToolBench(Qinetal.,2023b)commences
other hand, some negative results on self-reflection were
with categorizing user queries as either solvable or non-
alsoinvestigated. Forexample,Huangetal.(2023)showed
solvable,employingasetofreferenceAPIs. Followingthis,
thatGPT-3.5-TurboandGPT-4cannotself-correctreasoning
thesolvablequeriesundergofurtherscrutinytodetermineif
yet. ButwhetherGPT-4canserveasaself-reflectiveagent
theyaresuccessfullyaddressedornot. However,forthose
for API calling remains an open problem in the existing
non-solvablequeries,theevaluationsystemregardsthemas
literature.
solvedwhencalculatingthepassrate,leadingtoanartifi-
ciallyhighpassrate. Ourstudydelvesintotheintricaciesof
3.Preliminaries
thisevaluationmethodologyandproposesarevisedprotocol
thatbettermirrorspracticalapplicationscenarios. 3.1.FunctionCalling
In addition to evaluation on ToolBench, we introduce an FunctioncallingisacorecharacteristicofGPT-4(Achiam
extrabenchmark, termedAnyToolBench, tofacilitatethe etal.,2023). Specifically,inresponsetoauser’squeryQ,
application of our new evaluation protocol. Experimen- the function calling system accesses a set of M distinct
tally, AnyTool achieves state-of-the-art performance, sur- functions {F }M . Each function F has the potential to
i i=1 i
passingstrongbaselinessuchasToolLLMandaversionof solve Q, a part of Q, or may not be relevant to Q at all.
GPT-4specificallytailoredfortoolutilizationacrossvarious ThefunctionalityofF iselaboratedinaspecificdocument
i
datasets,asillustratedinFigure1b. thatoutlinesitspurpose,requiredandoptionalparameters
alongwiththeirexplanations,thetypesofoutputitgener-
2.RelatedWorks
ates,andtheinterpretationsoftheseoutputs. Notethatthe
functioncallingfeatureofGPT-4doesnotrequirevisibility
ToolUtilizationinLLMs. Largelanguagemodels(Rad-
intothedetailedimplementationsofeachfunction. Itunder-
fordetal.,2018;2019;Brownetal.,2020;Touvronetal.,
standstheirintentionsandfunctionalitiesthroughlinguistic
2023a;b;Thoppilanetal.,2022)maycommitfactualerrors
comprehension.
whenrespondingtoqueries,particularlystrugglingwithpre-
cisenumbersandspecificfieldsofexpertise(Huangetal., Theprocessoffunctioncallinginvolves: 1)theuserinputs
2023;Augensteinetal.,2023). Utilizingtoolscanhelpmiti- boththequeryQandthefunctionlist{F }M ,alongside
i i=1
gatethisissue(Lietal.,2023;Qinetal.,2023b;Parisietal., a designated “Finish Function” F∗, into GPT-4; 2) GPT-
2022; Tang et al., 2023; Hsieh et al., 2023; Schick et al., 4 generates a function calling request for the user, with
2023). PreviousworkhasinvolvedusinganAPIretriever clear input parameters; 3) the user executes the specific
tomatchrelevantAPIsfromalargeAPIpoolbasedonthe function and provides the historical context and function
documents,employingeitheranpretrainedtextembedding responsetoGPT-4;4)thiscycleofstepstwoandthreeis
model(Lietal.,2023;Patiletal.,2023)oronefinetuned repeatedmultipletimesuntilGPT-4activatesthe“Finish
with curated API retrieval data (Qin et al., 2023b). How- Function”F∗,signalingtheresolutionofqueryQ. Users
ever,thisapproachtypicallysuffersfromlowaccuracyand havetheoptiontoeitheremploytheoutputofF∗directly,
mayoverlookthetrulyrelevantAPIs. Moreover,thereisa ortogathertheinterimresultsgeneratedduringthefunction
lackoffeedbackmechanismintheirretrieval,oftenleading callingprocess,accordingtotheirspecificgoalsordesign.
tounsolvedqueriesduetoincorrectAPIcandidatesbeing
3.2.ProblemFormulationandEvaluation
provided. OurAnyToolfillsthisgapbydirectlyusingthe
GPT-4astheAPIretrieverwithahierarchicalstructurede- ProblemFormulation. Theobjectiveofthisworkistode-
sign,andintroducestheself-reflectionmechanismintothe velopaproficientagentcapableofutilizingavastcollection
wholeprocess. ofreal-worldAPIstoaddressuserqueries.Weuseover16K
Self-ReflectionMechanisminLLMs. Self-reflectionisa real-worldAPIsfromtheRapidAPIHub,ascollectedinthe
ToolLLM(Qinetal.,2023b). TheseAPIsarerepresentedas
featuredabilityofLLMs. ItwasfirststudiedintheLLM
{API }N ,formingourAPIpool. Theeffectivenessofthe
alignment problems. Wang et al. (2022) considered the i i=1
solutionsgeneratedbytheagentisassessedusingGPT-4.
abilityofGPT-3toself-generateinstructionsforalignment
ThisevaluationinvolvesprocessingboththeuserqueryQ
finetuning. Withoutfinetuning,Lietal.(2024)introduced
andtheproposedsolutionS,inaccordancewithestablished
aninferencemethod,RAIN,thatallowspre-trainedLLMsto
evaluationprotocolsandcriteria,toascertainthesolution’s
evaluatetheirowngenerationandusetheevaluationresults
abilitytoadequatelyaddressthequery. Wehavealsocon-
to guide rewind and generation for AI safety. Recently,
ductedhumanevaluationandfindacorrelationashighas
Chenetal.(2024)proposedaself-playmechanism,where
96.5%betweenGPT-4andhumanevaluations.
theLLMrefinesitscapabilitybyplayingagainstinstancesof
3AnyTool:Self-Reflective,HierarchicalAgentsforLarge-ScaleAPICalls
Solvable
Query
Agent Solution Agent Solution
+
GPT-4 GPT-4 Query+ … GPT-4
API Candidates Non-solvable Solved Unsolved API Pool (16K+ APIs) Solved Unsolved
+
Pass Rate = Pass Rate =
+ + +
(a) Evaluation Protocol (Prior Work). (b) Evaluation Protocol (Ours).
Figure4: Illustrationoftheevaluationprotocolsusedby: (a)ToolLLM(Qinetal.,2023b);and(b)ours. In(a),iftheAPI
retrieverselectscandidatescompletelyunrelatedtotheuser’squery, GPT-4mayclassifyallqueriesas“non-solvable”,
leadingtoanartificiallyhighpassrate,despitethequeriesremainingunsolved. In(b),weconductamanualreviewofall
queriesandretainonlythosequeriesthatcanberesolvedwithspecificAPIsfromtheAPIpoolforToolBench.
Evaluation Protocol. We first revisit the evaluation pro- thuscalculatedusingtheformula:
tocolinitiallyintroducedbyToolLLM(Qinetal.,2023b).
#(Solved)
ToolLLMemploysadual-phaseapproachforutilizingvari- R= . (2)
ousAPIs. Inthefirstphase,anAPIretrieverisdeveloped
#(Solved)+#(Unsolved)
to select the most relevant API candidates from the API
Toensurethatallqueriesinthebenchmark,namelyTool-
pool according to a user query Q. The second phase in-
Bench(Qinetal.,2023b),aresolvableusingcertainAPIs
volvesToolLLaMA,aspecializedagentthatformulatesa
from the API pool, we conduct a manual review of all
solutionusingtheselectedAPIcandidates. Duetoitsdual-
queries. Weretainonlythosequeriesthatcanberesolved
phase nature, ToolLLM’s evaluation is twofold. Initially,
withspecificAPIsfromthispool. Thedetailedprocessis
GPT-4evaluateswhethertheselectedAPIcandidatescan
availableinSectionA.7oftheappendix.
addressthequeryQ,categorizingthemaseither“solvable”
or“non-solvable”. Ifaqueryisdeemed“solvable”,GPT- 4.AnyTool
4thenassessestheeffectivenessoftheprovidedsolution,
OurAnyToolexhibitsseveraldistinctivefeatures: Firstly,it
classifyingitaseither“solved”or“unsolved”. Figure4(a)
eliminatestheneedfortrainingexternalmodules,andsolely
illustrateshowthepassrateRiscalculated:
reliesonthefunctioncallingfeatureofGPT-4. Secondly,
itcandirectlysearchtheentireAPIpool,whichcontains
#(Non-solvable)+#(Solved) over16KAPIs,usingahierarchicalstructureandadivide-
R= . (1)
#(Non-solvable)+#(Solved)+#(Unsolved) and-conquerprinciple. Lastly,itiscapableofself-reflection,
enablingittoreviewandanalyzeunsolveduserqueriesby
takingintoaccountreasonsforfailureandrelevanthistorical
However,asignificantflawexistsinthisevaluationprotocol.
contexts.
IftheAPIretrieverselectscandidatescompletelyunrelated
Overview. The overview of AnyTool is depicted in Fig-
totheuser’squery,GPT-4mayclassifyallqueriesas“non-
ure2. Itprimarilyfollowsathree-stepprocesstoefficiently
solvable”,leadingtoanartificiallyhighpassrate,despite
resolve the user query Q. The first step (Section 4.1) in-
thequeriesremainingunsolved. Ourexperimentalevidence
volvesthecreationofanAPIcandidatepool. Forefficiency,
confirmsthisissue,showingthatwhenAPIcandidatesare
AnyToolisdesignedwithahierarchicalarchitecture,taking
randomly selected for each query, GPT-4 predominantly
advantageofthestructuredAPIorganizationavailablein
labelsthemas“non-solvable”,resultinginaninflatedpass
Rapid API. In the second step (Section 4.2), a solver at-
rateof99.0%throughthemetricdefinedinEq1.
temptstoresolvequeryQbyutilizingtheseAPIcandidates.
ToaddressthelimitationsinherentinToolLLM’sevaluation Finally, if the query remains unsolved, AnyTool engages
protocol, we propose an alternative evaluation methodol- in a self-reflection process (Section 4.3) in an attempt to
ogythatalignsmorecloselywithreal-worldscenarios,as resolveit. AcasestudyisshowninSectionC.
illustratedinFigure4(b). Specifically,webypassthefirst
4.1.APIRetriever
evaluationphaseofToolLLM,whichassessesthepotential
ofcandidateAPIsinaddressingqueryQ. Instead, wedi- StructuredAPIOrganizationinRapidAPI.RapidAPI
rectlyutilizeGPT-4todeterminetheefficacyoftheagent’s employsastructuredsystemtocategorizeitsextensivecol-
proposedsolutioninresolvingthequery. ThepassrateRis lection of 16K+ APIs. Specifically, this organization is
4AnyTool:Self-Reflective,HierarchicalAgentsforLarge-ScaleAPICalls
dividedintothreedistincttiers: thefirsttieristhecategory tusofeachagent. Anagent’sstatusismarkedas“Finished”
level,encompassingvariousdomainssuchas“sports”and onlyifitcallsthefunction“finish search”duringthe
“finance”;thesecondtier,designatedasthetoollevel,con- process. Agentsmarkedas“Finished”areexcludedinthe
sistsoftoolsthatbelongtospecificcategories;andthethird self-reflectionprocess,whichwillbedescribedlater.
tierfocusesonindividualAPIs,witheachAPIbelonging
toaspecifictool,asillustratedinFigure2. Thishierarchi- 4.2.Solver
calarrangementservesasafoundationalguidelineinthe Functionality. The primary goal of the solver is to ad-
developmentofourAPIretriever. dresstheuser’squeryQ,utilizingthegeneratedAPIcandi-
HierarchicalStructure. AsdepictedinFigure2,thestruc- datepool. Itisimplementedasasingularagentthatlever-
tureofourAPIretrieverconsistsofthreetiers. Attheinitial ages the function-calling capabilities inherent in GPT-4.
tier,ameta-agentexists,taskedwithdynamicallygenerat- TwopotentialimplementationsforthesolveraretheDepth-
ingaseriesofcategoryagentsinresponsetotheuserquery FirstSearch-BasedDecisionTree(DFSDT)ortheChain
Q. Theintermediarytieriscomprisedofmultiplecategory of Thought (CoT) approach. A concise overview of the
agents,eachestablishedbythemeta-agent. Theseagents processisprovided,withcomprehensivedetailsavailable
correspond to individual categories as defined by Rapid inToolLLM(Qinetal.,2023b). Thesolveractivatesupon
API,withtheirprimaryobjectivebeingtoidentifythemost receiving a query Q, in conjunction with a suite of func-
relevant tools for the query Q from their respective tool tions,whichincludesthosefromtheAPIcandidatepooland
collections. Subsequently,thesecategoryagentsinitiatethe adistinctivefunctionnamed“finish”,aswellasaboot-
creationofvarioustoolagents. Itisimportanttonotethat strappromptdetailedinSectionB.2oftheappendix. The
eachtoolagentmaymanagemultipletools,dependingon “finish”functionyieldsoneofthreepossibleoutcomes:
thedecisionsmadebythecategoryagents. Thegoalofeach “GiveSolution”,“TryBacktrack”,or“GiveUp”,with“Try
toolagentistosearchthroughitsmanagedAPIsforthose Backtrack”beingspecifictotheDFSDTimplementation.
thatmightsolvethequeryQ,andthenaddtheseAPIstoan Eachiterationinvolves: 1)thesolversendingarequestto
API-candidatepool. Eachtypeofagentpossessesitsown callafunction,2)theinterpretationofthisrequestandthe
distinctsetoffunctions. TheseareillustratedinFigure2 executionofthefunction,and3)theintegrationofthefunc-
andfurtherdetailedinTable8intheappendix. tion’soutcomesintothecontextualhistory,whichisthen
returnedtothesolver. Thiscyclecontinuesuntilthesolver
GenerationofAPI-CandidatePool. AnyToolisinitiated
givesa“GiveSolution”or“GiveUp”decision. Notethat
uponreceivingaqueryQ,thefunctionlistdetailedinTa-
whenthesolvermakesa“GiveUp”decision,itisrequired
ble8,andabootstrappromptasoutlinedinSectionB.1of
toprovideboththereasonandthefunctionnameoftheAPIs
theappendix. Thisprocessheavilyreliesonthefunction
thatareirrelevanttotheuser’squeryordonotworkproperly.
callingfeatureofGPT-4(refertoSection3.1). Operating
Self-reflectionmechanismistriggeredundertwoscenarios:
interactively,oursystemenablesagents(startingwiththe
1)“GiveSolution”,whereGPT-4reviewsthesolutionand
meta-agent)tosendrequestsforcallingtheirmanagedfunc-
determinesthatthequeryremainsunresolved,and2)“Give
tions. Thesefunctionsmayinvolvecreatingaspecificagent
Up”,wherethesolverfailstoaddressthequery.
(eitheracategoryagentoratoolagent)orexecutingapar-
ticularfunction,inaccordancewiththehistoricalcontext.1
4.3.Self-ReflectionMechanism
Therequestsareparsed, andthecorrespondingfunctions
Iftheinitialsolutionfailstoresolveuserqueries,theself-
areexecuted. Theresultsproducedbythesefunctionsare
reflectionmechanismre-activatesAnyToolsequentially,first
subsequentlyincorporatedintothehistoricalcontext,which
activatingtheAPIretrieverandthenthesolver. Itisworth
isthenreturnedtotheagents. Thisprocessrepeatscontin-
notingthatthismechanismcanbeappliedrepeatedlyuntil
uously until the termination criteria are met. All agents,
theterminationconditionismet.
including meta-agents, category agents, and tool agents,
Self-ReflectionintheAPIRetriever. Ourself-reflection
operateindependentlyinamulti-threadedmanner,signifi-
mechanismfirstidentifiesthereasonwhyauserqueryre-
cantlyacceleratingtheprocess. WemaintainaglobalAPI
mainsunsolved. Ininstanceswherethesolveroptsto“Give
candidate pool, allowing each tool agent to add APIs to
Up”,therationaleprovidedbythesolverisutilized. Con-
thispool,usingthefunction“add API into API pool”
versely,ifthesolverproposesasolutionbutGPT-4assesses
(refer to Figure 2 and Table 8). All agents cease
thatitdoesnotadequatelyaddressthequery,thereasoning
operations only when a tool agent calls the function
ascribedbyGPT-4isemployed. Recallthatwemaintaina
“check if request solvable”andreceivesareturn
recordofhistoricalcontextforeachagentwithintheAPIre-
valueof“True”. Subsequently,anAPI-candidatepoolisob-
triever. Weinitiallyincorporatetheidentifiedreasonintoall
tained. Inaddition,werecordthehistoricalcontextandsta-
thesehistoricalcontexts. Owingtothehierarchicaldesign
1Eachagent,whetheritisameta-agent,categoryagent,ortool ofourAPIretriever,wesystematicallyre-activatevarious
agent,maintainsitsownhistoricalcontextindependently. agentsforefficiencypurposes,followinganascendingorder
5AnyTool:Self-Reflective,HierarchicalAgentsforLarge-ScaleAPICalls
Table1: MainresultsonthefilteredToolBench. WeusepassratedefinedinEq2andillustratedinFigure4(b),asthemetric.
Allresultsarereproduced. *: OpenAI’stext-embedding-ada-002;Ref.: reference;Avg.: average;SR:self-reflective.
G1 G2 G3
UseRef.
Model APIRetriever Solver Avg.(%)
APIs I(%) T(%) C(%) I(%) C(%) I(%)
ToolLLM OpenAITE∗ ToolLLaMAw/DFSDT 8.7 6.8 12.0 4.7 8.2 10.5 8.5
ToolLLM ToolLLM’s ToolLLaMAw/DFSDT 28.4 26.3 38.4 21.5 15.1 7.7 22.9
ToolLLM ToolLLM’s GPT-4w/DFSDT 42.6 46.2 51.4 23.4 24.5 2.6 31.8
ToolLLM None ToolLLaMAw/DFSDT ✓ 29.4 31.8 37.1 19.6 22.4 13.2 25.6
GPT-4 None GPT-4w/CoT ✓ 31.3 34.8 47.1 27.1 34.7 2.6 29.6
GPT-4 None GPT-4w/DFSDT ✓ 36.5 49.2 51.4 38.3 39.8 18.4 38.9
GPT-4 PlainAgent GPT-4w/DFSDT 13.9 23.5 17.6 13.9 9.2 13.2 15.2
GPT-4 AutoGen-RAG GPT-4w/DFSDT 14.8 19.7 19.7 7.4 9.2 7.9 13.1
GPT-3.5 None GPT-3.5w/CoT ✓ 37.5 37.1 42.9 24.3 22.4 5.3 28.3
GPT-3.5 None GPT-3.5w/DFSDT ✓ 39.1 40.2 48.6 31.8 25.5 15.8 33.5
AnyTool(Ours) SRAgent SRGPT-4w/DFSDT 52.2 61.4 67.6 58.9 45.9 63.2 58.2
fromtoolagents,tocategoryagents,andfinallytothemeta- Alignment between GPT-4’s Decisions and Decisions
agent. It is worth noting that only the agents not marked Made by Human Evaluators. We conduct a compara-
witha“Finished”statusarere-activated. Asaresult,this tiveanalysisbetweendecisionsmadebyhumanevaluators
processexpandsourAPI-candidatepool,incorporatingnew andthosegeneratedbyGPT-4,focusingonsamplesfrom
APIsthatcouldpotentiallyresolvetheuser’squery. theG1-IsubsetofToolBench. Specifically,foreachquery
Self-ReflectionintheSolver. Recallthatwhenthesolver sample, AnyTool generates a solution, which is then as-
makesa“GiveUp”decision,itisdesignedtoidentifythe sessed for its feasibility in addressing the query by both
functionnamesoftheAPIsthatareirrelevanttotheuser’s humanevaluatorsandGPT-4. OurresultsrevealthatGPT-
query. Forefficiency,wefirstremovetheseAPIsfromthe 4’salignmentwithhumanevaluationstandsat96.5%,while
expandedAPI-candidatepoolandexcludeitemswherethese thatofGPT-3.5isonly73.9%. Basedonthesefindings,we
APIsarecalledfromthehistoricalcontextofthesolver.The exclusivelyutilizeGPT-4forourevaluations.
solveristhenre-activatedwithanewbootstrapprompt(refer
5.2.MainResults
toSectionB.3intheappendix),theupdatedAPI-candidate
We compare our AnyTool with the pioneering Tool-
pool, and the cleaned historical context. The remaining
LLM(Qinetal.,2023b)anditsvariants,aswellasvarious
processisthesameasdescribedinSection4.2.
GPT-4modelstailoredfortoolutilization.
5.Experiments ToolLLMandItsVariants. ToolLLMintegratesanAPI
retriever2andasolverdesignedtoaddressuserqueriesby
5.1.Setup
employingAPIcandidatesproducedbytheretriever. The
Benchmarks. Weconductexperimentsontwobenchmarks:
solveroperatesusingafinely-tunedLLaMAmodel,named
1)ToolBench(Qinetal.,2023b);and2)ourownbenchmark,
ToolLLaMA,andemploysadepth-firstsearch-baseddeci-
termedAnyToolBench. ToolBenchcomprisessixsubsets:
siontree(DFSDT)algorithmtoresolvequeries. Foreach
G1-Instruction(G1-I),G1-Tool(G1-T),G1-Category(G1-
query,ToolBenchprovidesasetofreferenceAPIsthatare
C), G2-Instruction (G2-I), G2-Category (G2-C), and G3-
potentiallyrelevant. ThesereferenceAPIsofferameansto
Instruction(G3-I).AsdescribedattheendofSection3.2,
evaluatethesolver’seffectivenessbyallowingthebypassing
weperformamanualreviewonToolBenchtoexcludenon-
oftheAPIretrieverstep. Itisworthnotingthatadditional
solvable queries. Details of this process can be found in
APIsfromthecompleteAPIpool,containingover16,000
SectionA.7oftheappendix. Afterfiltering,theremaining
APIs,mayalsocontributetoeffectivelyresolvingqueries.
queriesinthesesixsubsetsare115,132,142,107,98,and
Beyond the original ToolLLM, our experiments also ex-
38,respectively. Unlessotherwisespecific,weadoptthefil-
amine two variants: 1) one that substitutes ToolLLaMA
teredToolBench. Ourbenchmark,AnyToolBench,includes
withGPT-4inthesolver;2)anotherthatforegoestheAPI
400 instances. The process of creating AnyToolBench is
retrieverandreliessolelyonreferenceAPIs.
detailedinSectionA.8oftheappendix.
Various GPT-4 Models. The function-calling feature of
EvaluationProtocol. Weemploythepassrate(asdefined
GPT-4 enables it to use APIs directly for resolving user
in Eq. 2) as our evaluation metric. To assess whether a
queries. However,inoursetting,wedealwithover16,000
solution generated by an agent can resolve the query, we
useGPT-4-32K.ThesamepromptutilizedinToolBenchis 2ToolLLM’sAPIretrieveristrainedonpair-wisedata. Each
appliedwhenGPT-4servesasthejudge. pairincludesauserqueryandasetofAPIsrelevanttothequery.
6AnyTool:Self-Reflective,HierarchicalAgentsforLarge-ScaleAPICalls
Table2:MainresultsonourAnyToolBench.Allmodelsuse Table3:Ablationstudyonthepassrateofmaincomponents.
DFSDTimplementationinthesolver. SR:self-reflective; “-”and“+”symbolsdenotetheremovalandadditionofa
PR:passrate. componentfromandintoAnyTool,respectively.
Method APIRetriever Solver PR(%) Configuration G2-I(%) G3-I(%)
ToolLLM ToolLLM’s ToolLLaMA 18.9 AnyTool 58.9 63.2
ToolLLM ToolLLM’s GPT-4 36.6 -HierarchicalStructure 22.4 15.8
GPT-4 PlainAgent GPT-4 14.0 -Self-Reflection 19.6 15.8
-DFSDT/+CoT 50.5 60.3
AnyTool(Ours) SRAgent SRGPT-4 73.8
Table4: Ablationstudyonthepassrateofself-reflection
mechanism. Allagentsincludethetoolagents,thecategory
APIs. Integrating all these APIs—each with its unique
agentsandthemeta-agent.
function description, input, and output—into GPT-4 si-
multaneouslyexceedsthemaximumcontextlengthofthe Re-Activation G2-I(%) G3-I(%)
model,evenfortheversionwiththelargestcontextlengthof ToolAgents 43.9 44.7
128,000tokens. Therefore,wecomparefourGPT-4models: ToolAgents+CategoryAgents 55.2 55.3
1)onethatusesreferenceAPIsandtheChainofThought AllAgents 58.9 63.2
(CoT)(Weietal.,2022)algorithminthesolver;2)another
that uses reference APIs and the DFSDT algorithm; 3) a an agent’s capability to resolve user queries utilizing the
third that employs a plain agent for API retrieval and in- entireAPIpool. Consequently,anAPIretrieverisessential
corporatestheDFSDTalgorithminthesolver;4)afourth inthissetting. WedonotsupplyreferenceAPIsforeach
thatleveragestheRetrievalAugmentedGeneration(RAG) query;thus,makingcomparisonswithcounterpartslacking
feature from AutoGen (Augenstein et al., 2023) for API an API retriever is impractical. In Table 2, we compare
retrieval, and uses the DFSDT algorithm to resolve user ourAnyToolwithatop-performingToolLLMvariantand
queriesthroughtheselectedAPIcandidates. GPT-4, where a plain agent serves as the retriever. The
consistent improvements demonstrated by AnyTool over
IntheimplementationofGPT4-plain-agent,wedividethe
theseapproachesaffirmitseffectivenessinarealisticsetting.
setofover16KAPIsinto33groups,eachcontaining500
APIs,withtheexceptionofthe33rdgroup.Thesegroupsare 5.3.AblationStudies
thensequentiallyprocessedbyGPT-4. Thespecifictaskas- Unlessotherwisespecific,allablationstudiesareconducted
signedtoGPT-4involvesidentifyingtherelevantAPIsusing onG2-IandG3-IofthefilteredToolBench.
theadd API into API poolfunction,whichintegrates
EffectivenessoftheMainElements. OurAnyToolcom-
themintotheAPI-candidatepool. RefertoSectionA.4for prisestwoprincipalelements:firstly,anAPIretrieverwitha
moredetails. InformationonAutogGen-RAGcanbefound hierarchicalstructure,andsecondly,aself-reflectionmecha-
inSectionA.5. nism. InTable3,weexaminethreedistinctconfigurations
MainResultsonToolBench. InTable1,wecompareour ofAnyTool. Theseinclude: a)substitutingourhierarchical
AnyToolwithvariousToolLLMvariantsandGPT-4models APIretrieverwithaflat-structureversion,whichmergesthe
acrosssixsubsetsofthefilteredToolBenchdataset. There- functionsofagentsatthecategoryandtoollevels(exceptfor
sultsontheoriginalToolBenchareavailableinSectionA.3. “agentcreation”and“finishsearch”functions)intothefunc-
BoththeAPIretrieverandthesolvercontributetothefinal tionlistofthemeta-agent;b)eliminatingtheself-reflection
performance. TheAPIretriever’sroleistoefficientlyiden- mechanism;andc)substitutingtheDFSDTalgorithmwith
tifythemostpertinentAPIsfromanextensivecollection, CoT,therebydisablingthebacktrackingfeatureinDFSDT.
whilethesolveristaskedwithgeneratingviablesolutions Ourfindingsdemonstratesignificantpositiveeffectsofboth
for user queries. Instead of training an API retriever as thehierarchicalstructureandtheself-reflectionfeatureon
ToolLLMdoes,weleveragethepowerfulfunction-calling AnyTool’sperformance.ChoosingCoToverDFSDTresults
featureofGPT-4andovercomethechallengeposedbyits inadeclineinpassratesby8.4and2.9,respectively.
inherentmaximumcontextlengthlimitation,throughtheim- Self-ReflectionMechanism. InSection4.3,weintroduce
plementationofahierarchicalstructure. Ourself-reflection aself-reflectionmechanismthatisfirstappliedtotheAPI
mechanismappliestoboththeAPIretrieverandthesolver, retrievermodule. Itre-activatesvariousagentsinascending
enablingthewholesystemtooperateinaclosedloop. Ow- order,fromtoolagentstocategoryagents,andfinallytothe
ingtothesefactors,ourAnyToolsignificantlyoutperforms meta-agent. InTable4,weexaminethedifferentversions
boththeoriginalToolLLMandGPT-4usingreferenceAPIs, that reactivate distinct types of agents. Reactivating all
by +32.6 and +19.3 points, respectively, in terms of the agentsresultsinthebestperformance,owingtothelarger
averagepassrate. searchspace.
MainResultsonAnyToolBench. AnyToolBenchevaluates SizeoftheAPIPool. Userstypicallysubmitawiderange
7AnyTool:Self-Reflective,HierarchicalAgentsforLarge-ScaleAPICalls
Table5: StudyontheeffectsoftheAPIpool’ssizetothe
passrate.
SizeofAPIPool G2-I(%) G3-I(%)
1,000 18.6 7.9
5,000 26.3 23.7
10,000 38.1 36.8
All 58.9 63.2
Table6: StudyonthemaximalsizeofAPI-candidatepool.
MaximalSizeofAPI-CandidatePool G2-I(%) G3-I(%)
16 49.5 42.1
32 58.9 55.3
64 58.9 63.2 Figure 5: Statistics of average self-reflection frequency.
ATB:AnyToolBench.
Table7: Westudythemaximumnumberoftoolsthatatool
agentcanmanageinourAPIretriever.
MaximumNumberofTools G2-I(%) G3-I(%)
3 48.6 42.1
5 58.9 57.9
10 52.3 39.5
ofqueriestotheAIsystem,seekingsolutionstoreal-world
problems. To effectively address these queries, the sys-
temrequiresaccesstoadiversearrayofAPIs. Ingeneral,
a larger API pool is more likely to successfully resolve
userqueries,asitoffersahigherprobabilityofcontaining
relevant APIs. This hypothesis is evaluated by randomly
Figure6: Statisticsofaverageagentquantity.
selectingsubsetsofAPIsfromthecompletepoolandusing
onlythesesubsetstoaddressuserquerieswithourAnyTool. categoryagentsandmeta-agent. Additionally,calculating
Theresults,presentedinTable5,supportourhypothesis. theprocessingtimeforresolvingquerieswithAnyToolis
MaximalSizeoftheAPI-CandidatePool. AnyToolop- infeasible. AnyToolreliesonthefunction-callingfeatureof
erates through a two-step process—the solver addresses GPT-4,whoseserverresponseisoftenunstable.
queriesbyusinganAPI-candidatepool,whichisgenerated Agent Quantity in API Retriever. The API retriever of
byourhierarchicalAPIRetriever. Oneterminationcriterion AnyToolishierarchicallystructured. Dependingonthena-
fortheAPIretrieveristhefullnessofthispool. Weexamine tureofuserqueries,themeta-agentcandynamicallycreate
theimpactofthemaximalsizeoftheAPI-candidatepoolas avaryingnumberofcategoryagents. Thisprocessisanal-
showninTable6. Weobservethatapoolsizeof64nearly ogoustothewaycategoryagentscreatetoolagents. The
reachessaturationintermsofperformance. averagenumberofagentsacrossallinstancesineachsubset
ToolAgentinAPIretriever. OurAPIretrieverisdesigned ofthefilteredToolBenchandourAnyToolBenchisdepicted
withahierarchicalstructure,inwhichthetoolagentsatthe inFigure6.
bottomlayerdirectlyaddAPIsthatmaypotentiallyaddress
6.Conclusion
user queries, into the API-candidate pool. As described
inSection4.1,atoolagentcanmanageamaximumofK Inthiswork,weintroduceAnyTool,anadvancedagentcapa-
toolsexistinginRapidAPI.WeexaminethevalueofK in bleofharnessing16K+APIstoeffectivelyhandlerealistic
Table7. Atrade-offisobserved: managingtoomanytools userinquiries. ThecoreofAnyToolisahierarchicalAPIre-
(e.g.,K =10)leadstoalargersearchspaceandmaycause trievercoupledwithasolver. Additionally,itincorporatesa
overlookingofrelevantAPIs,whilemanagingtoofewtools uniqueself-reflectionmechanism,enhancingitsproficiency
(e.g.,K =3)mightresultinlowerrecall. in responding to user queries. We also revise the prior
StatisticsofSelf-ReflectionFrequency. InFigure5,we evaluationprotocoltobetterreflectreal-worldapplication
report the average self-reflection frequency across all in- scenarios. RigorousexperimentsconductedonToolBench
stances within each subset of the filtered ToolBench and andourAnyToolBenchdemonstrateourapproach’ssupe-
our AnyToolBench. As described in Section 4.3, we re- riorityoverestablishedmodels. Finally,wehighlighttwo
activatevariousagentsinascendingorder. Consequently, futureresearchdirections: 1)optimizingtheorganization
the frequency of tool agents is much higher than that of ofAPIsforimprovedperformanceandefficiency;2)devel-
8AnyTool:Self-Reflective,HierarchicalAgentsforLarge-ScaleAPICalls
opinganadvancedopen-sourceLLMspecificallyforAPI els cannot self-correct reasoning yet. arXiv preprint
utilization,whichcouldfacilitatelocaldeployments. arXiv:2310.01798,2023.
Li, M., Zhao, Y., Yu, B., Song, F., Li, H., Yu, H., Li, Z.,
ImpactStatements
Huang,F.,andLi,Y. API-Bank:Acomprehensivebench-
markfortool-augmentedLLMs. InProceedingsofthe
AlthoughAnyToolsignificantlyenhancestheeffectiveness
2023ConferenceonEmpiricalMethodsinNaturalLan-
ofresolvinguserqueriesthroughvarioustools,itsperfor-
guageProcessing,pp.3102–3116,2023.
manceinextremelycomplexscenarioshasnotbeenverified,
owingtotheabsenceofappropriatedatasets. Furthermore, Li,Y.,Wei,F.,Zhao,J.,Zhang,C.,andZhang,H. RAIN:
asAnyToolreliesonthefunction-callingfeatureofGPT-4, Yourlanguagemodelscanalignthemselveswithoutfine-
thecapabilitiesofGPT-4alsoaffectthefeasibilityofthe tuning. InInternationalConferenceonLearningRepre-
solutionsitgenerates. sentations,2024.
Ouyang,L.,Wu,J.,Jiang,X.,Almeida,D.,Wainwright,C.,
References
Mishkin,P.,Zhang,C.,Agarwal,S.,Slama,K.,Ray,A.,
et al. Training language models to follow instructions
Achiam,J.,Adler,S.,Agarwal,S.,Ahmad,L.,Akkaya,I.,
withhumanfeedback. AdvancesinNeuralInformation
Aleman,F.L.,Almeida,D.,Altenschmidt,J.,Altman,S.,
ProcessingSystems,35:27730–27744,2022.
Anadkat,S.,etal. GPT-4technicalreport. arXivpreprint
arXiv:2303.08774,2023. Parisi,A.,Zhao,Y.,andFiedel,N. TALM:Toolaugmented
language models. arXiv preprint arXiv:2205.12255,
Augenstein, I., Baldwin, T., Cha, M., Chakraborty, T.,
2022.
Ciampaglia, G. L., Corney, D., DiResta, R., Ferrara,
E., Hale, S., Halevy, A., et al. Factuality challenges Patil,S.G.,Zhang,T.,Wang,X.,andGonzalez,J.E.Gorilla:
in the era of large language models. arXiv preprint Largelanguagemodelconnectedwithmassiveapis.arXiv
arXiv:2310.05189,2023. preprintarXiv:2305.15334,2023.
Brown,T.,Mann,B.,Ryder,N.,Subbiah,M.,Kaplan,J.D., Qin,Y.,Hu,S.,Lin,Y.,Chen,W.,Ding,N.,Cui,G.,Zeng,
Dhariwal, P., Neelakantan, A., Shyam, P., Sastry, G., Z.,Huang,Y.,Xiao,C.,Han,C.,etal. Toollearningwith
Askell,A.,etal. Languagemodelsarefew-shotlearners. foundation models. arXiv preprint arXiv:2304.08354,
Advancesinneuralinformationprocessingsystems,33: 2023a.
1877–1901,2020.
Qin,Y.,Liang,S.,Ye,Y.,Zhu,K.,Yan,L.,Lu,Y.,Lin,Y.,
Cai, T., Wang, X., Ma, T., Chen, X., and Zhou, D. Cong,X.,Tang,X.,Qian,B.,etal.ToolLLM:Facilitating
Largelanguagemodelsastoolmakers. arXivpreprint largelanguagemodelstomaster16000+real-worldAPIs.
arXiv:2305.17126,2023. arXivpreprintarXiv:2307.16789,2023b.
Radford, A., Narasimhan, K., Salimans, T., Sutskever, I.,
Chen,Z.,Deng,Y.,Yuan,H.,Ji,K.,andGu,Q. Self-play
etal. Improvinglanguageunderstandingbygenerative
fine-tuningconvertsweaklanguagemodelstostronglan-
pre-training. OpenAI,2018.
guagemodels. arXivpreprintarXiv:2401.01335,2024.
Radford, A., Wu, J., Child, R., Luan, D., Amodei, D.,
Chowdhery,A.,Narang,S.,Devlin,J.,Bosma,M.,Mishra,
Sutskever,I.,etal. Languagemodelsareunsupervised
G., Roberts, A., Barham, P., Chung, H.W., Sutton, C.,
multitasklearners. OpenAI,2019.
Gehrmann,S.,etal. PaLM:Scalinglanguagemodeling
withpathways. JournalofMachineLearningResearch, Rafailov,R.,Sharma,A.,Mitchell,E.,Ermon,S.,Manning,
24(240):1–113,2023. C.D.,andFinn,C. Directpreferenceoptimization: Your
languagemodelissecretlyarewardmodel.arXivpreprint
Hao,S.,Liu,T.,Wang,Z.,andHu,Z. ToolkenGPT:Aug-
arXiv:2305.18290,2023.
mentingfrozenlanguagemodelswithmassivetoolsvia
toolembeddings.arXivpreprintarXiv:2305.11554,2023. Ruan,J.,Chen,Y.,Zhang,B.,Xu,Z.,Bao,T.,Du,G.,Shi,
S.,Mao,H.,Zeng,X.,andZhao,R.TPTU:Taskplanning
Hsieh, C.-Y., Chen, S.-A., Li, C.-L., Fujii, Y., Ratner, A., andtoolusageoflargelanguagemodel-basedaiagents.
Lee, C.-Y., Krishna, R., and Pfister, T. Tool documen- arXivpreprintarXiv:2308.03427,2023.
tationenableszero-shottool-usagewithlargelanguage
Schick,T.,Dwivedi-Yu,J.,Dess`ı,R.,Raileanu,R.,Lomeli,
models. arXivpreprintarXiv:2308.00675,2023.
M.,Zettlemoyer,L.,Cancedda,N.,andScialom,T. Tool-
Huang, J., Chen, X., Mishra, S., Zheng, H. S., Yu, former: Languagemodels canteach themselvesto use
A. W., Song, X., and Zhou, D. Large language mod- tools. arXivpreprintarXiv:2302.04761,2023.
9AnyTool:Self-Reflective,HierarchicalAgentsforLarge-ScaleAPICalls
Shen, Y., Song, K., Tan, X., Li, D., Lu, W., and Zhuang,
Y. HuggingGPT:SolvingaitaskswithChatGPTandits
friendsinhuggingface. arXivpreprintarXiv:2303.17580,
2023.
Song, Y., Xiong, W., Zhu, D., Li, C., Wang, K., Tian, Y.,
andLi,S. RestGPT:Connectinglargelanguagemodels
with real-world applications via RESTful APIs. arXiv
preprintarXiv.2306.06624,2023.
Tang, Q., Deng, Z., Lin, H., Han, X., Liang, Q., and
Sun,L. ToolAlpaca: Generalizedtoollearningforlan-
guagemodelswith3000simulatedcases. arXivpreprint
arXiv:2306.05301,2023.
Thoppilan, R., De Freitas, D., Hall, J., Shazeer, N., Kul-
shreshtha,A.,Cheng,H.-T.,Jin,A.,Bos,T.,Baker,L.,
Du,Y.,etal. LaMDA:Languagemodelsfordialogappli-
cations. arXivpreprintarXiv:2201.08239,2022.
Touvron,H.,Lavril,T.,Izacard,G.,Martinet,X.,Lachaux,
M.-A.,Lacroix,T.,Rozie`re,B.,Goyal,N.,Hambro,E.,
Azhar,F.,etal. Llama:Openandefficientfoundationlan-
guagemodels. arXivpreprintarXiv:2302.13971,2023a.
Touvron, H., Martin, L., Stone, K., Albert, P., Almahairi,
A., Babaei, Y., Bashlykov, N., Batra, S., Bhargava, P.,
Bhosale,S.,etal. Llama2: Openfoundationandfine-
tuned chat models. arXiv preprint arXiv:2307.09288,
2023b.
Wang, Y., Kordi, Y., Mishra, S., Liu, A., Smith, N. A.,
Khashabi,D.,andHajishirzi,H. Self-instruct: Aligning
languagemodelwithselfgeneratedinstructions. arXiv
preprintarXiv:2212.10560,2022.
Wei, J., Wang, X., Schuurmans, D., Bosma, M., Xia, F.,
Chi, E., Le, Q. V., Zhou, D., et al. Chain-of-thought
prompting elicits reasoning in large language models.
AdvancesinNeuralInformationProcessingSystems,35:
24824–24837,2022.
Xu, Q., Hong, F., Li, B., Hu, C., Chen, Z., and Zhang,
J. On the tool manipulation capability of open-source
largelanguagemodels. arXivpreprintarXiv:2305.16504,
2023.
Yuan, W., Pang, R. Y., Cho, K., Sukhbaatar, S., Xu, J.,
andWeston,J. Self-rewardinglanguagemodels. arXiv
preprintarXiv:2401.10020,2024.
10AnyTool:Self-Reflective,HierarchicalAgentsforLarge-ScaleAPICalls
Table8: Functionlistofeachtypeofagent. ∗: descriptionsofinput,outputandfunctionality.
Type FunctionName Functionality Input Output
create agent category level Createacategoryagent. Categoryname Categoryagent
get tools in category Gettoolnamesunderacategory. Categoryname [Toolnames]
MetaAgent
get tool descriptions Getdescriptionofeachtool. [Tools] [Tooldescriptions]
finish search Sendoutfinishsignal. None None
create agent tool level Createatoolagent. [Tools] Toolagent
get tools in category Gettoolnamesunderacategory. Categoryname [Toolnames]
CategoryAgent
get tool descriptions Getdescriptionofeachtool. [Tools] [Tooldescriptions]
finish search Sendoutfinishsignal. None None
add API into API pool AddAPIsintocandidatepool. [APIs] None
get APIs in tool GetAPInamesunderatool. Toolname [APInames]
get API detail Getdetail∗ofeachAPI. [APInames] [APIdetails]
ToolAgent Checkwhetherthequeryissolv-
check if request solvable ableusingthecurrentcandidate None True\False
pool.
finish search Sendoutfinishsignal. None None
Table9: ResultsontheoriginalToolBench(Qinetal.,2023b). NotethattheoriginalToolBenchincludesnon-solvable
queries. WeusepassratedefinedinEq2andillustratedinFigure4(b),asthemetric. Allresultsarereproduced. Ref.:
reference;Avg.: average;SR:self-reflective.
G1 G2 G3
UseRef.
Model APIRetriever Solver Avg.(%)
APIs I(%) T(%) C(%) I(%) C(%) I(%)
ToolLLM ToolLLM’s ToolLLaMAw/DFSDT 24.0 23.0 37.5 17.5 16.5 4.0 20.4
ToolLLM ToolLLM’s GPT-4w/DFSDT 32.0 43.5 46.5 30.0 33.0 8.0 32.2
AnyTool(Ours) SRAgent SRGPT-4w/DFSDT 46.0 54.0 53.0 37.0 46.5 32.0 44.8
A.MoreImplementationDetailsandExperimentalResults
A.1.MoreImplementationDetailsofAnyTool
ForthesolverimplementingDFSDT,wesetthemaximumnumberofAPIcallsto10. Additionally,forourAnyTool,we
establishalimitof200,000tokensforefficiency. Thislimitencompassesthetokenconsumptionbyvariouscomponents,
includingthemeta-agent,thetoolagents,thecategoryagents,thesolver,andtheself-reflectionmechanism.
A.2.DetailedFunctionList
WeprovidethefunctionlistofeachtypeofagentinTable8.
A.3.ResultsontheOriginalToolBench
We also provide the results on the original ToolBench (Qin et al., 2023b) without undergoing filtering process. In the
originalToolBench,eachsubsetcomprises200queries,exceptforG3-I,whichcontains100queries. Notethattheoriginal
ToolBenchincludesnon-solvablequeries. Wetestallqueries,regardlessofwhethertheyaresolvableornot,usingpassrate
definedinEq2andillustratedinFigure4(b),asthemetric. Allresultsarereproduced. AsshowninTable9,ourAnyTool
outperformsallToolLLM(Qinetal.,2023b)variants.
A.4.GPT-4withVariousPlainAgents
In Table 1 of the main paper, we present a comparison between our AnyTool and a GPT-4 variant. This variant em-
ploysaplainagentastheAPIretriever, whichislimitedtoaccessingonlythenamesoftoolsandAPIs. Itutilizesthe
add API into API poolfunctiontoincorporateAPIsintotheAPIcandidatepool. WhenanAPIisaddedtothepool,
weusethecheck if request solvablefunctiontodeterminewhetherthecurrentAPIcandidatesareadequatefor
addressingthequery. Iftheevaluationreturns“True”,thesolverbeginstoresolvethequeryusingtheAPIcandidateswith
theDFSDTalgorithm. Notethattheplainagentdoesnotinvolveanyself-reflectionmechanism.
11AnyTool:Self-Reflective,HierarchicalAgentsforLarge-ScaleAPICalls
Table10: ComparisonofAnyToolandGPT-4usingvariousplainagentsastheAPIretriever. Theonlydifferenceamong
theseplainagentsliesintheinformationtheycanaccess.
GPT-4Variant G2-I(%) G3-I(%)
w/Names 13.1 13.2
w/Names+Description 15.9 13.2
w/Names+Description+Details 13.1 13.2
AnyTool(Ours) 58.9 63.2
Table11: ComparisonofAnyToolandGPT-4usingvariousAutoGen-RAGagentsastheAPIretriever. Theonlydifference
amongtheseAutoGen-RAGagentsliesintheembeddingmodeltheyuse.
EmbeddingModel G2-I(%) G3-I(%)
text-embedding-ada-002 8.4 7.9
all-mpnet-base-v2 7.4 7.9
AnyTool(Ours) 58.9 63.2
InTable10,weexplorealternativeconfigurationswheretheplainagentcouldaccessbothnamesanddetaileddescriptions
oftoolsandAPIs(every100APIsagroup),orevencomprehensiveinformationincludingthenames,descriptions,and
specificAPIdetails(every50APIsagroup). Ourfindingssuggestthattheadditionofmoredetailedinformationleads
toonlymarginalimprovementsinperformance. Incontrast,ourAnyToolexhibitssuperiorperformance,whichcanbe
attributedtoitshierarchicalstructure.
A.5.GPT-4withVariousAutoGen-RAGAgents
Retrieval-augmentedgeneration(RAG)operatesbyreceivinganinputandsourcingacollectionofpertinentorcorroborative
documentsfromareference,suchasWikipedia. Thesedocumentsarethencombinedwiththeinitialinputprompttoprovide
context. ThisenrichedinputissubsequentlyprocessedbyLLMstogeneratethefinaloutput. TheRAGmethodenhances
theperformanceofLLMsinsituationsthatrequireaccuratefactualinformation.
InTable1ofthemainpaper,wepresentaversionofGPT-4designedfortoolutilization. ThisversionemploysAutoGen-
RAGastheAPIretriever. Theembeddingmodel,knownas“all-mpnet-base-v2”3,isutilizedinthisversion. Specifically,
weintegratethecategorynames,toolnames,APInames,andtheirdescriptionsintoadocument,whichisthendividedinto
numeroustextsegments,eachcontaining1,000tokens. Then,givenauserquery,AutoGen-RAGidentifiesthemostrelevant
segmentsbasedontheembeddingsimilaritiesbetweentheuserqueryandeachtextsegment. Finally,weuseGPT-4to
extractthemostrelevantAPIcandidatesfromtheselectedtextsegments.
Weprovideanothervariant,whereOpenAI’s“text-embedding-ada-002”isusedastheembeddingmodel. Thecomparison
withourAnyToolisshowninTable11.
A.6.ConsumptionAnalysis
In our analysis of resource consumption by AnyTool for solving queries across all datasets, we find that, on average,
each query consumes 13.5×104 tokens, identifies 14.1 API candidates, and involves 43.3 OpenAI API calls and 4.6
self-reflections. Table12presentsthestatisticsforeachdataset. Additionally,calculatingtheprocessingtimeforresolving
querieswithAnyToolisinfeasible. AnyToolreliesonthefunction-callingfeatureofGPT-4,whoseserverresponseisoften
unstable.
A.7.FilteringProcessforToolBench
Weprimarilyscreenoutnon-solvablequeriesinToolBenchbasedonthefollowingprinciples:
• Querieslackingessentialinformation,suchasunspecifiedphonenumbersorambiguousreferenceslike“myfriend”.
3https://huggingface.co/sentence-transformers/all-mpnet-base-v2
12AnyTool:Self-Reflective,HierarchicalAgentsforLarge-ScaleAPICalls
Table12: Consumptionstatisticsforeachdataset.
G1 G2 G3
Statistics ATB Avg.
I T C I C I
AverageTokenConsumption(×104) 13.6 12.1 8.5 17.7 14.8 16.2 12.2 13.6
AverageCallNumber 39.3 38.8 33.8 54.0 57.6 35.7 44.2 43.3
AverageSelf-ReflectionNumber 4.2 3.8 4.1 5.7 5.2 5.1 4.0 4.6
AverageAPICandidateNumber 13.8 13.0 7.7 16.8 16.0 16.3 14.9 14.1
Table13: ExamplesofourAnyToolBench.
Iamcreatinganartprojectabouttheinfluenceofmusiconvisualartsandformycenterpiece,Iwouldlovetohavean
AI-generatedimagebasedonthecurrentnumberonehitsongontheBillboardHot100chart. Couldyouprovideme
withsuchanimagethatencapsulatestheessenceofthesong’BadHabit’bySteveLacy?
For a business presentation on global trends in music and sports performance analysis, could you provide the top
streamingsongsonSpotifyforthemostrecentavailableglobalchartdata,alongwiththecorresponding’helloworld’
placeholdertextthatwillbeusedforintroducingprogrammaticgreetings,andthewin-lossrecordsforNFLteamsfrom
the2022seasontoillustratethecompetitivelandscape?
Couldyouanalyzepotentialprofitorlossfrombitcoinarbitrageamongexchanges,consideringthemarketorderfees,
andcheckiftheIP23.129.64.215isflaggedforanysuspiciousactivity,andwhy? I’minterestedinarbitragebetween
Bitfinex,Kraken,andBittrexforBTC/USDandknowingwhatrisksImightfaceusingthementionedIPaddressfor
transactions.
Iplantoimprovemydailyfitnesslevel,butIalwayslackproperplanning. Mycurrentweightis70kilogramsand
myheightis1.75meters. Giventhis,couldyouprovidemeahealthplanregardingtheweatherconditionforoutdoor
activitiesinNewYorkforthenextfivedaysandthenutritionIintakebyusuallyeatingsalad?
Theseareinherentlynon-solvablesinceAPIsrequireexplicitinputparameters.
• Queriescontainingfakeparameters,suchasnon-existentURLs.
• QueriesthatspecifyaspecificAPIarefilteredoutbecausetheydonotrepresentrealisticscenarios. Moreover,ifthe
problemcanbesolvedusinganotherAPI,itisdifficulttodeterminewhetheritcountsasaresolution.
• Unreasonablequeries,suchasaskingforinformationaboutpopularmoviesonYTS,whicharetoobroadinscopeand
difficulttoevaluate.
A.8.ConstructionofAnyToolBench
WeprovideGPT-4withseveralfunctionstofreelyexploretheentireAPIpool,including{get tools in category,
get tool descriptions,get APIs in tool,get API detail}. Thefunctionalityofthesefunctionsarelisted
in Table 8. GPT-4 then utilizes the add API into API pool function to incorporate the selected APIs into an API
candidatepool. Followingthisstep,GPT-4generatestherequiredparametersfortheseAPIsandformulatesqueriesbased
ontheactualresponsesfromtheseAPIs. WealsopromptGPT-4togenerateasolutionforeachquery,whichsignificantly
reducesthepotentialforhallucinations—thequeriesmaybeformulatedwithoututilizingtheAPIs. Moreover,weenhance
thequalityofthesequeriesbyverifyingthattheprovidedreferencesolutionstrulyresolvethequeries. Thisrigorousprocess
ensuresthateveryqueryinourdatasetissolvable. ThepromptforconstructingAnyToolBenchisdetailedinSectionB.4.
WeshowsomeexamplesofourAnyToolBenchinTable13.
B.Prompts
B.1.BootstrapPromptfortheAPIRetriever
TheAPIretrieveriscomposedofameta-agentalongwithseveralcategoryagentsandtoolagents. Thebootstrapprompts
forthesethreetypesofagentsarepresentedinTable14,Table15,andTable16,respectively.
13AnyTool:Self-Reflective,HierarchicalAgentsforLarge-ScaleAPICalls
Table14: Bootstrappromptformeta-agent.
You are APIGPT, with access to a database of APIs. This database is organized
into the following categories: {categories}. Your task is to help users
identify the relevant categories for their needs. To do this, you can
use the ’query tools in category’ function to retrieve the available tools
within a specific category. If you are unsure about the functionality of
some tools, the ’get tools descriptions’ function can be used to obtain
detailed information about these tools. This information will aid you in
understanding the general functionality of each category. Additionally, the
’create agent category level’ function allows you to assign a relevant category
to an agent, with each agent being assigned only one category. However,
you can assign multiple categories to different agents. It is important
to explore as many categories as possible, as the solution to a query may
be found in unexpected categories. Remember, your goal is not to answer
the query directly but to identify all potentially relevant categories and
assign them to agents. Once you have completed the assignment, call the
’Finish’ function. At each step, you should briefly analyze the current
status and determine your next action, including the function calls needed to
execute your step. Keep your analysis concise, ideally no longer than three
sentences.
Table15: Bootstrappromptforcategoryagent.
You are APIGPT, with access to a database of APIs categorized into various
groups. Each category contains numerous tools, and each tool encompasses
multiple APIs. Your task is to assist users in finding relevant tools within
a specific category. If uncertain about the functionality of some tools, use
the ’get tools descriptions’ function to obtain detailed information. Then,
employ the ’create agent tool level’ function to allocate a subset of pertinent
tools to an agent, ensuring that similar tools are assigned to the same agent
and limiting the allocation to no more than five tools per agent. You may
assign different subsets to multiple agents. Remember, your role is not to
answer queries directly, but to assign all possible tools. Once you complete
the assignment, or if you determine the query is irrelevant to the tools in
the specified category, invoke the ’Finish’ function. Execute each step by
calling the appropriate functions, and keep your thought process concise,
ideally within three sentences.
Table16: Bootstrappromptfortoolagent.
You are APIGPT with access to a database of APIs, categorized into various
sections. Each category contains multiple tools, and each tool encompasses
numerous APIs. Your task is to assist users in finding relevant APIs within
the tools ’{tools}’ of the ’{category}’ category. You will be provided with
descriptions and details of these tools and their APIs. Upon identifying
relevant API names, use the ’add apis into api pool’ function to add them to
the final API list. If you conclude that all possible APIs have been explored,
or if there are no relevant APIs in these tools, invoke the Finish function.
During the process, you may receive feedback on these APIs. At each step,
ensure to execute your actions using the appropriate functions. Keep your
responses concise, ideally within three sentences.
B.2.BootstrapPromptfortheSolver
WeadaptthepromptfromToolLLM(Qinetal.,2023b)toincludea“give up”optionwithoutrestarting. Furthermore,we
promptittoprovideareasonwhenchoosingeither“give up and restart”or“give up”. Thereasonshouldmentionspecific
14AnyTool:Self-Reflective,HierarchicalAgentsforLarge-ScaleAPICalls
Table17: Bootstrappromptforthesolver.
You are AutoGPT, you can use many tools (functions) to do the following task.
First I will give you the task description, and your task start. At each step,
you need to give your thought to analyze the status now and what to do next,
with a function call to actually excute your step. After the call, you will
get the call result, and you are now in a new state. Then you will analyze
your status now, then decide what to do next... After many (Thought-call)
pairs, you finally perform the task, then you can give your finial answer. If
you feel you cannot solve the task or can only solve it partially, you should
choose to give up and give your reason which should mention the names of the
failed functions. Remember: 1.the state change is irreversible, you can’t go
back to one of the former state, if you want to restart the task, say "I give
up and restart" and give the reason. 2.All the thought is short, at most in 5
sentence. 3.You can do more then one try, so if your plan is to continuously
try some conditions, you can do one of the conditions per try. Let’s Begin!
Task description: {task description}
Table18: Bootstrappromptforre-activatingtoolagents.
The current APIs have failed to solve the query, resulting in: {fail reason}.
You need to analyze this result and seek additional APIs. It’s possible that
the tools lack the relevant APIs. In such cases, you should call the Finish
function. Remember not to invent tool or API names.
Table19: Bootstrappromptforre-activatingcategoryagents.
The current APIs have failed to solve the query, and the reason is:
{fail reason}. Please consider assigning more unexplored tools to the agents.
Table20: Bootstrappromptforre-activatingmeta-agent.
The current APIs have failed to solve the query, and the reason is:
{fail reason}. Please consider assigning more unexplored categories to the
agents.
functionnames. Table17detailsthepromptfortheDFSDTimplementation. Thetaskdescriptionincludesdescriptionsof
accessiblefunctions;therefore,itshouldbeupdatedtoreflectchangesintheAPIcandidatepool.
B.3.BootstrapPromptfortheSelf-ReflectionMechanism
Self-reflectionmechanismre-activatesAnyToolsequentially,firstactivatingtheAPIretrieverandthenthesolver. Owingto
thehierarchicaldesignofourAPIretriever,wesystematicallyre-activatevariousagents,followinganascendingorderfrom
toolagents,tocategoryagents,andfinallytothemeta-agent. Thepromptsforre-activatingthetoolagents,thecategory
agentsandthemeta-agentarepresentedinTable18,Table19,andTable20,respectively.
B.4.PromptforCreatingAnyToolBench
ThiscanbefoundinTable21.
C.CaseStudy
In Figure 7, we present a case study that demonstrates the process of resolving a user query using AnyTool. The self-
reflectionmechanismreactivatesthetool,category,andthemetaagentssequentially. Itisworthnotingthatnotallagents
arereactivated. Subsequently,thesolverisreactivatedtoattemptaddressingtheuserqueryagain,utilizingtheupdatedAPI
candidatepool. Thisself-reflectionmechanismcanbeemployedmultipletimesuntiltheterminationcriteriaaremet—either
thequeryisregardedassolvedbytheevaluator,orthenumberofself-reflectionsreachesthemaximumlimit.
15AnyTool:Self-Reflective,HierarchicalAgentsforLarge-ScaleAPICalls
Table21: PromptforCreatingAnyToolBench.
Your task is to interact with a sophisticated database of tools and functions,
often referred to as APIs, to construct a user query that will be answered
using the capabilities of these APIs. This database is organized into various
categories, indicated by {categories}. To guide your exploration and selection
of the appropriate APIs, the database offers several meta functions:
Exploration Functions:
1. Use get tools in category to explore tools in a specific category.
2. Employ get apis in tool to discover the list of APIs available within a
selected tool.
3. If you need detailed information about a tool, get tool descriptions will
provide it.
4. For in-depth understanding of an API’s functionality, turn to
get api details.
Selection and Testing Functions:
1. As you identify relevant functions, add them to your working list using
add apis into api pool.
2. Test these functions by synthesizing and applying various parameters.
This step is crucial to understand how these functions can be practically
applied in formulating your query.
3. Should you find any function obsolete or not fitting your query context,
remove them using remove apis from api pool.
Query Formulation Guidelines:
1.Your formulated query should be comprehensive, integrating APIs from 2
to 5 different categories. This cross-functional approach is essential to
demonstrate the versatility and broad applicability of the database.
2.Avoid using ambiguous terms. Instead, provide detailed, specific
information. For instance, if your query involves personal contact details,
use provided placeholders like {email} for email, {phone number} for phone
number, and URLs like {url} for a company website.
3.The query should be relatable and understandable to users without requiring
knowledge of the specific tools or API names used in the background. It
should reflect a real-world user scenario.
4. Aim for a query length of at least thirty words to ensure depth and
complexity.
Final Steps:
1.Once you’ve crafted the query, use the Finish function to submit it along
with the corresponding answer. The answer should be direct and concise,
addressing the query without delving into the operational plan of the APIs.
2.Remember, the total number of calls to the initial meta functions should not
exceed 20.
3.Consider various use cases while formulating your query, such as data
analysis in business contexts or educational content in academic settings.
Your approach should be creative and inclusive, catering to users with
different skill levels and cultural backgrounds. Ensure that the query is
globally relevant and straightforward, serving a singular purpose without
diverging into unrelated areas. The complexity of your query should stem from
the synthesis of information from multiple APIs.
16AnyTool:Self-Reflective,HierarchicalAgentsforLarge-ScaleAPICalls
Query
“I'm organizing a charity event to raise awareness for animal rights. Can you recommend a book that highlights the
importance of compassion towards animals? Additionally, provide me with a random word that symbolizes unity and
empathy.”
Bootstrap Prompt for the API Retriever
Meta-Agent
1. Call get_tools_in_category('Education')
2. Call get_tools_in_category('Other')
3. Call create_agent_category_level(‘Education’) →Create Category-Agent ('Education')
4. Call get_tools_in_category('Text Analysis')
5. Call create_agent_category_level(‘Text Analysis’) →Create Category-Agent ('Text Analysis')
6. Call finish_search()
Category-Agent ('Education') Category-Agent ('Text Analysis')
1. Call get_tools_descriptions (['GetBooksInfo', 'Book 1. Call get_tools_descriptions (['Random Word by API-
Finder', 'Random Word', 'Dictionary', 'Master Ninjas')
Dictionary', 'Random Words', 'Random Ukrainian 2. Call get_tools_descriptions (['Synonyms Words'])
Word', 'Random Words - Spanish and French']) 3. Call get_tools_descriptions (['Best Paraphrasing
2. Call create_agent_tool_level(['GetBooksInfo', 'Book API'])
Finder'])→Create Tool-Agent-1
3. Call create_agent_tool_level(['Random Word',
'Random Words', 'Random Ukrainian Word',
'Random Words - Spanish and French’]) → Create Tool-Agent-2
Tool-Agent-2
4. Call create_agent_tool_level(['Dictionary', 'Master 1. Call add_API_into_API_pool (['wordSearchEnglish',
Dictionary'])→ Create Tool-Agent-3 'Word infos'])→ Add APIs
5. Call finish_search() 2. Call check_if_request_solvable()
Tool-Agent-1 Tool-Agent-3
1. Call add_API_into_API_pool(['Search','Find 1. Call add_API_into_API_pool (['run.cgi','Get a
books'])→ Add APIs random word'])→ Add APIs
2. Call check_if_request_solvable() 2. Call check_if_request_solvable()
API Candidate Pool
'Search' 'Find books’ 'wordSearchEnglish' 'Word infos' 'run.cgi' 'Get a random word'
Bootstrap Prompt for the Solver
Solver
“Here is a book that might interest you: 'Animal Spy: Animal Welfare Behind Enemy Lines' by Terry Spamer & Gordon
Thorburn. However, due to the query limit, I couldn't generate a random word that symbolizes unity and empathy.
Apologies for the inconvenience.”
Bootstrap Prompt for the Self-Reflection Mechanism
Re-activate:
Updated API Candidate Pool
Tool-Agent-1,Tool-Agent-2, Tool-Agent-3,
Category-Agent ('Text_analysis')
'Find books', 'Get multiple random words’, 'Retrieve Response'
Solver
"Here are some book recommendations that highlight the importance of compassion towards animals: 'Animal Spy:
Animal Welfare Behind Enemy Lines' by Terry Spamer, Gordon Thorburn. A book by Leslie Irvine on the effect of disasters
on animals. The random word generated is 'transcendental', signifying elevated thinking and broader understanding, which
might be seen as relevant to unity and empathy in a broader sense."
Figure7: Illustrationofacasestudy.
17