Task Synthesis for Elementary Visual Programming
in XLogoOnline Environment
ChaoWen1 AhanaGhosh1 JacquelineStaub2 AdishSingla1
1MPI-SWS,{chaowen, gahana, adishs}@mpi-sws.org
2UniversityofTrier,staub@uni-trier.de
Abstract
In recent years, the XLogoOnline programming platform has gained popularity
amongnovicelearners. ItintegratestheLogoprogramminglanguagewithvisual
programming, providing a visual interface for learning computing concepts.
However, XLogoOnline offers only a limited set of tasks, which are inadequate
for learners to master the computing concepts that require sufficient practice.
To address this, we introduce XLOGOSYN, a novel technique for synthesizing
high-quality tasks for varying difficulty levels. Given a reference task, XLO-
GOSYN can generate practice tasks at varying difficulty levels that cater to the
varied needs and abilities of different learners. XLOGOSYN achieves this by
combiningsymbolicexecutionandconstraintsatisfactiontechniques. Ourexpert
study demonstrates the effectiveness of XLOGOSYN. We have also deployed
synthesized practice tasks into XLogoOnline, highlighting the educational
benefitsofthesesynthesizedpracticetasks.
1 Introduction
Inrecentyears,XLogoOnline[9,19]hasemergedasanewplatform,whichuniquelyintegratesthe
traditionalLogoprogramminglanguage[13]withthevisualprogrammingparadigm. XLogoOnline
hasbeenadoptedinhundredsofeducationalcoursesandisutilizedbytensofthousandsofstudents
everyyear[9,18]. XLogoOnline[9]isorganizedintofourprogramminglevels: Mini,Midi,Maxi,
andMega,eachofferingtaskstailoredtospecificagegroups.
We focus on the Mini level (referred to as XLOMini), which centers around problem-solving, in-
corporatingcomputingconceptslikeloopsandbasicmathematics. InXLOMini,learnersaregiven
tasks and a few code blocks, including basic commands forward, back, left, right, the state-
basedcommandsetpencolor,andthecontrolstructurerepeat. Eachtaskcontainsavisualgrid
with a turtle, descriptive text outlining the goal of the task, and code constraints. Learners must
constructthecodesatisfyingthecodeconstraintsandthenexecuteittodirecttheturtle’smovement
toachievethegoal. However,XLOMinionlyoffersalimitedsetoftasks. Thescarcityoftasksmay
hinder learners from mastering computing concepts such as loops and basic mathematics, which
requiresufficientpracticetodeepenlearners’understanding.
Toaddressthis,weproposeXLOGOSYN,atechniqueforsynthesizinghigh-qualitypracticetasksat
aspecificdifficultylevel. Fig.1showsanexampleoftheinputandoutputof XLOGOSYN. Given
areferencetask,itssolutioncode,andthedesireddifficulty,ourtechniquecangeneratenumerous
variedtasks,addressingtaskscarcityandeliminatingtheneedformanuallycraftingtasks.
Ourkeycontributionsinclude: (i)Wedevelop XLOGOSYN,atechniquetoautomaticallygenerate
high-quality tasks at a desired difficulty level; (ii) We conduct an expert study to show that
XLOGOSYN can synthesize tasks with a quality close to those crafted by experts; (iii) We deploy
Preprint.AcceptedasapaperattheAIED’24conferenceinthelate-breakingresultstrack.
4202
yaM
3
]CH.sc[
1v37120.5042:viXraFigure1:IllustrationofXLOGOSYNforreferencetask87fromXLOMini[19]. XLOGOSYN’sinputincludes
areferencetaskTin,itssolutioncodeCin,andthedesireddifficultylevelDforanewpracticetask. Theoutput
includes a generated task Tout and its solution code Cout that satisfies the desired difficulty level w.r.t. the
referencetask.
synthesizedpracticetasksbyXLOGOSYNonXLogoOnlineandreportoninitialresultshighlighting
theeducationalbenefits.1
1.1 RelatedWork
Contentgeneration. Contentgenerationhasbeenexploredindomainssuchasgamecontentgen-
eration[12,17]andmathproblemgeneration[1,14]. Existingworksoftencreateatemplatefilled
with placeholders, followed by a search within this template for solutions [12,14,17]. To search
forsolutions,mostworksfirstencodetheproblemusingalogicrepresentationandthenuseAnswer
SetProgrammingsolvers[12,17]orSatisfiabilityModuloTheories(SMT)solvers[4]. Weemploy
SMTsolvers;however,wefurthercombineSMTsolverswithsymboliccodeexecutiontonavigate
thesearchforsolutionswithinthevisualtaskgrid.
Task synthesis in visual programming. Recent works have studied task synthesis in visual
programming domains. Most approaches utilize constraint solving techniques and symbolic
code execution [7,8], with some recent works also incorporating reinforcement learning-based
strategies to speed up the generation process [11]. However, these works have not considered the
XLOMini domain, which is characterized by a diverse range of task types, grid elements, and
state-based commands (e.g., setpencolor in XLOMini). Furthermore, existing techniques have
notincorporatedtaskdifficultyintothegenerationprocess.
Largelanguagemodelsforprogrammingtasksynthesis. Recentworkshaveexploredlargelan-
guage models (LLMs) to synthesize tasks in programming domains [5,10]. Existing works have
shownLLMs’potentialingeneratingandsolvingtasksfortext-basedprogrammingdomainssuch
asPython[6,15]. However,state-of-the-artLLMsstillstruggleinvisualprogrammingastheyare
unabletocombinespatial,logical,andprogrammingskills[11,16].
2 PreliminariesandProblemSetup
Task and code specifications in XLOMini. A task T := (G,L,W) includes a goal G (the turtle’s
objective), code constraints L (constraints for solution code), and a visual grid world W (a two-
dimensionalgridwithaturtleandelementslikefruitsandwalls). Tosolveatask,alearnerwrites
a solution code that meets the task’s code constraints and achieves the goal when executed on the
visualgridworld. Fig. 2showsexamplesoftasksandtheirsolutioncodesinXLOMini.
Levels of task difficulty. Given a reference task Tin, we define the relative difficulty D of a new
practicetaskToutasfollows:(i)Easy:SolvingToutrequiresnoadditionalconceptsorstepsbeyond
1ImplementationofXLOGOSYNispubliclyavailableat:
https://github.com/machine-teaching-group/aied2024-xlogo-tasksyn
238 (Count): Collect exactly 10 54(Draw): Drawthepicturewith- 87 (Find): Find the strawberry
strawberries. out“forward”. withjust6commands.
def Run(): def Run(): def Run():
forward left forward
left back right
forward repeat(2): repeat(3):
back right forward
left back right
forward repeat(2): forward
... ...
Figure2:IllustrativeexamplesofreferencetasksandtheirsolutioncodesinXLOMini.
whatisrequiredforsolvingTin;(ii)Medium:SolvingToutrequiresadditionalstepsandunderstand-
ingofconceptsbeyondthoserequiredtosolveTin;(iii)Hard:SolvingToutrequiresadditionalsteps
andunderstandingofconceptsbeyondthoserequiredtosolveamediumtaskofTin. InSection3,
we provide concrete criteria for these difficulty levels within the XLOMini domain, as part of the
implementationdetailsforXLOGOSYN.
Evaluationofsynthesizedtasks.Weuseamultidimensionalrubrictoassessthequalityofasynthe-
sizedtask-codepair(Tout,Cout)forareferencetask-codepair(Tin,Cin)ataspecifieddifficultylevel
D. Therubricconsistsofthefollowingfivemetrics: (i)Visualqualityevaluatesthedistinctiveness
andaestheticappealofTout;(ii)Conceptsimilarityevaluatesthealignmentofconceptsbetweenthe
(Tout,Cout)and(Tin,Cin);(iii)ElementsutilityevaluatestheusefulnessofgridelementsinTout;(iv)
Code quality evaluatesthe correctnessof Cout; (v) Difficultyconsistency evaluates the consistency
ofthedifficultyofToutw.r.t. thedifficultylevelD. Domainexpertsrateeachmetriconathree-point
Likert scale: 0 for low quality, 0.5 for acceptable quality, and 1 for excellent quality. The overall
qualityofToutisdefinedastheminimumratingacrossthefivemetrics.
Task synthesis objective. Given a reference task Tin, its corresponding solution code Cin, and
a specified difficulty level D, our objective is to automatically synthesize a set of high-quality
task-codepairs{(Tout,Cout)}(seeFig.1).
3 OurTaskSynthesisTechnique: XLOGOSYN
Inthissection,weprovideanoverviewofourtasksynthesistechniqueXLOGOSYN. Fig.3aillus-
tratesthethreestagesofXLOGOSYN.
Stage1:Generationofcode,codeconstraints,andgoal.Fig.3aillustratesthefirststageofXLO-
GOSYN.ThisstagefirstcreatesatemplateforeachofCin,Lin,andGin[7,8].Thetemplatesexpress
the high-level structures while leaving low-level details unspecified with placeholders. Then, we
fill in the placeholders with specific values using an SMT-based constraint solver [4]. For exam-
ple, inFigs.3b, 3c, and3d, placeholder[B1]isreplacedwith“right”and[fruit_type]with
“lemon”. During instantiation, we also incorporate SMT constraints based on the input difficulty
D. ThedifficultyDcontrolsthedifficultyofthegeneratedoutputs. AtD = Easy, wemaintainthe
original code length without extra constraints. At D = Medium, we allow code sequences up to 2
commandslongerthanCin.AtD=Hard,thecodesequencesneedtobeexactly2commandslonger
thanCinandweallowanextracodeconstraint. Moreover,GoutisallowedtodifferfromGinonlyat
D=Hard. Afterthisstage,weobtain(Cout,Lout,Gout),alignedwiththespecifieddifficultylevelD.
Stage 2: Generation of visual grid world. This stage synthesizes a visual grid world Wout
using the outputs (Cout,Lout,Gout) from the previous stage. First, we create an empty grid and
randomlyinitializetheturtle’sstartinglocationanddirection(seeFig.3a). Then,wesymbolically
executecodeCout ontheemptygridusinganemulator,producingatrajectoryofvisitedgridcells
(v ,v ,··· ,v ), highlighted in red in Fig. 3a. Next, we use the goal Gout and the trajectory to
1 2 n
formulateSMTconstraintsconcerningtheplacementofvariousgridelementssuchasfruits,walls,
etc. Forexample,ifthegoalis“Findthestrawberry”,astrawberrymustbeplacedinthefinalgrid
cell v . An SMT solver solves these constraints to generate a visual grid world Wout. Finally, we
n
merge Wout with the outputs from the previous stage (Cout, Lout, Gout), to obtain output task-code
pairs(Tout,Cout),whereTout =(Gout,Lout,Wout).
3(a)StagesofourtasksynthesistechniqueXLOGOSYN
def Run(): def Run(): def Run(): Lin = "Use just 6 commands"
f ro ir gw ha trd [ [B B1 2]
]
r fi og rh wt
ard
SLin
= "Use [cons_type] [N] commands"
repeat(3): [B3] left Lout = "Use just 8 commands"
forward repeat([X]): repeat(4): (c)Lin,SLin,Lout
right [B4] forward
forward [B5] right Gin = "Find the strawberry"
[ [B B6 7]
]
f fo or rw wa ar rd
d
SGin
= "[task_type] the [fruit_type]"
[B8] Gout = "Find the lemon"
(b)Cin,SCin,Cout
(d)Gin,SGin,Gout
Figure3: (a)illustratesthestagesof XLOGOSYN. (b)–(d)showexamplesofdifferentcomponentsafterap-
plyingthesestagestoFig.1(Input). Specifically, (b)showstheinputcode, itssketch, andtheoutputcode,
whereB1,B2,···,B8∈{None,left,right,...}andX∈{2,3,...}. (c)showstheinputcodeconstraints,
itssketch,andtheoutputcodeconstraints,wherecons_type∈{AtMost,Exactly,StartBy,None}andN∈
{1,2,...}. (d)showstheinputgoal,itssketch,andtheoutputgoal,wheretask_type∈{Find,FindOnly,
FindForbid,...}andfruit_type∈{strawberry,lemon}.
Stage 3: Task scoring. In the final stage, we apply a scoring function to evaluate the quality
of task-code pairs {(Tout,Cout)}, inspired by scoring functions considered in literature on task
synthesisforvisualprogramming[7,8].
4 Evaluationof XLOGOSYN UsingExpertStudy
Techniquesevaluated. Wecompare XLOGOSYN withthreedifferenttechniques. Eachtechnique
acceptsaninputspecification(Tin,Cin,D),whichincludesthereferencetask,itscorrespondingso-
lutioncode,andthedesireddifficultylevelrespectively,andgeneratestheoutputtask. Weconsider
thefollowingbaselines:
1. EXPERTSYNinvolvesanexpertinXLOMinicarefullycraftingataskToutanditscodeCout
basedontheinputspecification.
2. HUMANSYN uses a collection of 1,331 user-created tasks from XLogoOnline to create
tasksandsolutioncodes[9]. Duringthecreationofthiscollection,userscreatedtheirtasks
withoutspecificreferencetaskstoguidetheirsynthesisprocess. Giventhiscollectionand
the input specification, this technique generates a task and its solution code as follows:
theexpert(thesameastheonein EXPERTSYN)selectsataskTout thatmatchestheinput
specification from the collection, considering only tasks of the same type as Tin. After
selectingTout,theexpertcraftsanoptimalsolutioncodeCoutforTout.
3. ROTATEFLIP generates tasks by applying rotations and flips to the input task’s grid. For
D = Easy, it rotates the grid 90 degrees counterclockwise without altering Cout. For D =
Medium,itperformsamirrorflipofthegridandadjustsCouttomatchtheflippedgrid. For
D=Hard,itperformsbothrotationandmirrorflipforToutandadjustsCoutasneeded.
Experimental setup. We selected 24 reference tasks from XLOMini covering a broad range of
concepts. Forthesereferencetasks,wegeneratedpracticetasksatEasy,Medium,andHardlevels
4Figure4: Theperformanceofourtechnique XLOGOSYN andthreebaselinetechniques. Onthex-axis, we
presenttheaggregatedresultsoverallscenarios(All),followedbyaggregatedresultsbasedontaskdifficulty
(Easy,Medium,andHard)andbasedon8tasktypes. They-axispresentsthescoreforoverallquality. XLO-
GOSYNdemonstratesperformanceclosetoEXPERTSYN,andsurpassesbothHUMANSYNandROTATEFLIP.
witheachtechnique.Weconsidered288scenarios(24referencetasks×3difficultylevels×4tech-
niques). However,forHUMANSYN,15scenariosofDrawtypeweremissingfromthecollectionof
user-created tasks (5 Draw tasks × 3 difficulty levels), resulting in a final count of 273 scenarios.
Twoindependenthumanevaluators,notinvolvedinEXPERTSYNorHUMANSYN,scoredeachsce-
nariobasedontherubricinSection2. Thefinalscoreforascenariowasderivedbyaveragingthe
scoresprovidedbythetwoevaluatorsaggregatedoverdifferentdimensions. Duringevaluation,the
originofeachscenariowashiddenandscenarioswerepresentedinarandomizedorder.
Results. Wefirstcheckedtheinter-raterreliabilityofthetwohumanevaluatorsusingthequadratic-
weightedCohen’skappascore[3], achievinganear-perfectagreementof0.84. Next, wecompare
XLOGOSYN’s performance w.r.t. baseline techniques and report statistical significance using
χ2-test [2]. The results are shown in Fig. 4. XLOGOSYN has an overall quality score of 0.67
and is: (i) significantly lower than EXPERTSYN that has a score of 0.89 (χ2 = 38.8;p < 0.01);
(ii) significantly higher than HUMANSYN that has a score of 0.26 (χ2 = 75.5;p < 0.01); and
(iii) significantly higher than ROTATEFLIP that has a score of 0.31 (χ2 = 125.2;p < 0.01). All
techniques show a performance decline with increasing task difficulty, indicating that generating
more difficult tasks remains challenging for all, including experts. We found that HUMANSYN
strugglesbecauseuserscreatetaskswithoutanyreferencesandtendtoincorporatediverseconcepts
inatask. ROTATEFLIPiseffectiveingeneratingEasytasks;however,itsperformancedropstozero
forMediumandHardtasks,indicatingthatrotationsandflipsarenotsufficientforgeneratingtasks
ofhigherdifficultylevels.
5 DeploymentonXLogoOnlineandInitialResults
In this section, we present the current status of our deployment and report on initial results. We
have deployed the synthesized practice tasks into the XLogoOnline platform. For each reference
task on the platform, XLOGOSYN synthesized 10 tasks across three difficulty levels: 3 Easy,
4 Medium, and 3 Hard. After attempting a reference task, learners can choose to attempt the
synthesized practice tasks or move to the next reference task by clicking the “Next” button on the
platform. Preliminarystatistics,basedondatacollectedonXLogoOnlinefromNovember2023to
March 2024, show around 13,000 visits on the platform and over 600,000 execution attempts to
solve tasks. Out of these attempts, 87% were on reference tasks, and 13% were on practice tasks
synthesizedbyourtechnique.
Next, weanalyzethedatatoinvestigatetheeducationalbenefitsofsynthesizedpracticetasks. We
aim to answer the following research question: Do synthesized practice tasks enhance learners’
success rates on the next reference tasks? To this end, we analyze two groups: (i) The first group
consistedoflearnerswhofailedareferencetaskandthenmoveddirectlytothenextreferencetask
withoutattemptinganysynthesizedpracticetasks;(ii)Thesecondgroupconsistedoflearnerswho
failed a reference task, then attempted the synthesized practice tasks of this reference task, and
finallymovedtothenextreferencetask.
Forcomparison, we definethe successrate ofa groupoflearners w.r.tatask asthepercentage of
learners who successfully solved a task at least once. We calculate success rates for both groups
across 36 pairs of consecutive reference tasks on the platform. The first group comprises 4,477
learners,withasuccessrateof49.2%. Thesecondgroupincludes75learners,withahighersuccess
5rate of 68.0%. These initial results indicate that synthesized practice tasks have the potential to
enhancesuccessratesonthenextreferencetask.
6 LimitationsandFutureWork
In this section, we discuss some limitations of our current work and ideas to tackle them in the
future. First, we specify the difficulty of the synthesized tasks using pre-defined rules, which
may not align with learners’ perception of task difficulty. In the future, it would be important to
deriveamorerefinednotionoftaskdifficultybyanalyzinglearners’interactionswiththeplatform.
Second, XLOGOSYN does not incorporate a learner’s code during task synthesis, which limits its
effectiveness in personalizing practice tasks. It would be interesting to extend our technique to
generate tasks personalized to the learner’s misconceptions on the platform. Third, in our current
implementation, generating a single high-quality task using our technique is time-consuming as it
requiressynthesizingandselectingfromalargepooloftasks.Infuturework,itwouldbeinteresting
to develop learning-based strategies and explore generative AI models to accelerate the synthesis
processwhilemaintainingthehighqualityofthesynthesizedtasks.
Acknowledgments. Funded/Co-fundedbytheEuropeanUnion(ERC,TOPS,101039090).Views
andopinionsexpressedarehoweverthoseoftheauthor(s)onlyanddonotnecessarilyreflectthose
of the European Union or the European Research Council. Neither the European Union nor the
grantingauthoritycanbeheldresponsibleforthem.
References
[1] Chris Alvin, Sumit Gulwani, Rupak Majumdar, and Supratik Mukhopadhyay. Synthesis of
GeometryProofProblems. InAAAI,2014.
[2] WilliamGCochran. Theχ2TestofGoodnessofFit. TheAnnalsofMathematicalStatistics,
1952.
[3] JacobCohen.ACoefficientofAgreementforNominalScales.EducationalandPsychological
Measurement,1960.
[4] Leonardo Mendonça de Moura and Nikolaj S. Bjørner. Z3: An Efficient SMT Solver. In
TACAS,2008.
[5] PaulDennyetal. GenerativeAIforEducation(GAIED):Advances,Opportunities,andChal-
lenges. CoRR,abs/2402.01580,2024.
[6] TungPhungetal. GenerativeAIforProgrammingEducation: BenchmarkingChatGPT,GPT-
4,andHumanTutors. InICERV.2,2023.
[7] UmairZ.Ahmedetal. SynthesizingTasksforBlock-basedProgramming. InNeurIPS,2020.
[8] AhanaGhosh, SebastianTschiatschek, SamDevlin, andAdishSingla. AdaptiveScaffolding
inBlock-BasedProgrammingviaSynthesizingNewTasksasPopQuizzes. InAIED,2022.
[9] Juraj Hromkovic, Giovanni Serafini, and Jacqueline Staub. XLogoOnline: A Single-Page,
Browser-Based Programming Environment for Schools Aiming at Reducing Cognitive Load
onPupils. InISSEP,2017.
[10] OpenAI. ChatGPT. https://openai.com/blog/chatgpt,2023.
[11] Victor-AlexandruPadurean,GeorgiosTzannetos,andAdishSingla.NeuralTaskSynthesisfor
VisualProgramming. Trans.ofMachineLearningResearch,2023.
[12] KyungjinPark,BradfordW.Mott,WookheeMin,EricN.Wiebe,KristyElizabethBoyer,and
James C. Lester. Generating Game Levels to Develop Computer Science Competencies in
Game-BasedLearningEnvironments. InAIED,2020.
[13] RoyDPea. LogoProgrammingandProblemSolving. 1987.
[14] Oleksandr Polozov, Eleanor O’Rourke, Adam M. Smith, Luke Zettlemoyer, Sumit Gulwani,
andZoranPopovic. PersonalizedMathematicalWordProblemGeneration. InIJCAI,2015.
[15] SamiSarsa,PaulDenny,ArtoHellas,andJuhoLeinonen. AutomaticGenerationofProgram-
mingExercisesandCodeExplanationsUsingLargeLanguageModels. InICER,2022.
6[16] AdishSingla. EvaluatingChatGPTandGPT-4forVisualProgramming. InICERV.2,2023.
[17] AdamM.SmithandMichaelMateas. AnswerSetProgrammingforProceduralContentGen-
eration: ADesignSpaceApproach. IEEETransactionsonComputationalIntelligenceandAI
inGames,2011.
[18] JacquelineStaub. LogoEnvironmentsintheFocusofTime. BulletinofEATCS,2021.
[19] XLogoOnline. XLogoOnlinePlatform. https://xlogo.inf.ethz.ch/,2023.
7