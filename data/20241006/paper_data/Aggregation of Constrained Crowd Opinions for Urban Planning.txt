Aggregation of Constrained Crowd Opinions for Urban Planning
Akanksha Das, Jyoti Patel and Malay Bhattacharyya
Indian Statistical Institute
Kolkata – 700108
India
E-mail: akankshadas2020@gmail.com, jyotiinfinite72@gmail.com, malaybhattacharyya@isical.ac.in
October 4, 2024
Abstract
Collective decision making is often a customary action taken in government crowdsourcing. Through
ensemble of opinions (popularly known as judgment analysis), governments can satisfy majority of
the people who provided opinions. This has various real-world applications like urban planning or
participatorybudgetingthatrequiresettingupfacilitiesbasedontheopinionsofcitizens. Recently, there
is an emerging interest in performing judgment analysis on opinions that are constrained. We consider a
new dimension of this problem that accommodate background constraints in the problem of judgment
analysis, which ensures the collection of more responsible opinions. The background constraints refer to
the restrictions (with respect to the existing infrastructure) to be taken care of while performing the
consensus of opinions. In this paper, we address the said kind of problems with efficient unsupervised
approaches of learning suitably modified to cater to the constraints of urban planning. We demonstrate
the effectiveness of this approach in various scenarios where the opinions are taken for setting up ATM
counters and sewage lines. Our main contributions encompass a novel approach of collecting data for
smart city planning (in the presence of constraints), development of methods for opinion aggregation in
various formats. As a whole, we present a new dimension of judgment analysis by adding background
constraints to the problem.
1 Introduction
Crowdsourcing has shown an immense promise in effectively employing the power of human (termed as the
crowd, be a collection of experts, non-experts, or their mixture) to solve a variety of real-world problems
at scale during the last couple of decades [9, 10, 11]. Judgment analysis is an important mechanism in
crowdsourcing that involves collecting opinions from the crowd, followed by yielding a consensus of the
opinions to address a problem [5]. This mechanism is itself a challenging computational problem to solve,
given its newer dimensions added in the area of crowdsourcing, as opposed to the traditional judgment
analysis introduced much earlier [6].
Unlike traditional judgment analysis, where we need domain experts, systems that require to perform
judgment analysis on crowdsourced data employs common people. Opinions in this form put forward
a new set of challenges because of the sparsity and multi-dimensionality of opinions. There are earlier
attempts to develop a generalized approach of judgment analysis toward dealing with multi-dimensional
opinions received from the crowd [5]. However, obtaining the consensus of multi-dimensional opinions is still
challenging because of the latent associations between the different dimensions of an opinion. Generally,
these associations are verified by setting up constraints between the opinions [3, 4], thereby forming the
constrained judgment analysis problems. But unfortunately, they can never ensure the collection of reliable
opinions from the crowd. Moreover, a simple consensus of opinions does not guarantee providing a valid
option as the final judgment. In this work, we address this issue by developing reliable constrained judgment
analysis by adding background constraints to the problem. This approach helps to obtain a better consensus
of multi-dimensional opinions with hidden constraints taken into consideration.
1
4202
tcO
3
]CH.sc[
1v45420.0142:viXraTo better understand how the general constraints, which are traditionally used in constrained judgment
analysis, are treated separately from the newly introduced constraints. We formally define these two types
of constraints as follows.
• Main Constraints: The main constraints are basically restrictions designated between only the
opinions to be collected from the crowd.
• Background Constraints: The background constraints are basically restrictions designated between
the opinions and the background information.
We have applied and experimented this new version of constrained judgment analysis with the help of
two different case studies. We have demonstrated the utility of this model for strategic planning of smart
cities in general. Additionally, we have put forth a paradigm that can handle complex viewpoints while
upholding limitations. The novelty of the current paper lies in the following things.
1. We introduce a novel problem related to crowd judgment analysis where multiple types of constraints
are taken into account.
2. We propose a novel opinion aggregation approach that can deal with different forms of opinions (points
or lines).
3. The efficacy of the proposed method is shown by applying it on both point and line based opinion
aggregation.
As a whole, the current work bears novelty in both methodology and applications.
2 Basic Terminologies
Let us introduce the basic terminologies that will be used throughout the paper. We involve four major
terms, namely question, annotator, opinion, and gold judgment.
A question is simply a labeling task. E.g., it can be the annotation of an image or a text (like tweets,
online posts, etc.). In the current work, the questions are related to locations of objects.
An annotator is essentially the crowd worker who provide the opinion (annotates a label) over the given
question. Annotation can be thought of as a function that returns one of the available options according to
some procedure. An annotator may be paid for answering the questions or can be volunteers. In the current
work, the annotators are volunteers.
An opinion is the judgment given by an annotator for a particular question. Generally, the opinion
should be chosen from an opinion set. However, in the current work, the opinions are chosen from a bounded
but continuous space in R2. The opinions are represented as coordinates, the question being related to a
point or a line.
The gold judgment is the original true label of the question. The questions are distributed among the
annotators soliciting their individual opinions. Then the aggregation is done to predict the gold label. The
deviation of the predicted label from the gold label can be easily computed. In the current work, the gold
judgments are not defined. Therefore, the idea of obtaining a gold judgment is exploratory by nature.
3 Motivation
Our major motivation in this work is collecting opinions from the crowd workers in a way such that random
inputs are avoided as much as possible. The purpose of collecting opinions is setting up facilities in a smart
city. The smart city planning considers the inclusion of the said facilities in many different forms like the
establishment of ATM counters, sewage lines, etc.) based on the opinions received from the crowd. As the
opinions might be points, lines, polygons, etc., we need a flexible approach to deal with the aggregation
problem. Moreover, the constraints are learned from the practical setting of the problem.
24 Related Work
A good summary of different judgment analysis problems can be found in a review by Chatterjee et al. [5].
The problem of aggregating constrained judgments was first introduced in a legal setting [7]. Dietrich et al.
added explicit constraints to the opinions bringing the rationality conditions of consistency in the picture.
The variations of this somewhat makes the notions of rationality flexible in the exogenous constraints. This
paper presents some interesting theoretical results on constrained judgment aggregation. However, this
approach was not generalized, and was unable to consider relationships between and reliability of opinions.
In many tasks, like protein structure prediction the relationship among various options are taken into
consideration [14]. Peng et al. attempted to bring constraints into the crowd judgment judgment analysis in
an associative way. However, it assumes that most of the workers are reliable and annotators can be easily
grouped based on their opinion patterns. Though the formation of similarity matrices between annotators is
meaningful for protein structure prediction, it cannot be used in a generic way for other problems. Moreover,
these formulations are easy to be addressed with majority voting (to be specific kernelized majority voting).
But for other problems, where opinions are in more complex forms (say coordinates), majority voting cannot
ensure the satisfiability of the specified constraint.
Chatterjee et al. introduced the concept of a more complex form of opinions and added constraints
between the opinions taken [4]. This was basically done for smart city planning, however consequently,
many other possible applications were also shown [3]. This was about considering a consensus of points
where the input points must satisfy the constraints. There were also the same constraints applicable to
the final consensus obtained. However, this approach took a filtering strategy to remove the opinions that
dissatisfy the constraints. First of all, this reduces the number of opinions. Secondly, it does not ensure a
reliability of opinions by restricting the workers. In this way, constrained opinions are managed entirely
in an ad hoc basis for a particular application. In this work, where the opinions are multiple ordinates
of a location represented with real values, a Bayesian binning approach is adopted for resolving validity
problems of opinions and then a probabilistic graphical model is applied. However this work, on smart city
planning, does not provide a general framework for judgment analysis on multi-dimensional opinions where
many other latent relations are possible. In recent years, constrained judgment analysis problems have been
attempted using metaheristic approaches [1, 2]. However, no new dimension of the problem has been added.
Unfortunately, there is no existing work that makes use of dependency between multi-dimensional
opinions and background details to develop a generic opinion elicitation model, which is one of the major
goals of this work. Our work provides a generalized framework to deal with constrained opinions toward
judgment analysis aiming various real-life applications. Unlike the existing approaches of judgment analysis,
we also aim to collect opinions in a way such that annotators are made responsible toward their opinions.
There is a close connection of our work, which considers opinions in different forms, with the problem of
clustering of objects [8]. As we consider points and lines as opinions, clustering of lines becomes a challenging
problem to deal with. There are limited attempts in the literature to form clusters of lines. Peretz was the
first to bring the idea of extending centroid-based clustering to lines [15]. Leter Marom et al. have extended
this to more interesting applications [12, 13]. Our problems are indeed novel, however, the proposed methods
are inspired by these works.
5 Empirical Analysis on Urban Planning
Ourprimarycontributioniseffectivelyincorporatingbackgroundconstraintsinconstraintjudgementanalysis.
The constraints (main and background) are specific to the type of facilities to be set up and the format in
which the opinions (points or lines) are collected from the crowd workers. We exhibit how the background
infrastructure can included in the data collection process to reduce the amount of erroneous data and how
increasing the amount of background information automatically incorporates certain background constraints
that are difficult to verify after the data is collected (see Case Study 1). In addition to that, instead of
removing the data-points that do not satisfy the constraints, we adjust the data points slightly wherever
3possible such that it retains the essence of the original opinion but satisfies the constraints (see Case Study
2). Traditionally, judgement analysis has been done by assuming that the opinions collected from the crowd
workers are in the form of points but in certain applications (see Case Study 2), it is important to denote
the opinions as lines instead of points. We suggest a model inspired from k-median of lines with Hausdorff
distance [12, 13], and discuss its benefits over the distance measure used by Marom et al. [12, 13].
It is important to note that the constraints that we wish to consider are purely situation specific, we
exhibit our contributions through the following two case studies of establishment of ATMs and Sewage
Planning deals with point opinions and line opinions respectively (see Table 1). In Case Study 1, 38 crowd
workers based in an office in Chandni Chawk, Kolkata suggest 6 ATM locations each, 3 of them without
the knowledge of existing ATMs of their preferred banks in the area and the rest with the knowledge of
existing ATMs of their preferred banks in the area. We do a comparative analysis on the two sets of opinions
collected. In Case Study 2, 50 respondents from all over Kolkata propose 3 unique sewage lines each. In
Case Study 2, 50 respondents from all over Kolkata propose 3 unique sewage lines each. We study how
faulty opinions may be adjusted and/or retained while still yielding a constraint satisfying consensus. In
each of the following case studies, data has been collected from a diverse group of people with varying levels
of education. The statistical details of the crowd workers are summarised in Table 2.
Case Study Opinion Facility # Respondents
1 Point ATM 37
2 Line Sewage line 50
Table 1: Summary of the problems and data collected under the Case Study 1 and 2.
Case Gender # Graduate Location
Study Ratio (F:M) Respondents
1 1:12 31 (≈ 82%) 10, Madan
Street,
Chandni
Chawk
2 1:4 39 (78%) Greater
Kolkata
Table 2: Statistical and background details of the crowd workers employed in the two different case studies.
6 Case Study 1: Establishment of ATMs
Our principal aim is to establish 3 ATMs based on the opinions given by the crowd worker and each
crowd-worker is allowed 3 opinions. This problem has been explored in constraint judgement analysis with
certain main constraints, which are constraints on the opinions only [4]. We introduce certain background
constraints in the problem and analyse the effect of background details, included while collecting the data.
We collect the opinions in the form of coordinates (pair of latitude and longitude) corresponding to the
location of the ATMs, desired by the crowd workers on Google Maps both with and with out providing
the information of the location of existing ATMs to the crowd workers. This aids us in comparing the
data obtained in the above scenarios by the same crowd worker and observations from the comparative
analysis provide us with insight on how to significantly reduce the percentage of data that violates the
constraints imposed, hence it would allow the retention of more opinions (that would otherwise be removed)
and subsequently lead to a better consensus. We specify the main and background constraints below.
Main Constraints [4]:
• Boundary: The proposed ATM should lie in the Chandni Chawk Area.
4• Intra-Separability: The three ATMs proposed by a crowd worker should be at least 100m apart
from each other to ensure the uniqueness of the opinions.
Background Constraints:
• Inter-Separability : Every opinion of a crowd worker must be at at least some distance apart from
the existing ATMs of the same type unless the existing ATM is not in an open space. This ensures
that the new ATMs do not overlap with the existing ones.
• Location : The location of ATMs should be in an open space, preferably on the roadside.
• Preferential Treatment : Preference should be given to the opinions that do not have existing
ATMs of the same type.
6.1 Data Collection
The data was collected from 37 workers of an office in 10, Madan Street, Chandni Chowk, Kolkata. The
respondents belong to different age groups and have varying educational qualifications. Each crowd worker
suggests 3 locations of ATMs of the desired bank on the Google Map of Madan Street, Chandni Chawk and
3 locations of ATMs of the above type after the existing ATMs of that type are marked on the map. Other
than that, we have also discussed with the crowd workers why do they think the existing ATMs are not
sufficient and the challenges they face because of it. Their views are presented in the Discussion section.
We have decided on the aforementioned constraints and model based on our conversations with the crowd
workers. We have obtained 2 datasets with 37 entries each namely, ATM1 and ATM2 where ATM1 deals
with the data collected without the associated background details while ATM2 deals with the data collected
with background details.
6.2 Handling the Background Constraints
Constraint Analysis in ATM1: Data in ATM1 already includes background details like location of roads,
Chandni Chawk area demarcation hence all its opinions automatically follow the Boundary and Location
constraints. In addition to that, none of the crowd workers have repeated their opinion. This may have
been the result of our dataset having 82% graduate respondents. As some of our crowd workers were not
aware of the explicit location of ATMs, we have some violations (≈ 5%) of the Inter-separability constraint.
Constraint Analysis in ATM2: Data in ATM2 includes background details like location of roads,
Chandni Chawk area demarcation hence all its opinions automatically follow the Boundary and Location
constraints. In addition to that, none of the crowd workers have repeated their opinion. This may have
been the result of our dataset having 82% graduate respondents. Contrary to ATM1, all our crowd workers
are aware of the explicit location of ATMs in the vicinity hence we have no violations of Inter-separability
constraint.
Note that the Preferential Treatment constraint has been dealt with in the model of Judgement Analysis.
Dataset # Proposed # Opinions Violating Error
ATMs Inter-separability
ATM1 111 6 ≈ 5%
ATM2 111 0 0%
Table 3: Analysis of constraints pertaining to ATM1 and ATM2.
6.3 Model of Judgment Analysis
After removing the erroneous data (if any as in ATM2), we have to decide the the banks of the ATMs that
have to be constructed. From Table 4, we can see that the proposed ATMs of different banks are in the
5Associated # Existing ATMs # Proposed
Bank within 300m within 750m ATMs
SBI 1 1 51
AXIS 2 > 5 24
ICICI 1 2 21
BOB 0 1 6
HDFC 1 > 5 6
IDBI 2 2 3
Table 4: Number of existing and proposed ATMs of different banks near 10, Madan Street, Chandni Chawk.
ratio 17:8:7:3:3:1, hence the ATMs should be in the same ratio i.e 2 ATMs of SBI and 1 ATM of AXIS bank
but as we can see ICICI bank has almost the same number of proposed ATMs as Axis Bank. Hence, here
we employ the constraint of Preferential Treatment. AXIS bank has sufficient number of existing ATMs in
the vicinity hence we chose ICICI bank as both SBI and ICICI have less than 3 ATMs within 750m. Hence,
we construct 2 ATMs of SBI and 1 ATM of ICICI bank. Now, we apply the constrained judgement analysis
algorithm propsoed by Chatterjee et a.. [4] separately on the 51 ATMs of SBI to get 2 ATM locations and
21 ATMs of ICICI to get 1 ATM location. This is our final consensus.
6.4 Results and Observations
Though the same crowd worker presents two sets of opinions, they are almost always significantly different
from each other. In the first scenario, the crowd worker almost always thinks of his personal interests and
marks the exact locations where he/she is most likely to withdraw money from. On the other hand, knowing
the locations of existing ATMs, makes the crowd worker something of a town planner himself who tries
to base the location of the ATM that is also aligned to the community need along with his/her personal
requirements. This leads to a more responsible set of opinions and hence a better consensus. This also
reduces the amount of random opinions as crowd workers with no specific need for ATMs can base their
opinions on the location of existing ATMs. Hence, a detailed background while collecting data is key to the
right consensus.
7 Case Study 2: Sewage Planning
In this problem, we consider the opinions in the form of line segments, precisely on a map.
7.1 Problem Statement
We demarcate the area given for sewage planning and construction as a convex region. We consider the
Euclidean distance measure between any two points (in R2) to symbolize their closeness. For simplicity, we
denote a sewage line in terms of the coordinates of its end points. Let there be k existing background sewage
lines provided beforehand inside the given region. To set up additional sewage lines, we seek opinions from
the crowd workers, where each crowd worker suggests k∗ number of new sewage lines. We have to find their
consensus satisfying some constraints such that they deem fit in the model as reliable opinions.
To exemplify the problem, let us consider that we have a smart city under development (as shown in
Fig. 1), and we want to construct sewage lines based on opinions from the crowd, with citizens participating
as annotators. The boundary area represents the city being designed. The annotators provide their opinions
on where the sewage lines should be constructed, represented by dashed lines. These opinions form the
suggested paths for the sewage lines.
There are certain constraints in place for constructing the sewage lines. Firstly, each sewage line
should have a maximum length to ensure efficient and manageable infrastructure. Additionally, there is a
6Figure 1: An example scenario of judgment analysis with background constraints is shown. The outside
boundary denotes the area under consideration for sewage planning and construction. The problem aims to
set up new sewage lines in a city by taking suggestions (opinions) from the crowd. We consider that each
crowd provides two opinions in this regard. Judgments are to be derived by computing consensus of the
suggested sewage lines (shown as dashed lines) opined by the crowd. Background constraints are related to
the sewage lines already in existence (shown as solid lines). In this example, the background constraint is:
(1) Each suggested sewage line must have at least one intersection point with the existing sewage lines, and
the additional general constraints are: (2) Each suggested sewage line must have a maximum length, and (3)
A pair of suggested sewage lines must have a minimum distance between themselves. Note that the opinions
given by the crowd 4, 5 and 6 satisfy all the constraints and are valid. However, the opinions of crowd 1
does not satisfy the constraints (2) and (3), the opinions of crowd 2 does not satisfy the constraints (1) and
(2), and the opinions of crowd 3 does not satisfy the constraints (1) and (3). Hence, the final judgment is
obtained from the consensus of valid opinions provided by the crowd 4, 5 and 6 only.
7requirement for a minimum distance between two sewage lines to avoid congestion and optimize the layout
of the city. However, not all opinions received from the crowd are acceptable.
The constraints that we formally take into account can be broadly categorized into two types, namely
main and background constraints.
• Main Constraints: The main constraints only involve the proposed sewage lines and deal with the
area in which the sewage lines should be enclosed, minimum separability between two lines proposed
by the same crowd worker, congestion among the finally proposed sewage lines and budget constraints.
1. Boundary: If l is a proposed sewage line by a crowd worker then l should lie inside convex
region P
2. Intra-Separability: If l and l are sewage lines suggested by the same crowd worker then
1 2
any one of l or l should be rejected if d (l ,l ) < D where d denotes the constraint measure.
1 2 1 1 2 1 1
This ensures that that each crowd worker gives k∗ many well-spaced opinions with no chances of
repetition.
3. Intra-Congestion: The final sewage lines proposed as the result of the consensus should be
pairwise at least D distance apart with respect to constraint measure.
2
4. Length: To pertain to the Budget, the length of the final sewage lines proposed as the result of
the consensus should be less than or equal to L.
• Background Constraints: The background constraints involve the existing sewage lines along with
the proposed sewage lines and deal with connectivity, minimum separability of background sewage
lines with proposed sewage lines and congestion of the new sewage lines to be constructed with existing
ones.
1. Intersection: If l is a suggested sewage line then l should share at least one end point with one
of the background sewage lines. This ensures that the sewage lines are well connected.
2. Inter-Separability: If l is a sewage line proposed by a crowd worker then l should be rejected
if d (l,b) > D , where b is any existing sewage line. This ensures that the new sewage lines
1 1
proposed maintains a suitable distance with the background sewage lines.
3. Inter-Congestion: The final sewage lines proposed as the result of the consensus should be at
least D distance apart with respect to constraint measure, from every background sewage line.
2
This ensures that the new sewage lines to be constructed are not congested with the existing
sewage lines.
It is important to understand that though we are considering the same distance measure for Separability
and Congestion, they serve unique purposes. While Separability ensures that all opinion by the same crowd
worker be distinguishable by a certain distance, Congestion constraint ensures the new sewage lines to be
constructed are not too close to each other. Separability constraint is applied to remove erroneous data
while Congestion constraint ensures proper sewage architecture.
7.2 Data Collection
The data was collected through a Google Form showing the following image that reflects the existing sewage
lines (aka Cannels) of the drainage system in Greater Kolkata. Look at the coordinates on the map shown
below and suggest coordinates (within the range (0, 0) to (42, 18)) for constructing new sewage lines. You
should obey the following constraints.
1. Your suggested sewage line should not be of length (Euclidean distance between the two end points)
more than 10 units.
82. Your suggested sewage lines should be at least 10 unit distant (minimum Euclidean distance) from
each other.
3. Your suggested sewage line should have an intersection with an existing Cannel. Provide a pair of
coordinates (as (x1, y1), (x2, y2)) to denote the end points of the FIRST sewage line you suggest.
7.3 Handling the Background Constraints
To handle the background constraints, we perform revisions of the input opinions.
7.4 Model of Judgment Analysis
We deal with the constraints at two phases of the proposed approach – pre-processing and post-processing.
While in the former phase, the proposed sewage lines are converted into valid opinions (to satisfy the
constraints like Boundary, Intra-Separability, Inter-Separability and Intersection), in the latter one, the
consensus opinions are corrected (to satisfy the constraints like Intra-Congestion, Inter-Congestion and
Length). We propose an algorithm that segregates the entire approach into three parts, namely (i) filtering
or adjusting the opinions, which violate the pre-Processing constraints. (ii) grouping the opinions yielding
the centroids as the initial consensus of opinions, (iii) returning the final consensus of opinions that satisfy
both pre-processing and post processing constraints.
We can simply visualize the step (ii) as finding the centroids of the opinions (lines), that satisfy the
given constraints. So, the clustering of lines (and finding the respective medians) becomes the core of the
approach. We use the k-medians inspired approach suggested by Marom et al. [13]. The only exception
is we use the Hausdroff distance in this case. The Hausdorff distance is a measure of similarity that
calculates the greatest distance between any point in X and the closest point in Y. In case we use the
infimum distance as in [13], all sewage lines might get rejected as every sewage line need to have at least one
connection with a background sewage line, and hence they will be rejected because of the inter-separability
constraint. Therefore, we use the Hausdroff distance because it returns a 0 as the distance between a pair of
lines iff the two lines are the same. The aforementioned approach is formally presented in Algorithm 1.
At the beginning, in step 1, the algorithm filters the sewage lines, which do not satisfy the boundary
constraint. In step 2, the algorithm adjusts the sewage lines that do not satisfy the intersection constraint
by extending from one end to the shortest line that at least one of its end points lie on some background
sewage line. In step 3, the sewage lines that violate the constraint of Inter-Separability are filtered out.
Subsequently, in step 4, if two sewage lines proposed by the same crowd worker say, l and l violate
1 2
intra-separability, we remove one of them while retaining the other. In step 5, we run a centroid based
clustering algorithm to get k∗ groups and medians as output that do not necessarily satisfy post-processing
constraints. Instep 6,wefindthenextbestmedianineachgroupthatsatisfythepost-processingconstraints
of length, intra-congestion and intra-congestion. The aforementioned algorithm is detailed below.
1. CONSTRAINT-BOUNDARY()
This subroutine (see Technical Appendix) retains a sewage line l if it lies within convex region P,
otherwise rejects it. This is necessary so that the sewage lines outside the demarcated area should not
contaminate the data.
2. CONSTRAINT-INTERSECTION()
This subroutine (see Technical Appendix) checks if at least one end point of every proposed sewage line
lies on a background sewage line to ensure connectivity and such a line is extended from one end-point
till it reaches the the nearest background sewage line. Another line is constructed by extending the
other end point. The shortest among the two lines is retained. The algorithm slightly modifies the
erroneous data points instead of filtering them which results in retaining a larger amount constraint
satisfying data.
9Algorithm 1: Finding the consensus of sewage lines satisfying constraints
Input: A convex region P, a number of k background sewage lines
B = {O0 = ((x0 ,y0 ),(x0 ,y0 )),O0 = ((x0 ,y )0,(x0 ,y0 )),...,O0 = ((x0 ,y0 ),(x0 ,y0 ))}
1 11 11 12 12 2 21 21 22 22 k k1 k1 k2 k2
inside P, sets of sewage lines S = {{O1,O1,...,O1 },{O2,O2,...,O2 },...,{On,On,...,On }},
1 2 k∗ 1 2 k∗ 1 2 k∗
suggested by n crowd workers, respectively, where Oj = ((xj ,yj ),(xj ,yj )).
i i1 i1 i2 i2
Output: The consensus of the sewage lines satisfying pre-processing and post-processing constraints.
Algorithmic Steps:
1: S ← CONSTRAINT-BOUNDARY(P, S)
2: S ← CONSTRAINT-INTERSECTION(B, S)
3: S ← CONSTRAINT-INTER-SEPARABILITY(B, S, D 1)
4: S ← CONSTRAINT-INTRA-SEPARABILITY(S, D 1)
5: G ← CENTROID-BASED-CLUSTERING-OF-LINES(S, k∗,MAX_ITER)
6: M ← POST-PROCESSING OPTIMISATION(G,D 2,L)
7: return M
3. CONSTRAINT-INTER-SEPARABILITY()
This subroutine (see Technical Appendix) removes the proposed sewage lines that do not maintain
sufficient gap with the existing sewage lines i.e if d(l,b) < D for some b ∈ B, l is rejected. This
1
ensures a sufficient gap is maintained with the background sewage lines.
4. CONSTRAINT-INTRA-SEPARABILITY()
Thissubroutine(seeTechnicalAppendix)checksifforanyl ,l ∈ S,d (l ,l ) < D ,thenthealgorithm
1 2 1 1 2 1
selects one of the two lines by giving post-processing constraints priority and executes one of the
following three scenarios.
• If exactly one of l or l is of greater than L, then discard it.
1 2
• Else let n denote the number of sewage lines(proposed) that lie within D distance of l with
1 2 1
respect to d . Similarly define n . If n > n , retain l . Else, if n > n retain l . This basically
1 2 2 1 1 1 2 2
removes the more congested line while retaining the less congested one.
• In all other circumstances, retain l
1
5. CENTROID-BASED-CLUSTERING-OF-LINES()
This subroutine (see Technical Appendix) segregates the proposed sewage lines into k∗ groups. Let
us define the following general distance measure to be deployed as a part of a clustering technique
(inspired from the k-medians algorithm) to group the sewage lines. If there are two line segments
l = (x ,x ) and l = (y ,y ), where x ,x ,y ,y ∈ R2, let us define
1 1 2 2 1 2 1 2 1 2

min{d(x ,y ),i,j = 1,2}, if l does not
 i j 1

d (l ,l ) = intersect l
2 1 2 2

0, otherwise
The median of a group of line segments l ,l ,...,l is l , where i = {æ : (cid:80) d (l ,l ) is minimum
1 2 n i 1≤k≤n 2 k j
over 1 ≤ j ≤ n}. Initially, k∗ many opinions are randomly selected as cluster centroids and each
proposed line is assigned to the cluster of its nearest centroid. Then the medians of the clusters so
formed are re-calculated, then the clusters are reassigned to the new cluster centres. This is repeated
till the cluster centres no longer change or till the maximum number of iterations are over. The clusters
are returned.
6. POST-PROCESSING-OPTIMISATION()
This subroutine (see Technical Appendix) optimises the choice of medians while abiding by the
10post-processing constraints.It takes G(clusters), M(medians) and B(background sewage lines) as input
and returns the final consensus. Cost function of a line segment l ∈ cluster C = {l ,l ,...,l } is
1 2 n
(cid:80) d (l,l ). We make a list of line segments of length less than or equal to L in each cluster
1≤i≤n 2 i
and arrange them in increasing order of their cost function. For example in cluster C , let the list be
i
M = (l(i) ,l(i) ,...,l(i) ), where k denotes the number of lines of length less than or equal to L and cost
i 1 2 ki i
function(l(i) ) ≤cost function(l(i) ) ≤ ... ≤ cost function(l(i) ). The algorithm selects the final k∗ sewage
lines
(say,1
m ,m ,...,m )
ite2
ratively that satisfy
bothkilength
and congestion constraints. The m s
1 2 k∗ i
are selected as follows.
m = l1 where i = min{k : 1 ≤ k ≤ k and mind (l ,b) ≥ D }
1 i1 1 1
b∈B
1 k 2
m = l2 where i = min{k : 1 ≤ k ≤ k and min d (l ,b) ≥ D }
2 i2 2 2 b∈B(cid:83){m1} 1 k 2
In general,
m = lj where i = min{k : 1 ≤ k ≤ k and min d (l ,b) ≥ D } ∀1 ≤ j ≤ k∗
j ij j j b∈B(cid:83){m1,...,mj−1} 1 k 2
Report m s as the final consensus of opinions.
i
We have assumed that such m s always exist because of the prior restriction that most of our data
i
points abide by the post-processing constraint of length. However, if any such error arises, that would
require the congestion parameter D to be reduced and the m s re-valuated.
2 i
7.5 Results and Observations
We see that the consensus of the opinions (provided as preferred sewage lines to be constructed) is more
realistically significant if background constraints are included. Moreover, it is also better to perform
adjustment of constraints (wherever possible) instead of removal, thereby ensuring retention of more opinions
that leads to a better consensus. As a whole, the inclusion of background and other constraints makes
the consensus both practical and acceptable to the opinion providers. This was verified through follow up
interviews and analyses.
8 Conclusion
In order to secure the collection of more responsible opinions, we investigate a novel dimension of constrained
judgment analysis problem in the current work. It accommodates background restrictions in the judgment
analysis problem based on the application scenario. Our experiments highlight that the background
constraints are capable of making the annotators responsible in providing feasible and realistic opinions (not
just random). The inclusion of background details while collecting the data also yield better results. It is
interesting to note that given the sewage lines as input opinions (in case study 2), there is no significance
of the ordering in which the inputs are provided. Therefore, the challenge of label correspondence that
arises in making a consensus of points is not applicable here [4]. Though we apply centroid-based techniques
to obtain a consensus of opinions, other kind of clustering approaches might be extended to address this
problem. One can also consider this problem to be extended to opinions taken in the form of polygons or
other shapes in higher dimensional spaces.
References
[1] Sujoy Chatterjee and Sunghoon Lim. A multi-objective differential evolutionary method for constrained
crowd judgment analysis. IEEE Access, 8:87647–87664, 2020.
[2] Sujoy Chatterjee and Sunghoon Lim. A topsis-inspired ranking method using constrained crowd
opinions for urban planning. Entropy, 24(3):371, 2022.
11[3] Sujoy Chatterjee, Anirban Mukhopadhyay, and Malay Bhattacharyya. Constrained crowd judgment
analysis. ACM SIGWEB Newsletter, 2017(Autumn):1–3, 2017.
[4] Sujoy Chatterjee, Anirban Mukhopadhyay, and Malay Bhattacharyya. Smart city planning with
constrained crowd judgment analysis. In 2017 AAAI Spring Symposium Series, 2017.
[5] Sujoy Chatterjee, Anirban Mukhopadhyay, and Malay Bhattacharyya. A review of judgment analysis
algorithms for crowdsourced opinions. IEEE Transactions on Knowledge and Data Engineering,
32(7):1234–1248, 2019.
[6] AlexanderPhilipDawidandAllanMSkene. Maximumlikelihoodestimationofobservererror-ratesusing
the em algorithm. Journal of the Royal Statistical Society: Series C (Applied Statistics), 28(1):20–28,
1979.
[7] Franz Dietrich and Christian List. The problem of constrained judgment aggregation. In The Present
Situation in the Philosophy of Science, pages 125–139. Springer, 2010.
[8] Richard O Duda, Peter E Hart, et al. Pattern classification. John Wiley & Sons, 2006.
[9] Jeff Howe et al. The rise of crowdsourcing. Wired magazine, 14(6):176–183, 2006.
[10] AniketKittur,JeffreyVNickerson,MichaelBernstein,ElizabethGerber,AaronShaw,JohnZimmerman,
Matt Lease, and John Horton. The future of crowd work. In Proceedings of the 2013 conference on
Computer supported cooperative work, pages 1301–1318, 2013.
[11] Regina Lenart-Gansiniec, Wojciech Czakon, Łukasz Sułkowski, and Jasna Pocek. Understanding
crowdsourcing in science. Review of Managerial Science, 17(8):2797–2830, 2023.
[12] Yair Marom. k-clustering of lines and its applications. Masters’ Dissertation, 2019. Department of
Computer Science, University of Haifa.
[13] Yair Marom and Dan Feldman. k-means clustering of lines for big data. Advances in Neural Information
Processing Systems, 32, 2019.
[14] Jian Peng, Qiang Liu, Alex Ihler, and Bonnie Berger. Crowdsourcing for structured labeling with
applications to protein folding. In Machine Learning Meets Crowdsourcing Workshop, 30th International
Conference on Machine Learning, 2013.
[15] Tomer Peretz. Clustering of lines. M.Sc. Thersis, 2011. The Open University of Israel.
12Technical Appendix
Subroutines of the Algorithm used in Case Study 2
The constraint handing and other procedures are formally provided below.
CONSTRAINT-BOUNDARY(P, S) {
1: for C ∈ S do
2: for c ∈ C do
3: if c lies outside P then
4: Remove c from C
5: end if
6: end for
7: end for
8: return S
}
CONSTRAINT-INTERSECTION(B, S) {
1: for C ∈ S do
2: for c ∈ C do
3: if no end-points of c lie on a background sewage line then
4: Extend end-point 1 of c till it touches some b ∈ B. Call the new line c 1.Similarly define c 2
5: if length(c 1) < length(c 2) then
6: Replace c by c 1 in C
7: else
8: Replace c by c 2 in C
9: end if
10: end if
11: end for
12: end for
13: return S
}
13CONSTRAINT-INTER-SEPARABILITY(B, S, D ) {
1
1: for C ∈ S do
2: for c ∈ C do
3: for b ∈ B do
4: if d 1(c,b) < D then
5: remove c from C
break
6:
7: end if
8: end for
9: end for
10: end for
11: return S
}
CONSTRAINT-INRA-SEPARABILITY(S,D ) {
1
1: for C ∈ S do
2: for c 1,c 2 ∈ C do
3: if d 1(c 1,c 2) < D 1 then
4: if length(l 2) ≤ L < length(l 1) then
5: remove l 1
6: else if length(l 1) ≤ L < length(l 2) then
7: remove l 2
8: else if n 2 > n 1 then
9: remove n 2
10: else if n 1 > n 2 then
11: remove n 1
12: else
13: remove l 2
14: end if
15: end if
16: end for
17: end for
18: return S
}
14CENTROID-BASED-CLUSTERING-OF-LINES(S, MAX_ITER) {
1: Make a list of all the proposed sewage lines and call it A
2: Randomly choose k∗ sewage lines {c 1,c 2,...,c k∗} ∈ A
3: Let the clusters containing {c 1,c 2,...,c k∗} be called {C 1,C 2,...,C k∗} respectively.
4: i ← 0
5: repeat
6: for a in A do
7: Assign a to C i if d 2(s,c i) is minimum
8: end for
9: Recompute c i as the median of the new C i′s
10: i ← i+1
11: until c′s no longer change or i = MAX_ITER
i
12: G = {C i,1 ≤ i ≤ k∗} and M = {c i,1 ≤ i ≤ k∗}
13: return G
}
POST-PROCESSING-OPTIMISATION(G,B,L,D ) {
2
1: for i ∈ N k∗ do
2: Calculate M i for cluster C i
3: for m ∈ M i do
4: if min d 1(m,b) ≥ D 2 then
b∈B(cid:83){m1,...,mi−1}
5: m i ← m
6: break
7: end if
8: end for
9: end for
10: M = (m 1,m 2,...,m k∗)
11: return M
}
Complexity Analysis of the Algorithm used in Case Study 2
Time Complexity Analysis: ThetimecomplexitybeginswiththeCONSTRAINT-BOUNDARY com-
ponent, which has a complexity of O(n×k∗), where n represents the number of sets and k∗ the line segments
per set. The CONSTRAINT-INTERSECTION and CONSTRAINT-INTER-SEPARABILITY
components both have complexities of O(n×k∗×k), reflecting the processing of each line against k back-
ground lines. A more intensive computation occurs in the CONSTRAINT-INTRA-SEPARABILITY,
which checks pairwise distances within each set, resulting in O(n×(k∗)2). The most demanding part,
however, is the CENTROID-BASED-CLUSTERING-OF-LINES, where the complexity rises to
O(n×(k∗)2×MAX ITER), assuming multiple iterations for clustering. Lastly, the POST-PROCESSING
OPTIMISATION introduces a complexity of O(n×k∗×log(k∗)) for sorting operations. Consequently,
the dominant time complexity in this analysis is from the centroid-based clustering, particularly due to the
potential for numerous iterations, leading to an overall time complexity of O(n×(k∗)2×MAX ITER).
SpaceComplexityAnalysis: SpacecomplexitiesstartminimalwithCONSTRAINT-BOUNDARY,
CONSTRAINT-INTERSECTION,CONSTRAINT-INTER-SEPARABILITY,andCONSTRAINT-
INTRA-SEPARABILITY, each at O(1), operating in place without additional storage. However, the
15CENTROID-BASED-CLUSTERING-OF-LINES and POST-PROCESSING OPTIMISATION
require more space, with complexities of O(n×k∗) due to the need to store centroids and interim results.
Thus, the overall space complexity, influenced mainly by these latter components, is O(n×k∗).
16