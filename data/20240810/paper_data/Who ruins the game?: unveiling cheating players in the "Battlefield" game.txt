Who ruins the game?: unveiling cheating players
in the “Battlefield" game
Dong Young Kim and Huy Kang Kim
School of Cybersecurity, Korea University, Republic of Korea
{klgh1256, cenda}@korea.ac.kr
Abstract. The“Battlefield"onlinegameiswell-knownforitslarge-scale
multiplayer capabilities and unique gaming features, including various
vehicle controls. However, these features make the game a major target
for cheating, significantly detracting from the gaming experience.
Thisstudyanalyzesuserbehaviorincheatingplayinthepopularonline
game, the “Battlefield", using statistical methods. We aim to provide
comprehensive insights into cheating players through an extensive anal-
ysis of over 44,000 reported cheating incidents collected via the “Game-
tools API". Our methodology includes detailed statistical analyses such
as calculating basic statistics of key variables, correlation analysis, and
visualizations using histograms, box plots, and scatter plots. Our find-
ings emphasize the importance of adaptive, data-driven approaches to
prevent cheating plays in online games.
Keywords: Cheating Play Detection · Online Game· The Battlefield·
Statistical Method · Correlation Analysis · Visualization
1 Introduction
The Battlefield game [3] (operated by Electronic Arts Inc.) is a large-scale team
multiplayer online game. It is also well-known for its unique gaming features,
suchasenablingvariousvehiclecontrols(e.g.,Tank,ArmoredPersonnelCarrier,
Infantry Fighting Vehicle, Fighter Jet, and Attack Helicopter) by game players.
Such an aspect distinguishes it from other First-Person Shooters (FPS) games,
attracting gamers worldwide. As the same as the real-world battlefield, the ve-
hicle’s ability is too strong enough to eliminate the opponent player’s infantry
troops. To leverage vehicles’ ability, some players use game cheating programs
that are regarded as unfair gameplay.
Cheating play is an axis of evil in online gaming. If game companies fail to
detect cheating play in time, the game users quit and leave the game because
they can feel unfair. Consequently, cheating play detection is a critical success
factorinpreventingagamecompany’sfinancialdamageandmanagingtheuser’s
loyalty.
Not only in the Battlefield game, but cheating programs such as Aimbot,
Wallhack, Speedhack, Weaponhack, and EXP hack have also been widely used
in FPS games for several decades [5].
4202
guA
8
]CH.sc[
1v60540.8042:viXra2 D. Y. Kim and H. K. Kim
Fig.1. The BattleField in-game cheating play example1
Thus, like the other FPS games, the Battlefield game has many users com-
plaining about the cheating play. Fig. 1 shows a cheating player use the Wall-
hackandESPcheatingtoolduringthebattle.Inresponse,thelatestversion,the
Battlefield2042,deploysanAnti-Cheatprogramontheclient-side.However,de-
tectingcheatingontheclient-sidemaydiminishuserexperienceduetoprogram
errorsandvulnerabilities.Detectingcheatingoverthenetworkispracticallyim-
possible, as it requires real-time monitoring of all users’ communications, which
could degrade the overall gaming experience due to the real-time nature of FPS
games. Server-side detection demands significant resources from game servers.
It is practically impossible for game companies to monitor all users’ logs, which
could increase the game’s latency, which is critical in FPS games. Thus, the
existing cheating detection methods used in other game genres (e.g., frequently
used data mining or machine learning methods in MMORPG genre [4].) are not
easily applicable in FPS games.
Therefore, this paper aims to provide insights for discovering users who use
cheating tools without consuming resources from the game servers and clients,
based on statistical analysis and visualization.
Our research method employs fundamental statistical analysis, which can
effectively distinguish cheating players’ behaviors. The main contributions of
this study can be summarized as follows.
– UnlikeexistingcheatingdetectionmethodsinFPSgames,ourapproachdoes
not need to be deployed in-game client-side. The current countermeasures
deployed in the game client-side can harm the overall gaming experience
because of the overhead (i.e., typical usability vs. security problem)
– To the best of our knowledge, it is the first approach for cheating play user
detectionbylightweightstatisticalanalysisofkill-logintheBattlefieldgame.Who ruins the game?: unveiling cheating players in the “Battlefield" game 3
We discovered features that can distinguish cheating players’ behaviors suc-
cessfully.
2 Background
2.1 How to play the Battlefield Games?
TheBattlefieldgameprovidesspecializedgamemodes.Forinstance,somemodes
focus on the number of infantry kills to win, while others modes focus on the
score based on the result of capturing specific areas during the combat. Among
various modes, one of the most representative modes is the ‘Conquest mode’.
Conquest mode involves 64 or 128 players, where participants are divided into
severalclasses,suchasAssault,Support,Ammunition,andRecon.Eachclasshas
specialized equipment. For example, the Support class users, one of the infantry
solderclassesinthegame,carryamedicalkittohealtheirwoundedteammates,
or they carry a defibrillator to revive soldiers who have been downed.
Dependingonthemapsizeandscale,thesesoldierscancontrolvariousvehi-
cles. These vehicles include Tanks, Armored Personnel Carriers, Infantry Fight-
ingVehicles,Anti-AircraftVehicles,FighterJets,andAttackHelicopters.There
are land, water, and air vehicles that players can use from the initial starting
pointorspecificpointsonthemap.Theamountofdamagedealtbytheweapons
on these vehicles is significantly higher than that of infantry weapons. Conse-
quently, vehicles can massacre infantry, or infantry may find themselves hiding
from the vehicles.
Conquest mode involves infantry using vehicles to capture specific points.
Capturing a point occurs when there are more allied soldiers than enemies at a
location for a certain period, and it happens faster with more allies present.
The Conquest mode is the most preferable play mode, but cheating play
exists in all modes, not only the Conquest mode.
2.2 Definition and Types of Cheating in the Game
The well-known cheating plays in FPS are Aimbot, Damage Modify, Gadget
Modify, Wallhack, Stealth, and Magical Bullet. ‘Aimbot’ is a program that arti-
ficially enhances a player’s shooting accuracy by automatically targeting op-
ponents’ critical areas (e.g., headshot), enabling precise shooting. This type
of cheating elevates a player’s shooting abilities, and eventually disrupting the
game’sbalanceseriously.‘DamageModify’ischeatingthatmanipulatesaplayer’s
weapon to cause more damage than usual, allowing players to overpower ene-
mies with fewer bullets. ‘Gadget Modify’ alters or enhances the functions of the
equipment or gadgets players use. For example, it could increase the blast ra-
dius of explosives or reduce the cooldown period of gadgets. ‘Wallhack’ makes
walls or other obstacles transparent or allows players to see the outlines of ene-
miesthroughthem.Itprovidesasignificanttacticaladvantagebypredictingthe
location and movements of concealed enemies. ‘Stealth’ renders players invisi-
ble to enemy sights or detection systems, granting the ability to move covertly4 D. Y. Kim and H. K. Kim
and disrupt game balance. ‘Magical Bullet’ includes features that allow players’
bullets to penetrate obstacles or automatically target enemies at unrealistically
long distances, ignoring ballistics and physical laws, resulting in highly unfair
gameplay.
2.3 Why Cheating Detection in FPS is Important?
Why is it necessary to prevent cheating in FPS games? First, it is essential
to maintain fairness. Ensuring the game’s fairness allows all players to compete
underequalconditions,makingthegamingexperiencemoreenjoyableandsatis-
fying. Second, it is to ensure that all users can enjoy the game. One of the main
purpose of playing a game is to have fun and feel a sense of accomplishment
through challenge. Fun and challenge are key rewards in a game system. If the
fun and challenge based reward system is disrubted by some cheating players,
then many normal players will quit and leave the game. Third, it disturbs the
growth and development of players. Honest players can develop their skills and
learnstrategies,whereascheatingplayersskipthisdevelopmentalprocess,nega-
tivelyimpactingotherplayers(i.e.,contagion)[?].Thus,ifcheatingplayersgain
an advantage in the game, honest players are disadvantaged, leading to many
playersleavingthegame.Forthesereasons,cheatingcanruinthegame’soverall
fair-play culture and lead to user churn.
3 Related Work
Tekofsky et al. [12] analyzed play styles by age in Battlefield 3. Their study
used data from 10,416 users to demonstrate that performance and speed of
play decrease with age. May et al. [8] analyzed how the game Battlefield 2042
implementsclimatecrisesandenvironmentalchallenges.Thisstudyinvestigated
howthegame’ssettingsandscenariosencourageplayerstothinkaboutecological
issuesandreviewedhowuser-generatedcontentanddiscussionsaboutthegame
promote ecological engagement. They demonstrated through data analysis from
13,129 users how these elements stimulate ecological thinking among players.
Various studies have been conducted on detecting cheating in FPS games.
Most of these studies use computer vision to detect changes in status or visu-
ally apparent cheating patterns. For example, Nie et al. [9] identified cheating
patterns such as Aimbots in FPS games using a deep learning vision framework
called VADNet. Jonnalagadda et al. [6] proposed a new vision-based approach
thatcapturesthefinalgamescreenstatetodetectillegaloverlays.Theycollected
datafromtwoFPSgamesandseveralcheatingsoftwareusingdeeplearningmod-
els to verify cheat detection performance. Liu et al. [7] detected Aimbots using
cosine similarity and statistical methods. Cosine similarity was used to measure
the change in aim when players first spot an enemy, calculating the angle be-
tween vectors of the player’s aiming direction to compare the automatic aiming
patterns of Aimbots with those of regular players. Pinto et al. [10] proposed
a novel approach using deep learning and multivariate time-series analysis toWho ruins the game?: unveiling cheating players in the “Battlefield" game 5
detect cheats in video games. Instead of game data, they analyzed user behav-
ior data such as key inputs and mouse movements, demonstrating high accu-
racy in cheat detection. Han et al. [5] discovered several features (e.g., win-rate,
headshot-ratio, play counts and play time, etc.) and detection rules to differen-
tiate cheating players in Point Blank, one of the famous FPS games in Asian
game market. In this work, the proposed method detected cheating plays based
ontheanalysisofactionlogs,whileourproposedmodelisbasedontheanalysis
of kill-log and stat data.
4 Methodology
Fig.2. Overall procedure of FPS cheating play detection
Fig. 2 shows the overall procedure of the proposed method. We aimed to
conduct an in-depth analysis of cheating players using statistical analysis. In
this process, we calculated basic statistics such as mean, standard deviation,
andminimum/maximumvaluesforeachvariable.Thenweextractedmeaningful
variables based on these calculations. This approach allowed us to understand
the overall characteristics of the data and identify key factors.
First, to understand the data distribution, we calculated basic statistics for
each variable, including mean, standard deviation, minimum value, maximum
value, median, and quartiles. This helped us grasp the central tendency and
variability of the data and check for outliers or anomalies.
Second, we analyzed the correlations between variables. Then, we identified
the relationships between variables through correlation analysis; and we deter-
mined which variables have influence value to others. This provided crucial in-
formation for understanding the interactions between variables. By measuring
correlation coefficients, we identified variables that showed significant correla-
tions.6 D. Y. Kim and H. K. Kim
Finally, for the data visualization, we created various graphs such as his-
tograms, box plots, and scatter plots. Histograms allowed us to visually confirm
the distribution of each variable, while box plots provided a clear view of the
quartiles,median,andoutliers.Scatterplotswereusedforvisuallyexpressingthe
relationships between two variables, making it easier to understand correlations
or trends between variables.
By visually representing the results of complex statistical analyses, we could
easily identify key characteristics and patterns in the data. Additionally, using
various graphs to illuminate different aspects of the data enabled a more com-
prehensive and in-depth analysis.
5 Experiment Result
5.1 Dataset
Due to the absence of publicly available datasets for experimenting with the
methodologyofthispaper,wecollectedthedatadirectly.Thedatasetwasgath-
ered using the “Gametools API" [1] with the Requests [11] library. The “Ga-
metools API" allows us to fetch the list and information of users identified as
cheating players from “BFBAN" [2]. “BFBAN" is a site where users can re-
port cheating players and check the status of their bans online. We specifically
retrieved the list of users banned by the game company and analyzed their
statistics.
The data was collected in two stages. First, we collected the list of cheating
players from the “Gametools API". Second, we gathered detailed information
about these users’ cheating activities using the same API.
The total number of cheating players is 119,569. The data spans from the
first reported cheating player on October 27, 2018, to the most recent report on
April 29, 2024. However, due to some data being missing during the collection
process from the “Gametools API", we were only able to collect data for 44,307
users.
5.2 Explanation of Key Variables
Thevariableshack_score andhack_score_current indicatetheextentofauser’s
hacking activities. The hack_score represents the highest value of either
hack_score_current or the player’s highest historic hack_score, while the
hack_score_current represents the hack_score of the player’s current stats.
Hack Score measures how abnormal and hacker-like a player’s stats are. When
the hack_score is more than 100, that means their stats are highly abnormal
and can only be produced by hacks (except rare false positives. Refer to the
dataset’s description; the false positive ratio is 0.5% in total.). A hack_Score
from 0-100 is calculated for each weapon the player has used. The stats.kills
variable represents the number of opponents a user has eliminated in the game.
Thestats.kpm showshowmanyopponentstheuserkillsperminuteinthegame.Who ruins the game?: unveiling cheating players in the “Battlefield" game 7
Thestats.rank indicatestheuser’slevelinthegame,withhighervaluesshowing
that the user has gained more experience points. The unreleased_weapons.kills
represents the number of kills a user has made using weapons that have not yet
been officially released, indicating kills made with special or test weapons.
5.3 Basic Statistical Analysis
Thedatasetconsistsof44,307observationsandincludesvariousvariables.Basic
statistics, such as mean, standard deviation, minimum, maximum, median, and
quartiles, were calculated for key variables (hack_score, hack_score_current,
stats.kills, stats.kpm, stats.rank, unreleased_weapons.kills). These calculations
allowed us to understand the central tendency and variability of the data and
identify anyoutliersor anomalies.The wholeresultof thebasicanalysis issum-
marized in Table 1.
Column Mean Std Min Q1: 25% Q2: 50% Q3: 75% Max
hack_score 477.45 736.96 0 41.75 143.0 528.25 16667.0
hack_score
473.89 732.86 0 41.75 143.0 528.25 16667.0
_current
stats.kills 6937.79 14906.77 0 527.25 2958.5 7826.5 781157.0
stats.kpm 1.13 6.74 0 0.33 0.64 1.02 1488.56
stats.rank 65.45 46.87 0 22.0 61.0 109.0 154.0
unreleased
_weapons. 6937.79 14906.77 0 527.25 2958.5 7826.5 781157.0
kills
Table 1. Summary Statistics of Key Variables
5.4 Correlation Analysis Between Variables
The hack_score and hack_score_current showed a high correlation of 0.996,
indicating that users who have cheated once tend to continue cheating. The
stats.kills, and stats.rank showed a strong correlation of 0.794, meaning that
recording a high number of kills increases the likelihood of reaching higher lev-
els.Thehack_scoreandstats.rankshowedamoderatecorrelationof0.449,sug-
gesting that the relationship between cheating and level is not significant. This
result indicates that low-level users are not necessarily more prone to cheating
and high-level users are not guaranteed to refrain from cheating. The stats.kills
and unreleased_weapons.kills showed a perfect positive correlation, indicating
thatuserswhouseunreleasedweapons(cheatingplayers)havea100%probabil-
ity of recording a high number of kills. This suggests that some cheating players
use these cheats to generate high number of kills, adversely affecting innocent
opponents. The whole result of the correlation analysis is summarized in Table
2.8 D. Y. Kim and H. K. Kim
unreleased
hack_score
hack_score stats.kills stats.kpm stats.rank _weapons.
_current
kills
hack_score 1.000000 0.996151 0.385814 0.015135 0.449039 0.385814
hack_score
0.996151 1.000000 0.379819 0.015231 0.442342 0.379819
_current
stats.kills 0.385814 0.379819 1.000000 0.004692 0.793550 1.000000
stats.kpm 0.015135 0.015231 0.004692 1.000000 -0.006504 0.004692
stats.rank 0.449039 0.442342 0.793550 -0.006504 1.000000 0.793550
unreleased
_weapons. 0.385814 0.379819 1.000000 0.004692 0.793550 1.000000
kills
Table 2. Correlation Matrix between key features
5.5 Data Visualization
We visualized the result using histograms, box plots, and scatter plots.
The histogram chart is used to visually confirm the distribution of variables
and identify data concentrated in specific ranges and outliers. The Histogram
chart is shown in Fig 3.
The box Plot is used to visually analyze the median, quartiles, and outliers
ofthevariablestounderstandtheoveralldatadistribution.TheBoxPlotresult
is presented in Fig 4.
The scatter Plot is used to visually express the relationship between hack
score and other variables, making it easy to understand correlations and trends
between variables. The Scatter Plot result is presented in Fig 5.
The key findings from the visualization process are as follows.
– Mostbenignusershavelowerhack_scorethanthemedianvalue.Itindicates
that most users do not use cheating programs.
– We observe the hack_score and hack_score_current have a similar distri-
bution. That means a user who does a cheating play tends to keep on doing
cheating play continuously.
– Wefindthecheatingplayer’srecordsdonotshowahigherkillcount(stats.kills).
On the one hand, it means the cheating program is not always effective for
all opponent users (some high-level human players can still overwhelm the
cheating players.) On the other hand, it also mean the cheating tool can
limitthekillrationottobedetectedbyanin-gamemonitoringsystem.The
lower kpm value (stats.kpm < 40) supports this point of view. Also, some
cheating players use unknown weapons to kill the opponent players.
The proposed method does not require a high-performance computing en-
vironment. The simple statistical values can be estimated in near real-time by
streaming in-game play logs. In particular, the continuous cheating behavior of
users with high hack scores and the perfect correlation between stats.kills and
unreleased_weapons.kills can serve as strong indicators for identifying cheatingWho ruins the game?: unveiling cheating players in the “Battlefield" game 9
Fig.3. Histogram of key features
players.Thesefindingscanbebeneficialfordetectingandrespondingtocheating
behavior in real-time within the game.
6 Discussion
We gathered the dataset from the several public sites. and the banned user list
can be regarded as reliable. The game company does not provide the official
dataset, including banned users, to the public; thus, our approach is the best
way so far. However, the dataset does not include a complete cheating player
list (i.e., it has a false-negative error) because it relies on the volunteer users’
reporting.Also,thedatasetcanhave afalse-positiveissuewhenthereportingis
intentionally misreported (to dishonor a specific opponent user).10 D. Y. Kim and H. K. Kim
Fig.4. Box Plot of key features
In this study, we adopt simple methods such as correlation analysis and
statistical visualization to detect cheating play. As a result, we identified gen-
eral patterns of cheating players through the correlation analysis between key
variables. In the future, we will explore using more statistical techniques for
robust and lightweight cheating play detection. We will consider testing other
FPS games to get more generalizations of the proposed method. Also, we will
researchanomalydetectionbasedonmaliciousandbenignuserdatatoovercome
the drawbacks of our methods. Due to the difficulty in obtaining data from nor-
mal players, there are limitations in creating an anomaly detection model. We
plantoimplementananomalydetectionmodelbasedonthekill-logofabnormal
players and explore this topic further.
7 Conclusion
This study proposed a data-driven approach to address the issue of cheating in
the Battlefield. To conclude, the main contributions of this study are as follows:Who ruins the game?: unveiling cheating players in the “Battlefield" game 11
Fig.5. Scatter between hack_score and other variables
First, we confirm the repeatability of cheating behavior. The high correlation
(0.996) between hack_score and hack_score_current indicates that users who
start cheating tend to continue cheating. This is a significant finding as it shows
thatcheatingbehaviorisnotaone-timeoccurrencebutfollowsarepetitivepat-
tern. These results emphasize the need for continuous monitoring and response
to cheating players in cheating detection systems.
Second, we discovered that the use of specific weapons could be an indica-
tor of cheating behavior. The perfect correlation (1.000) between stats.kills and
unreleased_weapons.kills indicates that cheating players tend to record many
killsusingunreleasedweapons.Thissuggeststhatmonitoringtheuseofspecific
weaponscanbeanimportantindicatorfordetectingcheating.Gamedevelopers
can use this pattern to detect cheating behavior more effectively.12 D. Y. Kim and H. K. Kim
Last, we showed that cheating behavior can occur at all player levels. The
moderate correlation (0.449) between hack_score and stats.rank indicates that
cheating players are not necessarily concentrated at high levels. This implies
thatcheatingcanfrequentlyoccurevenatlowerlevels,highlightingtheneedfor
cheating detection across all player levels.
Acknowledgement. ThisworkwassupportedbytheInstituteforInformation
& Communications Technology Promotion (IITP) grant funded by the Korea
government (MSIT). (Grant No. 2020-0-00374, Development of Security Primi-
tives for Unmanned Vehicles).
References
1. API, G.: https://api.gametools.network/docs/, accessed: 2024-08-09
2. BFBAN: https://admin.bfban.com/player, accessed: 2024-08-09
3. EA: Battlefield games. https://www.ea.com/ko-kr/games/battlefield, ac-
cessed: 2024-08-09
4. Han, M.L., Kwak, B.I., Kim, H.K.: Cheating and detection method in massively
multiplayer online role-playing game: systematic literature review. IEEE Access
10, 49050–49063 (2022)
5. Han, M.L., Park, J.K., Kim, H.K.: Online game bot detection in fps game. In:
Proceedings of the 18th Asia Pacific Symposium on Intelligent and Evolutionary
Systems-Volume 2. pp. 479–491. Springer (2015)
6. Jonnalagadda, A., Frosio, I., Schneider, S., McGuire, M., Kim, J.: Robust vision-
based cheat detection in competitive gaming. Proceedings of the ACM on Com-
puter Graphics and Interactive Techniques 4(1), 1–18 (2021)
7. Liu, D., Gao, X., Zhang, M., Wang, H., Stavrou, A.: Detecting passive cheats
in online games via performance-skillfulness inconsistency. In: 2017 47th An-
nual IEEE/IFIP International Conference on Dependable Systems and Networks
(DSN). pp. 615–626. IEEE (2017)
8. May,L.,Hall,B.:Thinkingecologicallywithbattlefield2042.GameStudies24(1)
(2024)
9. Nie,B.,Ma,B.:Vadnet:Visual-basedanti-cheatingdetectionnetworkinfpsgames.
Traitement du Signal 41(1) (2024)
10. Pinto,J.P.,Pimenta,A.,Novais,P.:Deeplearningandmultivariatetimeseriesfor
cheat detection in video games. Machine Learning 110(11), 3037–3057 (2021)
11. Reitz, K.: Requests: Http for humans™. https://requests.readthedocs.io/en/
latest/, accessed: 2024-08-09
12. Tekofsky, S., Spronck, P., Goudbeek, M., Plaat, A., van Den Herik, J.: Past our
prime: A study of age and play style development in battlefield 3. IEEE Transac-
tions on Computational Intelligence and AI in Games 7(3), 292–303 (2015)
13. terDwas:Hurricaneloaderinthebattlefield2042.https://github.com/terDwas/
Battlefield-2042-Hurricane-Cheat, accessed: 2024-08-09