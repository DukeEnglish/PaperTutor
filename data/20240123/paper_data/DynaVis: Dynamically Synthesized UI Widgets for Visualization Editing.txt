DynaVis:DynamicallySynthesizedUIWidgetsforVisualizationEditing
PRIYANVAITHILINGAM,
HarvardUniversity,USA
ELENAL.GLASSMAN,
HarvardUniversity,USA
JEEVANAPRIYAINALA,
Microsoft,USA
CHENGLONGWANG,
Microsoft,USA
Fig.1. ScreenshotofDynaVistool.(a)Importeddataisshownontheleftasatable.(b)Userscanprovidenaturallanguagecommand
toeditthechartusingthecommandbar.(c)Thevisualizationisdisplayedonthecenter.(d)Thewidgetspanelshowstheautomatically
synthesizeddynamicwidgetsbasedonuser’naturallanguagecommands,inreversechronologicalorder(recentlyaddedwidgetsat
thetop).
UsersoftenrelyonGUIstoeditandinteractwithvisualizations—adauntingtaskduetothelargespaceofeditingoptions.Asaresult,
usersareeitheroverwhelmedbyacomplexUIorconstrainedbyacustomUIwithatailored,fixedsubsetofoptionswithlimited
editingflexibility.NaturalLanguageInterfaces(NLIs)areemergingasafeasiblealternativeforuserstospecifyedits.However,NLIs
forgotheadvantagesoftraditionalGUI:theabilitytoexploreandrepeateditsandseeinstantvisualfeedback.
WeintroduceDynaVis,whichblendsnaturallanguageanddynamicallysynthesizedUIwidgets.Astheuserdescribesanediting
taskinnaturallanguage,DynaVisperformstheeditandsynthesizesapersistentwidgetthattheusercaninteractwithtomake
furthermodifications.Studyparticipants(n=24)preferredDynaVisovertheNLI-onlyinterfacecitingeaseoffurthereditsandediting
confidenceduetoimmediatevisualfeedback.
Authors’addresses:PriyanVaithilingam,pvaithilingam@g.harvard.edu,HarvardUniversity,Boston,USA;ElenaL.Glassman,glassman@seas.harvard.edu,
HarvardUniversity,Boston,USA;JeevanaPriyaInala,jinala@microsoft.com,Microsoft,Redmond,USA;ChenglongWang,chenwang@microsoft.com,
Microsoft,Redmond,USA.
1
4202
naJ
91
]CH.sc[
1v08801.1042:viXra2 Vaithilingam,etal.
Fig.2. DynaVisdynamicallysynthesizeswidgetsbasedonnaturallanguagecommandsforvisualizationediting.Theusercandescribe
anedittothevisualization,andDynaVismodifiesthevisualizationandsynthesizesadynamicwidgetwhichtheusercanusefor
furtheredits(shownas𝑎→𝑏).Alternatively,theusercandirectlyaskforadynamicwidgettoperformedits(shownas𝑎→𝑐).
1 INTRODUCTION
Moderninteractivevisualizationauthoringtools(e.g.,Tableau[10],PowerBI[6],Lyra[46],Charticulator[45])have
greatlyreducedtheefforttocreateinitialvisualizationsfromdata.Withthesetools,authorsonlyneedtospecify
high-levelmappingsfromdatafieldstovisualproperties,andbehindthescenes,thesetoolsautomaticallyprovide
“smartdefaults”[47,56]tofillinhundredsofchartparameters—hidinglow-leveldetails.
Whilethesesmartdefaultsareoftensufficientforexploratoryanalysis,authorswhowanttorefinethevisualization
tobettercommunicatetheirinsightsandreaderswhowanttocustomizethevisualizationtoanswertheiranalysis
objectivesoftenfindthemselvesinneedofeditingthesedefaultvisualizations.Forexample,topreventlongerlabels
fromoverlappinginalinechart,theuserhastorotatethelabelsinthe𝑥-axis.Or,theuserwillhavetoaddafilterto
onlyincludedatawithinagivendaterange(seeFigure2).
Theseeditsareoftenconsidered“smalltweaks”ofthevisualization,buttheselong-tailededitscanbeverychallenging.
First,theuserneedstodistinguishwhichoptionswillleadtothedesirededitingeffect(e.g.,understandthatthey
needthe“tick”optionasopposedto“scale”or“legend”toeditlabelangle),whichrequiresexpertiseonlow-level
visualizationgrammar.Then,theuserneedstodiscovertheeditoptioninthetoolwhichmaybeburiedintiersof
menusandpanelsamongallothersinatoolGUI(e.g.,theuserneedstoright-clickthe𝑥-axistoopenitsproperty
editor,locatethesub-panelonticks,findtherotationoptiontochangethelabelangle),whichcanbechallengingto
achievewithoutdecenttoolexpertise.Asaresult,usersareeitherpresentedwithacomplexUIwheretheyareswamped
withoptions,oratailoredinterfacedesignedtosimplifynavigationwheretheyoftenfindthemselvestoorestrictedto
performthedesiredcustomization.
Anemergingapproachtoaddressthisvisualizationeditingandrefinementchallengeistodesignnaturallanguage
interfaces(NLIs)thatallowuserstodescribeeditingeffectsinnaturallanguage.Then,basedontheuser’sinstructions,
thetoolsautomaticallyinfernecessaryoptionsandcorrespondingvaluestoapplytheedits.Forexample,theuser
cangivethenaturallanguagecommandto“movethe𝑥-axistitletotheleftsideoftheaxis”,whichwilltranslatetoDynaVis:DynamicallySynthesizedUIWidgetsforVisualizationEditing 3
changingthe“titleAnchor”propertyofthe“𝑥”encodingtothevalue“start”.However,whileNLIsaddressthediscovery
andnavigationchallenges,theyforgothebenefitsofGUI,especiallytheabilitiestoperformfine-grainededits,obtain
immediatevisualfeedbackfromeditingresults,andquicklyundoandreapplyedits.Forexample,iftheuserwantsto
makethewidthofthestrokesinthelinechartthicker,theydonotalwayshavetheexactsizeinmind,andwouldoften
tryoutdifferentsizesbeforechoosingone.Or,iftheuserwantstochangethecolorsofthebarchart,theymaynot
knowtheexacthex(orRGB)valuetoprovide.SuchlimitationsrestrictNLIs’applicationsinvisualizationediting.
Toaddressthevisualizationeditingandrefinementchallenge,wedesignanewinteractionapproach,interaction
viadynamicallysynthesizedGUIwidgets,anddevelopatoolnamedDynaVisforvisualizationediting.Ourkeydesign
insightistoblendnaturallanguageinterfaceswithinteractiveGUIwidgetssothatuserscanbenefitfrombothNLIs’
reductioninthegulfofexecution[11]andGUI’sinteractivity.Toperformavisualizationeditingtask,theuserstartsby
eitherdescribingwhateditstheywanttoperform(e.g.,“rotate𝑥-axislabel45degrees”)ordirectlyaskingforaGUI
widgetthattheyenvisiontoperformtheeditswith(e.g.,“givemeaslidertocontrol𝑥-axislabelangles”);eitherway,
DynaVissynthesizesaGUIwidget(alongwithapresetvaluefromuser’sspecificationintheformercase)usingaLarge
LanguageModel(LLM)fortheusertoexploreandperformsubsequentedits.
Besidestheimmediatebenefitsofreducednavigationoverheadandinteractivityforexploringediteffects,users
canalsoeasilycomposeandcoordinatemultipleeditsusingdynamicwidgetsastheypersistaftersynthesisforquick
editingaccess.Behindthescenes,wedesignedawidgetsynthesisenginepoweredbyalargelanguagemodelthat
translatesuserinputsintoanHTMLimplementationofthewidgetandacall-backfunctionthatconnectsthewidget
inputstovisualizationproperties.DynaVisishighlyexpressiveandsupportsbothchartdesignedits(e.g.,adjusting
tickspacing,legendposition,colorscheme,labelandtitlefontproperties)forauthorstorefinevisualizations,and
data-relatededits(e.g.,generatingfilters,zoomingcontrollers,andsort)forreaderstointeractivelyexplorevisualizations
withoutpre-builtinteractivewidgets.Ourstudywith24participantsshowsthatparticipantsprefertouseDynaVis
overNLI-onlyinterfacesduetotheeaseofrepeatingedits,andincreasedconfidencewheneditingusingaGUIdueto
immediatevisualfeedback.
Ourcontributionsareasfollows:
• Anewinteractiveapproachforvisualizationediting,dynamicwidgets,thatcombinesNLIwithGUIwidgetsto
reducethegulfofexecutionandenhanceinteractivity.
• Awidgetsynthesisenginethatleverageslargelanguagemodelstotranslatenaturallanguageinputsinto
widgetsandcontrolfunctions.
• AuserstudytoevaluatehowusersuseDynaVistosolvevisualizationeditingtasks.
2 USAGESCENARIO
Aliceisaconsultantanalyzingstocktrendsoftechnologycompaniesusingspreadsheets,andsheneedstocreate
visualizationstopresentheranalysisresultstohercollaborator.Below,wedescribeAlice’sexperienceofusingDynaVis
toeditandenhancehercharts.Figure1showstheUIof DynaVis,whichcontainsfourmaincomponents:(a)thedata
panel,(b)thecommandbarforspecifyingvisualizationandeditingcommands,(c)thevisualizationpanelthatshows
thecurrentworkingchart,and(d)thepanelofsynthesizeddynamicwidgetsthatuserscanusetomanagewidgetsand
edittheworkingchart.4 Vaithilingam,etal.
Fig.3. (1)AliceasksDynaVistocreatealinecharttoshowthestocktrendbyprovidinganaturallanguageprompt.(2)Shethenasks
DynaVistoeditthelegendpositionbygivinganaturallanguagecommand
Initialchart. Alicestartsbyimportingthedata“stocks.csv”intothetool,andthedatashowsupinthedatapanel
(Figure1-a).Tocreateachart,sheprovidesanaturallanguagedescriptionofthechart“createalinechartshowingthe
stocktrends”inFigure1-b.Uponsubmission,DynaVisinvokesanLLMtogeneratealinechartbasedoninformation
fromthedatasetandtheNLdescription(Figure3).Besidescreatingthechartusingnaturallanguage,Alicecanalso
importtheVega-Litevisualizationspecshecreatedfromothertools.
Aliceisnotquitesatisfiedwiththeinitialvisualizationbecause(1)thelegendtakestoomuchspaceontheright,(2)
𝑥-axislabelsaretoosmalltoread,and(3)thecolorschemeisnotideal,AlicedecidestouseDynaVistorefinethechart.
WithDynaVis,Alicehastwooptionstoeditcharts:(1)provideanaturallanguageinstructioninthecommandbar
(Figure1-b)todescribetheeditshewantstoachieve,and(2)explicitlyaddawidgetbyclickingthe“+”buttonatthe
topofthewidgetspanel(Figure1-d)andprovidinganaturallanguagedescriptionofthedesiredwidget.Eitherway,
DynaVisdynamicallygenerateswidgetsforAlicetoperformedits.
Adjustinglegendpositionviacharteditingcommands. Alicefirstwantstoadjustthelegendpositiontokeep
thelegendcontainedwithinthemainchartcanvas.Shedecidestousecharteditingcommandstodescribechanges
shewantstoapply.Forthis,sheprovidestheinstruction“movethelegendtotheleftofthechart”throughthenatural
languagecommandbar.Basedontheinstruction,DynaVisupdatesthevisualizationspectore-positionthelegend.
Additionally,DynaVisalsoautomaticallygeneratesawidgetwithadrop-downmenuforvariouslegendpositions
pre-populated.AsshowninFigure3-(2),withthiswidget,Aliceexperimentswithmultiplelegendpositionsbefore
finalizingherfinalchoiceof“top-leftcorner”,whichis,infact,abetteroptionthan“left”thatAlicedidn’texpectinthe
beginning.
Coordinatededitingoftextsizeandrotationangleof𝑥-axislabels. Next,Alicewantstoresolveissueswith
𝑥-axislabelswhicharecurrentlytoosmalltoread.However,thiscanbeaquitechallengingedit:increasingthefont
sizewouldmostlikelymakelabelsoverlapwitheachother;andwhileoverlapscanberesolvedbyrotatinglabelangles,
toomuchrotationwouldmakethemlessreadable.Thus,Aliceneedstocoordinatetheeditstolabelfontsizeand
rotationangletofindtherightbalance.Alicedoesn’thaveaclearideaonwhat’stheoptimalcombinationyet,thusshe
startswithanexploratorycommand“increasethe𝑥-axistextsizeto20androtatethelabelsby60degrees”.DynaVis
updatesthechartbasedonthecommandandpresentsherwitha“𝑥-axisLabelEditor”widgetthatletshereditthetext
sizeandanglesofthe𝑥-axislabelssimultaneously(seeFigure4).Withthis,Alicecantryoutmanycombinationswith
easewithouthavingtore-issuetheeditinginstructions.Aftersometrial-and-error,shesettlesonafontsizeof15and
rotationangleof−45thatsuitsherneeds.DynaVis:DynamicallySynthesizedUIWidgetsforVisualizationEditing 5
Fig.4. (1)AliceasksDynaVistoincreasethe𝑥-axislabeltextsizeto20androtateitby45degreescounter-clockwise.(2)DynaVis
editsthechartandalsoaddsadynamicallysynthesizedwidgetforAlicetomakefurtherchangesinthefuture.
Fig.5. (1)ThistimeAliceexplicitlyrequestsforawidgettochangethecolorofeachstocksymbolbyclickingthe“+”buttonand
givingthenaturallanguageprompt.(2)DynaVissynthesizesawidget,withoutmakinganyeditstothechart.
Choosingcolorsviawidgetcreationcommands. Now,Alicewantstomodifythedefaultcolorpaletteofthe
chart.SinceAlicedoesnotyethaveconcretecolorsinmind,shedecidestousethewidgetcreationfeatureof DynaVis
toaskforawidgettoexplorethecoloroptions.Todoso,sheclicksthe“+”buttonatthetopofthewidgetpanel
(Figure5)toopenthewidgetcreationcommandbox,shethentypesintheprompt“changethecolorofeachstock
symbol”.DynaVis,whichunderstandsthecurrentcontextofthechartandthecurrentdataset,generatesatailored
“Stockcolorpicker”widgetthatallowshertopickcolorsforeachstocksymbolinthechart(seeFigure5).DynaVis
evenknowsallthesymbolsthatarepartofhercurrentdataset,andcangenerateatailoredwidgetforher.Alicecan
usethiswidgettotrydifferentcolors,getinstantvisualfeedback,andchoosethedesiredcolorsforherchart.
Dataexplorationwithdatafilterwidgets. AfterAlicefinishesupthecustomization,sheemailsthevisualization
tohercollaboratorAlexwhoplanstoincludethevisualizationinanewsarticleheiswriting.Aftersomeanalysis,
AlexwantstocomparethestocktrendsforjustMSFTandIBMtogetdeeperinsights.Insteadofgoingbackand
askingAlicetodothat,AleximportsthevisualizationspecinDynaVistoperformtheedits(aJSONVega-Litespec
thatcontainsdataaselaboratedmoreinsection3).Afterimporting,Alexprovidesthecommand“compareonlyMSFT
andIBM”,andDynaVisquicklyupdatesthecharttorunafiltertransformationtoshowonlythedataforMSFTand6 Vaithilingam,etal.
IBM.DynaVisalsoprovidesa“SymbolFilter”widgetwithacheckboxforeachstocksymbol,usingwhichAlexcan
continuetocomparedifferentstocktrendschoosingoneormoresymbolstocompare(Figure1,thirdwidget).DynaVis
alsointelligentlyidentifiesthatthiswidgethasadata-filteringtransformandprovidesaswitcherforuserstoenableor
disablethetransformation.
Next,AlexasksforaDateslicerwidgettozoomthevisualizationbyusingasmallertimewindow(Figure1,second
widget).Sincethestockpricesofthetwocompaniesthatarecomparedaremuchlowerthanothercompanies,Alex
alsorequestsawidgettoslicethe𝑦-axisrange.Nowusingthegenerated𝑦-axisrangeslicer,Alexcanzoominandout
oftherangewindowtoseeminutepricechangeswithinthetimewindowofhischoosing(Figure1,firstwidget).After
findingthedesiredvisualization,Alexincludesthefinalvisualizationinhisarticleforpublication.
Remark: AliceandAlexcancompletethevisualizationrefinementandexplorationtaskswitheasethankstothe
followingbenefitsof DynaVis.
• InconventionalGUI,Aliceneedstonavigatemenusandpanelstolocatewidgetstoperformedits,which
requiresherproficiencyinbothGUIandvisualizationterminologies.DynaVislowersthisbarrierbyallowing
Alicetoobtaindesiredwidgetsvianaturallanguagedescriptions.
• SynthesizedwidgetsallowAlicetoperformfine-grainededitsandobtainimmediatevisualfeedbackfrom
editingresults,whichenableshertoexploreandcoordinateeditingoptions.Thisallowshertofindoptimal
editsthroughtrialanderrorforeditsshepreviouslydidn’tknowprecisely(e.g.,color,rotationangle,andtext).
Alicewon’tbeabletoexploreeditoptionseasilywithanNLIasitrequireshertodescribeconcreteparameter
valuesandhasadelayedspecification-feedbackcycle.
• DynaVisishighlyexpressiveandsupportsbothchartrefinementeditsfortheauthorAliceanddatamanipulation
editsforthereaderAlex.WithoutDynaVis,AlexwouldeitherhavetointeractwithAliceeverytimehewants
anupdatedversionofthechartoraskAlicetocreateaninteractivevisualizationwhichrequiresadditional
effortstotailoroptions.
• Asdynamicwidgetspersistaftercreationandarefullycompositional,AliceandAlexcangobackandrepeat
edits(e.g.,update𝑥-axisrangeasanalysisobjectivechanges)orrevertcertainedits(e.g.,undodatafiltering).
ThiscanbechallengingwithanNLIaschangesarenon-compositional,andeveryupdaterequiresanewediting
command.Or,withaconventionalGUI,theywouldneedtokeeptrackofalleditstheyhavedoneinorderto
repeatorredoedits.
3 DYNAVISSYSTEMDESIGNANDIMPLEMENTATION
Inthissection,wefirstdescribethedesignprinciplesbehindourcoreconceptofwidgets.Wethendescribeoursynthesis
frameworkfordynamicallygeneratingthesewidgets.DynaVisisacross-platformwebapplicationthatisimplemented
withReactandTypescriptforthefront-enduserinterfaceandPythonfortheback-endserver.
3.1 DynamicWidgets
Widgetsasmodularsub-components. WithDynaVis,weintroducedynamicwidgets,whicharesmallmodular
UIcomponentsthatfocusonaparticulareditorinteractiontaskathand.Theeditcaninvolvesimplechangestooneor
multiplechartproperties,suchaschangingthepositionofthelegendorslicing,orcaninvolveadatatransformation
operationexecutedonthedatabeforechartrendering,suchasfilteringspecificrangesontheaxes.Atahighlevel,a
widgethastwocomponents:DynaVis:DynamicallySynthesizedUIWidgetsforVisualizationEditing 7
Fig.6. Adynamicwidgetiscomprisedoftwocomponents—(1)TheHTMLscriptdefiningtheUI(2)TheJScallbackfunctionthat
listensforthechangesintheUItoeditthevisualization.
• AnHTMLscriptthatdescribestheUIelementsofthewidgetwhichtheuserwillinteractwithtomanipulate
thevisualization.e.g.,AnHTMLscriptcontainingan<input>elementoftypeslidertochangethex-axislabel
sizeofthechart(seeFigure6).
• AJavaScriptcallbackfunctionthatcontainsthecodethatwillbeexecutedtomanipulatethevisualizationand/or
datawhenevertheuserinteractswiththewidget.Thiscallbackfunctionisoftheformcallback(event,chart)=>
(transforms,chart),whichacceptsboththeHTMLeventobjectandthecurrentchartasinputsandgeneratesan
optionallistoftransformsandtheupdatedchartasoutputs.ThiscallbackfunctionisattachedtotheonChange
eventhandlersofalltheinputelementsintheHTMLscript.
AnexampleofthedynamicwidgetisshowninFigure6alongwithitsHTMLscriptandJavascriptcallbackfunction.
Oneofthemaindesignchoicesofoursystemistoensurethemodularityofthewidgetssothateditsfromtwo
differentwidgetsdonotconflictormanipulatethechartinunexpectedways.Thisrequirementhasimplicationsfor
howwehandlechartsandtransforms:
Handlingcharts. Toensurethateachwidgetonlychangesasmallcomponentofthechart,werecognizedthat
usingadeclarativechartrepresentationispreferabletoanimperativeone.Onesuchdeclarativerepresentationisto
useaJSONobject(calledaspecification)toencodethepropertiesofthechart.Forexample,withJSONrepresentation,
tochangethex-axistitle,onecanjusteditthechartspecificationasspec.encoding.x.title="axistitle"withouthaving
tochangeanythingelseregardingthechart.
Inthispaper,weuseVega-Litespecifications[47]forrepresentingchartssinceitprovidesuswithaconciseand
declarative representation of visualization while also maintaining expressiveness. Vega-Lite also provides a well-
supportedrenderingenginethatiscompatiblewithallthemajorwebframeworks.
Handlingdatatransformations. Datatransformationsareanimportantpartofvisualizationediting.DynaVis
handlesalltheVega-Litedatatransformations,e.g.,filter,fold,flatten,etc.InDynaVis,transformsarerepresentedasa
listofobjectssimilartoVega-Lite.Eachwidget’scallbackoutputsalistoftransforms.Thetransformsareperformedin
theorderinwhichtheyarespecifiedinthislist.Iftherearemultiplewidgetswithtransforms,weexecutetransformsin
thechronologicalorderofthewidgets.Toenablethis,wekeepamappingofthewidgetstotheirmostrecentcallback’s
outputtransforms,sothatwecanexecuteallwidget’slatesttransformsintheaboveorderbeforerenderingthechart
foreveryedit.Foreverywidgetthataddstransformationstothechart,DynaVisaddsaswitchsothatuserscanenable
ordisablethetransform.e.g.,Let’staketheexampleofAlexfromSection2.Whentheyrequestawidgettoslicethe8 Vaithilingam,etal.
Fig.7. DynaVissystemarchitecture.TheDataSummarizergeneratesasummaryfrominputdatatoassistvisualizationandwidget
synthesis.TheChartEngineapplieschangestovisualizationsbasedoncharteditinginstructions,andtheWidgetEngineisresponsible
forsynthesizingdynamicwidgetsfrombothtypesofusercommands.
Fig.8. TheSummarizerconstructsanNLsummary Fig.9. Giventhedatasummary,theNLprompt,andan(optional)chart
fromextracteddataproperties. specification,thechartengineproducesanupdatedchartspecification.
daterange,thesynthesizedwidgetaddsafiltertransformonthedata.DynaVisidentifiesthisasaspecialTransform
Widget,andallowsAlextodynamicallyenableordisablethetransformtoseetheoriginalchartandthefilteredchart.
3.2 SynthesisFramework
Belowwedescribeoursynthesisframeworkbysplittingitintothreestages:pre-processing,LLM-basedsynthesis,
andpost-processing.Ourframeworkcomprisesof3mainmodules:aDataSummarizer,aChartEngine,andaWidget
EngineasshowninFigure7.
3.2.1 Pre-processing:DataSummaryandVisualizationPre-processing.
Togeneratevisualizationsandsynthesizedynamicwidgets,theLLMneedsanaccuratecontextofthedatatheuser
isworkingwith.However,duetothelimitedcontextwindowsupportedbyLLMs,wecannotpassthewholedatatothe
LLM.Hence,toaugmentLLMswithgroundingcontextaboutthedata,weborrowtheDataSummarizerfromLida[22].
Thissummarizerisusedtoproduceadenseyetcompactsummaryforanygivendatasetthatisusefulasagrounding
contextforvisualizationtasks.ForeveryLLMqueryinthesubsequentsteps,wepassthedatasummaryinsteadof
thedata.First,thesummarizerappliesrulestoextractdatasetpropertiesincludingatomictypes(e.g.,integer,string,
boolean),generalstatistics(min,max,uniquevalues,etc.),andarandomlistofnsamplesforeachcolumnusingthe
pandaspythonlibrary[8].ThenthebasesummaryisenrichedbyanLLMtoincludeasemanticdescriptionoftheDynaVis:DynamicallySynthesizedUIWidgetsforVisualizationEditing 9
dataset(e.g.,adatasetofstockpricesfortop5techcompaniesfor10years),andfields(e.g.,StockpriceinUSD)aswell
asfieldsemantictypeprediction[62](seeFigure8).
BeforesendinganyeditorwidgetsynthesisqueriestotheLLM,DynaVissplitsthedatafromthevisualization
specification,andanyotherunnecessarychartproperties(likeconfigurationpropertieslikewidth,height,etc.)to
preventcontextoverflow.ThisalsoensuresthattherenderingenginecanremainresponsivetoUIchanges.
3.2.2 LLM-basedSynthesisofVisualizationandDynamicWidgets.
Synthesizingvisualization. TheChartEngineisprimarilyresponsibleforsynthesizingvisualizations—either
newvisualizationsoreditingexistingvisualizationsbasedonthenaturallanguagepromptfromtheuser.TheChart
Engineusestheenricheddatasummaryfromthesummarizer,theuserprompt,andoptionallyanexistingVega-Lite
specificationtoreturnaVega-LitespecificationusingaLLM[Fig9].ToensurethattheLLMproducesavalidVega-Lite
specification,andtopreventversion-basederrors,weinstructthemodeltoonlyusetheVega-LiteSchemav5andto
produceavalidJSONoutputinamarkdowncode-blockformatwithlanguagedescriptors.Sincechat-basedmodelslike
GPT3.5aretrainedtoproduceverboseoutput,usingaMarkdowncode-blockformatensureswecanreliablyextractthe
codeblock.Tomaintainconsistencyofoutput,weprovidesomefew-shotlearningexamplesofVega-Litespecification
withitsdescriptiontothemodel.
Synthesizingdynamicwidgets. TheWidgetEngineisprimarilyresponsibleforsynthesizingdynamicwidgets.
Thewidgetengineusesthedatasummary,currentVega-Litechartspecification,andtheuserprompttoreturnthe
widgetcomponents–bothHTMLscriptandtheJavascriptcallbackfunction.
ToensurethattheLLMproducesavalidprogramforthewidgetweprovidestricttemplatesforHTMLandJavaScript.
TheHTMLtemplatedefinestheempty<div>stubwithcommentedinstructions.TheJavaScripttemplatehasanempty
JSfunctionstubwithapredefinedreturnvalue.Thistemplateimprovesthereliabilityandpredictabilityofthecode
generated.TemplatesalsohelpusverifythecodeinthenextstepofProgramAnalysis.Wealsoprovidedafew-shot
examplesofHTMLandJScodetothemodeltomaintainconsistencyofoutput.
3.2.3 Post-Processingthroughprogramanalysis.
Processingvisualizations. OnceweextracttheJSONspecificationfromthemarkdownoutput,weparsethe
specificationtocheckforJSONformattingerrorsandthencompiletheVega-Litespecificationtocheckforsyntaxor
schemaerrorsinthesynthesizedspecification.Incaseoferrors,weprovidetheerrormessageandaskthemodeltofix
theerrorsinthesameconversationcontext.Ifthisdoesn’twork,were-trythepromptonceagain.
Processingdynamicwidgets. Topreventerrors,andensurethevalidityofthewidgets,DynaVisperformsaseries
ofpost-processingstepsontheHTMLandJScodesynthesizedbytheLLMusingprogramanalysis.Wementionsome
ofthemanystepsinvolvedinthepost-processingstagebelow.EachstepisachievedbyparsingtheHTMLandJScode
toanabstractsyntaxtree(AST)andmanipulatingtheAST.
• ParsetheHTMLcode,toensuretherearenoconflictsintheHTML“ID”propertybetweenthesynthesized
widgetsandpreviouswidgets.Ifwefindconflicts,weprogrammaticallymodifytheIDpropertyandmodifythe
correspondingJScallbackfunction.
• ParsethesynthesizedJScallbackfunctiontoensureithastherightfunctionnameandvalidfunctionparameters.
• IdentifyandreplacetheHTMLIDsusedinthecallbackfunctionthatweremodifiedintheHTMLscript.10 Vaithilingam,etal.
• DynaVisensuresthatthepropertiesofthechartbeingeditedareeitheralreadypresentinthecurrentchartor
thecallbackfunctionhandlesthenullcasecorrectly.
3.3 UserInterfaceImplementation
DynaVisisimplementedasawebapplicationwithReactandTypescript.Weusethehtml-react-parser[7]libraryto
attachanddetachwidgetsontheflyastheyarecreatedanddeleted.DynaVis’sbackedhoststhedatasummarizer
(implementedinpandas)implementedasaflaskwebserverthatcommunicateswiththefront-endusingRESTAPI.
WeusetheOpenAIAPI[1]toissuequeriestotheLLM.Wechosegpt-3.5-turboasthetargetLLMinourcurrent
implementationfromOpenAIbecauseitstrikestherightbalanceofaccuracyvs.speed.Sincewehadtomakeeditsand
synthesizewidgetswithininteractivetimetopreventannoyingtheusers,theGPT-3.5modelwasresponsiveenough
andaccurateenoughtosuitourneeds.WehavealsotestedourtoolwiththemoreadvancedGPT-4model,which
supportslongercontextandhasbetterinstruction-followingcapabilitytogeneratewidgetsmoreaccurately.However,
thelatencyistoohighforsmoothinteraction.
4 USERSTUDYDESIGN
TounderstandhowuserscanuseDynaVistosolvevisualizationeditingtasks,weconductedawithin-subjectslab
studywith24participants.Inthestudy,usersareaskedtosolvetwosetsoffivevisualizationeditingtasks,oneset
usingDynaVisandanotherusingabaselineNLI-basedtool.Weaimtoanswerthefollowingresearchquestions:
RQ1 DoesDynaVisreduceusers’effortstoeditvisualizations?
RQ2 Inwhatscenariosdousersprefertousedynamicwidgetscomparedtoabaselinetool?
RQ3 Whatareusers’strategiestoworkwithdynamicwidgets?
4.1 Participants
Werecruited24participants(13female,10male,1chosenottodisclose)throughthemailinglistsoftworesearch
universities.Ofthe24participants,2workedwithdatavisualizationatleastoncedaily,4participantsworkedwith
visualizationsweekly,14participantsworkedwithvisualizationsatleastonceamonth,and4participantslessfrequently
butstilloccasionallyworkedwithdatavisualization.Participantsmentionedtheyhadpriorexperiencewithavariety
ofvisualizationtoolsandlibrariesincludingmatplotlib(Python),Seaborn(Python),ggplot(R),Tableau,Excel,D3,
andmore.NoneoftheparticipantshadanyexperiencewithVega-LiteorVegalibraries.Threeofthe24participants
reportedtheyperformeddataanalysisdaily,6participantsdiditweekly,8participantsdiditatleastafewtimesa
month,and7participantsdiditoccasionally(lessthanafewtimesamonth).Participantsreceiveda$25Amazongift
cardascompensationfortheirtime.
4.2 StudyConditions
Weconsiderthefollowingtwoconditionsinouruserstudy.WechoosetheNL-basedvisualizationeditingapproachas
thebaseline[23].
• BaselineCondition(UINL): WemodifiedtheDynaVisinterfacewiththesupportforNaturalLanguage
Commandsalongwithasetofpre-populatedUIwidgetsforbasicchartmanipulation(e.g.,charttitle,axis
range,etc.)andremovethesupportfordynamicwidgets.ByprovidingbothNLandbasicUIsupportsforusers
tofreelychoosefrom,webelievethisisafairstate-of-the-artbaselinetoolforthestudy.Pre-populatedwidgetsDynaVis:DynamicallySynthesizedUIWidgetsforVisualizationEditing 11
aresimilartostaticUIusersusetoeditvisualizations(likeExcel,GoogleSheets,etc.).Fortheeditingtasks,
userscanuseacombinationofnaturallanguagecommandsandthepre-populatedwidgetstoeditthechart.
• ExperimentCondition(UIDW):ThisisDynaViswiththesupportfordynamicwidgetsontopofUINL.With
thisUI,theuserscaneditthechartusingnaturallanguagecommands,addcustomdynamicwidgets,oruse
thesamesetofpre-populatedwidgets.Asanaddition,whenevertheuserprovidesanaturallanguageedit
commandtotheAI,wewillsynthesizeandautomaticallyaddadynamicwidget.Wedisplaythesynthesized
widgetsinreversechronologicalorder,sothelatestsynthesizedwidgetisshownatthetop.
Notethatwedidn’texplicitlysetupawidget-onlybaselinebasedonanexistingvisualizationtoolasitwouldrequire
ustorestrictparticipantstoonlypeoplewithexperiencewithacertainvisualizationtool,hencelimitingthediversity
oftheparticipants.However,wedocollectuserfeedbackintheinterviewontheiropinionsonhowtheirexperiences
withDynaVisdifferfromtheirfavoritetools.
4.3 Tasks
Weselectedthreedatavisualizationtasksderivedfrompopulardatasets.Sinceourfocusisonvisualizationediting
tasks,nottheauthoringtask,theparticipantstartseachtaskwithabasedatasetandabasevisualization.Informed
bytheformativestudyconductedbyWangetal.[55],theparticipantswillhavetoperformaseriesofeditstothe
visualization.Eachtaskcontainsfivesub-taskscontaininginstructionstoperformeditstothebasevisualization.We
includethefollowingthreetypesofquestions:(1)editingthevisualizationwithaconcreteeditingtask,(2)exploratory
editingtask(e.g.,tryafewoptionsandthenpickthebeststrokewidth),and(3)editingtaskswithaquestiontobe
answeredbasedonthechart(e.g.,zoomintoatimewindoworrange,filterdata,etc.).
Task1(StockTrends). Givenadatasetofstockpricesforthetopfivetechcompaniesovertenyearsandthebaseline
chartbelowvisualizingthestocktrend,theuserisaskedtocompletethefollowingsub-tasks.
(1) Changethecharttitleto“StockTrend”.
(2) Trydifferentlinesstrokewidthsandfindthebestonethatsuitsyou.
(3) EditthecharttoshowthestocktrendsforAAPLandMSFTonly.
(4) Changethey-axismaxrangeto250togetazoomedinview.Then,answerthe
question:“Byjustviewingthechart,gettheminimumandmaximumstockprice
forbothAAPLandMSFT”.
(5) NowcompareonlybetweenIBMandMSFT.Then,answerthequestion:“Byjust
viewingthechart,findthemonthandyear,wherethedifferenceinstockprice
betweenthetwocompaniesweremaximum”.
Task2(UnemploymentData). GivenadatasetofUSAunemploymentstatisticsovermultiplesectorsandthestacked
areachartbelowvisualizingthedistributionofunemploymentnumbers,theuserisaskedtocompletethefollowing
sub-tasks.12 Vaithilingam,etal.
(1) Changethex-axistitleto“Timeline”.
(2) Tryoutdifferentlegendpositions(insideandoutsidethechart)tochoosethe
bestpositionthatsuitsyou.
(3) EditthecharttoshowthetrendsforConstructionandAgriculturesectorsonly.
(4) Editthey-axismaxdateto06/01/2004(June2004).Then,answerthequestion:“By
justviewingthechart,gettheapproximatemonthandyearwherethedifference
intheunemploymentratebetweenthetwosectorsweremaximum”.
(5) NowcompareonlybetweenFinanceandConstruction.Then,answertheques-
tion:“Byjustviewingthechart,gettheapproximatemonthandyearwherethe
differenceintheunemploymentratebetweenthetwosectorsweremaximum”.
Task3(WeatherData). GivenadatasetofSeattleweatherfortenyearsandthestackedbarchartbelowvisualizing
theaggregateddistributionofweatherovereachmonth,theuserisaskedtocompletethefollowingsub-tasks:
(1) Changethey-axistitleto“NumberofRecords”.
(2) Rotatethex-axislabelsby45,65,and90degreesandchoosethebestoneforyou.
(3) Changethecolorofeachweathertypetothefollowingcolors:SuntoYellow,
SnowtoGray,RaintoBlue,FogtoGreen,DrizzletoPurple.
(4) Editthecharttoonlyshow“Snow”weatherforallthemonths.Then,answerthe
question:“Byjustviewingthechart,findthemonthwiththelowestsnowdays”.
(5) Editthecharttoonlyshow“Fog”weatherforallthemonths.Then,answerthe
question:“Byjustviewingthechart,findthemonthswiththehighestfogdays”.
4.4 StudyProcedure
ToenableeasyaccesstoDynaVis,wehostedboththecontrolandtheexperimentversionsofthetoolonlinewhich
couldbeaccessedbyparticipantsviatheirwebbrowser.Afterobtaininguserconsent,werecordedtheaudioandthe
screen-castofeachparticipant,andtheuserswereencouragedtothinkaloudduringthestudy.Ineachstudysession,
theparticipantcompletedoneofthethreetasksusingthecontrolconditionandanothertaskwiththeexperiment
condition.Tomitigatethelearningeffect,boththeorderoftaskassignmentandtheorderoftoolassignmentwere
counterbalancedacrossparticipantsthroughrandomassignment.Therefore,foreachuniquecombinationof3tasks
and2conditions,wehave8participantdatapoints.Beforeeachtaskinastudysession,theparticipantwasgivena
tutorialoftheassignedtoolandwasallowedtoexploreusingthetoolfor5minuteswithatestdataset.Beforestarting
eachtask,wealsoexplainedthedatasetandthebasevisualizationandprovidedtimefortheparticipantstoexplore
andunderstandthedataset.Wesetatimelimitof15minutesforeachtask.Aftereachtask,theparticipantfilledouta
post-tasksurveytoreflectontheirexperienceusingthetool.Afterfinishingbothtasks,participantsansweredafinal
surveytodirectlycomparethetwoconditions.Attheendofeachstudysession,wealsoconductedabriefinformal
interviewattheendofthestudytogettheparticipant’ssubjectiveexperienceparticipatinginthestudyandfeedback
forthetool.
4.5 MeasurementsandAnalysis
Werecordedbothquantitativeandqualitativemetricsduringtheuserstudy.Wemeasuredthesuccess/failureforeach
editingsub-tasktheparticipanthadtoperform.Asub-taskisconsideredfailediftheparticipantisunabletofinish
thetaskdespitemultipleattemptswiththetool.Theyareallowedtoretryasmanytimesastheyprefer.Throughapp
telemetry,wealsorecordedallthenaturallanguagecommandstheuserprovidedtothetoolandtheinteractionswithDynaVis:DynamicallySynthesizedUIWidgetsforVisualizationEditing 13
Q1.1.Itwaseasytocompletethetasksusingthetoolprovided.(1-StronglyDisagree,7-StronglyAgree)
Q1.2.TheAIunderstoodmyintentandmadetherightedits.(1-StronglyDisagree,7-StronglyAgree)
Q2.1.Howmentallydemandingwasthistaskwiththistool?(1—VeryLow,7—VeryHigh)
Q2.2.Howhurriedorrushedwereyouduringthistask?(1—VeryLow,7—VeryHigh)
Q2.3.Howsuccessfulwouldyourateyourselfinaccomplishingthistask?(1—Perfect,7—Failure)
Q2.4.Howharddidyouhavetoworktoaccomplishyourlevelofperformance?(1—VeryLow,7—VeryHigh)
Q2.5.Howinsecure,discouraged,irritated,stressed,andannoyedwereyou?(1—VeryLow,7—VeryHigh)
Table1. Aftereachtask,participantsrated(ona7-pointLikertscale)theirexperience(questions1.1-1.2)andthesubjectiveworkload
usingNASATLXmeasures(questions2.1-2.5).
Q1.1.Whichtoolwouldyouprefertouse?(1-UIDW,7-UINL)
Q2.1.Whichtoolwasmorementallydemandingtocommunicate?(1-UIDW,7-UINL)
Q2.2.Whichtoolmadeyoufeelhurriedorrushedduringthetask?(1-UIDW,7-UINL)
Q2.3.Whichtoolmadeyoufeelsuccessfulinaccomplishingthetask?(1-UIDW,7-UINL)
Q2.4.Forwhichtooldidyouworkhardertoaccomplishyourlevelofperformance?(1-UIDW,7-UINL)
Q2.5.Whichtoolmadeyoufeelmoreinsecure,discouraged,irritated,stressed,andannoyed?(1-UIDW,7-UINL)
Table2. Afterfinishingboththetasks,participantscomparativelyrated(ora7-pointLikertscale)theirtoolpreference(question1.1)
andthesubjectiveworkloadusingNASATLX(questions2.1-2.5)comparingbetweenthetwoconditions.(note:inthesurvey,the
namesoftheUIwerecodedtopreventbias)
thewidgetsinthetool.Inthepost-tasksurveytheuserfilledaftereverytask,werecordedself-reportedNASATask
LoadIndex,self-reportedLikertscoresforeaseofcompletingthetask,andhowwelltheAIunderstoodtheirintent(for
surveyquestionslookatTable1).Inthepost-studysurveytheuserfilledattheendofboththetasks,werecordedthe
participant’sself-reportedpreferenceandmodifiedtheNASATaskLoadIndexthatfocuseddirectlyoncomparing
theirexperiencebetweenthetwotools(forsurveyquestionslookatTable2).Forqualitativeanalysis,thefirstauthor
performedopen-codingontheparticipants’responses,andtheaudiotranscriptstoidentifythemes,andthendiscussed
withco-authorstorefinethethemesovermultiplesessions.Thesethemesareusedtoexplainthequalitativeresults.
Weusepairedt-testtomeasurethestatisticalsignificanceofquantitativemetrics.
5 USERSTUDYRESULTS
5.1 TaskCompletion
ParticipantsusingtheUINLtoolfailedtocompletesub-tasksmoreoftenthantheparticipantsusingtheUIDWtool.
WhenusingtheUINLtool,sevenparticipants(P4,P5,P6,P10,P11,P16,P17)failedoneofthesub-taskscomparedto
twoparticipants(P1,P20)whenusingtheUIDWtool.Noneoftheparticipantsfailedonmorethanonesub-taskduring
thestudy.Itisimportanttonote,thatthesefailuresaredespiteparticipantsretryingthetasksasmanytimesasthey
want.Figure10showstheself-reportedscore(Likertscale;higherisbetter)foreaseofcompletingthetaskwiththe
toolprovidedforeachcondition.ParticipantusingUIDWfounditsignificantly(𝑝 =0.004)easiertocompletethetask
(𝜇=6.26,𝜎 =0.86)comparedtousingtheUINL(𝜇=5.13,𝜎 =1.6).
Theaveragetime𝑡¯forparticipantsintheUINLtocompletethetaskis7minutesand22seconds(𝑡¯
task_1
=6′05′′,
𝑡¯
task_2
= 9′23′′,and𝑡¯
task_3
= 6′37′′).IntheUIDWcondition,participantstookanaveragetimeof6minutesand36
seconds(𝑡¯ =6′20′′,𝑡¯ =7′07′′,and𝑡¯ =6′23′′)tocompletethetask.Thedifferenceintaskcompletion
task_1 task_2 task_3
timebetweenthetwoconditionsisnotstatisticallysignificant.Notethattheexploratorynatureofsomesub-tasks(e.g.,
task1.3)encouragesparticipantstospendtimeexploringthevisualization,andthecompletionspeedisnotadefinitive14 Vaithilingam,etal.
Fig.10. Participantsself-reportedscoresforNASATLXquestions,and Fig.11. Participantsself-reportedcognitiveloadandpref-
easeofcompletingthetask,andhowwelltheAIunderstoodtheirintent. erencescoresthatdirectlycomparethetwoconditions.
measureofperformance.Wereportthecompletiontimehereasasetupforunderstandingusereffortsthatwillbe
discussedinthefollowingsections.
Weanalyzedthesessionrecordingstoidentifytherootcauseofthesetaskfailures.Sixofthesevenfailuresinthe
UINLconditionandboththefailuresintheUIDWconditionhappenedinTask2.4,wheretheparticipantshadtoslice
thedaterangeforthechart.Thiswasduetothemodelreturningthedatesinanincorrectformatwheneditingthe
Vega-LitespecfromanNLcommand.Vega-LiteusesaspecificJSONdateformat,e.g.{“date”: 14, “month”: 3,
“year”: 2004},whereasthemodelinmanyinstancesusedstringstorepresentthedate(e.g.“2004-03-14”),resulting
inanerror.Whengeneratingthewidget,themodelseemstomakethismistakefewertimescomparedtoeditingthe
chartspecificationdirectly.TheremainingfailureintheUINLconditionoccurredduringTask1.5,wheretheparticipant
hadtochangethefilteringvaluesfrom[MSFT,AAPL]to[MSFT,IBM].Inthisinstance,themodeladdedanextra
conflictingfiltertransformationinsteadofeditingtheexistingtransformation.
5.2 Self-reportedCognitiveTaskLoadIndex
Inthepost-taskself-reportedNASATLXratingswhereparticipantsscoredtheircognitiveloadperformingthetasksin
boththeconditions(checkTable1forquestions),wedidnotfindanystatisticallysignificantdifferenceinthemental
demand,howhurriedorfrustratedtheyfelt,theeffortrequiredtocompletethetasksandtheirperceptionofsuccess
(seeFigure10).
Inthepost-tasksurveywheretheparticipantsdirectlycomparedtheircognitiveloadbetweenthetwoconditions(see
Table2forquestions),whenusingtheUIDWtool,80%ofparticipantsfeltlessmentaldemand,83%ofparticipantsfelt
lesshurried,62%ofparticipantsfeltmoresuccessful,75%ofparticipantsspentlesseffort,and75%oftheparticipants
feltlessfrustratedcomparedtowhenusingUINLtool(seeFigure11).
5.3 UserBehavior
5.3.1 NaturalLanguageCommandsvs.DynamicWidgetsusage. Figure12showstheusagedataforthenumberof
naturallanguagecommandsinvokedbytheparticipants,andthenumberofinteractionswithbothdynamicwidgets
andpre-populatedwidgets.DynaVis:DynamicallySynthesizedUIWidgetsforVisualizationEditing 15
Fig.12. Usagemetricsshowthenumberoftimestheuserusedpre-populatedwidgets,dynamicwidgets,andnaturallanguage
commands.
IntheUINLcondition,participantsusedanaverageof8.4naturallanguagecommandspertask(includingallsub-
tasks)toeditthevisualization.Thisusagesignificantly(𝑝 <0.001)decreasedtojust2.67naturallanguagecommands
whenusingtheUIDWcondition.Thiswasindeedreplacedbythedynamicwidgetusage,whereparticipantsonaverage
usedit13.25timeswhenusingtheUIDWcondition.Thisconfirmsourobservationofanincreaseinthenumberof
timesparticipantsfine-tunedwhenusingUIDWcondition.Thewidgetsreducedthebarriertotryingoutmanydifferent
valuesbeforesettlingontheedits.Forinstance,P6said“Withdynamicwidgets,Ilikehoweasyitistoggleormakeedits
insmallincrementsandtryoutmanydifferentvalues.IcanseewhatI’mclickingandhavefinegrainedcontrols.”There
wasnosignificantdifferenceintheusageofpre-populatedwidgetsbetweenthetwoconditions.
5.3.2 UserStrategy. IntheUINLcondition,weobservedtwomajorstrategiesusedbyparticipantstoperformthetasks.
Sixof24participants(P7,P9,P12,P13,P15,P17)alwaysusednaturallanguagecommandstoeditthevisualization
irrespectiveofanypre-populatedwidgetsavailabletoperformtheedit.Whereas,theother18participantsfirstlooked
forapre-populatedwidgettoperformtheireditsbeforeresortingtonaturallanguagecommands.
IntheexperimentconditionUIDW,weobservedtwomajorstrategiesusedbyparticipants.Nineparticipants(P2,P3,
P4,P5,P6,P8,P17,P18,P21)preferredtouseonlythewidgetstomakealltheedits.TheseparticipantsusedtheAI
onlytosynthesizedynamicwidgetswithoutmakingtheeditsandthenchosetomaketheeditsbyinteractingwith
thesynthesizedwidgetinstead.Tenparticipants(P7,P10,P12,P13,P16,P19,P20,P22,P23,P24)preferredtousethe
naturallanguagecommandtoperformthebroadedit,andthenusetheautomaticallysynthesizeddynamicwidgetsto
makefine-grainededits.P23said“Iwouldprefertousetheeditpromptforthefirsttime,andusethedynamicwidgetsfor
furthereditsandadjustments”.P15chosetouseonlynaturallanguagecommandstomaketheeditsandsaid“Ithink
that[UINL]waseasiertouse.ItisquiteeasytomakeeditsquicklyusingAIcommands”.Theremainingparticipantsused
acombinationofwidgetsandNLcommandswithnoparticularpreference.16 Vaithilingam,etal.
5.3.3 PromptingStrategy. ParticipantswhenpromptingtheAItoeditthechartgenerallyprovidedtheirintent(goal)to
theAI.Forallthesub-tasks,theystructuredtheirpromptas[ACTIONVERB]+[CHARTPROPERTY]+[VALUE].Some
examplesare“Changethestrokewidthto5”,“Rotatethex-axislabelsto65deg”,“changethex-axislabeltotimeline”.
However,wedidnoticeavarietyofnaturallanguagecommandsforfiltering-basedsub-tasks(Tasks1.3,1.5,2.3,2.5,
3.4,3.5).Someparticipantsdirectlymentionedthevaluestokeep.e.g.,“showmefinanceandconstructionsectorsonly”.
Someparticipantsmentionedvaluestoremove.e.g.,“RemoveeverythingotherthanMSFTandAAPL”or“Removetheplot
forAAPL.ShowmethevariationofIBM”.Someparticipantswhoweren’tproficientwithchartinglibrariesusedincorrect
chartpropertynameslike“visibilityofthestrokeswithonlyMSFTandAAPLselected”,“removealllegendcategories
exceptconstructionandagriculture”.Inthreesuchinstances,themodelstillperformedtherightfiltertransformation.
Fortwoinstances,themodeltriedtomodifythevisibilityresultinginanincorrectchart.
WhenpromptingtheAIforwidgets,participantsskipprovidingthevalueinthepromptanddirectlymanipulateit
viatheUI.Theirpromptwasgenerallystructuredas[ACTIONVERB]+[CHARTPROPERTY].Someexamplesare,
“changex-axislimit”,“changedaterange”,“Changethex-axismaxdate”.Forinstance,P3said“Justanactionalongwith
thepartofthechartthatneededtobeedited.”.P23said“Ikeepitasshortaspossible.Similarto[edit]commands,but
withoutthedata.”Inthenextsub-section,weshowevidenceofhowthismakespromptingforawidgeteasierthan
usingnaturallanguagecommandstodirectlyeditthechart.Bytakingadvantageofdatacontext,domainconstraints,
andcleverpromptengineeringusingtemplateswithinDynaVis,wecangeneratedynamicwidgetswithverylittle
ambiguitywithjustsimpleinstructionsfromusers[60].
5.4 UserPreference
Inthepost-tasksurvey,theuserswereaskedtoratetheirpreferencebetweentheUINLandUIDWconditions.Allthe
participantsexceptP15(96%)stronglypreferredusingDynaViscomparedtothebaselinetool.Theinformalinterview
andsurveyresponsesshedlightonthereasons,whichwediscussinthissub-section.
Finding1:Dynamicwidgetsmakerepetitiveeditseasier. Sixteenparticipants(P1,P3,P4,P5,P6,P7,P9,P11,
P13,P14,P17,P18,P19,P21,P22,P23)explicitlymentionedthatdynamicwidgetsgreatlyreducedeffortneededto
performrepeatededits.Byusingdynamicwidgets,theyreducethenumberofnaturallanguagecommandstheyneed
totype–whichisverytime-consuming.P5said,“Iwillratherjustinteractwiththedynamicwidgets.Comparedtotyping
commands,IwouldjustinteractwithanUIattheendoftheday.”.P7commented“Oncethewidgetwasthereforacertain
typeoftask,Ipreferredusingthewidgetasclickingislesscumbersomethanarticulatingandtyping.”Moreover,when
usingdynamicwidgets,participantsinteractedwiththeLLMonlyoncewhencreatingthewidgets.Subsequentedits
areperformedinstantlywhencomparedtousingNLcommands,wheretheyhavetowaitfortheresponsefromLLM
everytimetheyhavetoperformanedit.P6said,“DynamicwidgetswerethefoundationfortheeditsImadeandIcan
dohowevermanytimesIwant.FasterthanaskingtheAIagainandagain.”.Thisalsoexplainstheincreasedusageof
dynamicwidgetsmentionedin(Section5.3.1).UsersusingUIDW,triedalotmorevaluesforexploratorysub-taskssince
itwaseasiertorepeattheedits,comparedtousingUINL.
Finding2:Visualfeedbackenhancesunderstandingandexploration. Nineparticipants(P2,P4,P5,P8,P11,
P17,P18,P23,P24)mentionedtheypreferusingdynamicwidgetsduetotheinstantvisualfeedbackthewidgetsprovided
whenperformingtheedits.Thisvisualfeedbackworksbothways.First,whentheusermakestheeditsusingthe
dynamicwidgets,theeditsreflectonthechartimmediately,sincewearen’twaitingforaresponsefromtheLLM.
P23summarizesthisbysaying“Thereal-timeupdatewithwidgets,ratherthanwaitingforAI,wassupercool.IcanDynaVis:DynamicallySynthesizedUIWidgetsforVisualizationEditing 17
interactivelyseewhathappenswiththechart.”.Itisimportanttonotethatthesevisualizationsareinherentlystaticwith
nointeractivity–butbycreatingandusingdynamicwidgets,participantsareinteractingwithaninherentlystatic
visualization.
Second,theUIprovidesvisualfeedbackbyretainingtheeditinformationinthestateoftheUI.P24explainsthis
bysaying“withdynamicwidgets,Icanalsovisualizethechanges.Forexample,ifIchangethecolor,Icanjustseethe
colorthereinthewidget.Thatisveryhelpful,thatisjustefficient.”.Dynamicwidgetsprovideclearvisibilityofchart
(system)status,improvingthevisualfeedback[42].Inotherwords,dynamicwidgetshelpusersovercometheusability
challengeofthegulfofevaluation(understandingthesystemstate)[11,43].
Finding3:Promptingtocreatedynamicwidgetsiseasierandmorereliable. Figure10showstheparticipants’
self-reportedscore(Likertscale;higherisbetter)forhowwelltheAIunderstoodparticipants’intent.Participantsusing
UIDWtool(𝜇=6.04,𝜎 =1.36Likertscale)reportedthatAIunderstoodtheirintentsignificantlybetter(𝑝 =0.024)than
participantsusingUINLtool(𝜇=4.95,𝜎 =1.77Likertscale).18ofthe24participantsusingUINLhadatleastonefailed
naturallanguageeditcommand,and8ofthe24participantshadmorethan2failednaturallanguageeditcommands.In
contrast,onlynineparticipantsusingUIDWhadatleastoneerroneouswidget,andnoparticipanthadmorethan2
erroneouswidgetswhenperformingthetasks.
Twelveparticipants(P1,P2,P3,P5,P6,P11,P14,P16,P17,P21,P22,P24)explicitlynotedthatitwaseasierandmore
reliabletopromptfordynamicwidgetsthantousejustnaturallanguagetoeditthevisualization.Forinstance,P3
commented,“with[UINL]Ihadtoprovidemychatcommandasspecificaspossibletopreventerrors.Butwithdynamic
widgetsin[UIDW ]Ididn’thavetobeveryspecific.”.P6commentedonthereliabilitybysaying“Iliketheabilityto
executetheeditsusingdynamicwidgetratherthanleaveituptochanceusingtheAI.”
Oneprobablereasonforimprovedreliabilitycouldbe:whenusingonlynaturallanguagecommands,theLLMwill
havetogeneratethemodifiedVega-Litespecforthewholechartintheresponse.Thisincreasestheprobabilityof
errors,sinceduringthegeneration,theLLMcanpotentiallychangeanyotherunrelatedpropertyinthespecification.
Whereas,whengeneratingdynamicwidgets,themodelsynthesizesaJavaScriptcallbackfunctionthatonlyeditsone
(orafew)propertiesoftheVega-Litespec,greatlyreducingtheprobabilityoferrors.
Finding4:DynamicwidgetsenhancethesenseofcontroloverNL. Sevenparticipants(P3,P5,P6,P8,P10,P16,
P20)mentionedthatusingdynamicwidgetsprovidedthemagreatersenseofcontrolovertheoutcomewhenmaking
editstothevisualization.Usersfeltthatthewidgetsprovidedasenseofstructuretotheeditsperformedandasenseof
autonomy.P8said“ThewidgetsgavemeafeelingofautonomytomakemorechangescomparedtotheAI.Ithadcreated
somekindofstructureforachievingthechange.”.Further,P6said“typingthetextcommandswasalittlenon-ideal.Not
havingthewidgetsmadeitfeellikeIdon’tcontroltheedits.[naturallanguage]commandsmadeitfeelliketherewassome
levelofuncertainty.”
Finding 5: Dynamic widgets enable customization, but can be overwhelming for extended use. Nine
participants(P1,P3,P6,P9,P10,P11,P16,P14,P18)mentionedtheylikedusingdynamicwidgetssinceitallowedthem
tocustomizetheirownUItosuittheireditingintents.P7said“Thedynamicwidgetsareprettycool.It’slikewritinga
wholetoolforyourself,butinsteadofwritingcode,itisinstantlyavailable.”Sincewepresentthewidgetsinthereverse
chronologicalorderoftheircreation,P18said“Ilikedynamicwidgets,becauseitsortofstoresthehistoryofeditsImade.
IcanreferitbackwheneverIwanttochangeitifIdon’tlike.”.18 Vaithilingam,etal.
ComparedtotraditionalstaticUIs,dynamicinterfacesareconstantlychanging.Fiveparticipants(P21,P17,P18,P8,
P23)pointedoutthatcreatingdynamicwidgetscangetoverwhelmingoverlongeditingsessionswithwidgetpanels
constantlybeingchanged,andwantedsomewayofeitherpausingwidgetcreationorabilitytocategorizeandcontrol
thewidgetsthatareshown.Forinstance,P23said“IfImadealotofthem[dynamicwidgets],thenitmightgettricky.
It’llbenicetohaveautomaticgroupingbasedonthekindofeditsthewidgetsdo.”Similarly,P8said“Itwouldbeniceto
group,collapse,orcreatemultiplerelevantandrelatedwidgets,justlikePhotoshop,tocustomizebetter.”Incontrast,P7
said“Ifitwasalongseriesoftasks,Iwouldmaybejustpreferastableinterface.”,andP15said—“with[UIDW]I’mnot
surehowdynamicwidgetsarehelpful.Usingthecommandswasjustsimpler.”
5.5 ToolPerformance
TounderstandtheperformanceoftheDynaVisusingtheGPT3.5model,weperformedapostmortemanalysisto
measurethelatencyfacedbytheparticipantsduetothemodelresponsetime,andthenumberofautomaticretries
requiredtogeneratethecorrectVega-Litespecificationandwidgetcode.Wemeasuredthisbyre-playingalltheNL
visualizationeditcommands,andtheNLaddwidgetcommandsprovidedbytheparticipantsduringtheuserstudy.
Onaverage,eachquerytotheGPT3.5modeladdedalatencyof1.47seconds(𝜎 =0.34seconds).Also,onaveragefor
eachNLedit/addwidgetcommand,DynaVishadtoautomaticallyretry1.16times(𝜎 =0.58times)tofixsyntaxor
semanticerrorsbeforeproducingthecorrectoutput.
6 DISCUSSIONANDFUTUREWORK
ModalitiesbeyondNLandUIwidgets. DynaVisemploystwodifferentmodalitiesforuserstospecifythekinds
ofeditstheywanttomaketothechart:naturallanguagecommandsandinteractionthroughdynamicwidgets.This
designcombinesthestrengthsofbothmodalitiessotheusercanbettercommunicatetheintenttotheAIagentand
quicklymakerepeatedpreciseeditstothevisualization.Thiswasreflectedinthestudybytheparticipants’preference
forthetool,andhowtheyinteractedwithbothmodalities.
Aninterestingfuturedirectionistoexpandthemodalitiesbeyondthenaturallanguageandwidgetinteractionby
addingsupportforvoicecommandsaswellasgesturesanddirectmanipulationofthechart.Forexample,insteadof
theusergivinganNLcommand“Movethelegendtothebottomofthechart”,theusercansimplyclickanddrag(though
mouse,touch,ordigitalpens)thelegendtothebottomofthecharttomaketheedit.Theuserdoesn’tneedtoknow
theyhavetomodifylegend,rathertheycansimplypointustowardit.Similarly,DynaVisalsohasthepotentialto
includeby-examplespecificationstoletusersdemonstrateeditingexamplesbyeditingpartsofthevisualizationand
thenlettingthetoolgeneralizeeditstootherpartsofthevisualization.
However,multiplemodalitiesalsocomewiththeirchallenges.Forexample,itisnotalwayseasyforuserstofigure
outwhichmodalitytouseandwhen.Hence,moreresearchisneededtohelpuserslearnthebenefitsanddisadvantages
ofeachmodalitysothattheymakeaninformedchoice.
Staticvs.DynamicUI. Onebenefitofusingnaturallanguagecommandsanddynamicwidgetsovertraditional
staticUIistheabilitytoeasethegulfofexecution.WithstaticUI,theuserhastoknowhowandwheretoperform
theedits,whichcanbecognitivelydemanding[15].Whereas,withNLIsandDynamicwidgets,theusersonlyneedto
specifytheirintent.Theflipsideofthisargumentis,thatdespitethelearningcurve,overtimeuserswilllearnand
getusedtothestaticUIs.However,withdynamicUIs,theinterfaceisconstantlychanging,whichcanpotentially
increasecognitiveloadfortheuser,especiallyinlongeditingsessionsandforuserswitheditingexpertise.SomeDynaVis:DynamicallySynthesizedUIWidgetsforVisualizationEditing 19
participantsfromthestudydidexpressthisconcernandsuggestedhavingawayofcategorizingthewidgetspredictably.
LongertermusabilitystudywouldprovideinsightstounderstandhowconstantlychangingUIaffectsusability.Unlike
traditionalinterfaces,anotherlimitationof DynaVisandotherpurelyNL-basedinterfacesisthattheydonotpresent
allpossibleoptionstotheuseratalltimes.Thisisadouble-edgedsword;Duetothead-hocnatureofNLinterfaces,NL
commandsforaddingwidgets/editingvisualizationscansometimeshelpusersdiscoverpreviouslyunknownfeatures
(similartoobservationsin[13]),andothertimescanshifttheonusofdiscoveringthetool’scapabilitiesontotheuser
leadingtomistrustanddistrust[44].Moreresearchisneededtostudyandfindmethodstoovercometheselimitations.
AnotherinterestingfuturedirectionistoinspecthowwecantakeadvantageofdynamicUIwidgets’lowprogramming
requirementtoturnendusersinto“no-codedevelopers”withtheabilitytocustomize/DIYtheirinteractionpanels
toaugmentstaticGUI.Forexample,withdynamicwidgets,anendusercanconstructtheirownpanelthatbestsuits
theirdailytasksasshortcutsforcomplextasks.Forexample,auserwhooftenworksongeographicaldataanalysiscan
createacustompanelusingdynamicwidgetsspeciallyformapmanipulationfunctionstoreducemapeditingefforts.
Supportingimperativeplottinglibrariesandlower-levelvisualizationgrammars. Dynamicwidgetsare
designedarounddeclarativehigh-levelvisualizationgrammartoenablecompositionalediting(e.g.,VegaLite’sJSON
representationforvisualizationobjects).Thedeclarativesyntaxhelpsthewidgetstobemodularandbesynthesized
andusedinanyordertheuserwishes.Despitetheiradvantages,high-levelgrammarsexposefeweroptionsthan
low-levelgrammarsorimperativelibrariesformorecomplexvisualizationeditingtasks(e.g.,tomakepartsofaline
dashedwhiletherestsolid,wouldrequirevisitinglower-leveldetailsofhowlinesarerepresented).Tosupportediting
ofvisualizationintheselow-levellanguages,weenvisioncombiningDynaViswithbidirectionaleditingapproaches
whichleverageprogramanalysisandsynthesistechniquestopropagatesurface-leveleditrequirementstoeditsover
programstructuresorparameters.
Dynamicwidgetsforaccessibilityandotherapplications. PriorworkondynamicallysynthesizedUIsstemmed
fromaccessibilityresearch,likeSUPPLE[25]andSUPPLE++[26]toaccommodatemotorandvisioncapabilities.Inthe
spaceofdynamicwidgetsforvisualizationtasks,therearemanypossibleUIstoperformthesametask(e.g.,slidervs.
numberinputtocontrolthefontsize).EverytypeofUIhasaccessibilitytrade-offsbasedontheuser’sneeds.Inthe
future,wecanimagineaversionof DynaVisthatletstheuserprovidetheirinterfaceconstraintsandpreferences,and
DynaVisautomaticallysynthesizesUIthatmatchestheseconstraints.Priorworklike[33,53]hasaccomplishedUI
synthesisbasedonexamplesordemonstrations.Apotentialresearchdirectionwouldbetoaddaccessibilityconstraints
andexploitthegeneralknowledgeofLLMstocreateaccessiblewidgets.
WhileDynaVisisdesignedforvisualizationeditingtasks,webelievedynamicwidgetscanalsobenefitgeneralappli-
cationsthathaveextensiveconfigurationoptions(e.g.,documentprocessingsoftware,videoprocessingapplications).
Userscanalsotakeadvantageofdynamicwidgets’lowprogrammingrequirementsinno-code/low-codetools(like
Excel/Tableau)withtheabilitytocustomizeorDIYtheirinteractionpanelstoaugmentexistingstaticUI.Investigating
howdynamicwidgetscanbegeneralizedacrossdifferentapplicationdomainswouldbeworthstudyinginthefuture.
DynaVisdesignopportunities. TherearealotofopportunitiestoimproveDynaVisinthefuture,someofwhich
wehighlighthere.IntheUINLcondition,someparticipantsanticipatedrepeatededitsandcopiedtheNLcommand,
forreuse,beforesubmittingit.Inthefutureversionsof DynaVis,wecanenableuserstoaccessthehistoryofNL
commandstomakere-runningNLcommandswithsmalleditseasierfortheuser.Oneofthemostrequestedfeatures
fromtheparticipantsisformorewaystocustomizeandmanagealargenumberofdynamicwidgets.Thiscaninvolve20 Vaithilingam,etal.
categorizingwidgetsbytopic(likeAdobePhotoshop),andcollapsing/expanding(sectionsof)widgets.Anotheruseful
featureistosaveandrevisitcertaincombinationsofwidgets.Wecanalsogofurtherbyallowinguserstoexportthe
visualizationspecalongwiththewidgetstobesharedwithotherusers,similartoBespoke[53].
7 RELATEDWORK
Visualizationauthoringtools. Modernvisualizationauthoringtools[6,10,31,45,46]andgrammars[5,47]are
builtaroundthegrammarofgraphics[56]greatlyreducethevisualizationauthoringeffortsbyallowingusersto
specifyhigh-levelvisualizationintentviamappingofdatafieldstovisualproperties.Forexample,usersofTableauor
PowerBIcaneasilydragdatafieldsanddropintoencodingshelvesofvisualpropertiestospecifythemapping,and
usersofVega-LitecanprovidemappingsconciselyasaJSONobject.Then,basedonhigh-levelspecification,thesetools
automaticallyprovide“smartdefaults”tofilllow-levelvisualizationproperties(e.g.,strokewith,spacingofbars)and
compilesthevisualizationspectolow-levelvisualizationgrammarslikeD3[4]forrendering.Whilesuchdesignsreduce
theinitialvisualizationauthoringcomplexity,visualizationediting,andrefinementremainchallengingastheuserneeds
tounboxhigh-levelgrammarandnavigatethroughthelargespaceofeditingoptionstoperformtheedits.DynaVisis
designedtoaddressthevisualizationeditingchallenge,whichcomplementsthestrengthsofexistingauthoringsystems.
WeenvisionthatDynaViscanbecombinedwithexistingtoolsinawaythatusersstartwithahigh-levelspecification
todescribethevisualizationintentandthenutilizedynamicwidgetstoperformsubsequenteditstorefinethechart.
Naturallanguageinterfacesforvisualization(V-NLIs). Naturallanguageinterfaceshavebeenextensively
adoptedtoimprovetheusabilityofvisualizationsystems[49].EvencommercialGUI-basedtoolslikeTableau[36],
MicrosoftPowerBI[12],andGoogleSpreadsheets[21]automaticallytranslatenaturallanguagequeriestodataqueries
andpresentqueryresultswithvisualizations.However,thesesystemslimitnaturallanguageinteractionstodataqueries
andcorrespondingstandardcharts.
TherapiddevelopmentofNaturalLanguageProcessing(NLP)techniques[14,58]hasprovidedgreatopportunities
toexploreanaturallanguage-basedinteractionfordatavisualization.Therehasbeenactiveresearchinadopting
NaturalLanguageInterfacestoimprovetheusabilityofvisualizationsystems[21,27,48,49,52,59].Withthehelpof
advancedNLP-toolkits[2,3,9,32,35],asurgeofvisualization-orientedNaturalLanguageInterfaces(V-NLIs)have
emerged.V-NLI-basedauthoringsystemsaccepttheuser’snaturallanguagequeriesorcommandsasinputandoutput
appropriatevisualizations.Researchershaveexploredmultipletechniquesrangingfromheuristics-basedapproachesto
end-to-endlearningapproaches.
Heuristic-basedapproachesexplorepropertiesofdataingeneratingaspaceofpotentialvisualizations[57],ranking
thesespaceofvisualizationsbasedonqualityattributes[34,37]andpresentingthemtotheuser.Furtherworkshave
consideredataskdecompositionapproach,wheretheuserqueriesaredecomposedintomultipletasks.whichare
thensolvedindividuallyandthenaggregatedtoyieldthefinalvisualization[16,38,55].Finally,end-to-endlearning-
basedapproachesseektolearnmappingsfromdatadirectlytogeneratevisualizations[23].Morerecently,withthe
advancementsinLargeLanguageModels(LLMs),systemslikeLida[22]havefoundgreatsuccessinleveragingpatterns
learnedbyLLMsfrommassivelanguageandcodedatasetstocreatevisualizationsfromnaturallanguagecommands.
LLMsprecludetherequirementofapplyingheuristics,ortrainingofcustommodelspairedwithcustomtrainingand
data.Asanextension,manyV-NLIauthoringtoolsalsosupportvisualizationediting,withnaturallanguageasthe
primarymodality.DynaVis:DynamicallySynthesizedUIWidgetsforVisualizationEditing 21
Customizableanddynamicuserinterfaces. Priorresearchindomainssuchasaccessibilityandubiquitous
computinghasworkedonsystemsthatautomaticallygenerateUIs.SUPPLE[25]andSUPPLE++[26]generatecustom
UIsforuserstoaccommodatetheirmotorandvisioncapabilitiesbasedonuser-providedspecificationsandactivity
traces.ProjectssuchasUNIFORM[40]andthePersonalUniversalController(PUC)[39]generatecustomUIsfor
appliancessuchasmediaconsolesandprintersthatarecustomizedforeachindividual’spreferencesandinteraction
history.Huddle[41]builtatopPUCgeneratesUIstocoordinatemultiplehomeelectronicappliances.Mavo[54]allows
userstocreateinteractiveHTMLpageswithouttheneedforprogrammingbyjustaddingspecialHTMLattributesand
alsoprovidesdifferenteditingwidgetsbasedonthetypeofattributes.DynaVissharesthesesystems’goalsofcreating
specializedUItailoredtoindividualusers’intent.
MorerecentworkonDynamicinterfacesfollowsa“relaxation” methodtocreategeneralizedUIwidgets.The
relaxationmethodinvolvescreatingUIwidgetstodirectlymanipulatevariablesinafunctionorquery.Bespoke[53]
synthesizes custom GUIs for command-line applications by using user demonstrations. They employ rule-based
heuristicsthatinferasemantictypeforparametersinbashcommandstocreateadynamicwidgetforeditingthe
parameter.Similarly,Heeretal.[28]generatesdynamicUIusingqueryrelaxingthatenablestheuserstogeneralizetheir
selection.Asuiteofworknamedprecisioninterfaces[17,19,63]usesSQLqueriesasaproxytogenerateinteractive
widgetsfromasequenceofinputqueries.Thelatestiteration,NL2Interface[18]generatesSQLqueriesfromNL
commandsandcreatesageneralizedUItoedittheparameters/variablesintheSQLquery.BOLT[51]andEVIZA[48]
generateambiguitywidgetsthatprovideasimpleUIformanipulatingvaluesforambiguousinferredvariables.e.g.,for
theNLcommand“largestearthquakesinCalifornia”,thethresholdforclassifyingearthquakesaslargeisambiguous.
However,inbothBOLTandEVIZA,naturallanguagecommandsarerestrictedbyapre-definedgrammar.Thesetools
highlighttheimportanceofcomplementaryGUItoolsthataccompanyNLinterfaces.DynaVisbuildsonthesesystems,
andusesanLLMtosynthesizedynamicwidgetsthatcanenabledirectmanipulationofVisualizationproperties.Using
LLMstogeneratedynamicwidgetsgivesusthreedistinctadvantages:
(1) Byprovidinganaccuraterepresentationoftheuser’scontexttotheLLMs,DynaVisislesssensitivetoerrorsor
ambiguitiesinnaturallanguagecommandsprovidedbytheuser.
(2) Wedonothaveafixedsetofrules,orheuristics,orrelyonqueryrelaxation.InsteadofsynthesizingaUIthat
allowsuserstoeditjustonevariable,LLMscansynthesizewidgetsthatcanevencapturecomplexrelationslike
manipulatingmultiplepropertiesatonce.
(3) Unlikeprevioussystems,wedonotrestrictthespaceorthekindsofUIthatcanbegenerated.AsLLMsbecome
morepowerful,thiscanenablethesynthesisofcomplexinterfacesbeyondjustthetraditionalHTMLInput
elements.
Multi-modal user interfaces. Multi-modal interaction techniques have the advantage of letting users better
conveytheirintentinmultiplewaysreducingtheoveralleffort.Pumice[30]allowsuserstousenaturallanguage
todescribeprogrammingtasksinend-userdevelopmentscenariosandthenrefineintentbyprovidingexamplesto
complementNL’sambiguousnature.DIYAssistant[24]letsuserscombineNLandprogrammingspecificationsto
createpersonalassistants.Leeetal.[29]enablesbettersense-makingwithvisualquerysystemswiththehelpof
sketching.ShapeSearch[50]letsusersusequeryshapesusingbothNLandregularexpressions—greatlyimproving
theexpressivenessofshapesearchqueries.ToolslikePanaromicData[61],andVizdom[20]allowuserstousepenand
touchtodirectlyperformdataaggregationandanalyticsrespectivelyonadigitalwhiteboard.DynaVisbuildsonthe
ideaofenablingmultiplemodalitiesofinteraction.DynaVisleveragesbothNL-basedinteractiontoreducethegulfof22 Vaithilingam,etal.
executionandUI-basedinteractiontoenhanceinteractivity.Inthefuture,DynaViscanfurthercombinepen-and-touch
fordirectcontrolofvisualelementsoncanvasaswellassketchingtodemonstrateeditingeffects.
8 CONCLUSION
Inthispaper,weintroduceDynaVis,whichblendsnaturallanguageanddynamicallysynthesizedUIwidgetstoease
thegulfofexecutionandenhanceinteractivity.Givenavisualizationeditcommandorawidgetcreationcommand,
DynaVissynthesizesaUIwidgetthattheusercaninteractwithtoperformvisualizationedits.Ourstudywith24
participantsshowsthatparticipantspreferredDynaVisovertheNLI-onlyinterfacecitingeaseoffurthereditsand
editingconfidenceduetoimmediatevisualfeedback.
REFERENCES
[1] 2020.OpenAIAPI.https://openai.com/blog/openai-api. Accessed:2023-9-13.
[2] 2023.ApacheOpenNLP.https://opennlp.apache.org/. Accessed:2023-9-13.
[3] 2023.CloudNaturalLanguage.https://cloud.google.com/natural-language. Accessed:2023-9-13.
[4] 2023.D3byObservable.https://d3js.org/. Accessed:2023-9-14.
[5] 2023.ggplot2.https://ggplot2.tidyverse.org/. Accessed:2023-9-14.
[6] 2023.MicrosoftPowerBI.https://powerbi.microsoft.com/en-us/. Accessed:2023-9-14.
[7] 2023.npm:html-react-parser.https://www.npmjs.com/package/html-react-parser. Accessed:2023-12-6.
[8] 2023.pandasdocumentation—pandas2.1.0documentation.https://pandas.pydata.org/docs/index.html. Accessed:2023-9-14.
[9] 2023.spaCy-Industrial-strengthNaturalLanguageProcessinginPython.https://spacy.io/. Accessed:2023-9-13.
[10] 2023.Tableau:BusinessIntelligenceandAnalyticsSoftware.https://www.tableau.com/. Accessed:2023-9-14.
[11] 2023.TheTwoUXGulfs:EvaluationandExecution.https://www.nngroup.com/articles/two-ux-gulfs-evaluation-execution/. Accessed:2023-9-14.
[12] 2023.UsenaturallanguagetoexploredatawithPowerBIQ&A-PowerBI.https://learn.microsoft.com/en-us/power-bi/natural-language/q-and-a-
intro. Accessed:2023-9-13.
[13] ShraddhaBarke,MichaelB.James,andNadiaPolikarpova.2023.GroundedCopilot:HowProgrammersInteractwithCode-GeneratingModels.
Proc.ACMProgram.Lang.7,OOPSLA1,Article78(apr2023),27pages. https://doi.org/10.1145/3586030
[14] YonatanBelinkovandJamesGlass.2019.Analysismethodsinneurallanguageprocessing:Asurvey.TransactionsoftheAssociationforComputational
Linguistics7(2019),49–72.
[15] RalucaBudiu.2014.MemoryRecognitionandRecallinUserInterfaces.https://www.nngroup.com/articles/recognition-and-recall/. Accessed:
2023-9-12.
[16] QiaochuChen,ShankaraPailoor,CelesteBarnaby,AbbyCriswell,ChenglongWang,GregDurrett,andIşilDillig.2022.Type-directedsynthesisof
visualizationsfromnaturallanguagequeries.ProceedingsoftheACMonProgrammingLanguages6,OOPSLA2(2022),532–559.
[17] YiruChen.2020.Montecarlotreesearchforgeneratinginteractivedataanalysisinterfaces.InProceedingsofthe2020ACMSIGMODInternational
ConferenceonManagementofData.2837–2839.
[18] YiruChen,RyanLi,AustinMac,TianbaoXie,TaoYu,andEugeneWu.2022.NL2INTERFACE:InteractiveVisualizationInterfaceGenerationfrom
NaturalLanguageQueries.ArXivabs/2209.08834(2022). https://api.semanticscholar.org/CorpusID:252367337
[19] YiruChenandEugeneWu.2022.Pi2:End-to-endinteractivevisualizationinterfacegenerationfromqueries.InProceedingsofthe2022International
ConferenceonManagementofData.1711–1725.
[20] AndrewCrotty,AlexGalakatos,EmanuelZgraggen,CarstenBinnig,andTimKraska.2015.Vizdom:interactiveanalyticsthroughpenandtouch.
ProceedingsoftheVLDBEndowment8,12(2015),2024–2027.
[21] KedarDhamdhere,KevinSMcCurley,RalfiNahmias,MukundSundararajan,andQiqiYan.2017.Analyza:Exploringdatawithconversation.In
Proceedingsofthe22ndInternationalConferenceonIntelligentUserInterfaces.493–504.
[22] VictorDibia.2023.LIDA:AToolforAutomaticGenerationofGrammar-AgnosticVisualizationsandInfographicsusingLargeLanguageModels.(6
March2023).arXiv:2303.02927[cs.AI]
[23] VictorDibiaandÇağatayDemiralp.2019.Data2vis:Automaticgenerationofdatavisualizationsusingsequence-to-sequencerecurrentneural
networks.IEEEcomputergraphicsandapplications39,5(2019),33–46.
[24] MichaelHFischer,GiovanniCampagna,EuirimChoi,andMonicaSLam.2021. DIYassistant:amulti-modalend-userprogrammablevirtual
assistant.InProceedingsofthe42ndACMSIGPLANInternationalConferenceonProgrammingLanguageDesignandImplementation.312–327.
[25] KrzysztofGajosandDanielSWeld.2004.SUPPLE:automaticallygeneratinguserinterfaces.InProceedingsofthe9thinternationalconferenceon
Intelligentuserinterfaces.93–100.
[26] KrzysztofZGajos,JacobOWobbrock,andDanielSWeld.2007. Automaticallygeneratinguserinterfacesadaptedtousers’motorandvision
capabilities.InProceedingsofthe20thannualACMsymposiumonUserinterfacesoftwareandtechnology.231–240.DynaVis:DynamicallySynthesizedUIWidgetsforVisualizationEditing 23
[27] TongGao,MiraDontcheva,EytanAdar,ZhichengLiu,andKarrieGKarahalios.2015.Datatone:Managingambiguityinnaturallanguageinterfaces
fordatavisualization.InProceedingsofthe28thannualacmsymposiumonuserinterfacesoftware&technology.489–500.
[28] JeffreyHeer,ManeeshAgrawala,andWesleyWillett.2008.Generalizedselectionviainteractivequeryrelaxation.InProceedingsoftheSIGCHI
ConferenceonHumanFactorsinComputingSystems.959–968.
[29] DorisJung-LinLee,JohnLee,TariqueSiddiqui,JaewooKim,KarrieKarahalios,andAdityaParameswaran.2019.Youcan’talwayssketchwhatyou
want:Understandingsensemakinginvisualquerysystems.IEEEtransactionsonvisualizationandcomputergraphics26,1(2019),1267–1277.
[30] TobyJia-JunLi,MarissaRadensky,JustinJia,KirielleSingarajah,TomMMitchell,andBradAMyers.2019.Pumice:Amulti-modalagentthat
learnsconceptsandconditionalsfromnaturallanguageanddemonstrations.InProceedingsofthe32ndannualACMsymposiumonuserinterface
softwareandtechnology.577–589.
[31] ZhichengLiu,JohnThompson,AlanWilson,MiraDontcheva,JamesDelorey,SamGrigg,BernardKerr,andJohnStasko.2018.Dataillustrator:
Augmentingvectordesigntoolswithlazydatabindingforexpressivevisualizationauthoring.InProceedingsofthe2018CHIConferenceonHuman
FactorsinComputingSystems.1–13.
[32] EdwardLoperandStevenBird.2002.Nltk:Thenaturallanguagetoolkit.arXivpreprintcs/0205028(2002).
[33] DylanLukes,JohnSarracino,CoraColeman,HilaPeleg,SorinLerner,andNadiaPolikarpova.2021.Synthesisofweblayoutsfromexamples.In
Proceedingsofthe29thACMJointMeetingonEuropeanSoftwareEngineeringConferenceandSymposiumontheFoundationsofSoftwareEngineering.
651–663.
[34] YuyuLuo,XuediQin,NanTang,GuoliangLi,andXinranWang.2018.Deepeye:Creatinggooddatavisualizationsbykeywordsearch.InProceedings
ofthe2018InternationalConferenceonManagementofData.1733–1736.
[35] ChristopherDManning,MihaiSurdeanu,JohnBauer,JennyRoseFinkel,StevenBethard,andDavidMcClosky.2014.TheStanfordCoreNLPnatural
languageprocessingtoolkit.InProceedingsof52ndannualmeetingoftheassociationforcomputationallinguistics:systemdemonstrations.55–60.
[36] RuhaabMarkas.[n.d.].AskData:Simplifyinganalyticswithnaturallanguage.https://www.tableau.com/blog/ask-data-simplifying-analytics-
natural-language-98655. Accessed:2023-9-13.
[37] DominikMoritz,ChenglongWang,GregLNelson,HaldenLin,AdamMSmith,BillHowe,andJeffreyHeer.2018.Formalizingvisualizationdesign
knowledgeasconstraints:Actionableandextensiblemodelsindraco.IEEEtransactionsonvisualizationandcomputergraphics25,1(2018),438–448.
[38] ArpitNarechania,ArjunSrinivasan,andJohnStasko.2020.NL4DV:Atoolkitforgeneratinganalyticspecificationsfordatavisualizationfrom
naturallanguagequeries.IEEETransactionsonVisualizationandComputerGraphics27,2(2020),369–379.
[39] JeffreyNichols,BradAMyers,MichaelHiggins,JosephHughes,ThomasKHarris,RoniRosenfeld,andKevinLitwack.2003.Personaluniversal
controllers:controllingcomplexapplianceswithGUIsandspeech.InCHI’03ExtendedAbstractsonHumanFactorsinComputingSystems.624–625.
[40] JeffreyNichols,BradAMyers,andBrandonRothrock.2006.UNIFORM:automaticallygeneratingconsistentremotecontroluserinterfaces.In
ProceedingsoftheSIGCHIconferenceonHumanFactorsincomputingsystems.611–620.
[41] JeffreyNichols,BrandonRothrock,DuenHorngChau,andBradAMyers.2006.Huddle:automaticallygeneratinginterfacesforsystemsofmultiple
connectedappliances.InProceedingsofthe19thannualACMsymposiumonUserinterfacesoftwareandtechnology.279–288.
[42] JakobNielsen.2020.10UsabilityHeuristicsforUserInterfaceDesign.https://www.nngroup.com/articles/ten-usability-heuristics/. Accessed:
2023-9-13.
[43] DonaldNorman.1986.Usercenteredsystemdesign.Newperspectivesonhuman-computerinteraction(1986).
[44] RajaParasuramanandVictorRiley.1997.Humansandautomation:Use,misuse,disuse,abuse.Humanfactors39,2(1997),230–253.
[45] DonghaoRen,BongshinLee,andMatthewBrehmer.2018.Charticulator:Interactiveconstructionofbespokechartlayouts.IEEEtransactionson
visualizationandcomputergraphics25,1(2018),789–799.
[46] ArvindSatyanarayanandJeffreyHeer.2014.Lyra:Aninteractivevisualizationdesignenvironment.InComputergraphicsforum,Vol.33.Wiley
OnlineLibrary,351–360.
[47] ArvindSatyanarayan,DominikMoritz,KanitWongsuphasawat,andJeffreyHeer.2016. Vega-lite:Agrammarofinteractivegraphics. IEEE
transactionsonvisualizationandcomputergraphics23,1(2016),341–350.
[48] VidyaSetlur,SarahEBattersby,MelanieTory,RichGossweiler,andAngelXChang.2016.Eviza:Anaturallanguageinterfaceforvisualanalysis.In
Proceedingsofthe29thannualsymposiumonuserinterfacesoftwareandtechnology.365–377.
[49] LeixianShen,EnyaShen,YuyuLuo,XiaocongYang,XumingHu,XiongshuaiZhang,ZhiweiTai,andJianminWang.2022.Towardsnaturallanguage
interfacesfordatavisualization:Asurvey.IEEEtransactionsonvisualizationandcomputergraphics(2022).
[50] TariqueSiddiqui,PaulLuh,ZeshengWang,KarrieKarahalios,andAdityaParameswaran.2020.Shapesearch:Aflexibleandefficientsystemfor
shape-basedexplorationoftrendlines.InProceedingsofthe2020ACMSIGMODInternationalConferenceonManagementofData.51–65.
[51] ArjunSrinivasanandVidyaSetlur.2023.BOLT:ANaturalLanguageInterfaceforDashboardAuthoring.(2023).
[52] ArjunSrinivasanandJohnStasko.2017.Naturallanguageinterfacesfordataanalysiswithvisualization:Consideringwhathasandcouldbeasked.
InProceedingsoftheEurographics/IEEEVGTCconferenceonvisualization:Shortpapers.55–59.
[53] PriyanVaithilingamandPhilipJGuo.2019.Bespoke:InteractivelysynthesizingcustomGUIsfromcommand-lineapplicationsbydemonstration.In
Proceedingsofthe32ndannualACMsymposiumonuserinterfacesoftwareandtechnology.563–576.
[54] LeaVerou,AmyX.Zhang,andDavidR.Karger.2016.Mavo:CreatingInteractiveData-DrivenWebApplicationsbyAuthoringHTML.InProceedings
ofthe29thAnnualSymposiumonUserInterfaceSoftwareandTechnology(Tokyo,Japan)(UIST’16).AssociationforComputingMachinery,NewYork,
NY,USA,483–496. https://doi.org/10.1145/2984511.298455124 Vaithilingam,etal.
[55] YunWang,ZhitaoHou,LeixianShen,TongshuangWu,JiaqiWang,HeHuang,HaidongZhang,andDongmeiZhang.2022. Towardsnatural
language-basedvisualizationauthoring.IEEETransactionsonVisualizationandComputerGraphics29,1(2022),1222–1232.
[56] LelandWilkinson.2005.TheGrammarofGraphics,SecondEdition.Springer.
[57] KanitWongsuphasawat,ZeningQu,DominikMoritz,RileyChang,FelixOuk,AnushkaAnand,JockMackinlay,BillHowe,andJeffreyHeer.2017.
Voyager2:Augmentingvisualanalysiswithpartialviewspecifications.InProceedingsofthe2017chiconferenceonhumanfactorsincomputing
systems.2648–2659.
[58] TomYoung,DevamanyuHazarika,SoujanyaPoria,andErikCambria.2018.Recenttrendsindeeplearningbasednaturallanguageprocessing.ieee
ComputationalintelligenCemagazine13,3(2018),55–75.
[59] BowenYuandCláudioTSilva.2019.FlowSense:Anaturallanguageinterfaceforvisualdataexplorationwithinadataflowsystem.IEEEtransactions
onvisualizationandcomputergraphics26,1(2019),1–11.
[60] JDZamfirescu-Pereira,RichmondYWong,BjoernHartmann,andQianYang.2023.WhyJohnnycan’tprompt:hownon-AIexpertstry(andfail)to
designLLMprompts.InProceedingsofthe2023CHIConferenceonHumanFactorsinComputingSystems.1–21.
[61] EmanuelZgraggen,RobertZeleznik,andStevenMDrucker.2014. Panoramicdata:Dataanalysisthroughpen&touch. IEEEtransactionson
visualizationandcomputergraphics20,12(2014),2112–2121.
[62] DanZhang,YoshihikoSuhara,JinfengLi,MadelonHulsebos,ÇağatayDemiralp,andWang-ChiewTan.2019. Sato:Contextualsemantictype
detectionintables.arXivpreprintarXiv:1911.06311(2019).
[63] HaociZhang,VirajRaj,ThibaultSellam,andEugeneWu.2018.Precisioninterfacesfordifferentmodalities.InProceedingsofthe2018International
ConferenceonManagementofData.1777–1780.