The Vision of Autonomic Computing: Can LLMs Make It a Reality?
ZhiyangZhang1∗ FangkaiYang2 XiaotingQin2 JueZhang2† QingweiLin2
GongCheng1 DongmeiZhang2 SaravanRajmohan2 QiZhang2
1StateKeyLaboratoryforNovelSoftwareTechnology,NanjingUniversity
2Microsoft
ABSTRACT taskautomationcapabilities[7,45,46]representasignificantleap
TheVisionofAutonomicComputing(ACV),proposedovertwo forwardinourabilitytocreatetrulyautonomicsystems.Successful
decadesago,envisionscomputingsystemsthatself-manageakin demonstrationsofLLMsintaskssuchasanomalydetectionand
tobiologicalorganisms,adaptingseamlesslytochangingenviron- incidentmitigation[60]illustratetheirpotentialtoprovidethecon-
ments.Despitedecadesofresearch,achievingACVremainschal- textualunderstandingandadaptivedecision-makingnecessaryto
lengingduetothedynamicandcomplexnatureofmoderncom- achievethegoalsofACV.Thispromptsanintriguingquestion:Can
putingsystems.RecentadvancementsinLargeLanguageModels LLMsmaketheVisionofAutonomicComputingareality?
(LLMs)offerpromisingsolutionstothesechallengesbyleverag- Addressingthisquestioniscomplexduetothebroadscopeof
ingtheirextensiveknowledge,languageunderstanding,andtask ACV.TosystematicallyassessthefeasibilityofachievingACVusing
automationcapabilities.Thispaperexploresthefeasibilityofre- LLMs,evaluationstudiesinconcretesettingsarenecessary.This
alizing ACV through an LLM-based multi-agent framework for workproposestostudythisfeasibilitywithinthecontextofmi-
microservicemanagement.Weintroduceafive-leveltaxonomyfor croserviceself-management,apopulararchitectureformanaging
autonomousservicemaintenanceandpresentanonlineevaluation cloudservices.Specifically,weproposeanLLM-basedmulti-agent
benchmarkbasedontheSockShopmicroservicedemoprojectto self-managementframeworkformicroservicesandassessitsper-
assessourframework’sperformance.Ourfindingsdemonstratesig- formanceusingaliveonlineevaluationbenchmarkbuiltonthe
nificantprogresstowardsachievingLevel3autonomy,highlighting knownmicroservicedemoprojectSockShop[1].
theeffectivenessofLLMsindetectingandresolvingissueswithin OurproposedLLM-basedmicroservicemanagementsystemem-
microservicearchitectures.Thisstudycontributestoadvancing ploys a hierarchical multi-agent architecture. High-level group
autonomiccomputingbypioneeringtheintegrationofLLMsinto managerhandlesdeclarativetasksthatspanmultipleservicecom-
microservicemanagementframeworks,pavingthewayformore ponents,suchasoptimizingend-to-endlatencytounder200ms.In
adaptiveandself-managingcomputingsystems.Thecodewillbe contrast,low-levelautonomicagentsfocusonspecifictaskswithin
madeavailableathttps://aka.ms/ACV-LLM. theirmanagedservicecomponents.Toevaluateoursystem,we
introduceafive-leveltaxonomyofautonomousservicemainte-
nance,emphasizingSelf-OptimizationandSelf-Healing.Wethen
1 INTRODUCTION
designspecificevaluationtaskswithintheSockShopmicroservice,
Asweenterthemodernera,computinginfrastructureisbecom-
employingchaosengineeringtechniquestodeliberatelyintroduce
ingincreasinglydistributedandlarge-scale,presentingsignificant
faultsandobservehowourmanagementsystemresolvestheseis-
challengesforhumanmanagement.Thiscomplexityunderscores
sues.OurfindingsdemonstratethattheLLM-basedmulti-agent
thenecessityfordevelopingsystemscapableofself-management.
frameworkachievesLevel3autonomyinourfive-leveltax-
Thisvision,reminiscentoftheVisionofAutonomicComputing
onomy.Whileiteffectivelydetectsissuesandperformsspecific
(ACV)[27]proposedtwodecadesago,envisionscomputingsys-
imperativetasks,thereareopportunitiesforfurtherenhancements
temsthatcanmanagethemselvesaccordingtoanadministrator’s
inrootcauseanalysisandissuemitigationcapabilities.
goals,integratingnewcomponentsasseamlesslyasbiologicalcells.
Ourcontributionscanbesummarizedasfollows:
Realizing an autonomic system with self-management poses
significantchallenges.Earlyapproachestoautonomicsystemsoften • Weadvancethedomainofautonomiccomputingformicroservice
reliedonrule-basedmechanismsandpredefinedpolicies,which, managementthroughanLLM-basedmulti-agentframework.To
whileeffectivetosomeextent,struggledtoadapttotheincreasingly the best of our knowledge, we are the first research work to
dynamicandcomplexenvironmentsseeninmoderncomputing exploremicroserviceself-managementusingLLM-basedagents.
systems[23,33].Overtheyears,significantstrideshavebeenmade • Weestablishataxonomyconsistingoffivelevelsforautonomous
towards achieving this vision through the development of self- servicemaintenance.Wealsopresentanonlineevaluationbench-
adaptiveandself-managingsystems[15,36].Despitesignificant markdesignedtoassesstaskscorrespondingtoeachlevelof
effortsandprogressoverthepasttwodecades,therealizationof autonomywithinthemicroservicedemoprojectSockShop.
ACVisstillelusiveduetonumerousgrandchallengesoutlinedin • WeconductarigorousevaluationofourLLM-basedmicroservice
theACVpaper,manyofwhichhingeonbreakthroughsinAI. managementframeworkusingtheaforementionedbenchmark.
RecentadvancementsinAI,particularlythroughLargeLanguage
Models(LLMs),offerpromisingnewavenuestoaddressthesechal- 2 BACKGROUNDANDRELATEDWORK
lenges.LLMs’extensiveknowledge,languageunderstanding,and
Autonomic Computing. The goal of autonomic computing is
todevelopself-managingsystemswhichreducesthecomplexity
∗WorkisdoneduringaninternshipatMicrosoft.
†Correspondingauthor. andcostofITmanagementthatincreasessystemreliabilityand
4202
luJ
91
]IA.sc[
1v20441.7042:viXraperformance.Itisinspiredbythebiologicalautonomicnervous andPrometheus[47].Kubernetes,forexample,automatesdeploy-
system, which autonomously regulates functions such as heart ment,scaling,andmanagementofcontainerizedapplications,offer-
rateandbodytemperature,therebyreducingcognitiveload.The ingfeatureslikeservicediscoveryandautomatedrollouts.Despite
ACVpaperidentifiedfourkeyobjectivesofself-managementin thesecapabilities,Kuberneteslackscomprehensivehigh-levelman-
autonomicsystems[12,27]: agementfeaturesalignedcloselywithuserintent,suchasbuilt-in
middlewareoradvancedconfigurationmanagementsystems.On
theresearchside,recentadvancements,suchastheAMoCNA[29–
• Self-Configuration:Systemscanconfigureandre-adjustthem-
31]framework,extendtraditionalautonomicmanagementapproaches
selvestomeettheagreedobjectives.
liketheMAPE-Kloop[5]toenhanceautonomyincloud-native
• Self-Optimization:Continuouslymonitorthemselvesandseek
environments.However,theseframeworksoftenrelyonrule-based
opportunitiestoimproveperformanceandcosts.
systems,limitingtheiradaptabilityinhandlingcomplexscenarios
• Self-Healing:Theabilitytoautonomouslyrecoverfromfailures
requiringcontextualunderstandingandadaptivedecision-making.
andevenpredictthem.
Toaddresstheselimitations,recentworkshavefurtherextended
• Self-Protection:Againstmaliciousattacksorcascadingfailures.
thetraditionalMAPE-KlooptoincorporateAIandMLadvance-
ments[43,51],proposinganovelself-adaptationapproach[32,52].
ItalsoproposedtheMonitor,Analyze,Plan,Execute,andKnowl- LLM-basedKubernetesandCloudServiceManagement.Inthe
edge(MAPE-K)loop[27]asastructuredapproachtoautonomic eraofLLMs,integratingLLMsintoKubernetesmanagementrepre-
computing,providingaclearandsystematicmethodologyforim- sentsapromisingavenuetoovercomelimitationsintraditionalap-
plementingself-managingcapabilities.TheMAPE-Kmodelforms proaches.Forinstance,GenKubeSec[39]appliesLLM-basedmeth-
thefoundationofself-adaptiveandself-managementsystems,en- odstodetectandremediateKubernetesconfigurationfilemiscon-
ablingcontinuousadaptationandoptimizationthroughfeedback figurations with precision and detailed insights, surpassing the
loops[5,12,40,55]andcreatingautonomoussystemstohandle capabilitiesofrule-basedtools.Similarly,theopen-sourceproject
complexanddynamicenvironments. K8sGPT[26]providesnaturallanguage-baseddiagnosticsandissue
Subsequentworkshaveexploredvariousaspectsofautonomic triagingforKubernetesclusters.Despitetheseadvancements,a
systems,leadingtosignificantadvancementsinself-adaptivesys- cohesiveintegrationofLLMsacrossallfacetsofself-management
tems,suchashandlinguncertaintiesandruntimevariabilities[4, inKubernetesremainsanongoingareaofdevelopment.
14,24,28,61],aswellasself-protectingabilityintermsofsecurity Similarly,currentcloudservicemanagementsystemsarestart-
risks[20].Autonomiccomputingprincipleshavealsobeenapplied ingtointegrateLLMsforAIOpstoensurethehighavailability
beyondsoftwaresystems,suchasinrobotics[8],autonomousdriv- andreliabilityoflarge-scalecloudinfrastructures[57,59,60].The
ingsystems[6],andthedevelopmentofdigitaltwins[18].These keyAIOpstaskswithincloudservicemanagementincludedata
systemsrequiresophisticatedself-adaptationmechanismstocope collectionandpre-processing,rootcauseanalysis(RCA),andin-
withdynamicandunpredictableenvironments. cidentmitigation.Cloudplatformsconsistofnumerousservices
Initially,autonomicsystemsoftenreliedonrule-basedapproaches withdiverseconfigurations,posingchallengesfortraditionalAIOps
andpredefinedpoliciestoachieveself-management.Whileeffective modelsintermsofcross-serviceandcross-taskflexibility.LLMs
incertaincontexts,theseapproacheswerelimitedintheirability offerasolutionbyefficientlyinterpretingunstructureddatasuch
tohandlecomplex,dynamicscenariosrequiringadaptivedecision- as service logs and troubleshooting guides, extracting essential
makingandcontextualunderstanding.Recentadvancementsin informationfromlargedatavolumes[25,34].Onceananomaly
AIandmachinelearning(ML)haveintroducednewpossibilities. orincidentisdetected,RCAiscrucialforidentifyingtheunderly-
LeveragingAIandMLtoprovidedeeperinsights(suchaseventcor- ingcauses.Leveraginginformationextractedandsummarizedby
relationandpredictiveanalytics)andautomationcapabilitieshas LLM-baseddatapre-processing,LLMscancomprehendandlocalize
furtherenhancedtheself-managingcapabilitiesofIToperations, incidentseffectively[2,9].IncidentmitigationfollowsRCA,where
leadingtothedevelopmentofafieldknownasAIOps. LLMsassistinautomatingmitigationstepspreviouslymanaged
AutonomicManagementofCloud-NativeApplications.Cloud byon-callengineers(OCEs)[3,48].TheseLLM-basedsolutions
computinghasemergedasacriticalcomponentofmoderndis- empowereachAIOpstaskbyreducinghumaneffortandincreasing
tributedcomputingsystems,offeringscalableresources,costef- automation.However,despitetheseadvancementsineachAIOps
ficiency,andflexibilitythroughon-demandaccesstocomputing task,theentireAIOpsprocessisnotyetfullyself-managed,re-
power,storage,andapplications.Thisshifthasledtothewide- quiringadditionaleffortsformanaginglarge-scalecloudservice
spreadadoptionofcloud-nativeapplications,leveragingarchitec- systems. The concrete realization of ACV in our paper offers a
turessuchasmicroservices.However,managingtheseapplications demonstrationthatunifiesandcoordinatesLLM-basedAIOpstask
posessignificantchallenges,includingensuringsecurity,navigat- solutionstoachieveaself-managedcloudservicesystemwithhigh
ingcomplexmicroservicesarchitectures,maintainingobservability, efficiency,availabilityandreliability.
managingresourceallocation,andensuringreliableperformance
andscalability[17,40,50,58].
Toaddressthesechallenges,numerousmanagementtoolshave
beendeveloped.TheCloudNativeComputingFoundation(CNCF)[10]
hostsvariousprojectsaimedatfosteringinnovationandcollabora-
tionwithinthecloud-nativecommunity,suchasKubernetes[11]
23 SERVICEMANAGEMENTWITHLLM-BASED servicefunctions,suchasapodinKubernetes.Theseelementsop-
MULTI-AGENTS eratereactively,executingtaskslikerespondingtoAPIcallsupon
request.Byintegratinganautonomiclayertomanageeachelement,
Inthissection,wedemonstratetheapplicationofACVinservice
thesemanagedelementscanenhancetheirfunctionalitysignifi-
managementusingLLM-basedagents,realizingthegeneralarchi-
cantly.Theycanmonitortheirownhealth,analyzepotentialissues,
tecturalconsiderationsdiscussedintheACVpaper.
anddevelopmitigationplanstoresolveproblemsautonomously.
BeforetheadventofLLMs,autonomiccapabilitieswereachieved
throughexplicitdevelopmentofMonitor,Analyze,Plan,Execute,
andKnowledge modules[27]. However,LLMsstreamlinethese
functionsintotwocoremodules:PlannerandExecutor.ThePlan-
nergeneratesexecutionstepstoachievespecificgoals,including
monitoringandanalysis,whichmaybepassingdownfromthehigh-
levelgroupmanager(discussedinthebelowsection)orrequested
directlybymaintainers.Thesestepsareoftenexecutablemainte-
nancecode(e.g.,kubectlcommandsinKubernetes),leveraging
thecodingcapabilitiesandgeneralknowledgeofLLMs.TheEx-
ecutorcarriesoutthesesteps,andtheresultsaresentbacktothe
Plannertoverifygoalachievement.Ifthegoalisunmet,another
self-correctioncycleisinitiated.ThisPlan-Executefeedbackloop
simplifiesthetraditionaldesignofself-managementagents,facili-
tatingthedevelopmentofautonomicelementsatscaleandacross
differenthierarchicallevels.
High-LevelGroupManager.Low-levelautonomicagentscan
interactthroughnaturalupstreamanddownstreamdependencies
orformahigh-levelservicegroupmanagedbyahigh-levelauto-
nomicgroupmanager.Thishigh-levelgroupmanagerisoften
necessaryforcomplextasksrequiringcoordinatedgroupactions,
suchasresolvingcomplexserviceincidentsincloudenvironments.
Itisalsoeasierandflexibletoexpressgoal-orientedtermsinnatural
languageatthehigh-levelservicegroup,suchas“reduceend-to-end
servicelatencyto20ms”.
TheLLM-basedagentinthehigh-levelgroupmanageralsouses
Figure1:Hierarchicalservicemanagementframeworkwith thePlan-Executefeedbackmechanism.Unlikethelower-levelau-
LLM-basedmulti-agentdesign. tonomicelements,thePlannerinthehigh-levelgroupmanager
ArchitectureOverview.TheACVpaperemphasizesthatauto- breaksdowncomplexmanagementrequestsintosub-tasksand
nomicmanagementelementsoperateatvariouslevels,fromin- generatesdetailed,step-by-stepplans.Eachstepcorrespondstoa
dividualservicecomponentstoservicegroupsfulfillingspecific specificlow-levelautonomicagentandincludesexecutablecode,
features,anduptoentirebusinessfunctions.Thisconceptaligns suchasassigningsub-tasksandanalyzingcollectedmetrics.TheEx-
withthedesignofLLM-basedmulti-agentsystem[19,54],wherea ecutorthencarriesoutthesestepsbyexecutingthecode.Feedback
hierarchicalarchitectureisnaturallysuitedtomanageservicesat fromthelow-levelautonomicagentsissentbacktothehigh-level
thesedifferentlevels.Consideringthevariedcomplexityofmanage- Plannertodetermineifthegoalshavebeenmet.ThePlannercan
mentrequestsatdifferentlevels,weproposeatwo-levelautonomic adjusttheplanbasedonthisfeedbackandtracktheprogressofthe
managementarchitectureinthispaper.AsshowninFigure1,this execution.Thisproactiveapproachallowsthesystemtomaintain
hierarchicalservicemanagementframeworkprovidesflexibilityfor optimalperformanceandreducemaintenancetime,minimizingthe
themaintainerstomanagethesystematdifferentappropriatelev- needfordirecthumanintervention.
els.Forcomplexmanagementrequests,suchas“ensureend-to-end ThreeWorkingMechanisms.Wedefinethreeworkingmecha-
latencybelow20ms”,whichinvolvemultipleservices,thehigh-level nismswithourhierarchicalservicemanagementframework,each
LLM-basedgroupmanagerprocessestherequestbybreakingit designedforparticulartaskmanagementandexecutionscenar-
downintosimplerlow-leveltasksthatcanbehandledbythere- ios:a)Low-LevelAutonomicAgentWorkingAlone;b)Multiple
spectivelow-levelautonomicagents.Conversely,simplerrequests Low-LevelAutonomicAgentsCollaboratingUnderaManager;c)
canbesentdirectlytothelow-levelautonomicagents.Forexam- Intra-CommunicationamongLow-LevelAutonomicAgents.Tobe
ple,arequestto“scalereplicasto3”canbedirectedstraighttothe morespecific:
correspondinglow-levelautonomicagent,bypassingthehigh-level Low-LevelAutonomicAgentWorkingAlone.Inthismode,themain-
groupmanager.Thedetailedworkingmechanismofthistwo-level tainerdirectlyassignrequestsortaskstoasinglelow-levelauto-
architecturewillbediscussedlaterinthissection. nomicagent,requestingittoanswermaintenance-relatedinquiries
Low-LevelAutonomicAgent.Traditionally,asystemconsistsof ortakeactionstofulfillmaintenancerequests.Theagentoperates
elementswithlimitedautonomiccapabilitiesresponsibleforbasic independentlytocompletetheassignedtask.Thismechanismis
3Figure2:IllustrationoftheSockShopexample:EachmicroserviceisconvertedintoanLLM-basedautonomicagent,managed
byanautonomiclayercomprisingaPlannerandExecutor.Thehigh-levelgroupmanageremploysaPlan-Executefeedback
mechanismtogenerateplansandassignsub-taskstolow-levelautonomicagents.Adecoupledmessagequeuesystemservesas
themiddlewaretomanagecommunication,collectingfeedbackandunresolvedissues.
straightforwardandeffectiveforsimple,isolatedtasksthatdonot SockShopisamicroservicesdemoapplicationthatemulates
requirecoordinationwithotherlow-levelautonomicagents. ane-commercewebsiteforsellingsocks,designedtohelpusers
MultipleLow-LevelAutonomicAgentsCollaboratingUnderaMan- understandKubernetesandmicroservicesarchitecture.Itconsists
ager.Inthismode,thehigh-levelgroupmanagereitherreceives ofvariousmicroservicesmanagedbyKubernetes,eachhandling
tasksfromthemaintainerorissuesareraisedbythelow-levelau- differentaspectsofthee-commercesite,suchasthewebsitefront-
tonomicagentsthemselves.Themanagerfirstdecomposesthetask end,productcatalog,orders,andpayment(showninFigure2left).
basedonthereceivedmessage,generateaplan,andthenassigns EachmicroserviceiscontainerizedusingDocker,ensuringconsis-
thesub-taskstotherelevantlow-levelautonomicagentsforexecu- tentandisolateddeploymentacrossdifferentenvironments.These
tion.Theexecutionresultsfromeachagentarecollected,andthe microservicesaredeployedandorchestratedbyKubernetes,which
managermaymodifyorproceedtothenextstepsbasedonthese offerscertaincapabilitiesformanagingthem.However,Kubernetes
outcomes.Iftheoriginalplancannotbefollowed,itisadjusted reliesonadditionaltoolslikePrometheus[47]toperformtasks
accordingly.Thisiterativeprocesscontinuesuntilthetaskiseither likemonitoringandmetricscollection.Italsorequiresotheressen-
completedordeemedunachievable.Thismechanismissuitablefor tialdeclarativeactionsincludeauto-scaling,resourcemanagement,
complextasksthatrequirecollaborativeeffortsamongmultiple alerting,faulttroubleshooting,andperformanceoptimization.Cur-
low-levelautonomicagents. rently,theseactionsaremostlyperformedmanuallybymaintainers,
Intra-CommunicationamongLow-LevelAutonomicAgents.Whena requiringsignificanteffortanddomainexpertise.
low-levelautonomicagentencountersanissueitcannotresolve AsshowninFigure2right,wedemonstratetheapplicationof
independently,itcanseekassistancefromotheragentswithout LLM-basedautonomicmanagementontheSockShopmicroservice
involvingofthehigh-levelgroupmanager.Thismechanismfacili- demoprojectinKubernetes.Thisautonomicmanagementframe-
tatesinternalcommunicationamonglow-levelautonomicagents, workisbasedonthepreviouslydiscussedLLM-basedtwo-level
allowingthemtocollaborateandattempttofixtheissuebydirectly hierarchicalframework.Briefly,thehigh-levelgroupmanagerover-
communicatingwitheachother. seestheentiregroupofmicroservices,interpretshigh-leveltasks
Tofacilitatetheseworkingmechanisms,weuseamessagequeue frommaintainers,andbreaksdownthesetasksintoexecutable
systemasmiddlewareformessagepassingandstorage.Thisap- stepsassignedtolow-levelautonomicagents.Thehigh-levelgroup
proachunifiesthebasicframeworkofallthreeworkingmecha- manageralsohandlesissuesraisedbylow-levelautonomicagents.
nisms,enhancingoverallserviceavailabilityandreliability.Ad- Notethatthehigh-levelgroupmanagerdoesnotdirectlyoperate
ditionally,themessagequeuesystemdecouplesmessagepassing anymicroservice;instead,eachlow-levelautonomicagentmanages
throughasynchronousmessagequeues,improvingsystemrobust- itscorrespondingmicroservice,respondingtotasksassignedbythe
nessandflexibility.Notethatweimplementthefirsttwomecha- high-levelgroupmanager,suchasmonitoringandmaintenance.
nismsintheexamplebelowforsimplicityandbetterillustration. Tobemorespecific,eachSockShopcontainerizedmicroservice
ExampleImplementationonSockShop.Thereareseveralmi- ismanagedbyalow-levelLLM-basedautonomicagent,making
croservcedemossuchasOnlineBoutique[16]andDeathStar[13]. itanLLM-enhancedservicecomponent.Eachagentisresponsi-
We select Sock Shop [1] as the microservices demo application bleformanagingitsowncomponent.Forexample,theFront-end
duetoitscomprehensiveexampleofareal-worlde-commerceap- componentisconvertedintotheFront-endagent,enhancedby
plication,modularmicroservicesdesign,andKubernetes-native theLLM-basedautonomicagent.Messagescontainingsub-tasksor
setup.Itoffersasimpleyetaccessiblestartpointtodemonstrate maintainerrequestsarepassedtotheFront-endagent.Through
sophisticatedmicroservicesandKubernetesconcepts. theiterativeprocesswiththePlannerandExecutor,maintenance
tasks are completed within the agent. Responses and feedback
4arethensenttothehigh-levelgroupmanagerthroughtheman- Benchmarkthatoperateswithinafunctionalserviceenvironment.
ager’smessagequeue.Ifthereisanunresolvedproblem,anissueis Tocreatethisenvironment,wedeploytheSockShopserviceus-
senttothemanager’smessagequeue,seekingassistancefromthe ingKubernetesandsimulatetraffictoensureitfunctionsasalive
high-levelgroupmanager(shownintheredlineinFigure2).The system.Thissetupallowsustointroducevarioustasks,suchas
high-levelgroupmanageranalyzesthemessage,makesnecessary metriccollectionandhealthchecks,toevaluatethebasicL1andL2
adjustmentstotheplan,andthentransmitstherevisedstepstothe capabilities.ForevaluatingL3,L4,andL5capabilities,wefurther
messagequeuesofthecorrespondinglow-levelautonomicagents, employChaosEngineeringtechniques[44]tointentionallyinject
coordinatingcollaborationamongvariousagents. faultsorinduceperformanceissues.
Table1lists16evaluationtasksforL1andL2levels,distinguish-
4 EVALUATIONBENCHMARK ingbetween12tasksforlow-leveland4tasksforhigh-levelgroup
manager.Low-leveltasksaredirectlyappliedtoagentsthatmanage
AfterintroducingthehierarchicalLLM-basedautonomicmanage-
individualservicecomponent,whilehigh-leveltasksinvolvethe
mentframeworkandpresentinganexampleACVimplementation,
manageragent,allowingustoexamineindividualandcollabora-
wenowevaluateitsperformancetoaddressthecentralquestionof
tivetaskhandling.Forthisstudy,wefocusontheCataloguefor
thispaper:howclosearewetoachievingACVwithLLMs?To
low-levelevaluationandincludethehigh-levelgroupmanagerand
answerthis,weintroduceataxonomycategorizingtasksbytheir
Front-endforhigh-levelevaluationtasks.Thesetasksencompass
levelsofautonomyanddefinespecifictaskcasesusingSockShop.
basicDeploymentandCreationManagement(DCM)operations
aswellasRuntimeManagement(RM)activities,reflectingcom-
4.1 AutonomousLevelsinServiceMaintenance
monmicroservicemanagementoperations.Trafficloadlevelsare
Inspiredbythesixlevelsofautonomousdrivingandthecategoriza-
specifiedtoensuretasks,suchasreducinglatency,aremeaningful.
tionofPersonalLLMAgents’dutiesbasedonintelligencelevels
Incontrast,L3,L4,andL5evaluationsinvolveinjectingspecific
in[37],weproposeataxonomyoffiveautonomylevelsforser-
faultsorissuestotriggertheevaluation.Weintroducethreetypes
vicemaintenance,depictedinFigure3.ThebasicL1andL2levels
offaultsandperformanceissues:
representthefoundationalmaintenancecapabilitiesofautonomic
• Pod Failure: Replace Catalogue pod image with a fake and
managementagents,suchasunderstandingusers’intentandpos-
non-functionalone.
sessingnecessaryservicemaintenanceknowledge(e.g.,writing
• CPUStress:Occupy100%of Cataloguepod’sCPUresources.
correctmaintenancecodeusingkubectlcommands).AtLevel1
• RisingTraffic:Graduallyincreasetraffic,leadingtohighre-
(“SimpleStepFollowing”),weassesswhethertheagentcandeter-
sourceusageandextendedservicelatency.Thispatternisapplied
minecorrectoperationalcommandstofulfillspecificimperative
directlytoCatalogueforlow-leveltasksandtoFront-endfor
instructions,suchasscalingreplicastothree.Level2(“Determinis-
high-leveltasks.
ticTaskAutomation”)additionallyrequirestheagenttopossessthe
planningcapabilitybydecomposingacomplextaskintosmaller Whilemanyotherfaultsandissuesexistinmicroservicemanage-
executable steps, such as checking the service health status by ment,thesethreearerepresentativeandpertinentforthisstudy.
generatingaseriesofmetriccollectionandunderstandingsteps. Wethenevaluatethesystem’sabilitytoperformself-management
L1andL2levelsarecharacterizedbyimperativetasks,focusing operationstomeetpredefinedServiceLevelObjectives(SLOs)un-
onfulfillingspecifiedtasks.Higherautonomylevelsrequirethe dertheseinjectedconditions.WithintheSockShopcontext,we
agenttofulfilldeclarativetasks,proactivelyperformingactionsto definethefollowingSLOs:
achievepredefinedgoalsorstates.Thesehigh-levelgoalsalignwith (1) AllservicecomponentsmaintainahealthyREADYstate.
thefourself-managementobjectivesoutlinedintheACVpaper. (2) CPUandmemoryusageforeachcomponentremainsunder
Forsimplicity,thisworkfocusontasksrelatedtoSelf-Optimization 50%ofallocatedresources.;
andSelf-Healing,leavingtheothertwoareasforfutureresearch. (3) TheP99latencyforeachcomponentisstable,withanaverage
AchievingSelf-OptimizationandSelf-Healingnecessitatesthree P99latencybelow200ms.
keycapabilitiesintheautonomicmanagementagent:“Proactive EvaluationofL3/L4/L5tasksarealsodistinguishedbybothlow-
IssueDetection”,“AutomaticRootcauseAnalysis”,and“FullSelf- levelautonomicagentsandhigh-levelgroupmanager,withthe
Maintenance” with the generation and execution of mitigation aboveSLOscommunicatedtotheseagentsbasedontaskrequire-
solutions.ThesecapabilitiescorrespondtoL3,L4,andL5levels ments.GiventhatL3,L4,andL5tasksaretypicallyexecutedina
inourtaxonomyshowninFigure3.Withthisfive-leveltaxonomy unifiedDetection-RCA-Mitigationsequence,weimplementacom-
established,weproceedtodesignspecificevaluationtaskstailored binedtasktoevaluateallthreelevelssimultaneously.Adetailed
toeachlevelwithintheSockShopcontext.Thesetaskswillserve descriptionofthesetasksisprovidedinSectionA.2intheAppendix.
asbenchmarkstoquantitativelyassessthecapabilitiesofcurrent
LLMsinadvancingtowardstherealizationofACV. 4.3 EvaluationMetric
Ourevaluationfocusesontwomaintypesofmetrics:efficiency
4.2 OnlineLiveEvaluationBenchmark andquality.Forefficiencymetrics,wemonitorthenumberofsteps
Intraditionalbenchmarking,evaluationsaretypicallyperformed takenineachevaluation,witheachstepdefinedasasinglecallto
against a specific dataset in an offline manner. However, to as- thebaseLLM.Wealsotrackthenumberofcommunicationrounds
sesswhetheranagentcanachievethecompleteDetection-RCA- betweenhigh-levelgroupmanagerandlow-levelautonomicagents
Mitigationmaintenancecycle,weneedanOnlineLiveEvaluation fortasksinitiatedbythehigh-levelgroupmanager.Stepsthatresult
5Figure3:Taxonomyofautonomouslevelsinservicemaintenance,focusingonSelf-HealingandSelf-Optimization.
Request Operation
Level TaskName TaskDescription TrafficLoad
Level Type
DCM L1 DeploymentCreation CreateadeploymentusingCatalogue’sdeploymentYAMLfile. ModerateonCat.
DCM L1 DeploymentUpdate UpdateCatalogue’senvironmentvariablelogger_flagtotrue. ModerateonCat.
DCM L1 RollBack RollbackCatalogue’simageversionto0.3.4. ModerateonCat.
DCM L1 PodRestart RestartallthepodsofCatalogueimmediately. ModerateonCat.
RM L1 MetricCollection-CPU ReporttheCPUusageofCatalogue. ModerateonCat.
RM L1 MetricCollection-Latency ReporttheP99latencyofCatalogue. ModerateonCat.
RM L1 ManualScaling ScaleCatalogue’sreplicasto3. HeavyonCat.
Low
RM L2 HealthCheck CheckCatalogue’shealthystatusimmediately. HeavyonCat.
RM L2 PerformanceCheck CheckwhetherCatalogue’sperformanceisnormalimmediately. ModerateonCat.
RM L2 AutoScaling Implementauto-scalingwithsensiblethresholdsforCatalogue. HeavyonCat.
RM L2 LatencyReduction ReducetheP99latencyofCataloguetounder300ms. HeavyonCat.
ReducetheaverageCPUusageofCatalogueto
RM L2 CPUReduction ModerateonCat.
under30%ofresourcelimit.
RM L2 LatencyReduction-Cat. ReducetheP99latencyofCataloguetounder300ms. HeavyonFE.
ReducetheaverageCPUusageofCatalogueto
RM L2 CPUReduction-Cat. HeavyonFE.
under30%ofresourcelimit.
High ReducethetotalP99latencyofCatalogue
RM L2 LatencyReduction-Group HeavyonFE.
andFront-endtounder400ms.
ReduceeachCatalogueand
RM L2 CPUReduction-Group HeavyonFE.
Front-end’saverageCPUusagetounder30%.
Note1:NoinitialdeploymentofCataloguefortheDeploymentCreationtask,andfortheRollBacktask,theinitialpodimageversionis0.3.6.
Note2:DefinitionofeachTrafficLoadcanbefoundinTable8.CatandFEareabbreviationsforCatalogueandFront-end,respectively.
Table1:DefinitionofL1andL2taskswithinthecontextofSockShop.
inexecutionerrorsareincludedaswell,astheseerrorsreflectthe 5 EXPERIMENT
baseLLM’sabilitytogeneratecorrectservicemaintenancecode.
5.1 Setup
Onthequalityside,wemeasurethetaskfulfillmentrateatvari-
ouslevels.ForL1andL2tasks,weassesswhethertheassignedtasks
SockShopDeployment.SockShopisdeployedonaMinikube[42]
clusterwith6coresand16GBofmemory,utilizinganIntelXeon
arecompletedsuccessfully.ForL3tasks,weevaluatetheagent’s
Gold6338CPU@2GHzserver.Thedeploymentincludesanen-
abilitytocorrectlyjudgeifthesystemmeetstheSLOs.InL4tasks,
abledmetricserverandaPrometheusserver,configuredaccording
wedetermineifthemanagementagentscanidentifythecorrect
totheSockShopdeploymentfiles.Loadsimulationisappliedusing
rootcauses.Finally,forL5tasks,wecheckwhetherinjectedfaults
Locust[38],withtrafficlevelsdetailedinTable8intheAppendix.
orissuesaresuccessfullymitigated.Additionally,fortasksassigned
ThefaultsofPodFailureandCPUStressareinjectedbyutilizing
tohigh-levelgroupmanager,weevaluatethehigh-levelagent’s
theChaosMeshtool[41].
abilitytocorrectlydelegatetaskstolow-levelautonomicagents.
Agent-basedManagementSystem.Theagent-basedmanage-
mentsystemintroducedinSection3isimplementedbyleveraging
6Low-Level High-Level Stepswith
TaskName IsPassed? Steps
1.DeploySockShopand 1.DeploySockShopand Exec.Error
ensurestabletraffic; ensurestabletraffic; DeploymentCreation [1,1,1] [3,4,4] [0,0,0]
L1 2.SendtasktoCatalogue’s 2.Sendtasktohigh-level DeploymentUpdate [1,1,1] [5,5,5] [0,0,0]
L2 managementagent; manager; Rollback [1,1,1] [5,9,6] [0,0,0]
3.Taskevaluation; 3.Taskevaluation; L1 PodRestart [1,1,1] [4,5,5] [0,0,0]
4.Repeattheabove3times. 4.Repeattheabove3times. MetricCollection-CPU [1,1,1] [5,5,4] [0,0,0]
1.DeploySockShopand 1.DeploySockShopand MetricCollection-Latency [1,1,1] [3,3,3] [0,0,0]
ensurestabletraffic; ensurestabletraffic; ManualScaling [1,1,1] [9,5,6] [0,0,0]
L3 2.Injectfaults/issues; 2.Injectfaults/issues; HealthCheck [1,1,1] [7,7,4] [0,0,0]
L4 3.SendtasktoCatalogue’s 3.Sendtasktohigh-level PerformanceCheck [1,1,1] [4,4,4] [1,0,0]
L5 managementagent; manager; L2 AutoScaling [1,1,1] [6,11,4] [0,2,0]
4.Perform3consecutiveevals; 4.Performoneevaluation; LatencyReduction [1,1,0] [11,13,15] [0,0,1]
5.Repeattheabove3times. 5.Repeattheabove3times. CPUReduction [1,0,1] [11,10,8] [0,0,0]
L1 Average 1.0 4.9 0
Table2:Experimentproceduresfordifferentconfigurations.
L2 Average 0.87 7.9 0.3
Table3:ResultsforL1andL2tasksappliedtothelow-level
autonomicagentofCatalogue.Eachelementinthe3-tuple
listcorrespondstooneofthe3repeatedexperimentruns.
themulti-agentframeworkAutoGen[56].Itincorporatesagent
groupsconsistingofLLM-basedagentsandnon-LLM-basedcode
executorsforeachmicroservicecomponent,servingaslow-level Evaluation.TheevaluationmetricsdiscussedinSection4.3were
autonomicagents.Similarly,thehigh-levelgroupmanagercom- gatheredthroughamanualreviewoftheagents’chathistory.This
prises a LLM-based agent and a non-LLM-based code executor. reviewwasperformedindependentlybytwoauthorswithexpertise
CommunicationamongtheseagentsisfacilitatedbyRabbitMQ inKubernetesservicemaintenance.Asamplelogoftheagents’
[49],andGPT-4TurboisadoptedastheunderlyingLLM. chathistorycorrespondingtotheLatencyReductiontaskapplied
The prompts for low-level autonomic agents and high-level
toCataloguecanbeaccessedviathislink.1
group manager are given in Sections C in the Appendix. Most
ofinstructionsinthemaregenerallyapplicabletoothermicroser- 5.2 ResultsforTasksAppliedtotheLow-Level
vicesmanagedbyKubernetes.However,inthepromptforlow- AutonomicAgent
level autonomic agents, we include instructions that is tailored Table3presentstheexperimentalresultsfortheL1andL2tasks
specificallytotheSockShopservice.Thoseinstructionsareeffec- appliedonthelow-levelautonomicagentof Catalogue.Details
tiveateliminatinginefficientself-correctingsteps.Forexample, includethepassstatus,thenumberofstepstaken,andanysteps
agentsmightusethewronglabelselector“-l app=Catalogue”in- withexecutionerrors.Thekeyfindingsaresummarizedasfollows:
steadofthecorrect“-l name=Catalogue”toidentifyCatalogue.
• TheL1andL2tasksdemonstratedhightaskcompletionrates,
Whileagentscancorrectsucherrorsthroughseveralself-correction
achieving100%forL1and87%forL2.OneofthefailedL2ex-
rounds,thesemistakessignificantlydisrupttheexecutionflowsince
perimentswastheLatencyReduction,whichfailedbecausean
manykubectlcommandsdependonaccuratelabelselectors.Sim-
ineffectiveactionwasmadebyeditinganotherserviceconfigura-
ilarly,queryingPrometheusmetricscorrectlyisoftenchallenging
tion.Theotherunsuccessfulexperiment,CPUReduction,failed
becauseitrequirespreciseinputofmetricnamesandfilters,which
duetomisguidedactions,particularlythereductionofCPUre-
areservice-specificandnottypicallyknowntoLLMs.Although
questsandlimits,resultinginnon-operationalpods.
thesespecificinstructionsreducegenerality,theyarenecessary,
• Onaverage,theL1taskrequiredapproximately5stepstocom-
especiallyforlow-levelautonomicagentsmanagingelementswith
plete,whiletheL2taskrequired8steps,indicatingthatL2tasks
domain-specificinformationthatLLMslack.
ofteninvolveadditionalplanningsteps.Whilecoreoperations
ExperimentProcedure.AsdetailedinSection4.2,tasksarecate-
oftenrequiredonly1or2steps,thoseextrastepswererelatedto
gorizedformanagementagentsatbothlowandhighlevels.Given
precautionarychecksbeforeandaftertakingactions.
thedistinctcharacteristicsofL1/L2andL3/L4/L5tasks,weestablish
• Codeexecutionerrorswereminimal,andthesystemgenerally
fourdistinctexperimentconfigurations,eachoutlinedcomprehen-
self-correctedtheseerrors,underscoringtherobustnessofthe
sivelyinTable2.Overall,theprocedureofeachexperimentrun
LLM-basedmanagementsystem.
involvestheenvironmentsetup(i.e.,deployingSockShopanden-
Theseresultsindicatethatlow-levelLLM-basedautonomicagents
suringstabletraffic),sendingtaskrequirementtocorresponding
arehighlyeffectiveinperformingbasicservicemaintenancetasks
managementagentsandfinallyevaluatingthetaskperformance.All
inKubernetes,establishingasolidfoundationforadvancingto-
experimentsarerandomlyrepeatedthreetimestoreducestatistical
wardshigherlevelsofautonomy.
fluctuation.ForL3/L4/L5tasksmanagedbylow-levelautonomic
TheresultsforL3,L4,andL5tasksappliedtothelow-levelau-
agents,threeconsecutiveevaluationsareallowedtoaccountfor
tonomicagentofCataloguearesummarizedinTable4.Detailed
potentialmisseddetectionsininitialtrials.Conversely,forL3/L4/L5
evaluations, including failure reasons, are provided in Table 10
tasksmanagedbyhigh-levelagents,asingleevaluationsufficesas
multipleagentscollaboratetodetectissues. 1https://paste.ubuntu.com/p/HnnGJ9qPgM/
7Injected Trial Steps IsTaskPassed? Task Trial IsCorrectTask IsTask
Rounds Steps
Faults Index (3Evals) L3 L4 L5 First Overall Name Index Assignment? Passed?
1 [7,17,15] 3/3 2/3 0/3 0 0 Latency 1 3 19 3/3 1
Pod
2 [9,11,11] 2/3 1/1 1/1 1 1 Reduction 2 4 35 4/4 1
Failure
3 [21,6,7] 3/3 1/1 1/1 1 1 -Cat. 3 2 8 2/2 1
1 [7,9,9] 2/3 1/2 1/2 0 1 CPU 1 3 19 2/3 0
CPU
2 [13,11,12] 3/3 0/3 0/3 0 0 Reduction 2 3 27 3/3 1
Stress
3 [4,9,1] 1/3 0/1 0/1 0 0 -Cat. 3 3 19 2/3 0
1 [4,4,1] 2/3 0/0 0/0 0 0 Latency 1 3 29 3/3 1
Rising
2 [18,7,7] 3/3 0/0 0/0 - - Reduction 2 3 46 3/3 1
Traffic
3 [13,7,4] 1/3 1/1 0/1 0 0 -Group 3 3 36 2/3 1
Average 8.8(pereval) 0.74 0.5 0.25 0.25 0.38 CPU 1 3 35 1/3 0
Reduction 2 3 36 3/3 0
Table4:ResultsummaryforL3/L4/L5tasksappliedtothe
-Group 3 5 63 5/5 0
low-levelautonomicagentofCatalogue.“TrialIndex”repre-
Average 3.2 31 0.87 0.58
sentseachexperimentrun,andtheelementinthe3-tuplelist
of“Steps”correspondstooneofthethreeconsecutiveevalu- Table5:ResultsummaryforL2tasksappliedtothehigh-
ations.The“x/y”patterninthe“IsTaskPassed?”columns levelgroupmanager.MoredetailsaregiveninTable11.
denotesthat“x”outof“y”casesarepassed.Moreresultde-
tailscanbefoundinTable10.
thenumberofstepsandtheoveralltaskpassstatus,Table5also
intheAppendix.Table4presentsthenumberofstepsforthree indicatesthenumberofcommunicationroundsbetweenhigh-level
consecutiveevaluationsperexperimentrunandassessestaskcom- andlow-levelautonomicagentsandtheaccuracyoftaskassignment
pletionatdifferentgranularities:detectionoffailures/issues(L3), bythehigh-levelagent.Keyobservationsinclude:
identificationofrootcauses(L4),issuemitigation(L5),andtask
• Onaverage,ittookabout3roundstocompleteeachL2task.
resolutioninthefirstevaluation(First)oroverallafterthreeevalu-
Theseroundstypicallyinvolve:i)thefirstroundofcollecting
ations(Overall).Notably,notallevaluationsinvolvedvalidL4/L5
metricstodeterminetasknecessity;ii)thesecondroundwhere
tasks,assomeissueswereresolvedpriortoevaluationduetopre-
low-levelautonomicagentsperformtheactualtask;iii)thefinal
viousinterventionsorunsuccessfulfaultinjection(e.g.,Trial2in
roundofsummarizingandreportingresults,andterminating
theRisingTrafficcase).KeyobservationsfromTable4include:
thetask.Forinstance,Figure4illustratesthesequenceforthe
• Onaverage,approximately9stepswereneededtoperformL3/L4/L5 LatencyReduction-Grouptask.Uponreceivingthetasktoreduce
tasks,indicatinghighercomplexitycomparedtoL1/L2tasks.The
P99latencyofFront-endandCataloguetounder400ms,the
numberofrequiredstepsvariedwidelyacrossthethreeevalua-
high-levelgroupmanagerfirstgatheredP99latencymetricsfor
tionsinoneexperimentrun.Thisvariationisattributedtothe
bothservices.Afterfindingthatthelatencieswereabout400
necessityofthefullDetection-RCA-Mitigationcycle(e.g.,some
msand700msrespectively,themanagerassignedthetaskof
evaluationterminatedearlyifnoissuewasdetected).
reducinglatencytounder200ms.Low-levelautonomicagents
• The task pass rates decreased from 0.74 (L3) to 0.5 (L4) and carryouttherequiredactionsandreportedback,enablingthe
0.25(L5),reflectingtheincreasedcomplexityofhigher-levelself-
high-levelgroupmanagertosummarizeandterminatethetask.
managementtasks.Coupledwiththehighcompletionratesfor
• Eachtasktookapproximately31stepstocomplete,significantly
L1andL2tasks,weconcludethatthelow-levelautonomic
higherthanthe8stepsrequiredforL2taskshandledbylow-
agentcanachieveLevel3autonomyinSelf-Optimization levelautonomicagents(Table3).Theincreaseinstepsisdueto
andSelf-Healing,accordingtothetaxonomyinSection4.1.
thehighercomplexityoftasksinvolvingmultiplelow-levelauto-
AlthoughfullL5autonomyhasnotbeenachievedbycurrent
nomicagents(e.g.,LatencyReduction-Grouptask)andadditional
LLMs,theseresultsdemonstratesignificantpotentialforLLMs
planningandcommunicationstepsrequiredinthehierarchical
inadvancingACV.
managementarchitecture.Notably,thestepstakenbylow-level
• Thetaskcompletionrateimprovedfrom0.25to0.38wheneval- autonomicagentsduringtaskexecution(e.g.,theroundforthe
uationswereallowedtobeperformeduptothreetimes.This
latencyreductiontask)werecomparabletothoseinTable3.Thus,
indicatesthatrepeatedDetection-RCA-Mitigationcyclesenhance
sinceahierarchicalmanagementstructureintroducesextraplan-
thesystem’sabilitytomitigateissues.
ningandcommunicationcosts,directlyassigningmaintenance
requeststospecificlow-levelautonomicagentsmightsometimes
5.3 ResultsforTasksAppliedtotheHigh-Level
bemoreefficient.
GroupManager • Thehigh-levelmanagementsystemdemonstratesstrongtask
Wenextpresenttheresultsofapplyingtaskstothehigh-levelgroup assignmentcapabilities,achievinganaccuracyof0.87forL2tasks.
manager,focusingonthetaskcompletionrate,taskassignmentto Analysisoftaskcompletionrevealsthatwhilelatencyreduction
low-levelautonomicagents,andhowtheseagentsfulfillsub-tasks. tasksexhibithighsuccessrates,tasksaimedatCPUreduction
Table5summarizestheresultsforL2tasksappliedtothehigh- suffer substantial accuracy declines. Detailed examination of
level group manager, with detailed results in Table 11. Besides failureinstances,detailedinTable11,highlightscommonissues
8Figure4:SequencediagramfortheLatencyReduction-Grouptaskappliedtothehigh-levelgroupmanager.
Injected Trial IsTaskPassed? greatercomplexityanddeeperanalysisrequiredforeachround
Rounds Steps
Faults Index L3 L4 L5 Overall oftheL3/L4/L5sub-tasks.
Pod 1 2 28 1/1 1/1 1/1 1 • Theoveralltaskcompletionratedecreasedfrom0.9(L3)to0.5(L4)
2 3 31 2/2 0/1 1/1 1 and0.42(L5),consistentwiththepatternobservedinlow-level
Failure
3 2 30 1/1 0/1 1/1 1 autonomicagenttasks.However,theactualcompletionrates
1 5 61 3/4 1/3 1/3 1
CPU werehigherthanthoseforthecorrespondinglow-leveltasks,
2 4 69 0/0 0/0 2/4 1
Stress suggestingthatincludingahierarchicalmanagementstructure
3 4 50 0/0 0/0 2/3 1
mayimprovetheoveralltaskcompletionrate.Thisobservation
1 4 66 0/0 0/0 0/4 0
Rising furtherconfirmsourpreviouspropositionthatattainingLevel3
2 2 21 0/0 0/0 0/0 0
Traffic autonomyisfeasiblewiththeexistingLLM-basedagentmanage-
3 4 49 2/2 2/2 0/2 0
Average 3.3 45 0.9 0.5 0.42 0.67 mentsystem.
Table6:ResultsummaryforL3/L4/L5tasksappliedtothe
5.4 FailureAnalysis
high-levelgroupmanager.The“x/y”patterninthe“IsTask
Passed?”columnsdenotesthat“x”outof“y”casesarepassed. Lastly,wepresentanin-depthanalysisoffailedcasesintasksre-
MoreresultdetailscanbefoundinTable12. latedtoL3(incorrectdetection),L4(incorrectrootcauseanalysis),
L5(mitigationfailure),anderroneoushigh-leveltaskassignment.
Thedetailedresults,categorizedbyfailuretypeandpotentialim-
such as erroneous CPU request reductions (mirroring the L2 provementdirections,areshowninTable7.Thesefailuresstem
LatencyReductiontaskfailuresinTable3)andhorizontalscaling fromissuessuchasinstruction-followingerrors(e.g.,taskomis-
actionsinsufficientfortaskfulfillment. sion), hallucinations, deficiencies in reasoning capabilities, and
TheresultsfortheL3,L4,andL5tasksaresummarizedinTable6, insufficientdomainknowledge.
withdetailedinformationprovidedinTable12.Thesetableslist Toaddresstheseissues,weproposetwoprimarystrategies.First,
the number of rounds and steps performed, as well as the task wecanemployasuperiorbaseLLM,eitherastate-of-the-artgeneral
completionratesateachlevelandoverall,includingwhetherthe LLMoradomain-specificLLMfine-tunedwithservicemaintenance
injectedfaultswereresolved.Keyfindingsinclude: knowledge.Second,wecanenhanceourexistingagentframework
byintegratingadditionalmodules.Thesemodulesmightinclude
• Theaveragenumberofroundsrequiredwasapproximately3,
mechanismsforincorporatingdomainknowledgeusingretrieval-
similartotheL2task.Theprocedurefortheseroundstypically
augmented generation techniques [35] or the addition of critic
followedthesimilarpatternofmetriccollection,taskexecution,
agentstomitigatehallucinationsandbolsterreasoningcapabilities.
and result summary. However, additional rounds of task exe-
cutionweresometimesnecessaryifthepreviousonesdidnot
completethetask. 6 DISCUSSION
• Onaverage,45stepswererequired,significantlymorethanthe Thisstudysystematicallyevaluatesthefeasibilityofrealizingau-
31stepsneededforL2tasks.Thisincreasemaybeduetothe tonomiccomputingusingLLM-basedagents.Ourcomprehensive
9Failure
TaskwithFailure FailureReason PotentialSolutionDirection
Count
hallucinationduringnumericalcomparison 4 reducehallucination
L3
taskomission 3 betterinstructionfollowing
(WrongDetection)
mis-guidedbypreviousactionexecutionoutput 1 improvereasoning
unabletocollectimportantinformation(e.g.,CPUlimit) 5 betterreasoning;moredomainknowledge
L4
mis-guidedbypreviousactionexecutionoutput 3 improvereasoning
(WrongRCA)
taskomission 2 betterinstructionfollowing
ineffectiveaction 4 improvereasoning
adoptedactioninsufficienttoresolveissue 4 improvereasoning
L5
unabletoreportcorrectly(e.g.,hallucinatedreport,omitreport) 4 betterinstructionfollowing;reducehallucination
(FailedMitigation)
wrongchoiceofaction 3 improvereasoning
failedtoexecuteaction(e.g.,actiongeneratedbutnotapplied) 3 betterinstructionfollowing
taskomission 7 betterinstructionfollowing
WrongHigh-level
affectedbyincorrectlow-levelreport 5 improvereportingatlow-level
TaskAssignment
wrongreasoningbasedonlow-levelreport 2 improvereasoning
Table7:Failurereasonanalysisandpotentialsolutiondirectionsfortaskswithfailures.
experiments,conductedwiththemicroserviceSockShopinKuber- standardcomponentforexistingKubernetesmanagementframe-
netes,highlightseveralkeytopicsthatmeritfurtherdiscussion. works.Thisabstractioncouldmanifestasmiddlewaretoolsakin
AlternativeLLM-basedManagementSystemwithAgents.We toPrometheusandothermetric/logcollectiontools,seamlessly
utilizeahierarchicalmulti-agentsystemtodecomposetasksatdif- transformingeachmicroservicecomponentintoautonomicunits
ferentlevels,employingthePlan-Executionfeedbackmechanism duringapplicationdevelopment.Suchintegrationwouldaugment
ineachagentforautonomictaskmanagement.Otheragent-based Kubernetes’capabilitiesindeclarative,autonomic,andproactive
solutionscouldalsobeconsidered,suchasintegratingcriticagents managementofservicedeployments.Second,buildingaliveevalu-
tooverseetheentireprocess,implementingamemorymechanism ationbenchmarkwouldbeaneffectivewaytofacilitatereplicating
tostoreshort/long-termmaintenancehistory,andincludingalife- real-worldissuesandassessingmanagementsystems’abilityto
longself-learningmoduletocontinuouslyenhanceagentperfor- resolvethemdynamically.Thislivebenchmarkwouldserveasa
mance[48,53,56].Additionally,differentLLMscouldbeadoptedas versatiletestbedforvariousexperimentsandthedevelopmentof
basemodels.WhileGPT-4Turboservesasacapablerepresentative, newsolutionstoimproveexistingmanagementsystems.
otherLLMsmightexhibitdifferentbehaviorsinservicemainte-
nancecontexts.Fine-tuningLLMsonservicemaintenance-related 7 CONCLUSION
dataisalsoanexistingareaworthexploration. Inconclusion,thisstudyhaspresentedanovelapproachtoad-
EvaluationBenchmarkEnrichment.Thebenchmarktasksin vancingtheVisionofAutonomicComputingbyleveragingLarge
thisstudyfocusonSelf-OptimizationandSelf-Healing.Whilethis LanguageModelswithinahierarchicalmulti-agentframeworkfor
isafirstattempttosystematicallyassessACVusingLLM-based microservicemanagement.Throughtheintroductionofafive-level
agents,expandingthescopeoftheevaluationbenchmarkinfuture taxonomyforautonomousservicemaintenanceandthedevelop-
work would be valuable. Including Self-Configuration and Self- mentofanonlineevaluationbenchmarkbasedontheSockShop
Protectionwoulddemonstratethesystem’sflexibility,evolution microservicedemo,wesystematicallyassessedtheperformanceof
capability,andresilienceinhostilecyberenvironments.Addition- ourproposedsystem.OurfindingsrevealthattheLLM-basedmulti-
ally,whileweaimtocovermostfailureorissuetypes,some,suchas agentframeworkachievesLevel3autonomy,effectivelyhandling
greyfailures[22]andmetastablefailures[21],arenotincluded.Fur- detectionandresolutionofspecificissues,althoughthereremains
ther,althoughtheSockShopmicroservicecoversmajoraspectsof roomforenhancementinareassuchasrootcauseanalysisand
microservicemanagementusingKubernetes,itlacksthecomplex- mitigation.ThisworknotonlydemonstratesthepotentialofLLMs
ity,scalability,anddiversityofreal-worldlarge-scalecloudservices. tosignificantlycontributetowardsrealizingACVbutalsosetsthe
Evaluatingmorediversebenchmarks,suchasOnlineBoutique[16] stageforfutureresearchtoaddresstheremainingchallengesand
andDeathStar[13],andthosebeyondmicroservicemanagement, pushtheboundariesofself-managingcomputingsystemsfurther.
wouldbealogicalnextstep.Finally,althoughSection3outlines
theintra-communicationmechanismsamonglow-levelautonomic
agents,concreteevaluationtasksareneededtoassessagents’col-
laborativeissue-solvingcapabilitiesinself-organizingscenarios
withouthigh-levelsupervision.Suchpatternsarecrucialforman-
agingextensivedistributedcomputingsystemsthatdonothave
centralizedmanagement.
ApplicationinPractice.Twoimmediatereal-worldimplications
ofourresearcharediscernible.Firstly,ouragent-basedmanagement
system,initiallydevelopedforSockShop,couldbegeneralizedasa
10ACKNOWLEDGMENTS [15] SukhpalSinghGill,MinxianXu,CarloOttaviani,PanosPatros,RamiBahsoon,
ArashShaghaghi,MuhammedGolec,VladoStankovski,HuamingWu,AjithAbra-
WethankLingxiangHu,ShurunYuanandHaiyangDingforearly
ham,ManmeetSingh,HarshitMehta,SoumyaK.Ghosh,TharBaker,AjithKumar
participationofthiswork.WealsoappreciateDavidLiuforthe Parlikad,HananLutfiyya,SalilS.Kanhere,RizosSakellariou,SchahramDust-
insightfuldiscussionsandBoQiaofortheassistanceinsettingup dar,OmerRana,IvonaBrandic,andSteveUhlig.2022.AIfornextgeneration
computing:Emergingtrendsandfuturedirections.InternetofThings19(2022),
theexperimentserver.
100514. https://doi.org/10.1016/j.iot.2022.100514
[16] GoogleCloudPlatform.[n.d.].microservices-demo. RetrievedJuly11,2024from
https://github.com/GoogleCloudPlatform/microservices-demo
[17] Hemanth Gopal, Guanqun Song, and Ting Zhu. 2022. Security, Privacy
REFERENCES
andChallengesinMicroservicesArchitectureandCloudComputing-Survey.
[1] [n.d.]. SockShop:AMicroservicesDemoApplication. https://github.com/ arXiv:arXiv:2212.14422
microservices-demo/microservices-demo. Accessed:2024-06-18. [18] MiguelA.Guinea-CabreraandJuanA.Holgado-Terriza.2024. DigitalTwins
[2] ToufiqueAhmed,SupriyoGhosh,ChetanBansal,ThomasZimmermann,Xuchao inSoftwareEngineering—ASystematicLiteratureReviewandVision.Applied
Zhang,andSaravanRajmohan.2023.RecommendingRoot-CauseandMitigation Sciences14,3(2024). https://doi.org/10.3390/app14030977
StepsforCloudIncidentsusingLargeLanguageModels.In45thIEEE/ACM [19] TaichengGuo,XiuyingChen,YaqiWang,RuidiChang,ShichaoPei,NiteshV
InternationalConferenceonSoftwareEngineering,ICSE2023,Melbourne,Australia, Chawla,OlafWiest,andXiangliangZhang.2024.Largelanguagemodelbased
May14-20,2023.IEEE,1737–1749. https://doi.org/10.1109/ICSE48619.2023.00149 multi-agents:Asurveyofprogressandchallenges.arXivpreprintarXiv:2402.01680
[3] KaikaiAn,FangkaiYang,LiqunLi,ZhixingRen,HaoHuang,LuWang,Pu (2024).
Zhao,YuKang,HuaDing,QingweiLin,SaravanRajmohan,andQiZhang. [20] MahmoudHammad,JoshuaGarcia,andSamMalek.2018. Self-Protectionof
2024. Nissist: An Incident Mitigation Copilot based on Troubleshooting AndroidSystemsfromInter-componentCommunicationAttacks.In201833rd
Guides.CoRRabs/2402.17531(2024). https://doi.org/10.48550/ARXIV.2402.17531 IEEE/ACMInternationalConferenceonAutomatedSoftwareEngineering(ASE).
arXiv:2402.17531 726–737. https://doi.org/10.1145/3238147.3238207
[4] Aradea,IpingSupriana,andKridantoSurendro.2023. ARAS:adaptationre- [21] LexiangHuang,MatthewMagnusson,AbishekBangaloreMuralikrishna,Salman
quirementsforadaptivesystems.AutomSoftwEng30,Article2(2023). https: Estyak,RebeccaIsaacs,AbutalibAghayev,TimothyZhu,andAlekseyCharapko.
//doi.org/10.1007/s10515-022-00369-3 2022.MetastableFailuresintheWild.In16thUSENIXSymposiumonOperating
[5] PaoloArcaini,ElviniaRiccobene,andPatriziaScandurra.2015.Modelingand SystemsDesignandImplementation(OSDI22).USENIXAssociation,Carlsbad,CA,
AnalyzingMAPE-KFeedbackLoopsforSelf-Adaptation.2015IEEE/ACM10th 73–90. https://www.usenix.org/conference/osdi22/presentation/huang-lexiang
InternationalSymposiumonSoftwareEngineeringforAdaptiveandSelf-Managing [22] PengHuang,ChuanxiongGuo,LidongZhou,JacobR.Lorch,YingnongDang,
Systems(2015),13–23. https://api.semanticscholar.org/CorpusID:11757466 MuraliChintalapati,andRandolphYao.2017.GrayFailure:TheAchilles’Heelof
[6] SagarBehereandMartinTörngren.2016.Afunctionalreferencearchitecturefor Cloud-ScaleSystems.InProceedingsofthe16thWorkshoponHotTopicsinOperat-
autonomousdriving.InformationandSoftwareTechnology73(2016),136–150. ingSystems(Whistler,BC,Canada)(HotOS’17).AssociationforComputingMa-
https://doi.org/10.1016/j.infsof.2015.12.008 chinery,NewYork,NY,USA,150–155. https://doi.org/10.1145/3102980.3103005
[7] TomBrown,BenjaminMann,NickRyder,MelanieSubbiah,JaredDKaplan, [23] MarkusC.HuebscherandJulieA.McCann.2008.Asurveyofautonomiccom-
PrafullaDhariwal,ArvindNeelakantan,PranavShyam,GirishSastry,Amanda puting—degrees,models,andapplications.ACMComput.Surv.40,3,Article7
Askell,SandhiniAgarwal,ArielHerbert-Voss,GretchenKrueger,TomHenighan, (aug2008),28pages. https://doi.org/10.1145/1380584.1380585
RewonChild,AdityaRamesh,DanielZiegler,JeffreyWu,ClemensWinter, [24] EmilioIncerto,MircoTribastone,andCatiaTrubiani.2017.Softwareperformance
ChrisHesse,MarkChen,EricSigler,MateuszLitwin,ScottGray,Benjamin self-adaptationthroughefficientmodelpredictivecontrol.In201732ndIEEE/ACM
Chess,JackClark,ChristopherBerner,SamMcCandlish,AlecRadford,Ilya InternationalConferenceonAutomatedSoftwareEngineering(ASE).485–496.https:
Sutskever,andDarioAmodei.2020.LanguageModelsareFew-ShotLearners. //doi.org/10.1109/ASE.2017.8115660
InAdvancesinNeuralInformationProcessingSystems,H.Larochelle,M.Ran- [25] PengxiangJin,ShenglinZhang,MinghuaMa,HaozheLi,YuKang,LiqunLi,
zato,R.Hadsell,M.F.Balcan,andH.Lin(Eds.),Vol.33.CurranAssociates, YudongLiu,BoQiao,ChaoyunZhang,PuZhao,ShilinHe,FedericaSarro,
Inc.,1877–1901. https://proceedings.neurips.cc/paper_files/paper/2020/file/ YingnongDang,SaravanRajmohan,QingweiLin,andDongmeiZhang.2023.
1457c0d6bfcb4967418bfb8ac142f64a-Paper.pdf AssessandSummarize:ImproveOutageUnderstandingwithLargeLanguage
[8] MatteoCamilli,RaffaelaMirandola,andPatriziaScandurra.2023. XSA:eX- Models.InProceedingsofthe31stACMJointEuropeanSoftwareEngineeringCon-
plainableSelf-Adaptation.InProceedingsofthe37thIEEE/ACMInternational ferenceandSymposiumontheFoundationsofSoftwareEngineering,ESEC/FSE2023,
ConferenceonAutomatedSoftwareEngineering(Rochester,MI,USA)(ASE’22). SanFrancisco,CA,USA,December3-9,2023,SatishChandra,KellyBlincoe,and
AssociationforComputingMachinery,NewYork,NY,USA,Article189,5pages. PaoloTonella(Eds.).ACM,1657–1668. https://doi.org/10.1145/3611643.3613891
https://doi.org/10.1145/3551349.3559552 [26] K8sGPT.2024. K8sGPTDocumentation. https://docs.k8sgpt.ai/ Accessed:
[9] YinfangChen,HuaibingXie,MinghuaMa,YuKang,XinGao,LiuShi,Yunjie 2024-07-06.
Cao,XuedongGao,HaoFan,MingWen,JunZeng,SupriyoGhosh,Xuchao [27] J.KephartandDavidM.Chess.2003. TheVisionofAutonomicComputing.
Zhang,ChaoyunZhang,QingweiLin,SaravanRajmohan,DongmeiZhang,and Computer36(2003),41–50. https://api.semanticscholar.org/CorpusID:44705503
TianyinXu.2024.AutomaticRootCauseAnalysisviaLargeLanguageModels [28] JoergKienzle,BenoitCombemale,GunterMussbacher,OmarAlam,Francis
forCloudIncidents.InProceedingsoftheNineteenthEuropeanConferenceon Bordeleau,LolaBurgueno,GregorEngels,JessieGalasso,Jean-MarcJézéquel,
ComputerSystems,EuroSys2024,Athens,Greece,April22-25,2024.ACM,674–688. BettinaKemme,SébastienMosser,HouariSahraoui,MaximilianSchiedermeier,
https://doi.org/10.1145/3627703.3629553 andEugeneSyriani.2023. GlobalDecisionMakingOverDeepVariabilityin
[10] CloudNativeComputingFoundation.2024.CloudNativeComputingFoundation Feedback-DrivenSoftwareDevelopment.InProceedingsofthe37thIEEE/ACM
(CNCF). https://www.cncf.io/Accessed:2024-07-06. InternationalConferenceonAutomatedSoftwareEngineering(Rochester,MI,USA)
[11] KubernetesDocumentation.2024.WhyyouneedKubernetesandwhatcanit (ASE’22).AssociationforComputingMachinery,NewYork,NY,USA,Article
do. https://kubernetes.io/docs/concepts/overview/#why-you-need-kubernetes- 178,6pages. https://doi.org/10.1145/3551349.3559551
and-what-can-it-doAccessed:2024-07-06. [29] JoannaKosińskaandKrzysztofZielinski.2020.AutonomicManagementFrame-
[12] JoãoFigueiraandCarlosCoutinho.2024. Developingself-adaptivemicroser- workforCloud-NativeApplications.JournalofGridComputing18(2020),779–
vices.ProcediaComputerScience232(2024),264–273. https://doi.org/10.1016/ 796. https://api.semanticscholar.org/CorpusID:225001553
j.procs.2024.01.026 5thInternationalConferenceonIndustry4.0andSmart [30] JoannaKosińskaandKrzysztofZielinski.2023.EnhancementofCloud-native
Manufacturing(ISM2023). applicationswithAutonomicFeatures. JournalofGridComputing21(2023).
[13] YuGan,YanqiZhang,DailunCheng,AnkithaShetty,PriyalRathi,NayanKatarki, https://api.semanticscholar.org/CorpusID:259859370
ArianaBruno,JustinHu,BrianRitchken,BrendonJackson,KelvinHu,Meghna [31] JoannaKosińskaandKrzysztofZielinski.2023. ExperimentalEvaluationof
Pancholi,YuanHe,BrettClancy,ChrisColen,FukangWen,CatherineLeung, Rule-BasedAutonomicComputingManagementFrameworkforCloud-Native
SiyuanWang,LeonZaruvinsky,MateoEspinosa,RickLin,ZhonglingLiu,Jake Applications. IEEETransactionsonServicesComputing16(2023),1172–1183.
Padilla,andChristinaDelimitrou.2019.AnOpen-SourceBenchmarkSuitefor https://api.semanticscholar.org/CorpusID:247489235
MicroservicesandTheirHardware-SoftwareImplicationsforCloud&EdgeSys- [32] ShubhamKulkarni,AryaMarda,andKarthikVaidhyanathan.2023. Towards
tems.InProceedingsoftheTwenty-FourthInternationalConferenceonArchitectural Self-AdaptiveMachineLearning-EnabledSystemsThroughQoS-AwareModel
SupportforProgrammingLanguagesandOperatingSystems(Providence,RI,USA) Switching.In202338thIEEE/ACMInternationalConferenceonAutomatedSoftware
(ASPLOS’19).AssociationforComputingMachinery,NewYork,NY,USA,3–18. Engineering(ASE).1721–1725. https://doi.org/10.1109/ASE56229.2023.00172
https://doi.org/10.1145/3297858.3304013 [33] Philippe Lalanda, Julie A. McCann, and Ada Diaconescu. 2013. Future of
[14] SimosGerasimou,RaduCalinescu,andGiordanoTamburrelli.2018.Synthesisof AutonomicComputingandConclusions. SpringerLondon,London,263–278.
probabilisticmodelsforquality-of-servicesoftwareengineering.AutomSoftw https://doi.org/10.1007/978-1-4471-5007-7_10
Eng25(2018),785–831. https://doi.org/10.1007/s10515-018-0235-8
11[34] Van-HoangLeandHongyuZhang.2023.LogParsing:HowFarCanChatGPTGo?. [55] DannyWeyns.2018.EngineeringSelf-AdaptiveSoftwareSystems–AnOrganized
In38thIEEE/ACMInternationalConferenceonAutomatedSoftwareEngineering, Tour.In2018IEEE3rdInternationalWorkshopsonFoundationsandApplicationsof
ASE2023,Luxembourg,September11-15,2023.IEEE,1699–1704. https://doi.org/ Self*Systems(FAS*W).1–2. https://doi.org/10.1109/FAS-W.2018.00012
10.1109/ASE56229.2023.00206 [56] QingyunWu,GaganBansal,JieyuZhang,YiranWu,BeibinLi,ErkangZhu,
[35] PatrickLewis,EthanPerez,AleksandraPiktus,FabioPetroni,VladimirKarpukhin, LiJiang,XiaoyunZhang,ShaokunZhang,JialeLiu,AhmedHassanAwadal-
NamanGoyal,HeinrichKüttler,MikeLewis,Wen-tauYih,TimRocktäschel, lah, Ryen W White, Doug Burger, and Chi Wang. 2023. AutoGen: En-
SebastianRiedel,andDouweKiela.2020.Retrieval-AugmentedGenerationfor ablingNext-GenLLMApplicationsviaMulti-AgentConversationFramework.
Knowledge-IntensiveNLPTasks.InAdvancesinNeuralInformationProcessing arXiv:2308.08155[cs.AI]
Systems,H.Larochelle,M.Ranzato,R.Hadsell,M.F.Balcan,andH.Lin(Eds.), [57] HanXiangXu,ShenAoWang,NingkeLi,YanjieZhao,KaiChen,KailongWang,
Vol.33.CurranAssociates,Inc.,9459–9474. https://proceedings.neurips.cc/ YangLiu,TingYu,andHaoYuWang.2024. Largelanguagemodelsforcyber
paper_files/paper/2020/file/6b493230205f780e1bc26945df7481e5-Paper.pdf security:Asystematicliteraturereview.arXivpreprintarXiv:2405.04760(2024).
[36] JialongLi,MingyueZhang,NianyuLi,DannyWeyns,ZhiJin,andKenjiTei. [58] TianyiYang,JiachengShen,YuxinSu,XiaoLing,YongqiangYang,andMichaelR.
2024. ExploringthePotentialofLargeLanguageModelsinSelf-adaptiveSys- Lyu.2022. AID:efficientpredictionofaggregatedintensityofdependencyin
tems.InProceedingsofthe19thInternationalSymposiumonSoftwareEngineer- large-scalecloudsystems.InProceedingsofthe36thIEEE/ACMInternational
ingforAdaptiveandSelf-ManagingSystems(Lisbon,AA,Portugal)(SEAMS ConferenceonAutomatedSoftwareEngineering(Melbourne,Australia)(ASE’21).
’24).AssociationforComputingMachinery,NewYork,NY,USA,77–83. https: IEEEPress,653–665. https://doi.org/10.1109/ASE51524.2021.9678534
//doi.org/10.1145/3643915.3644088 [59] JieZhang,HaoyuBu,HuiWen,YuChen,LunLi,andHongsongZhu.2024.
[37] YuanchunLi,HaoWen,WeijunWang,XiangyuLi,YizhenYuan,GuohongLiu, Whenllmsmeetcybersecurity:Asystematicliteraturereview. arXivpreprint
JiachengLiu,WenxingXu,XiangWang,YiSun,RuiKong,YileWang,Hanfei arXiv:2405.03644(2024).
Geng,JianLuan,XuefengJin,ZilongYe,GuanjingXiong,FanZhang,XiangLi, [60] LingzheZhang,TongJia,MengxiJia,YongYang,ZhonghaiWu,andYingLi.
MengweiXu,ZhijunLi,PengLi,YangLiu,Ya-QinZhang,andYunxinLiu.2024. 2024.ASurveyofAIOpsforFailureManagementintheEraofLargeLanguage
PersonalLLMAgents:InsightsandSurveyabouttheCapability,Efficiencyand Models.arXivpreprintarXiv:2406.11213(2024).
Security.ArXivabs/2401.05459(2024). https://api.semanticscholar.org/CorpusID: [61] XingyuZhao,RaduCalinescu,SimosGerasimou,ValentinRobu,andDavidFlynn.
266933252 2021.Intervalchange-pointdetectionforruntimeprobabilisticmodelchecking.In
[38] Locust.2024.Locust. https://locust.io/Accessed:2024-07-02. Proceedingsofthe35thIEEE/ACMInternationalConferenceonAutomatedSoftware
[39] EhudMalul,YairMeidan,DuduMimran,YuvalElovici,andAsafShabtai.2024. Engineering(VirtualEvent,Australia)(ASE’20).AssociationforComputingMa-
GenKubeSec:LLM-BasedKubernetesMisconfigurationDetection,Localization, chinery,NewYork,NY,USA,163–174. https://doi.org/10.1145/3324884.3416565
Reasoning,andRemediation. arXiv:2405.19954[cs.CR] https://arxiv.org/abs/
2405.19954
[40] NaborC.Mendonca,PooyanJamshidi,DavidGarlan,andClausPahl.2021.De-
velopingSelf-AdaptiveMicroserviceSystems:ChallengesandDirections.IEEE
Software38,2(2021),70–79. https://doi.org/10.1109/MS.2019.2955937
[41] ChaosMesh.2024.ChaosMesh. https://chaos-mesh.org/Accessed:2024-07-02.
[42] minikube.2024.minikube. https://github.com/kubernetes/minikubeAccessed:
2024-07-16.
[43] JoãoPauloKarolSantosNunes,ShivaNejati,MehrdadSabetzadeh,andElisaYumi
Nakagawa.2024.Self-Adaptive,Requirements-DrivenAutoscalingofMicroser-
vices.In2024IEEE/ACM19thSymposiumonSoftwareEngineeringforAdaptive
andSelf-ManagingSystems(SEAMS).168–174. https://doi.org/10.1145/3643915.
3644094
[44] PrinciplesofChaosEngineering.2024.PrinciplesofChaosEngineering. https:
//principlesofchaos.org/Accessed:2024-07-02.
[45] OpenAI.2023.GPT-4TechnicalReport. arXiv:2303.08774[cs.CL]
[46] LongOuyang,JeffreyWu,XuJiang,DiogoAlmeida,CarrollWainwright,Pamela
Mishkin,ChongZhang,SandhiniAgarwal,KatarinaSlama,AlexRay,John
Schulman,JacobHilton,FraserKelton,LukeMiller,MaddieSimens,Amanda
Askell,PeterWelinder,PaulFChristiano,JanLeike,andRyanLowe.2022.
Training language models to follow instructions with human feedback. In
AdvancesinNeuralInformationProcessingSystems,S.Koyejo,S.Mohamed,
A.Agarwal,D.Belgrave,K.Cho,andA.Oh(Eds.),Vol.35.CurranAssociates,
Inc.,27730–27744. https://proceedings.neurips.cc/paper_files/paper/2022/file/
b1efde53be364a73914f58805a001731-Paper-Conference.pdf
[47] Prometheus.2024.Prometheus-Frommetricstoinsight. https://prometheus.io/
Accessed:2024-07-06.
[48] BoQiao,LiqunLi,XuZhang,ShilinHe,YuKang,ChaoyunZhang,FangkaiYang,
HangDong,JueZhang,LuWang,etal.2023. Taskweaver:Acode-firstagent
framework.arXivpreprintarXiv:2311.17541(2023).
[49] RabbitMQ.2024.RabbitMQ. https://www.rabbitmq.com/Accessed:2024-07-02.
[50] SandroSpeth.2022.Semi-automatedcross-componentissuemanagementand
impactanalysis.InProceedingsofthe36thIEEE/ACMInternationalConferenceon
AutomatedSoftwareEngineering(Melbourne,Australia)(ASE’21).IEEEPress,
1090–1094. https://doi.org/10.1109/ASE51524.2021.9678830
[51] AlessandroTundo,MarcoMobilio,ShashikantIlager,IvonaBrandić,EzioBartocci,
andLeonardoMariani.2023.AnEnergy-AwareApproachtoDesignSelf-Adaptive
AI-basedApplicationsontheEdge. ,281-293pages. https://doi.org/10.1109/
ASE56229.2023.00046
[52] KarthikVaidhyanathan,MauroCaporuscio,StefanoFlorio,andHenryMuccini.
2024.ML-enabledServiceDiscoveryforMicroserviceArchitecture:aQoSAp-
proach.InProceedingsofthe39thACM/SIGAPPSymposiumonAppliedComputing
(Avila,Spain)(SAC’24).AssociationforComputingMachinery,NewYork,NY,
USA,1193–1200. https://doi.org/10.1145/3605098.3635942
[53] GuanzhiWang,YuqiXie,YunfanJiang,AjayMandlekar,ChaoweiXiao,YukeZhu,
LinxiFan,andAnimaAnandkumar.2023.Voyager:AnOpen-EndedEmbodied
AgentwithLargeLanguageModels. arXiv:arXiv:2305.16291
[54] LeiWang,ChenMa,XueyangFeng,ZeyuZhang,HaoYang,JingsenZhang,
ZhiyuanChen,JiakaiTang,XuChen,YankaiLin,etal.2024.Asurveyonlarge
languagemodelbasedautonomousagents.FrontiersofComputerScience18,6
(2024),186345.
12TrafficLevel Users SpawnRate A.2 DetailedDescriptionforL3/L4/L5Tasks
LightTraffic 20 20 ToassessthepotentialofLLMstoachieveL3/L4/L5levelsofau-
ModerateTraffic 50 50 tonomy,weestablishedastandardizedtaskthatalignswiththe
Catalogue
HeavyTraffic 80 80 previouslydefinedSLOs.Weoutlinedclearcriteriafordetermining
RisingTraffic 100 1 thehealthystateofamicroservicecomponent,andprovidedguid-
LightTraffic 20 20 ancetotheagentonattainingL3/L4/L5.Additionalinformation
ModerateTraffic 40 40 canbefoundinTable9.
Front-end
HeavyTraffic 80 80
RisingTraffic 100 1 B ADDITIONALEXPERIMENTRESULTS
Table8:DetailsofthedefinedtrafficlevelsusingLocust. Hereweprovidemoredetailedresultscorrespondingtoexperi-
mentsofevaluatingtheL3/L4/L5tasksappliedtothelow-level
autonomicagentCatalogue(Table10),theL1/L2tasksappliedto
thehigh-levelgroupmanager(Table11),andtheL3/L4/L5tasks
A EXPERIMENTSETUPDETAILS appliedtothehigh-levelgroupmanager(Table12).
A.1 TrafficLevelsDefinitionwithLocust
C PROMPTS
WeemployedLocusttocreatetrafficforthemicroservicecompo-
nents, emulating real users operations. We outlined four traffic The specific system prompts used for the low-level autonomic
modesthatexertvaryinglevelsofpressureonthesystem.The agentsandhigh-levelgroupmanagerarepresentedinTable13
correspondingconfigurationscanbefoundinTable8. and16,respectively.
13Thistaskisaregularcheckforthestateofyourmicroservicecomponent.Ifamicroservicecomponentdoesnotmeetanycriteriaforahealthystate,
youneedtoanalyzetherootcauseandtakecorrectiveactionstorecoverit.
#Thehealthystateofthemicroservicecomponentisdefinedasfollows:
-ThemicroservicecomponentisrunninghealthilywithREADYstate.
-TheCPU/Memoryusageofthemicroservicecomponentisbelowthan50%ofallocated/limitresource.
-TheP99latencyofthemicroservicecomponentisinastablerange,withnobigfluctuations,andtheaverageP99latencyisbelow200ms.
#Followthestepsbelowtocompletethetask:
1.Checkthestateofthemicroservicecomponenttoseeifthehealthystateismaintained.
2.IfNONEoftheabovehealthystatecriteriaisviolated,youcanreporttheresultdirectly.
3.IfANYoftheabovehealthystatecriteriaisviolated,youshouldfollowthestepsbelow:
-Analyzetherootcauseoftheunhealthystate.Youshouldtryyourbesttoidentifytherootcause.Iftherootcauseishardtoidentify,youstillneedto
takecorrectiveactionstotemporarilymitigatetheissue.
-Takecorrectiveactionstorecovertheunhealthystate.
-Confirmthehealthystateisrestored.
-Youareallowedtorepeattheabovestepsafewtimesuntilthehealthystateisrestored.
-Iftheissuepersistsafterafewattempts,youshouldreporttheissuebycalling`report_result`function.NotethatNEVERreporttheissuebeforeyou
havetriedtorecovertheunhealthystate.
Table9:DetaileddescriptionforL3/L4/L5tasks.
14Injected Trial Eval IsIssuePresent L3 L4 L5
Steps
Faults Index Index beforeEval? (IsCorrectJudgement?) (IsRCA?) (IsMitigated?)
misguidedbymessage accidentallyresolvetheissue
1 7 1 1
indeploymentdescription butintroduceanewissue
1
Unabletorestoreback
2 17 1 1 1
thecorrectsetting
Pod Unabletorestoreback
3 15 1 1 1
Failure thecorrectsetting
1 9 1 1 1 1
2 2 11 0 1 - -
misguidedbyoutput
3 11 0 - -
fromwrongoperation
1 19 1 1 1 1
3 2 4 0 1 - -
3 5 0 1 - -
hallucinationduring
1 7 1 - -
numericalcomparison
1
wrongactionby
2 9 1 1 1
reducingCPUrequest
CPU 3 9 1 1 nocheckonCPUlimit 1
Stress ineffectiveactionby
1 13 1 1 nocheckonCPUlimit
performinghorizontalscaling
2
ineffectiveactionby
2 11 1 1 nocheckonCPUlimit
performinghorizontalscaling
ineffectiveactionby
3 11 1 1 nocheckonCPUlimit
performinghorizontalscaling
hallucinationduring
1 4 1 - -
numericalcomparison
3
ineffectiveactionby
2 9 1 1 nocheckonCPUlimit
performinghorizontalscaling
3 1 1 taskomission - -
1 4 0 1 - -
1 2 4 0 1 - -
3 1 1 taskomission - -
1 18 0 1 - -
Rising
2 2 7 0 1 - -
Traffic
3 7 0 1 - -
hallucinationduring
1 13 1 1 1
unitconversion
3
hallucinationduring
2 7 1 - -
numericalcomparison
hallucinationduring
3 4 1 - -
numericalcomparison
Average 8.8 All 0.74(20/27) 0.5(6/12) 0.25(3/12)
Note1:“EvalIndex”denotesthethreeconsecutativeevaluationsinanexperimentrun.
Note2:“IsRCA”,“IsCorrectJudgement”and“IsMitigated”withtextdenoteagentfailedtoachievethegoalwithcorrespondingreasonsincells.
Note3:“IsCorrectJudgement”denotesthatwhethertheagentcancorrectlyidentifytheissue.
Note4:“IsRCA”indicateswhethertheagentcanaccuratelyidentifytherootcauseoftheissue.
Note5:“IsMitigated”indicateswhethertheagentcanaddresstheidentifiedissueusinganyavailablemethods.
Table10:DetailedresultsforL3/L4/L5tasksappliedtothelow-levelautonomicagentofCatalogue.
15Task Round IsCorrect IsSub-taskFinished IsSub-taskFinished
Steps
Name Index TaskAssignment? byCatalogue? byFront-end?
1 [3,5,-] 1 1 -
2 [2,8,-] 1 1 -
3 [1,-,-] 1 - -
1 [2,5,-] 1 1 -
Latency
2 [3,11,-] 1 0 -
Reduction-Cat.
3 [3,10,-] 1 1 -
4 [1,-,-] 1 - -
1 [2,5,-] 1 1 -
2 [1,-,-] 1 - -
1 [2,5,-] 1 1 -
wrongactionleadsto
2 [2,9,-] 1 -
fakedtaskcompletion
managerterminatetask
3 [1,-,-] - -
basedonCatalogue’sreport
CPU 1 [2,5,-] 1 1 -
Reduction-Cat. 2 [2,17,-] 1 1 -
3 [1,-,-] 1 - -
1 [2,4,-] 1 1 -
wrongactionleadsto
2 [3,8,-] 1 -
fakedtaskcompletion
managerterminatetask
3 [2,-,-] - -
basedonCatalogue’sreport
1 [2,5,5] 1 1 1
2 [2,9,5] 1 1 1
3 [1,-,-] 1 - -
1 [2,5,5] 1 1 1
Latency
2 [2,10,11] 1 1 1
Reduction-Group
3 [1,-,-] 1 - -
1 [2,5,5] 1 1 1
incorrectlyrequiretheP99
2 [2,11,11] 1 1
latencyofeachbelow400ms
3 [1,-,-] 1 - -
1 [2,4,5] 1 1 1
wrongactionbyadjusting
nocheckonCPUlimit scaleupto2replicasbut
2 [3,11,9] CPUrequests;treattaskas
leadstowrongtasks noenoughforcompletingtask
completedwithoutpost-check
managerterminatetaskbasedon
3 [1,-,-] - -
incorrectlow-levelreports
1 [2,5,5] 1 1 1
CPU scaleupto2replicasbut
scaleupto3replicasbutnot
Reduction-Group 2 [3,9,11] 1 noenoughforcompletingtask;
enough(slightlyabovethelimit)
hallucinationonreport
3 [1,-,-] 1 - -
1 [2,4,5] 1 1 1
wrongactionby wrongactionby
2 [2,13,9] 1
reducingCPUrequest reducingCPUrequest
scaleupto2replicasbutnotenough;
3 [3,6,8] 1 noactiontaken
hallucinationonreport
4 [3,6,-] 1 1 -
5 [1,-,-] 1 - -
Average [1.9,7.5,7.2] 0.87(34/39) 0.77(20/26) 0.69(9/13)
Note1:Theelementsofeach3-tuplelistin“Steps”representthenumberofstepsusedbythehigh-levelgroupmanager,CatalogueandFront-end,respectively.
Note2:“IsCorrectTaskAssignment”and“IsSub-taskFinishedbyX”withtextdenoteagentfailedtoachievethegoalwithcorrespondingreasonsincells.
Note3:“IsCorrectTaskAssignment”denoteswhetherthehigh-levelgroupmanagerdecomposedtasks/assignedsub-taskscorrectly.
Note4:“IsSub-taskFinishedbyX”denoteswhetherlow-levelautonomicagentsolvedthesub-taskscorrectly.
Table11:DetailedresultsforL2tasksappliedtothehigh-levelgroupmanager.
16Injected Round IsIssuePresent Steps IsCorrect (IsCL o3 rrect L4 L5
Faults BeforeRound? TaskAssignment? (IsRCA?) (IsMitigated?)
judgement?)
1 [1,0] [2,19,6] 1 [1,-] [1,-] [1,-]
2 [0,0] [1,-,-] 1 - - -
1 [1,0] [2,9,9] 1 [1,-] [-,-] [-,-]
Pod
[misguidedby
Failure 2 [1,0] [3,7,-] 1 [1,-] [1,-]
hallucinatedlogs,-]
3 [0,0] [1,-,-] 1 - - -
[misguidedby
1 [1,0] [2,20,7] 1 [1,-] [1,-]
logsintheoutput,-]
2 [0,0] [1,-,-] 1 - - -
1 [1,1] [2,6,9] 1 - - -
[1,increaseresource
2 [1,1] [3,10,8] 1 [1,taskomission] [1,taskomission]
allocationbutnotenough]
[-,yesbut
3 [0,1] [3,-,8] 1 [-,1] [-,taskomission]
reportincorrectly]
4 [0,0] [3,-,8] 1 [-,1] - -
CPU
5 [0,0] [1,-,-] 1 - - -
Stress
1 [1,1] [2,9,9] 1 - - -
[increaseresourceallocationbut
didn’tapply,scaleupto2replicas
2 [1,1] [3,11,15] omitanalysistask - -
andincreaseresourceallocation
butnotenough]
3 [1,1] [3,11,7] omitanalysistask - - [1,1]
4 [0,0] [1,-,-] 1 - - -
1 [1,1] [2,6,9] 1 - - -
[increaseresourceallocation
2 [1,1] [3,7,11] omitanalysistask - -
butnotapply,1]
3 [1,0] [3,8,-] omitanalysistask - - [1,-]
4 [0,0] [1,-,-] 1 - - -
1 [1,1] [2,6,9] 1 - - -
[increaseCPUrequestbeyondthelimit
2 [1,1] [3,15,11] omitanalysistask - - resultinginfailedapply,increaseresource
limitbutnotapplysuccessfully]
[yesbutstillthoughtthetaskwasincomplete
duetohallucinationonnumericalcomparison,
Rising 3 [1,1] [3,8,8] omitanalysistask - -
increaseCPUlimitbutdecreasememorylimit
Traffic
resultingintaskfailure]
4 [1,1] [1,-,-] giveupbymanager - - -
1 [1,1] [2,9,9] 1 - - -
terminationdueto
2 [1,1] [1,-,-] hallucinationon - - -
CPUlimitbymanager
1 [1,1] [2,8,6] 1 - - -
2 [1,1] [3,9,9] 1 [1,1] [1,1] -
[noactiontaken,
3 [1,1] [3,2,6] 1 - -
yesbutomitreport]
hanguponawaiting
4 [1,0] [1,-,-] - - -
low-levelresponses
Average [2.1,9.5,8.6] 0.7(21/30) 0.9(9/10) 0.5(4/8) 0.42(8/19)
Note1:Theelementsofeach2-tuplelistin“IsIssuePresentBeforeRound”indicatewhetherthereexistissuesforCatalogueandFront-end,respectively.
Note2:Theelementsofeach3-tuplelistin“Steps”representthenumberofstepsusedbythehigh-levelgroupmanager,CatalogueandFront-end,respectively.
Note3:Theelementsofeach2-tuplelistintheL3/L4/L5columnscorrespondtotheresultsforCatalogueandFront-end,respectively.
Table12:DetailedresultsforL3/L4/L5tasksappliedtothehigh-levelgroupmanager.
17-YouareaKubernetescomponentmaintainernamed"{{service_name}}"withk8smanagerroletoensurethatthemicroservicecomponent"{{ser-
vice_name}}"isrunningnormallyandhealthily.
-Youaremainlyresponsiblefortwotypesoftasks:answeringmaintenance-relatedinquiries(e.g.,whatiscurrentcomponentstatus/resourceusage)
andprovidinginstructionstoachievemaintenancerequests(e.g.,reducelatencyto10ms,updatetheimageversion).
-Youareprovidedwithbasicinformationofthecomponentinsection`ComponentInformation`.(e.g.,description/namespace/deploymentartifacts)
-Useavailabletoolstohelpyouanalyzethecomponentstatusandperformnecessarymaintenanceoperations.(e.g.,Kubernetes,Prometheus,Tool
Functions)
-Beforestartingwork,youshouldreadalltheinformationin`ComponentInformation`and`ToolsInformation`sectionstobetterunderstandthe
componentyouaremaintainingandavailabletoolsyoucanleverage.-Followthe`Instructions`sectiontotakeactions.
#ComponentInformation:
-Thedescriptionofthecomponentis"{{service_description}}".
-Thecomponentisunderthenamespaceof{{namespace}}.
-Thiscomponentisdeployedasak8sserviceusingYAMLfiles.
-ThedeploymentYAMLfileislocatedat`{{deploy_YAML_fp}}`.
-TheserviceYAMLfileislocatedat`{{service_YAML_fp}}`.
-Downstreamdependency:thecurrentservicedependsonthefollowinglistofservices:{{downstream_services}}
-Upstreamdependency:thefollowinglistofservicesdependonthecurrentservice:{{upstream_services}}
#ToolsInformation:
##Kubernetes
-Youhavethefullaccesstotheinternalnetworkofk8sclusterandyoucanruncommandswith"kubectl"commandtomanagethecluster.
-KubernetesMetricsServerisrunningbydefaultinthecluster.
-Youcanuse`kubectltop`commandtogetsomemetricsoftheservice.
##Prometheus
-Prometheusserverisrunningat{{prometheus_url}}.
#Instructions
##Overallflowofactiontaking
-ALWAYSfollowtheflowofactiontaking:UnderstandTask->MakePlan->ExecutePlan->ReportResult->Terminate.NotethatMakePlanand
ExecutePlanareiterative.
-Theoverallactiontakingprocessistofirstmakedetailedandexecutableplaninsteps,thentakeactionsfollowingthestepstosolvethetask.
-Aftertakingactions,doubleconfirmifthechangesdoestakeeffectandmeetthegoalofthetask.
-Beforereportingresult,youshouldtryafewtimestoachievetherequest.
-Whetherthetaskissuccessfulorfailed,ALWAYSremembertoreportresultsbycallingthe`report_result`function,otherwise,thetaskassignerwill
notbeabletogettheresultyouhavedone,andthetaskwillbeconsideredasnotcompleted.
-Terminatethetaskafterreportingtheresult.
##Instructionsonhowtomakeaplan
-Readthetaskcarefullyandunderstandwhatyouneedtodo.Doublecheckthetaskanddetermineifitisfeasibleorreasonable.
-Breakdownthetaskintoaseriesofexecutablesteps,eachexecutablestepshouldbeclear.
-Outputyourplaninthefollowingformat:
Task:<Taskdescription>
Steps:
1.<Step1description>
2.<Step2description>
3.<Step3description>
4.<ReportResultbycalling`report_result`>
5.<Terminate>
-ALWAYSexplicitlyoutputtheaboveplan,otherwise,somesteps(e.g.,reportresult)maybemissed.
-Useplaintexttodescribethesteps,DONOTincludecodeorcommandintheplan.
-Ifthetaskisnotsolvedbytheinitialplan,youshouldmodifytheplanandtryafewmoretimes.
##Instructionsonhowtooutputcode/commandforeachexecutablestep
-Outputcodeorcommandsforonestepatatime.DONOTcombinecodeorcommandsformultiplesteps.
-Eachstepshouldbegivenintermsofexecutablecodesorcommands.DoNOTwritecodeorcommandthatisirrelevanttothetask.
-Use`python`forcode,`bash`forcommandline.DoNOToutputothertypecodeblocks,especiallyforYAML.Youshouldtrytowriteapythonscript
togeneratetheYAMLfileormodifyanexistingone.
-Youcanrun`cat`commandtoreadthecontentofthefile,andthenoutputthecontentinthecodeblock.
-Youareallowedtomodifythecodethroughapythoncodesnippetifthetaskrequirescodemodification.
-Whenyouarewritingcommandsorcode,DONOTleaveplaceholdersinthecommandsorcode.Ifthereareplaceholders,youshouldreplacethem
withtheactualvalues.(e.g.,podname,containername,namespace)
-ALWAYSwaitforawhileaftertakingactionsthatwillcausechangestothesystem,andthencheckiftheissueisfixed.Forexample,use`sleep120;`
commandtowaitfor120s.
-Code/commandblocksshouldbewrappedby```(threebackticks),notinplaintextormarkdown.
-Example:forapythoncodesnippet,thecodeoutputcouldlooklike:
```python
<yourcode>
```
##Instructionsonhowtoterminatethetask
-Whenthetaskiscompleted,ALWAYSoutput`TERMINATE`(i.e.,noothercontent)toendthetask.
-Do**NOT**output`TERMINATE`beforethetaskiscompleted;otherwise,thetaskwillbeendedprematurely.
CONTINUEONTHENEXTPAGE
Table13:Promptforlow-levelautonomicagents
18##Additionalinstructiononcheckinglogs
-Onlyretrievethelatest20linesoflogs.
-Onlyfocusontherelevantlogsthatarerelatedtoissuesunderinvestigation.
##Additionalinstructionsforkubernetes
-Theactualpod/container/servicenamemaybedifferentfromtheprovidedone.Youneedtofindtheactualnamebyyourself.
-NEVER**output**and**run**commands(e.g.,`kubectlget...-w`,`kubectlport-forward`,`kubectledit`command)thatwillcauseobstruction.
-NooutputdoNOTmeannoissuesanditcouldbebecausethecommandiswrong(e.g.,wrongparameters/arguments)
##AdditionalInstructionsforPrometheusundercurrentenvironment
-YoucanwritePythoncodebysendingqueryinPrometheusQueryLanguage(PromQL)toPrometheusservertogetthemetricsyouneed.
-Retrievemetricsbyfollowingsteps:
-Choosetherightmetricnameandlabelsyouneedtoquery,youshoulduseonlyonemetricnameinonequery.
-Availablemetrics:
1.request_duration_seconds_count:forquerypersecond(QPS)metric.
2.request_duration_seconds_bucket:forlantency(inseconds)metric.
-Availablelabels:
1.name:theservicename.
2.status_code:thestatuscodeoftherequest.3.route:therouteoftherequest.
-Followthedocumentinthe`ToolFunctions`sectiontoquerythemetricsyouneed.
-UsethetoolfunctiontoqueryPrometheusserverandgetthemetricsyouneed.
-BelowisasamplepythoncodesnippettoqueryQPSfromPrometheusserver:
```python
# Import tools function from file first
from src.agent.tool_functions_for_agent import query_prometheus
promQL = 'sum(rate(request_duration_seconds_count{name="catalogue",status_code=~"2..",route!="metrics"}[1m]))'
duration = '2m'
step = '1m'
result = query_prometheus(promQL, duration=duration, step=step)
print(result)
```
-BelowisasamplepythoncodesnippettoqueryP99latencyfromPrometheusserver:
```python
# Import tools function from file first
from src.agent.tool_functions_for_agent import query_prometheus
promQL = 'histogram_quantile(0.99, sum(rate(request_duration_seconds_bucket{name="catalogue"}[1m])) by (name, le))'
duration = '2m'
step = '1m'
result = query_prometheus(promQL, duration=duration, step=step)
print(result)
```
-Whenyougetemptyresultornaninlist,youshouldcheckifthemetricnameiscorrectandthetimerangeiscorrect,correctthemandtryagain.
##AdditionalInstructionsforcurrentmicroservice"sock-shop"
-Usingonly`name`selector(NOT`app`selector)tofindthepod/container/service,e.g.,`kubectlgetpod-n{{namespace}}-lname={{service_name}}`
CONTINUEONTHENEXTPAGE
Table14:Promptforlow-levelautonomicagents(continued)
19#IntroductionforToolFunctions
-Youhaveaccesstothefollowingtoolfunctions.Theycanbeaccessedfromthemodulecalled‘{model_name}‘bytheirfunctionnames.
-Forexample,iftherewasafunctioncalled`foo`youcouldimportitbywriting`from{model_name}importfoo`
def query_prometheus(promQL: str, **kwargs) -> list:
"""
This function is used to query prometheus with the given promQL.
- param promQL: str, the promQL to be executed
-paramkwargs:dict,parameterstobepassedtothequery,mustcontainoneofthefollowing:(start_time,end_time),duration
return: list, result of the query
Available metrics:
1. request_duration_seconds_count: for query per second (QPS) metric.
2. request_duration_seconds_bucket: for lantency metric.
Available filters:
1. name: the service name.
2. status_code: the status code of the request.
3. route: the route of the request.
Note: ALWAYS call print() to report the result so that planner can get the result.
Example:
>>> from src.agent.tool_functions_for_agent import query_prometheus
>>> promQL = 'rate(request_duration_seconds_count{name="catalogue",status_code=~"2..",route!="metrics"}[1m])'
>>> result = query_prometheus(promQL=promQL, duration='2m', step='1m')
>>> print(result) # output the result so that planner can get it.
[['2024-06-20 02:17:20', 0.0], ['2024-06-20 02:18:20', 0.0], ['2024-06-20 02:19:20', 0.0]]
"""
...
def report_result(component: str, message: str, message_type: Literal['ISSUE', 'RESPONSE']) -> str:
"""
This function can help you send a message to the manager.
- param component: str, the component name
- param message: str, the message to be reported
- param type: str, the type of the message, use 'ISSUE' for HEARTBEAT and 'RESPONSE' for TASK
return: str, the result of the operation
Note: ALWAYS call print() to report the result so that planner can get the result.
Example:
>>> from src.agent.tool_functions_for_agent import report_result
>>> component = 'catalogue'
>>> message = 'The task is completed.'
>>> message_type = 'RESPONSE'
>>> result = report_result(component=component, message=messages, message_type=message_type)
>>> print(result) # output the result so that planner can get it.
Message sent to manager.
"""
...
Table15:Promptforlow-levelautonomicagents(continued)
20-Youareahigh-levelservicemaintainerwhichmanagesafewlower-levelservicemaintainersinKubernetescluster.
-Boththehigh-levelandlower-levelmaintainersareintelligentservicemaintenanceagentspoweredbyLargeLanguageModels.
-Youareresponsiblefortwotypesoftasks:i)EnsurethewholeKubernetesclusterisrunninghealthilybytakingproactiveactions;ii)Respondto
maintainencerequestsorinquiriesfromhigher-levelmanagersorhumanoperators.
-Youareprovidedwithbasicinformationinsection`ServiceInformation`abouttheservicetomaintainandthelower-levelmaintainersinthecluster.
-Followthe`Instructions`sectiontoassigntaskstolower-levelmaintainersandcollect/analyzeresponsesfromthem.
#ServiceInformation
-TheclusterisaKubernetesclusterwithmicroservicecomponentsdeployed.
-Themainservicethatyouaremaintainingisunderthenamespaceof{{namespace}}.
-Thelower-levelservicecomponentmaintainersyoucanassigntasktoarelistedasfollows:{{service_maintainers}}.
#Instructions
##GeneralInstructions
-Youroverallworkflowis:UnderstandTask->DecomposeTask->AssignTask->CollectResponse->EvaluateResponse->Terminate.Notethat
DecomposeTask,AssignTask,CollectResponseandEvaluateResponseareiterative.
-YoumanagetheserviceONLYthroughassigningtaskstolower-levelservicemaintainers.
-YouareNOTallowedtodirectlymodifytheclustercomponentsviasomemaintenanceoperationslike`kubectlapply`,`kubectldelete`,etc.
##Instructionsfortaskdecomposition
-Thinkcarefullyhowthetaskcanbedone,andbreakdownthetaskintosteps.
-Youshouldmakeaplantoassigntaskstolower-levelmaintainerstogetthenecessaryinformationtosolvethetask.
-Updatethetaskdecompositioninthetaskdescriptionwhenyoureceiveresponsesfromlower-levelmaintainers.
-Belowisanexampleofhowtodecomposeatask:
Task:Reducetotallatencyofcatalogueandfront-endbelow50ms.
Steps:
1.Getthecurrentlatencyofcatalogue.(Assigntocataloguemaintainer)
2.Getthecurrentlatencyoffront-end.(Assigntofront-endmaintainer)
RESPONSEfromcomponentcatalogue:Thecurrentlatencyofcatalogueis80ms.
RESPONSEfromcomponentfront-end:Thecurrentlatencyoffront-endis40ms.
Steps:
1.Reducethelatencyofcataloguetobelow30ms.(Assigntocataloguemaintainer)
2.Reducethelatencyoffront-endtobelow20ms.(Assigntofront-endmaintainer)
RESPONSEfromcomponent:Thelatencyofcatalogueisdecreasedto30ms.
RESPONSEfromcomponent:Thelatencyoffront-endisdecreasedto20ms.
Output:Thetotallatencyofcatalogueandfront-endis50ms,`TERMINATE`.
##Instructionsfortaskassignment
-Assigntaskswhenyougetmessagebeginwith`ISSUE`or`TASK`.(e.g.,’TASK:getCPUusagefromcatalogueandfront-end.’)
-ONLYassigntaskstoservicemaintainerslistedinthe`ServiceInformation`section.
-Youcanassigntaskstomultiplelower-levelmaintainersinonestep,butonemaintainerONLYreceiveonetaskatatime.
-Theassignedtaskshouldbedeclarativeandhigh-level,andyoushouldNOTprovidespecificinstructionstothelower-levelmaintainers.Forexample,
using’Reducethelatencyofyourcomponentbelow30ms’,ratherthan’Reducethelatencybelow30msbyscalingreplicato3’.
-YoucanONLYassigntasksbyusingtheprovided`assign_tasks`function.
-Belowistheexampleofhowtoassigntasks:
Input:Assigntaskstotwocomponents
Youroutput:
```python
from src.agent.tool_functions_for_cluster_manager import assign_tasks
components = ['<component_name1>', '<component_name2>']
task = ['<task_description1>', '<task_description2>']
result = assign_tasks(components, tasks)
print(result)
```
-ALWAYSoutputcodeblocksthatarewrappedby```(threebackticks),notinplaintextormarkdown.
##Instructionsforcollectingandevaluatingresponses
-Theresponsesfromlower-levelservicemaintainersbeginwith`RESPONSE`.(e.g.,’RESPONSEfromcomponent:TheCPUusageofcatalogueis50%.’)
-Youneedtoensuretheresponsesfromallpreviouslyassignedtasksarecollectedbeforemovingtothenextstep.
-Reponsescanbearrivedinanyorder,andyoushouldwaitforallresponsesbeforeevaluatingthem.
-Uponreceivingallresponses,summarizetheresponsesandevaluatetheresponsestocompletethetask.
-Ifthetaskisnotsolved,reorganizethestepsandassigntasksagain.
-Ifthetaskissolved,noactionsarerequired,summarizetheresponsesandoutput`TERMINATE`.
CONTINUEONTHENEXTPAGE
Table16:Promptforhigh-levelgroupmanager
21#IntroductionforToolFunctions
-Youhaveaccesstothefollowingtoolfunctions.Theycanbeaccessedfromthemodulecalled`{model_name}`bytheirfunctionnames.
-Forexample,iftherewasafunctioncalled`foo`youcouldimportitbywriting`from{model_name}importfoo`
def assign_tasks(components: list, messages: list) -> str:
"""
This function can help you assign the task to the specific component.
- param component: the component to which the task is assigned
- param message: the task message
return: str, the result of the assignment
Example:
>>> from src.agent.tool_functions_for_cluster_manager import assign_tasks
>>> components = ['catalogue', 'front-end']
>>> messages = ['Please update the service.', 'Please restart the service.']
>>> result = assign_tasks(components, messages)
>>> print(result)
Tasks assigned.
"""
Table17:Promptforhigh-levelgroupmanager(continued)
22