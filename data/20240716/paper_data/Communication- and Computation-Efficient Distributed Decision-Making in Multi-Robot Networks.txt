Communication- and Computation-Efficient Distributed
Decision-Making in Multi-Robot Networks
Zirui Xu,†,⋆ Sandilya Sai Garimella,‡,⋆ Vasileios Tzoumas†
Abstract—We provide a distributed coordination paradigm
that enables scalable and near-optimal joint motion planning
among multiple robots. Our coordination paradigm is in con-
trast to the current paradigms that are either near-optimal
but impractical for replanning times or real-time but offer no
near-optimality guarantees. We are motivated by the future of
collaborativemobileautonomywheredistributedteamsofrobots
willbecoordinatingviavehicle-to-vehicle(v2v)communicationto
execute information-heavy tasks such as mapping, surveillance,
andtargettracking.Toenablerapiddistributedcoordination,we
need to curtail the explosion of information-sharing across the
network,thus,weneedtolimithowmuchtherobotscoordinate.
(a)Thedronesstartfromtheirinitialdeploymentpoints.
However, limiting coordination can lead to suboptimal joint
plans, causing non-coordinating robots to execute overlapping
trajectories, instead of complementary. In this paper, we make
theoretical and algorithmic contributions to characterize and
balance this trade-off between decision speed and optimality.
To this end, we introduce tools for distributed submodular
optimization. Submodularity is a diminishing returns property
typically arising in information-gathering tasks such as the
aforementioned ones. On the theoretical side, we provide an
analysis of how the network topology at the local level —
eachrobot’slocalcoordinationneighborhood—affectsthenear-
optimalityofcoordinationatthegloballevel.Onthealgorithmic
side, we provide a communication- and computation-efficient
coordination algorithm that enables the agents to individually (b)Progressafter3replanningsteps.
balance the trade-off. Our algorithm is up to two orders faster
than competitive near-optimal algorithms. In simulations of
surveillance tasks with up to 45 robots, the algorithm enables
real-time planning at the order of 1 Hz with superior coverage
performance.Toenablethesimulations,weprovideahigh-fidelity
simulator that extends AirSim by integrating a collaborative
autonomy pipeline and simulating v2v communication delays.
IndexTerms—Multi-RobotNetworks;Vehicle-to-VehicleCom-
munication; Submodular Optimization; Approximation Algo-
rithms; Active Information Gathering
(c)Progressafter8replanningsteps.
I. INTRODUCTION Fig.1:Scenario of Collaborative Road Detection and Coverage with 45
Aerial Robots.Thedronesaredeployedinanunknownurbanenvironment
and tasked to collaboratively detect the roads and visually cover them.
In the future, distributed teams of robots will be coor-
Particularly, the drones aim to collectively maximize the total covered road
dinating via robot-to-robot communication to execute tasks areaintheirtop-viewfieldofview(FOV).Ateachmotion-planningstep,each
such as collaborative mapping [1], surveillance [2], and target dronechoosesafewothersdronestocoordinatewith,subjecttoitsonboard
communicationandcomputationbandwidthconstraints.Thefullcollaborative
tracking [3] (Fig. 1). To this end, the robots will be adapting
autonomypipelineisdepictedinFig.2.(a)–(c)depictthetaskprogressacross
the information flow in the team to enable rapid and optimal time: (a) The drones start from their initial deployment points; (b) Progress
decision-making (Fig. 2). Specifically, subject to their compu- after3replanningsteps;(c)Thedroneshaveachievedmaximalroadcoverage.
tation and communication bandwidth constraints, the robots
will be choosing what information to receive and from who
⋆Equalcontribution. such that they can jointly plan actions in real-time, ensuring
†Department of Aerospace Engineering, University of Michigan, Ann that their planned actions complement each other, instead of
Arbor,MI48109USA;{ziruixu,vtzoumas}@umich.edu
duplicating each other.
‡Department of Robotics, University of Michigan, Ann Arbor, MI 48109
USA;garimell@umich.edu However, these capabilities of efficiency and effectiveness
4202
luJ
51
]OR.sc[
1v28301.7042:viXraFig. 2: Pipeline of Collaborative Mobile Autonomy. The robots sequentially perform in a distributed manner: (a) Network Self-Configuration: Given the
observedenvironmentandstateoftherobots,therobotsdecidewithwhichotherrobotstocommunicatewith,subjecttotheironboardbandwidthconstraints;
and(b)ActionCoordination:Therobotsjointlyplanactions—howtomoveandsensetheenvironment—uponcoordinatingovertheestablishedcommunication
network. (c) Action Execution: The robots execute their selected actions and perceive the environment. In this paper, our focus is on Action Coordination.
Particularly,wepresentacommunication-andcomputation-efficientdistributedalgorithmthatisuptotwoordersfasterthanthestate-of-the-artnear-optimal
algorithms.Wealsoprovideananalysisofhowthenetworktopologyattherobotlevel—neighborhoodofeachrobot—affectsthenear-optimalityofcoordi-
nation.Theanalysisoffersinsightsintohowtherobotsmayconfigurethenetworktobalance(tune)thetrade-offbetweendecisionspeedandnear-optimality.
are currently challenging to achieve. The current literature with larger neighborhoods, we prove that the decision time
on distributed coordination via vehicle-to-vehicle (v2v) com- increases faster than the action overlap decreases. Therefore,
munication imposes a trade-off between decision speed and beyond a degree of centralization, the cost of sacrificing real-
optimality. On the one hand, algorithms that minimize the time performance will be higher than the gain in the actions.
action overlap among robots may not be real-time since they On the algorithmic side, we present a communication- and
canrequireanexplosionofinformationsharingandprocessing computation-efficient distributed coordination algorithm that
acrosstherobotnetwork:processingandtransmittinginforma- can be both real-time and near-optimal (Section IV). The
tion cannot happen instantaneously —in the context of multi- algorithmisuptotwoordersfasterthanthecompetitivestate-
robottaskssuchasmapping,surveillance,andtargettracking, of-the-art near-optimal algorithms (Section VI). In simulated
real-time may indicate a replanning frequency at the order scenarios of map exploration with up to 45 robots, where
of 1Hz. On the other hand, heuristic approaches can be real- we also simulate v2v communication delays (Section VII),
time but cannot guarantee minimal action overlap since they the algorithm achieves replanning frequencies at the order
achieverapiddecision-makingbyheuristicallylimitingtheco- of 1Hz with superior performance. The algorithm’s decision
ordinationamongafew,possiblyrandomlychosen,robots.We timescaleslinearlywiththenumberofrobots,andsublinearly
need algorithms that can balance the trade-off by enabling the when parallelization is possible. For example, parallelization
robots to choose what information to receive and from who. ispossibleinspatiallydistributedsettingswhererobotsarefar
Contributions. We show that it is possible to balance the enough from one another and have little action overlap.
trade-off of decision speed and near-optimality. Particularly, The algorithm’s approximation guarantee captures the intu-
we provide a rigorous coordination approach that enables ition that when a robot chooses not to coordinate with some
robots to self-configure their communication neighborhood otherrobotsbutendsupchoosinganactionthatoverlapswith
(thesetofrobotstocoordinatewith)totunethetrade-off,that these non-neighbors, then the achievable global optimality
is, prioritize decision speed over near-optimality, as needed. degrades. Specifically, we prove that the suboptimality degra-
To this end, we make theoretical and algorithmic contribu- dation is proportional to the overlap. To enable our analysis,
tions as follows, introducing tools for distributed submodular we quantify the suboptimality cost as a function of the action
optimization. Submodularity is a diminishing returns property overlapbetweenarobotandits(non-)neighbors.Weintroduce
typically arising in information gathering tasks such as the tothisendamutual-information-likequantityoversetsthatwe
aforementionedones;weintroduceitrigorouslyinSectionIII. term Centralization of Information.
On the theoretical side, we provide an analysis of how Thealgorithmisbuiltonaresource-awaredistributedcoor-
the network topology at the local level —neighborhood of dination framework introduced in Section III. The framework
each robot— affects the near-optimality of coordination at is resource-aware in that it requires each robot to coordinate
the global level (Section V). The characterization quantifies actionswithitsneighborsonly,receivingandprocessinginfor-
the intuition that the more centralized the coordination (with mationonlyabouttheminsteadofmorerobotsinthenetwork.
larger neighborhoods), the slower the decision speed but the As such, the framework is communication- and computation-
smaller the action overlap. It thus offers insights into how efficient, curbing the explosion of information passing and
the robots can configure their network to balance the trade- processing in the network, thus, keeping low the delays due
off of decision speed and near-optimality. Importantly, we to limited computation and v2v communication speeds.
identify the existence of an inflection point that corresponds Simulator. To demonstrate the efficiency and effectiveness
to the degree of centralization that optimizes the trade-off: of our coordination algorithm, we integrate it in a simulatedFig.3:Simulator pipeline.Weprovideahigh-fidelitysimulatorthatextendsAirSim[4]tothemulti-robotsettingbyintegratingtheautonomypipelineof
Fig.2andsimulatingv2vcommunicationdelaysamongothercommunicationconstraints.Theillustratedpipelineiscustomizedfortheactioncoordination
algorithmprovidedherein.Thepipelinecanbemodifiedtootheralgorithmsasdesired.Thecodewillbeopensourcedviaalinkinthispaper.
state-of-the-art pipeline for active information-gathering with paragraphs,wecomparewithourpreliminarywork[5]and[6].
multiple robots (Fig. 3). To this end, we provide a high- Then, in Section II, we present background on distributed
fidelity simulator that extends AirSim [4] to the multi-robot coordination and related work. In Section III, we define the
setting, simulating v2v communication delays. Although the problem of Resource-Aware Distributed Coordination. Then,
“vanilla” AirSim provides a simulation framework with a we present our algorithm in Section IV. The theoretical
physics engine, flight controller, inertial sensors, and vision- analysis of the algorithm’s approximation guarantees and
based sensors, it provides no native support for multi-robot decisiontimearepresentedinSectionsVandVI,respectively.
coordination that involves task orchestration and simulates Section VII presents the simulator and the evaluation. Proofs
no v2v communication delays. To enable such support, we not presented in the main text are presented in the appendix.
develop appropriate frameworks and APIs. We will open- Comparison with Preliminary Work [5] and [6]. This
source the code upon the acceptance of the paper. paper extends our preliminary work [5] to include new the-
Evaluation. We tested the algorithm in the simulator over ory, the AirSim simulator implementation, the evaluations
scenarios of collaborative mapping for road coverage with on the simulator, and proofs of all claims. Particularly, this
15 and 45 robots (Fig. 1), respectively. Our algorithm yields paper provides novel performance guarantees, including an
practical advantages. In the case of 15 robots, the algorithm a posteriori bound with network-design implications, and an
achieves both superior road area coverage and real-time plan- extension of the a priori bound in [5] to functions that are
ning, at the order of 1 Hz, being one to two times faster not submodular. Also, this paper bounds the decision time of
than the competitive state-of-the-art algorithms. In the case the algorithm, characterizing for the first time its communi-
of 45 robots, the robots are deployed into three spatially cation and computation complexity as a function of the size
separated teams each of 15 robots so parallelized decision- of the network and the times to perform computations and
making is made possible. The algorithm demonstrates its v2v communications. This paper introduces the AirSim-based
ability to automatically scale with the decision time growing simulator and the evaluations on the simulator. Instead, [5]
sublinearly.Inmoredetail,itmaintainssuperiorroadcoverage employed MATLAB simulations only without simulating v2v
andachievessimilarplanningtimeasinthecaseof15robots, communication delays. All proofs were omitted in [5], and
beingatmost2timesslower.Incontrast,thecompetitivestate here are presented for all original and new results.
of the art is now 15 times slower. We also compare this paper with the pre-print that is
Organization of the Remaining Paper. In the following under review for conference publication [6]. First of all, [6]introduces a different problem formulation from the one a) Near-optimalcoordinationalgorithms: Althoughcur-
in eq. (1), requiring the communication-network topology rent approximation paradigms for the submodular maximiza-
to be co-optimized with the robots’ actions. The solution tion problem in eq. (1) [16]–[18] enable the robots to near-
provided therein requires sensors/robots at fixed locations, optimallyminimizetheiractionoverlap[1]–[3],[7]–[14],they
instead of mobile sensors/robots, which are the focus herein. may not be real-time. The reason is that their communication
Finally, the results in [6] hold in probability and are based on and computation complexities are superlinear in the number
regret optimization that requires quadratic time to converge, of robots, particularly, quadratic or cubic (we will elaborate
whereas the results herein are deterministic and are based on on this later). Instead, we provide an algorithm with linear
discrete optimization that requires linear time to converge. communication and computation complexity.
Quadratic or higher communication and/or computation
II. BACKGROUNDANDRELATEDWORK complexity can become prohibitive in large-scale networks
We first present background on distributed coordination, due to real-world communication and computation delays.
and explain that distributed coordination can be hard since it To illustrate the point, we give a toy example upon noting
oftentakestheformofsubmodularset-functionmaximization, that communication delays are introduced by the limited
which is NP-hard. Then, we discuss the state of the art. v2v communication speeds. For example, state-of-the-art v2v
communication speeds range from less than 1Mbit/sec up
A. Background on Distributed Coordination to 125MBytes/sec [19]. Computational delays are caused by
the time required to perform function evaluation. This time
Distributed coordination via v2v communication is chal-
depends on the processing required by the task at hand, e.g.,
lenginginmulti-robottaskssuchasmapping,surveillance,and
imagesegmentationforthesaidtaskofroadcoverage(Fig1).
targettracking,modeledassubmodular set-functionoptimiza-
Assume now that the total delay per communication and
tionproblems[1]–[3],[7]–[14],whichareNP-hard[15],[16].
computation is on average 1msec. Then, for cubic decision-
Submodularity is a diminishing returns property, capturing
time complexity and 100 robots (|N|= 100), the total time
the intuition that when the same information is collected by
delay is at the order 1003 · 1msec ≃ 17min. This is three
two or more robots, its value to the task cannot be double-
orders higher than the desired ≃1Hz planning frequency.
counted. Thereby, submodular multi-robot tasks are difficult
The quadratic or higher complexity of [16]–[18] over v2v
to efficiently solve even in centralized settings. Rigorously,
networks is due to their coordination protocols: they instruct
submodular multi-robot tasks take the optimization form:
the robots to retain and relay information about all or most
max f({a i} i∈N ), (1) other robots in the network. Particularly, [16], [17] require
ai∈Vi,∀i∈N
iterativedecision-makingviaconsensuswhereateachiteration
where N is the set of robots, a is robot i’s action, {a }
i i i∈N eachrobotneedstoretainandtransmitestimatesofallrobots’
is the ordered set of all robots’ actions, V i is robot i’s set actions [16], [17]. [18] requires sequential decision-making
of available actions, and f:2(cid:81) i∈NVi (cid:55)→ R is the objective
where all currently finalized actions need to be relayed to all
function that captures the (submodular) task utility.
robots in the network that have not finalized actions yet.
Forexample,inroadcoveragewithmultipledrones(Fig.1),
In more detail, the multi-robot coordination algorithm
N isthesetofdrones,V isthesetofavailabletrajectoriesthe
i in [20], inspired by [16]–[18], achieves the best possible
drone i can choose from, and f is the total road area covered
approximationboundforthemaximizationproblemineq.(1),
bythedrones’collectivefieldofviewbythetimetheiractions
namely, 1−1/e. However, it may require tenths of minutes to
have been executed. This f can be shown to be submodular.
terminate in simulated tasks of 10 robots even with no simu-
Intuitively, if two drones observe the same road area upon
lated communication delays [5]. The reason is that it requires
executing their actions, then either of the drones is redundant
a near-cubic number of iterations in the number of robots to
in the presence of the other. Therefore, to maximize the total
converge (Table I). Similarly, for the Sequential Greedy (SG)
covered road area, the drones need to minimize their action
algorithm [18], also known as Coordinate Descent, which is
overlap via coordination.
thegoldstandardinroboticsandcontrolforthemaximization
Within the collaborative autonomy pipeline in Fig. 2, the
problemineq.(1)[1]–[3],[7]–[14],althoughitsacrificessome
optimizationproblemineq.(1)modelstheactioncoordination
approximationperformancetoenablefasterdecisionspeed—
stage, that is, the stage where robots jointly plan actions over
achieving the bound 1/2 instead of the bound 1−1/e— still
a look-ahead horizon of optimization. Then, upon making
requires inter-robot messages that carry information about all
the joint plans, each robot individually executes its action in
the robots and, in the worst case, a quadratic number of com-
a receding-horizon fashion till its action is updated via the
municationroundsoverdirectednetworks[21,Proposition2],
subsequent coordination stage.
resulting in the communication complexity being cubic in the
number of robots [6, Appendix II].
B. Related Work b) Real-time coordination algorithms: To achieve real-
We discuss the related work across four dimensions: (i) timeplanning,state-of-the-artcoordinationalgorithmsemploy
near-optimal but not necessarily real-time coordination algo- approaches that do not account for the submodular structure
rithms;(ii)rapidbutnotnecessarilynear-optimalcoordination of the multi-robot task at hand. Thus, although fast, these
algorithms;(iii)worksonthetrade-offbetweendecisionspeed approaches provide no guarantee that the agents’ joint actions
and optimality; and (iv) communication simulators. will have minimal overlap. For example, in the context ofcollaborative exploration, the robots coordinate actions to by the distance and line-of-sight conditions between them.
move to the closest frontiers using shared map information [37] simulates realistic propagation models and scheduling
in [22]. [23]–[26] use an auction-based mechanism for task functions for mobile radio-frequency (RF) communications
allocation among robots. In particular, the auction is also and shows they can degrade task performance.
leveraged for high-probability communication maintenance In our future work, we will integrate in the AirSim sim-
in[25].In[27],robotsareassignedtodifferentfrontiersbased ulator such simulation capabilities to enable the testing of
onpotentialfunctionsfordistributedmappingandexploration. communication-aware and -efficient algorithms for distributed
The robots set periodic meeting destinations in [28] to meet submodular coordination.
and coordinate actions during distributed exploration. [29]
introduces a pair-wise coordination protocol where all pairs III. RESOURCE-AWAREDISTRIBUTEDCOORDINATION
of neighboring robots sequentially coordinate trajectories to
We define the problem of Resource-Aware Distributed Co-
optimize their exploration task allocation. A similar pair-wise
ordination (Problem 1) with regard to the action coordination
coordination protocol is proposed in [30] where each robot
module in Fig. 2. To this end, we use the notation:
coordinates trajectories with the neighbor that it has longest
not communicated with to minimize their overall trajectories. • E is the set of communication channels among the robots;
Additionally, the said approaches are application-specific, • V N
≜(cid:81)
i∈N V i is the cross-product of sets {V i} i∈N;
e.g., exploration for the case of [28], [30], whereas, our • f(a|A)≜f(A∪{a})−f(A) is the marginal gain due to
theoretical and algorithmic results are general-purpose. adding a to A, given a set function f :2V (cid:55)→R.
c) Characterization of the trade-off between decision We also lay down the following framework for the robot-to-
speedandoptimality: Toenablerapiddistributedcoordination robot communication network and the objective function that
atscale,weneedtocurtailtheinformationexplosioninmulti- captures the multi-robot task at hand.
robot networks, thereby, need to limit what and how much Communication Neighborhood. At the beginning of each
informationcantravelacrossthenetwork.However,theimpact planning step (Fig. 2), given the observed environment and
ofimposingsuchinformationlimitationsissuboptimalactions. state of the robots, the robots decide with which others to
Current works have captured the suboptimality cost due establish communication, subject to their onboard bandwidth
to such information access for the case of the Sequential constraints. Specifically, we assume that each robot i can
Greedy algorithm [12], [31], [32]. However, the provided receive information from up to α other robots due to on-
i
characterizations are task-agnostic, considering the worst-case board bandwidth constraints. Thus, it must be |N | ≤ α . In
i i
over all possible submodular functions and action sets. SectionV,weprovidetheoreticalcharacterizationsthatinform
In contrast, in this paper, the suboptimality cost is captured how the robots may select their neighbors to optimize the
asadirectfunctionoftheactionoverlapoverthetaskobjective coordination performance. In our simulations over a scenario
f at hand and the robots’ chosen actions. Even if all robots of road coverage, the robots select their neighbors based on
plan in isolation, the guaranteed performance can still match physical proximity, as justified by the results in Section V.
the near-optimal 1/2, if the robots’ chosen actions do not Whenacommunicationchannelisestablishedfromrobotj
overlap, instead of being inversely proportional to the number to robot i, i.e., (j → i) ∈ E, then robot i can receive, store,
of agents that would be the case for [12], [31], [32]. and process information from robot j. The set of all robots
Also, to our knowledge, our characterizations are the first that robot i receives information from is denoted by N . We
i
to quantify the suboptimality cost as a function of each refer to N as robot i’s neighborhood.
i
agent’s local communication network of agents. The practical Communication Network. The resulting communication
implication is that the characterizations can be used to enable network can be directed and even disconnected. When the
therobotstoselecttheircommunicationneighborhoodstotune network is fully connected (all robots receive information
the trade-off of decision speed and near-optimality, subject to from all others), we call it fully centralized. In contrast,
their communication bandwidth constraints. when the network is fully disconnected (all robots receive no
d) Communication simulators for multi-robot applica- information from other robots), we call it fully decentralized.
tions: In information-heavy collaborative tasks such as map- We assume communication to be synchronous.
ping, surveillance, and target tracking, capturing how v2v Communication Data Rate. All communication channels
communicationdelayscancompromisetheefficiencyofmulti- (j →i)∈E have finite data rate, i.e., communication speed.
robot decision-making becomes important. Therefore, in this Inthesimulations,weassumethedatarateis10MBytes/sec,in
paper, given our focus on communication-efficient distributed accordance with typical v2v communication speeds [38]. Due
decision-making, we indeed integrate in the AirSim pipeline to the finite data rate, the decision time of action coordination
v2v communication delays (Fig. 3). depends on both (i) the number of communication rounds and
For completeness, we next discuss papers that provide (ii) the size of transmitted messages it requires for the robots
higher-fidelitysimulationsofwirelesscommunication,includ- to find a joint plan. Without loss of generality, we assume all
ing packet losses and occlusions. Particularly, [33] simulates communicationchannelshavethesamedatarateinthispaper.
the communication delay and demonstrates its influence in Objective Function. The robots coordinate their actions
consensus-based applications. [34]–[36] simulate the commu- to maximize an objective function. In active information
nication channels and protocols and demonstrate how the gatheringtasks,suchasareacoverage,targettracking,andper-
communication delay between two robots will be impacted sistentmonitoring,typicalobjectivefunctionsarethecoveringfunctions [20], [39], [40]. These functions capture how much Algorithm1:Resource-Aware distributed Greedy (RAG).
area/information is observed given the actions of all robots. Input: robot i’s actions V ; neighborhood N ;
i i
They satisfy the properties below (Definitions 1 and 2). non-decreasing set function f :2VN (cid:55)→R;
Output: robot i’s action aRAG.
Definition 1 (Normalized and Non-Decreasing Submodular i
Set Function [18]). A set function f :2V (cid:55)→R is normalized 1: I i ←∅; A i ←∅; aR iAG ←∅; //I i is the robots
and non-decreasing submodular if and only if in N that have selected their actions; A stores I ’s
i i i
• f(∅)=0; selected actions; aR iAG is robot i’s selected action
• f(A)≤f(B), for any A⊆B ⊆V; 2: while aR iAG =∅ do
• f(s|A)≥f(s|B), for any A⊆B ⊆V and s∈V. 3: a i ←argmax a∈Vi f(A i∪{a})−f(A i);
4: g i ←f(A i∪{a i})−f(A i);
Normalization (f(∅)=0) holds without loss of generality.
In contrast, monotonicity and submodularity are intrinsic to
5: receive {g j} j∈Ni\Ii;
the function. Intuitively, if f(A) captures the area covered 6: if i=argmax j∈Ni∪{i}\Ii g j then
by a set A of activated cameras, then the more sensors are
7: aR iAG ←a i; // i has the best action candidate across
N ∪{i}\I and it selects this action candidate
activated (A⊆B), the more area is covered (f(A)≤f(B)); i i
8: broadcast aRAG to out-neighbors; // out-neighbors
this is the non-decreasing property. Also, the marginal gain i
can be different from N
of covered area caused by activating a camera s drops i
9: else
(f(s|A)≥f(s|B))whenmorecamerasarealreadyactivated
(A⊆B); this is the submodularity property. 10: denote as S inew ⊆N i\I i the set of neighbor(s)
that just selected action(s) in this iteration; // Snew
i
Definition 2 (2nd-order Submodular Set Function [41], [42]). may be empty as we explain in Section IV-A
f :2V (cid:55)→R is 2nd-order submodular if and only if 11: receive aRAG from each robot j ∈Snew;
j i
12: I i ←I i∪S inew;
f(s)−f(s|A)≥f(s|B)−f(s|A, B), (2) 13: A i ←A i∪{aR jAG} j∈Snew;
i
for any disjoint A⊆V and B ⊆V (A∩B =∅) and s∈V. 14: end if
15: end while
The 2nd-order submodularity is another intrinsic property 16: return aRAG.
i
to the function. Intuitively, if f(A) captures the area covered
by a set A of cameras, then marginal gain of the marginal
gains drops when more cameras are already activated.
the achievable value in a fully centralized network where all
Problem 1 (Resource-Aware Distributed Coordination). Each robots coordinate with each other and jointly select actions.
robot i ∈ N independently selects an action a , using only Similarly, consider a scenario where the robots are identical
i
information from and about its neighbors N , such that the mobile cameras that start from the same location and have
i
robotactions{a } jointlysolvetheoptimizationproblem1 the same options to move around, and where f is the union
i i∈N
of the area covered by the robots’ FOVs. Then, in the fully
max f({a } ). (3)
i i∈N decentralized setting, all robots may end up looking at the
ai∈Vi,∀i∈N
same area, due to the lack of any coordination. Thus, f will
Problem1isresource-awareinthatitrequireseachrobotto
be equal to the area covered by one robot since all robots’
coordinate actions with its neighbors only, receiving informa-
views overlap. In contrast, in the fully centralized setting, the
tion only about them instead of more robots in the network.
robots can coordinate to avoid overlapping their FOVs, thus
The reason is to curtail the explosion of information passing
maximizing the total covered area f.
acrossthenetworkand,thus,toenablerapiddecision-making.
In this paper, we provide an analysis of how the network
This is in contrast to standard distributed methods that allow
topology at the local level —each robot’s neighborhood N —
i
information about the whole network to travel to all other
affects the near-optimality of coordination at the global level.
robots via information passing, i.e., multi-hop communica-
The analysis applies over the spectrum from fully decentral-
tion[21],[39],[43].Multi-hopcommunicationdoesnotreduce
ized to fully centralized networks, offering insights into how
theamountofinformationflowinginthenetworkcomparedto
the robots may tune the sparsity of the network to balance the
centralized methods, introducing impractical communication
trade-off between decision speed and near-optimality.
delays, as we will demonstrate in the simulations.
Along with the theoretical characterizations above, we also
Intheresource-awareframeworkofProblem1,thenetwork provide a communication-efficient distributed algorithm that
configuration affects the achievable maximal value of f in 3 requires only a few coordination rounds and exchanging short
since the network configuration decides what information messages among the robots, per the limited information-
becomes available to each of the robots. For example, in a sharing setting of Problem 1, and that is up to two to three
fully decentralized network where all robots select actions orders faster than the state-of-the-art near-optimal algorithms.
in isolation, the achievable value of f will be lower than The algorithm is presented next.
1IntheAppendix,weextendourframeworkbeyond2nd-ordersubmodular IV. RESOURCE-AWAREDISTRIBUTEDGREEDY(RAG)
functions, and present results for functions that are merely submodular or
ALGORITHM
approximatelysubmodular.RAG:Terminatesin2τ f|Vi|+τc + τ
#
SG:5τ f|Vi|+10τc
(a)The1stiterationofRAG (b) Each agent i simulta- (c) Thus, agents 2 and 4 (d)The2nditerationstarts. (e)Sequentially,fromi=1
starts.Eachagentisimulta- neously receives gj from gettoselectactions.Agents Given the received actions, to 5, agent i receives {a1,
neouslyfindsitsactioncan- eachneighborj∈Ni.This 1, 3, 5 simultaneously re- agents 1, 3, 5 simultane- ...,ai−1}, in τc(i − 1)
didate ai with the largest takesτ #.Then,itcompares ceivetheactionsselectedby ously select actions. This time,thenselectsai,which
marginal gain gi from all gi with them. We assume their neighbors. This takes requires τ f|Vi|. Then all takesτ f|Vi|time,andthen
available actions Vi. The g2 =max(g1,g2,g3)and τc. The 1st iteration ends. agents have selected ac- transmits {a1,...,ai} to
operationtakesτ f|Vi|. g4=max(g3,g4,g5). Only1,3,5continue. tions,andRAGterminates. agenti+1.
RAG:Terminatesin2τ f|Vi|+τc + τ
#
SG:5τ f|Vi|+17τc
(f)The1stiterationofRAG (g) Each agent i (h)Thus,agent2getstose- (i) The 2nd iteration starts. (j) From i = 1 to 5, agent
starts.Eachagentisimulta- simultaneously receives lect an action. Agents 1, 3, Given the received action, i receives {a1,...,ai−1},
neouslyfindsitsactioncan- gj from each neighbor 4, 5 simultaneously receive agents 1, 3, 4, 5 simulta- possibly via ri relay nodes
didate ai with the largest j ∈ Ni. This takes τ #. the action selected by their neouslyselectactions.This (takes τc(ri + 1)(i −
marginal gain gi from all Then, it compares gi with neighbor.Thistakesτc.The requires τ f|Vi|. Then all 1)), then selects ai (takes
available actions Vi. The them. We assume g2 = 1stiterationends.Only1,3, agents have selected ac- τ f|Vi|),andthentransmits
operationtakesτ f|Vi|. max(g1,g2,g3,g4,g5). 4,5continue. tions,andRAGterminates. {a1,...,ai}toagenti+1.
Fig.4:RAG vs. Sequential Greedy (SG) [18].Thetwoalgorithmsarecomparedintheirexecutionstepsandinthetimetheyneedtoterminatewhenthey
arerunbyfiveagentsintwoscenarioswiththecommunicationnetworksbeing:(i)anundirectedlinegraphand(ii)anundirectedstargraph,respectively.In
thefigure,nodes1to5aretheagents1to5;blacklinesareundirectedcommunicationlinks;{ai,gi}denotesagenti’snewlyupdatedactioncandidateai
withmarginalgaingi;{ai}and{gi}alongsideredarrowsaretheactionsandmarginalgainvaluesbeingtransmittedbetweentwoagents;thetransparent
nodes are the agents that have selected their actions and thus already ended running RAG; and the transparent edges are the communication channels that
havebecome“disappeared”sinceatleastoneendofthemhasfinishedRAG.TheimplementationofRAG((a)–(d)and(f)–(i))resultsinwayshorterdecision
timethanSG((e)and(j))inbothscenarioswiththelineandstargraphs,respectively.
We present the Resource-Aware distributed Greedy (RAG) of all j ∈N i\I
i
(line 5).
algorithm. Examples of how the algorithm works are given in • robot i compares g i with all g j’s (line 6).
Fig.4.Therein,wealsocompareRAGtotheSequentialGreedy • If g i > g j,∀j ∈ N i \ I i, then robot i selects a i, i.e.,
algorithm (SG) [18]. SG is the “gold standard” in submodular aR iAG ← a i, broadcast aR iAG, and RAG terminates onboard
maximization. SG is presented in (Section IV-B). robot i (lines 6–8 and 2, respectively).
• Otherwise, robot i passes (line 9), and receives the actions
selected at this iteration by its neighbors with the highest
A. The Resource-Aware distributed Greedy (RAG) Algorithm
marginalgainamongtheirrespectiveneighbors,ifany(line
The pseudo-code of RAG, as it is used onboard an robot i,
11) —the set of these neighbors is denoted as Snew (line
is presented in Algorithm 1. The purpose of each iteration of i
10). Particularly, Snew may be empty if no neighbor can
RAG, namely, of each “while loop” (lines 2–15), is to enable i
select an action per their onboard iteration of RAG.
robotitodecidewhethertoselectanactionoveritsneighbors
at this iteration or to pass because a neighbor has an action Remark 1 (Directed, Possibly Disconnected Communication
with a higher marginal gain. If passing, then the robot must Topology). RAG is valid for directed and even disconnected
wait for a future iteration to select an action. In more detail, communication topologies. For example, RAG can be applied
at each “while loop”: to a robot i that is completely disconnected from the network.
• robot i finds an action a i with the highest marginal gain
g given the actions selected by neighbors I ⊆ N so far
i i i B. Comparison to the Sequential Greedy algorithm (SG)
(lines 3–4).
• robot i receives the respective highest marginal gain g j of RAG is compared with SG [18] in Fig. 4. We rigorously
all neighbors j that have not selected an action yet, namely, present SG next, and provide a qualitative comparison with
hparG
eniL
hparG
ratSRAG. Rigorous comparisons in terms of runtime and approxi- A. Centralization of Information
mation performance are postponed to Sections V and VI. We introduce the notion of centralization of information
SG instructs the robots to sequentially select actions such (coin). In Section V-B, we use the notion to quantify the
that the i-th robot in the sequence selects suboptimality cost due to decentralization. Particularly, coin
measures how the agents’ actions overlap due to the agents
aSG ∈ max f(a|{aSG,...,aSG }); (4) notcoordinatingwiththeirnon-neighbors.Wealsorelatecoin
i 1 i−1
a∈Vi
to the classical notion of total curvature [44] and to pair-wise
consistency [39] (Remarks 2 and 3), and show that coin is a
i.e., aSG maximizes the marginal gain over the actions that
i less conservative measure of action overlap.
havebeenselectedbythei−1previousrobotsinthesequence.
We use the following notation and definition:
Incontrast,RAGenablestherobotstoselectactionsinparallel,
and even if not all their neighbors have selected an action. • N ic ≜N \{N i∪{i}} is the set of robot i’s non-neighbors,
i.e., the robots beyond i’s neighborhood (see Fig. 5(b)).
Theaboveaction-selectionfeaturesofRAG—parallelization
and action selection before all neighbors have chosen an • The total curvature [44] of a function f:2VN (cid:55)→ R that is
non-decreasing and submodular, and that, without loss of
action— can speed up the algorithm’s termination, as we
generality, f(a) ̸= 0, for any agent’s action a, i.e., for any
rigorously present in Section VI. Also, they enable RAG
(cid:83)
a∈ V , is defined as:
to work on arbitrary communication topologies, a fact that i∈N i
can further contribute to faster runtimes. For example, SG f(A)−f(A\{a})
r se eq leu ci tr ie os na seqli un ee ncp ea .th Ifc so un cn hec atin pg athall dor eo sbo nt os t i en xisth te (sea ecti so tn ar- κ f ≜1− Am ∈i Vn N am ∈in A f(a) . (5)
graphexampleinFig.4),thei-throbotintheaction-selection κ f measures how the action a of an agent can overlap with
sequence cannot necessarily communicate directly with the theactionsofallotheragentsintheworstcase.Particularly,
(i + 1)-th robot. Then, SG requires extra communication κ f ∈[0,1], and if κ f =0, then f(A)−f(A\{a})=f(a),
rounds for message relaying, further delaying its termination. for all a∈A, i.e., the action a of an agent does not overlap
Specifically, given the limited communication speed of robot- with the actions of any other agents. In contrast, if κ f =1,
to-robot communication channels [38], the termination of SG then there exists a∈A such that f(A)=f(A\{a}), i.e.,
isdelayedduetoboththeincreasednumberofcommunication the agent with the action a has no contribution to f(A) in
rounds, and the communication delay incurred from relaying the presence of all other agents.
the actions of multiple robots —the robots in the sequence Definition3(Centralizationofinformation). Considerafunc-
that have chosen an action so far— across the network. tion f : 2VN (cid:55)→ R and a communication network {N i}
i∈N
where each agent i ∈ N has an selected an action a . Then,
i
agent i’s centralization of information is defined as
V. APPROXIMATIONGUARANTEES:
CENTRALIZATIONVS.DECENTRALIZATIONPERSPECTIVE
coin f,i(N i)≜f(a i)−f(a i|{a j}
j∈N
ic). (6)
coin measures how much the action a of the agent i
f,i i
We present the a priori and posteriori suboptimality bounds can be substituted from the actions {a j} j∈Nc of its non-
ofRAG(Theorems1and2).Theybothcapturethesuboptimal- neighbors. In the best case where a cannot bei substituted at
i
itycostduetodecentralization,thatis,duetoeachagentcoor- all, i.e., f(a i|{a j} j∈Nc) = f(a i), then indeed coin
f,i
= 0.
dinating only with a few agents —its neighbors— and receiv- In the worst case insteai d where a is fully substituted, i.e.,
i
ing information only about them, in favor of decision speed. f(a i|{a j} j∈Nc)=0, then indeed coin
f,i
=f(a i).
The two bounds are useful as follows: The a priori bound Fromaninfoi rmation-theoreticperspective,coin measures
f,i
enables each agent to design its neighborhood to minimize how much the information collected by a overlaps with the
i
its local suboptimality cost subject to its communication- information collected by {a j} j∈Nc. Rigorously, if f is an
bandwidth constraints. The a posteriori bound results in two entropy metric, then coin is mutui al information [45]. Thus,
f,i
practical observations: first, decentralized coordination can in this context, coin = 0 if and only if the information
f,i
marginally be as near-optimal as centralized coordination collected by a is decentralized from (independent of) the
i
(Remark 7); second, larger neighborhoods do not necessarily information collected by {a j} j∈Nc. In this sense, coin
f
cap-
result in better coordination performance when we account tures the decentralization of informi ation across the network.
for both the decision time and the suboptimality of the
Remark 2 (Relation to Total Curvature [44]). coin is a less
algorithm (Remark 8). We validate and leverage the above f
conservative measure of action overlap compared to κ . κ
in the experimental results of Section VII. f f
measures the overlap of an agent’s action with the actions
In the following paragraphs, we first introduce the novel
of all other agents, whereas coin measures the overlap of
notionofCentralizationofInformationtoquantifytheapriori f
an agent’s action with the actions of its non-neighbors only.
suboptimality bound (Section V-A). Then, we present first the
Particularly, we prove that, for all i∈N, coin /f(a )≤κ
a priori bound of RAG that involves the proposed novel notion f,i i f
(seeProposition1,whichispresentedlateroninthissection).
(SectionV-B)andsecondtheaposterioribound(SectionV-C).
Finally,wecomparetheaprioriboundwiththeaprioribounds Remark 3 (Relation to Pairwise Redundancy [39]). coin
f
in the state of the art (Section V-D). generalizes the notion of pairwise redundancy to capture the(a) Setup. The robots are tasked to maximize (b)Robot1’snon-neighborsN 1c,coin f,1(N1), (c) Computable upper bound of coin f,i as a
the area covered among the available square and worst-case coin f,1. The non-neighbors functionofroboti’scommunicationrange.rs
area by picking locations to stay at. Each robot Nc = {3,5} are the robots that robot 1 does istherobots’sensingradius(Example1).
1
(dot)hasafieldofview(circle),andestablished notcommunicaterange,e.g.,becauseoflimited
communicationchannelswithitsneighbors(red bandwidth or because they are outside its com-
arrows).Forexample,forrobot1,itsneighbors munication range (dashed circle). coin f,1(N1)
are the robots in N1 = {2,4}, thus its non- is depicted by the dark gray area, and its upper
neighborsarethoseinNc={3,5}. boundthelightgrayringarea(Example1).
1
Fig.5:Multi-RobotNetworkforAreaCoverage.(a)Ascenariowith5robots,theircommunicationnetwork,andalimitedsquareareathattherobotsare
taskedtocover;(b)Illustrationofrobot1’snon-neighborsN 1c,coin f,1(N1),andworst-casecoin
f,1
coin f,1(N1);(c)Computableupperboundofcoin
f,i
asafunctionofroboti’scommunicationrangepertheanalysisinExample1.
actionoverlapamongmultipleagentsinsteadofapair.Specifi- neighborhoodN bypickingacommunicationranger .Then,
i i
cally,givenanytwoagentsiandj,theirpair-wiseconsistency coin is equal to the overlap of the FOVs of robot i and its
f,i
is defined as w ≜ max max [f(s ) − non-neighbors. Since the number of robot i’s non-neighbors
ij si∈Vi sj∈Vj,j∈Ni i
f(s |s )]. In contrast, coin captures the action overlap may be unknown, an upper bound to coin is the gray ring
i j f,i f,i
between an agent i and its non-neighbors, capturing that way areainFig.5(b),obtainedassuminganinfiniteamountofnon-
the decentralization of information across the network. neighbors around robot i, located just outside the boundary
of i’s communication range. Specifically,
By measuring how much agent i’s action overlaps with
the actions of its non-neighbors, coin f,i equivalently captures coin f,i ≤max(0, π[r s2−(r i−r s)2]). (8)
agent i’s suboptimality cost due to not coordinating with its
non-neighbors. We thus expect that the more neighbors agent Theupperboundineq.(8)asafunctionofthecommunication
i has the smaller is coin f,i. Indeed, the following result holds: range r i is plotted in Fig. 5(c). As expected, it tends to zero
forincreasingr .Particularly,whenthedistanceofagentifor
i
Proposition 1 (Monotonicity). For any i∈N, coin (N ) is
f,i i its nearest non-neighbor is larger than 2r , then the FOVs of
s
non-increasing in N . Its least and maximum values, attained
i agentianditsnon-neighborscannotoverlap,thuscoin =0.
f,i
for N =N \{i} and N =∅, respectively, are as follows:
i i
0=coin (N \{i})≤coin (N )≤ coin (∅)=κ f(a ) .
f,i f,i i f,i f i
(cid:124) (cid:123)(cid:122) (cid:125) (cid:124) (cid:123)(cid:122) (cid:125) B. A Priori Suboptimality Bound ofRAG
full centralization full decentralization
(7)
We present the a priori suboptimality bound of RAG. The
bound has theoretical and practical value. On the theoretical
The sum of all {coin f,i} i∈N will be used in the next side, it captures the suboptimality cost due to decentralization
section to characterize the global suboptimality cost due to as a function of the overlap of each robot i’s action with the
decentralization. Given this characterization, we may want to actions of its non-neighbors, i.e., the robots that robot i does
enable the agents to pick their neighborhoods to minimize not coordinate with, as captured by coin . On the practical
f,i
coin subject to their communication-bandwidth constraints. side,byboundingcoin withacomputableboundasafunction
f
But observe that coin f can be uncomputable a priori since, oftheagents’neighborhoods,weenabletheagentstooptimize
in distributed settings, agent i will not have access a priori to their neighborhoods to maximize the suboptimality bound of
the actions of its non-neighbors, and may not even know who RAGsubjecttotheircommunication-bandwidthconstraints.An
areitsnon-neighborssinceitmaynotknowhowmanyagents example of such an upper bound was given in Example 1.
exist in the network beyond its neighbors. Notwithstanding, We focus the presentation on non-decreasing and doubly
finding a computable upper bound for coin f,i may be easy, as submodular functions, for sake of simplicity. In Appendix I
we demonstrate in the following example. (Theorem 4), we generalize the results to functions that are
Example 1 (Computable Upper Bound: Example of Area non-decreasingandsubmodularorapproximatelysubmodular.
Coverage). Consider an area coverage task where each robot We use the following notation:
carriesacamerawithacircularfield-of-view(FOV)ofradius • AOPT ∈ arg max ai∈Vi,∀i∈N f({a i} i∈N ), i.e., AOPT is
r (Fig. 5(a)). Consider that each robot i has fixed its an optimal solution to Problem 1;
sTrade-offofDecisionTimeandSuboptimalityGuarantee CommunicationNetwork
Method
Topology
DecisionTime:Computation DecisionTime:Communication SuboptimalityGuarantee
Robeyetal.[20] Ω(τf|N|2.5/ϵ) Ω(τ#|VN||N|2.5/ϵ) (1−1/e)OPT−ϵ connected,undirected
RezazadehandKia[46] Ω(τf|N|2diam(G)/ϵ) Ω(τ#|VN||N|2diam(G)/ϵ) (1−1/e−ϵ)OPT connected,undirected
Duetal.[47] ∼Θ(τf|N|2) ∼Θ(τc|N|2) (1/2−ϵ)OPT connected,undirected
Liuetal.[43] O(τf|Vi||N|2) O((τc+τ#)|N|2diam(G)) 1/2OPT connected,directed
O(τc|N|2) connected,undirected
Kondaetal.[21] τf|Vi||N| 1/2OPT
O(τc|N|3) stronglyconnected,directed
O(τf|Vi|/ϵ), O(τc/ϵ2),
CorahandMichael[39] 1/2(OPT−ϵ) complete
≤τf|Vi||N| ≤ 21τc(|N|−1)2
GharesifardandSmith[31] ≤τf|Vi||N| O(τc|N|2) ηOPT, η∈(cid:104) |N|−ω(1 Ginfo)+2,χ( |G Nin |fo)(cid:105)
possiblydisconnected,directed
(cid:104) (cid:105)
Grimsmanetal.[32] ≤τf|Vi||N| O(τc|N|2) ψOPT, ψ∈ α⋆(Gi1 nfo)+1, α⋆(G1
info)
1/2(cid:2)OPT−(cid:80) i∈Ncoinf,i(Ni)(cid:3),
RAG(thispaper) ≤τf maxi∈N(|Vi||Ni|) ≤(τc+τ#)(|N|−1)
ξOPT,
ξ∈(cid:104)1−κf,1(cid:105) possiblydisconnected,directed
2−κf 2
TABLEI:RAG vs. State-of-the-Art Distributed Submodular Maximization Algorithms.Thestateoftheartisdividedintoalgorithmsthatoptimize
(i)inthecontinuousdomain,employingacontinuousrepresentationoff [48],and(ii)inthediscretedomain.Foreachalgorithm,wepresentitsdecision
time,splitintocomputationandcommunicationtimes,andsuboptimalityguarantee.Wealsospecifythecommunicationnetworktopologythatisrequired
byeachalgorithm.Thebestperformancesforeachmetricarecoloredinblue.Weassumeforsimplicitythat|V|=|V |,∀i,j∈N.
i j
• ARAG ≜{aR iAG} i∈N is RAG’s output for robots N. measureshowtheagents’actionsoverlapduetonotcoordi-
nating with all others. Specifically, as the network becomes
Theorem1(APrioriSuboptimalityBound). Givenacommu-
less and less centralized (the agents have less neighbors),
nication topology {N i} i∈N, RAG guarantees:
then suboptimality bound in eq. (9) deteriorates since, for
(cid:34) (cid:35) all i∈N, coin (N ) increases when the neighborhood N
1 (cid:88) f,i i i
f(ARAG) ≥
2
f(AOPT)− coin f,i(N i) . (9) becomes smaller (Proposition 1).
i∈N Remark 5 (Decision time). Across any network topology,
Theorem 1 captures the intuition that when the agents RAG runs up to two orders faster than the state of the art,
coordinate with fewer other agents (more decentralization), as we elaborate in Section VI and summarize in Table I.
then the approximation performance will deteriorate. This • If G is fully decentralized (all agents isolated), then the
intuitionismaderigorousbyapplyingProposition1ineq.(9) approximation bound in eq. (9) becomes:
along the spectrum of increasing decentralization from fully
(cid:34) (cid:35)
centralized to fully decentralized networks: 1 (cid:88)
f(ARAG) ≥ f(AOPT)− coin (∅) (11)
• If G is fully centralized (all agents communicate with all), 2 f,i
i∈N
then the approximation bound in eq. (9) becomes: (cid:20) (cid:21)
1−κ 1
∈ f, f(AOPT). (12)
f(ARAG) ≥ 1 f(AOPT), (10) 2−κ f 2
2
Equation (11) captures the intuition that when the agents’
i.e., RAG is near-optimal, matching the approximation
actionsdonotoverlap,thennocommunicationstillleadsto
ratio 1/2 of the seminal SG algorithm [18]. The bound
near-optimal performance. For example, per the area cover-
1/2 is near-optimal since the best possible bound for the
age Example 1, when the agents are sufficiently far away
optimization problem in (3) is 1−1/e≃0.63 [16].
suchthat theirfield ofviewscannot overlapuponexecuting
Equation(10)isderivedfromeq.(9)sinceforfullycentral-
theiractions,thencoin (∅)=0foralli∈N.Particularly,
f,i
ized networks N =N \{i} and coin (N \{i})=0, for
i f,i then the bound in eq. (11) becomes 1/2, matching the fully
all i∈N (Proposition 1).
centralized performance.
Remark4(Decisiontime). Forfullcentralization,RAGwill In the worst case, the bound in eq. (9) takes the value
be the slowest among all possible communication-network (1−κ )/(2−κ ), and becomes zero when the actions of
f f
topologies, with an O(|N|) decision time. The reason is all agents fully overlap with each other (κ = 1). This is
f
that the agents will be choosing actions sequentially (no inevitable since all agents ignore all others and thus cannot
parallelizationispossible).Still,RAGwillbeasfastorfaster coordinate actions to reduce the overlap.
than the state of the art, as we elaborate on in Section VI. Equation (11) is derived from eq. (9) since for fully decen-
• If G is in between fully centralized and fully decentralized, tralization networks N i =∅, for all i∈N. Equation (12) is
then the approximation bound in eq. (9) captures as is the derived from eq. (11) by substituting the worst-case bound
cost of decentralization. It does so through coin , which forcoin (∅),thatis,coin (∅)≤κ f(a )(Proposition1).
f f,i f,i f i
suounitnoC
etercsiDRemark 6 (Decision time). RAG runs in O(τ f|V i|) time in
this case since the agents simply need to choose their best
available action without coordinating with any agent. RAG
takes the same decision time as the state of the art since all
methods just require one time of myopic action selection.
The tightness of the bound in Theorem 1 will be analyzed
(a)fullydecentralized (b)partiallydecentralized (c)fullycentralized
in our future work.
[31] 1/4 [1/4,1/2] 1/2
[32] 1/4 [1/4,1/3] 1/2
C. A Posteriori Suboptimality Bound ofRAG RAG 1/2 1/2 1/2
Fig.6:Comparison of Suboptimality Guarantees of [31], [32] and RAG:
We present the a posteriori approximation bound of RAG,
ExampleofAreaCoverage.Wemakethecomparisonoveranareacoverage
i.e., the bound that is computable after all robots have se- task with multiple drones, as in Fig. 5(a), where the drones need to each
lected actions (Theorem 2). We also prove that the bound is select a short trajectory to maximize the total covered area at the next time
step. The stars are the drones’ positions, the circles are the their field-of-
non-decreasing and submodular as a function of the agents’
views (FOVs), and the red lines denote undirected communication links.
neighborhoods (Proposition 2). The best performances for each metric are colored in blue. (a) The drones
arefullydecentralized(nointer-agentcommunication).Theboundsby[31],
The practical implications of Proposition 2 are dual: First,
[32] are both 1/4. For |N| agents, instead of 4, the bounds would be
relatively smaller neighborhoods can marginally achieve the O(1/|N|).However,sincethedronesarefarenoughfortheirFOVtooverlap,
same performance as large neighborhoods; equivalently, de- coin f,i=0,∀i,andthusRAGcanguarantee1/2.(b)Thedronesarepartially
decentralizedsuchthatonlythephysicallyclosedronescommunicate.Forthis
centralized coordination can marginally be as near-optimal as
communicationgraph,whichweassumetobethesameastheinformation-
centralized coordination (Remark 7). Second, larger neigh- action access graph, ω = 2, χ = 2, and α⋆ = 3. Therefore, [31] gives
borhoods do not necessarily result in better coordination [1/4,1/2]and[32]gives[1/4,1/3].RAGstillgives1/2sincenon-neighbors
arefarawayforalldrones.(c)Inthefullycentralizedcase,allmethodsgive
performance when we account for both the decision time and
1/2.Inall,RAGmayprovidetighterboundsthan[31],[32]sinceitconsiders
the suboptimality of the algorithm (Remark 8). We validate theactualfunctionf usingcoin
f
but[31],[32]areagnostictof.
the above in the experimental results of Section VII.
To state the first theorem, we recall the notation:
size of neighborhood, there is not much more to gain. There-
• I i is robot i’s neighbors that select actions prior to i during
fore, decentralized coordination can marginally be as near-
the execution of RAG.
optimal as centralized coordination.
Theorem 2 (A Posteriori Suboptimality Bound). Given the
actions {aR iAG} i∈N selected by the agents, RAG guarantees2 R De em cisa ir ok
n
8 Tim(L ea )r .ge Wr hN ee nig wh ebo arh co coo ud ns tD fois rpr to hp eor it mio pn aa cl tly thI am tp ta hc et
f(ARAG) ≥ f(AOPT) − (cid:88) f(aRAG|ARAG). (13) sizeoftheneighborhoodscanhavetothetrade-offofdecision
i Ii
timewithoptimality,largerneighborhoodsarenotnecessarily
i∈N
better. Intuitively, larger neighborhoods will lead to better
Theorem2capturesthesuboptimalitycostduetodecentral- performance in terms of maximizing the global objective f.
ization,similarlytoTheorem1.ButincontrasttoTheorem1, But this may come at the cost of disproportionally more
Theorem 2 captures the decentralization cost as a function of time spent for coordination. The reason is that the gain in
theactionoverlapbetweenagentianditsneighbors,insteadof the suboptimality guarantee diminishes as the neighborhoods
its non-neighbors. As such, Theorem 2 captures the intuition become larger, per Proposition 2, i.e., it is sublinear with the
that the larger agent i’s neighborhood is, then the better the size of the neighborhoods. But the decision time may increase
suboptimality guarantee can be since then agent i would linearly for RAG and superlinearly for the state of the art
have the chance to coordinate actions with more agents. This (SectionVI).Therefore,thebenefitofthemarginalincreasein
intuition is made rigorous with the following theorem. the suboptimality guarantee may be negatively outweighed by
a large increase in the decision time of the algorithm.
Proposition 2 (Approximate Submodularity of A Posteriori
Bound). f(AOPT) − (cid:80) i∈N f(aR iAG|AR IiAG) is non-decrea- We validate both remarks in the experimental results of
sing and approximate submodular as a function of {I i} i∈N. Section VII over a scenario of road coverage (Fig. 8).
The proposition implies that although the approximation
performance will indeed improve if the agents have more D. Comparison to the State of the Art
neighbors, the marginal improvement diminishes. This ob- We summarize the approximation guarantees of the state
servation has the interwoven practical implications remarked of the art and of RAG in Table I. Therein, we observe the
below. trade-off of decision time and optimality: the algorithms with
thebestsuboptimalityguarantees—firstsixrowsofthetable,
Remark 7 (Smaller Neighborhoods Can Be Enough). Since
achieving the near-optimal 1/2 or 1−1/e [16]— can exhibit
making the neighborhoods larger has a diminishing returns
also the worst decision times, one to two orders higher than
effectinthesuboptimalityperformance,beyondalargeenough
that of RAG. We discuss the algorithms’ decision times in
more detail in Section VI. Among the remaining algorithms
2Theorem 2 holds true for f non-decreasing and submodular and not
necessarily2nd-ordersubmodular. —three last rows of the table— RAG is the only algorithmthat provides task-aware (f-based) performance guarantees, Proposition 3 (Computational Complexity). RAG requires
andthatquantifiesthesuboptimalityguaranteeasafunctionof each agent i to perform at most |V ||N | function evaluations.
i i
each agent’s local communication network of agents. Instead,
Proof: For each agent i, |A | increases by at least one
the guarantees of [31], [32] are task-agnostic and can scale i
witheach“whileloop”iterationofRAG.Ateachsuchiteration,
inverselyproportionaltothenumberofagentsevenwhenRAG
agent i needs to perform |V | function evaluations to evaluate
canstillguaranteethenear-optimal1/2,asillustratedinFig.6. i
its marginal gain of all v ∈V (lines 3–4). Since |A |≤|N |,
To discuss the suboptimality guarantees of [31], [32] in i i i
agent i will perform at most |V ||N | function evaluations.
more detail, we present their decision-making rule. Specif- i i
ically, [31], [32] use the following distributed submodular Proposition 4 (CommunicationComplexity). RAGrequiresat
maximization (DSM) rule, introduced in [31]: most |N|−1 communication rounds where a real number is
transmitted, and at most |N|−1 communication rounds where
aDSM ∈ max f(a|{aDSM} ), (14)
i j j∈Nin an action is transmitted.
a∈Vi i
where Nin ⊆ [i−1]. Equation (14) generalizes SG’s rule in Proof: The number of “while loop” iterations of RAG is
i
eq. (4) to the setting where agent i has access only to the atmost|N|−1becauseateachiterationatleastoneagentwill
actions selected by the agents in Nin ⊆ [i−1], instead of select an action. Besides, each “while loop” iteration includes
i
all agents that have selected an action before agent i. The two communication rounds: one for transmitting a marginal
information-access structure prescribed by the rule in eq. (14) gain value (line 5), and one for transmitting an action (lines
can be represented as a directed acyclic graph G , where 8 and 11). Hence, Proposition 4 holds.
info
agent i’s neighbors in G are the set Nin of agents.3 Due to
info i Theorem 3 (Decision Time of RAG). RAG terminates in at
the limited information access, the suboptimality guarantees
most (τ +τ )(|N|−1) + τ max (|V ||N |) time.
c # f i∈N i i
of[31],[32]taketheformpresentedinTableI,whereω(G )
info
isthecliquenumberofG ,χ(G )isthechromaticnumber, Proof: Theorem 3 holds from Propositions 3 and 4.
info info
and α⋆(G ) is the fractional independence number [49].
info
B. Comparison to the State of the Art
VI. DECISIONTIMEANALYSIS We summarize the decision times of the state of the art
WepresentthedecisiontimeofRAG,thatis,thetimeittakes and of RAG in Table I. RAG’s decision time scales linearly
for RAG to terminate, and provide an approximate solution to with the network’s size, namely, |N|, whereas, in the worst
Problem1.RAG’sdecisiontimescaleslinearlywiththesizeof case, the state of the art scales at least quadratically with
the network, up to two orders faster than the state-of-the-art |N|. Specifically, RAG has computational time that is linear
algorithms. We summarize the decision time of the state of in |N i|, independent of |N|, and communication time linear
the art and of RAG in Table I, where we use the notation: in |N|. The comparison is summarized in Table I. Therein,
for the sake of the comparison, we assume for simplicity
• τ f is the time required for one evaluation of f;
that |V |= |V |,∀i,j ∈ N. Also, we divide the state of
• τ c is the time for transmitting an action through a commu- i j
the art into algorithms that solve Problem 1 either indirectly
nication channel (i→j)∈E;
in the continuous domain via employing the multi-linear
• τ # is the time for transmitting a real number through a
extension[48]ofthesetfunctionf [20],[46],[47],ordirectly
communication channel (i → j) ∈ E; evidently, τ ≪ τ
# f
in the discrete domain [21], [31], [32], [39], [43]:4,5,6
and τ ≪τ .
# c
• diam(G) is the diameter of a graph G, i.e., the longest a) Computation time: RAG requires τ f|N i||V i| com-
putation time. The method in [21] requires computation
shortest path among any pair of nodes in G [50].
(cid:80)
time τ |V |= τ |V ||N| since each agent i needs
We base our analysis on the observation that the decision f i∈N i f i
to perform |V | computations and the agents perform the
time of any distributed algorithm depends on the algorithm’s: i
computations sequentially. Given a pre-specified information
• computational complexity, namely, the number of function access prescribed by directed acyclic graph (DAG) G , the
info
evaluations required till termination (ignoring addition and
methods in [31], [32] also instruct the agents to select actions
multiplications as negligible in comparison); and
sequentiallyleadingtoacomputationtimeatmostτ |V ||N|.
f i
• communication complexity, namely, the number of commu- This time excludes the time needed to find the G given an
info
nication rounds needed till termination, accounting for the
arbitrarycommunicationgraphG.Themethodin[39]enables
length of the communication messages per each round.
4The continuous-domain algorithms employ consensus-based techniques
[20],[46],oralgorithmicgametheory[47],andneedtocomputethemulti-
A. Decision Time ofRAG
linearextension’sgradientsviasampling.
Wenextfirstanalyzethecomputationalandcommunication 5The decision times of the continuous-domain algorithms depend on
additional problem-dependent parameters (such as Lipschitz constants, the
complexities of RAG and then present its decision time. diameterofthedomainsetofthemulti-linearextension,andaboundonthe
gradientofthemulti-linearextension),whichwemakeimplicitinTableIvia
3The graph G info is, in general, different from the communication graph theO,Ω,andΘnotations.
G. That is, when an agent i and an agent j do not communicate (they are 6Thecomputationalandcommunicationtimesreportedfor[47]arebased
notneighborsinthecommunicationgraphG)butagentj∈Nin,then,agent on the numerical evaluations therein since a theoretical quantification is
i
j’s action needs to be relayed to agent i via other agents in G that form a missing in [47] and appears non-trivial to derive one as a function of N,
connectedcommunicationpathinG betweenagentiandagentj. ϵ,oranyotheroftheproblemparameters.parallelized computation among agents by ignoring certain {a } —f is non-decreasing, submodular, and 2nd-order
i i∈N
edges of an initially complete G, resulting in a computation submodular [39]— and V denotes robot i’s available trajec-
i
time of O(τ |V |/ϵ) ≤ τ |V ||N|. Compared to [31], [32], tories at the current planning step. Specifically, V defines the
f i f i i
the method in [39] also provides a distributed way to find possible directions that the robot can move in, and the speed
whichedgestoignoresuchthatthesuboptimalityguaranteeis the robot can move with. We assume that every robot can
optimized, a process that requires an additional computation move in any of the 8 cardinal directions —N E S W NE SE
time of O(τ |V |2(|N|−1)). The remaining algorithms re- NW SW— relative to its body frame, for 10 m at 3 m/s.
f i
quirelongercomputationtimes,proportionalto|N|2 ormore. Withoutlossofgenerality,thedeployedrobotsareassumed
b) Communication time: RAG requires at most (τ c + tohavethesameonboardsensingandcommunicationcapabil-
τ )(|N|−1) communication time. In [31], [32], the agents ities: all robots are equipped with (i) an inertial measurement
#
needtocommunicateoverG perthepre-specifiedinformation- unit(IMU);(ii)aGPSsignalreceiver;(iii)adownward-facing
accessdirectedacyclicgraphG pertheruleineq.(14)[31, camera mounted on a gimbal that enables the camera to point
info
Remark 3.2]. In Appendix IV, we identify a worst case where to any of the 8 cardinal directions relative to the robot’s
this rule results in O(τ |N|2) communication time. This body frame; and (iv) a communication module that enables
c
happens when each agent i−1 and agent i in the decision 10 MByte/s data rate per inter-robot communication channel.
sequence do not communicate directly, thus, the information Each robot can establish a few communication channels per
of agent i − 1 needs to be relayed to agent i via other a specified communication bandwidth constraint, only with
agents that form a connected communication path between those robots that are within 100 m.
the two. The method in [21], which introduces a depth- b) Comparedalgorithms: Acrossvariousbandwidthcon-
first search (DFS) procedure to determine the best agents’ straints for the robots, we compare RAG with two competitive
ordering to run SG [18] over arbitrary (strongly) connected near-optimal algorithms: the Sequential Greedy (SG) algo-
networks (instead of just line graphs), requires a worst-case rithm [18], also known as Coordinate Descent [1], and its
communicationtimeofO(τ |N|3)fordirectednetworks,and state-of-the-artDepth-First-Searchvariant(DFS-SG)[21].Each
c
O(τ |N|2) for undirected networks [6, Appendix II]. For algorithmistestedin30trials,eachlasting2minutes.Inmore
c
some ϵ, the method in [39] may require less communication detail, the setup is as follows:
time for running the algorithm per se than other methods, We test RAG for different bandwidth constraints that vary
but an additional communication time of O(τ |V |) is needed from 0 up to 6. In each case, the same bandwidth constraint
c i
to distributively find a DAG that optimizes the algorithm’s applies to all robots. Each such version of RAG is denoted by
approximationperformance.Theremainingalgorithmsrequire RAG-knn,wherek =0,...,6.Foreachk,thecommunication
communication times proportional to |N|2 or more. network is determined by having each robot select k nearest
otherrobotsasneighborssubjecttothe100mcommunication
range. If fewer than k others are within the communication
VII. EVALUATIONINROADDETECTIONANDCOVERAGE
range, then all are selected as neighbors.
WeevaluateRAGintwoscenariosofsimulatedexperiments The SG algorithm requires the robots to be arranged on a
ofroaddetectionandcoveragetasks,oneinvolving15andthe line graph that defines the order in which the robots select
other 45 robots. In both cases, the robots operate fully as a actions per eq. (4) and enables the information relay from
distributed/mesh network. RAG achieves planning at the order robotsthathavealreadyselectedactionstotherobotcurrently
of 1Hz and has superior coverage performance against the selecting an action. To ensure the existence of a line graph in
competitive near-optimal algorithms. our simulations of SG, we randomly generate one, adjusting
To perform the evaluations, we extend AirSim [4] to the the robots’ communication ranges to infinity.
multi-robot setting, simulating v2v communication delays TheDFS-SGalgorithmenablesSGtobeappliedtonetworks
(Fig. 3). We use ROS1. Thus, the evaluations include ROS1’s thatarenotnecessarilyalinegraph,butthenetworksstillneed
inherent time delays due to the transport layer and message to be strongly connected. To this end, we construct strongly
passing overhead, as reported in Figs. 7–10. connectedgraphsbyfirstrandomlyconstructinglinegraphsas
The code of the simulator will be made available herein. for SG, then randomly adding a few undirected edges to the
Common Simulation Setup across Simulated Scenarios. linegraphs,particularly,30edgesforthe15-robotcaseand90
Wefirstdefinethetaskofroaddetectionandcoverage(Fig.1), edges for the 45-robot case. At each planning round, DFS-SG
then introduce the compared algorithms, and, finally, present randomlypicksthefirstrobottoselectanaction,andtheorder
the simulation pipeline (Fig. 3). ofallotherrobotsisdeterminedbyadistributedmethodbased
a) Road detection and coverage task: Multiple aerial on depth-first search. The resulting decision sequence may
robots with onboard cameras are deployed in an unknown involve relay robots that transmit information between robots
urban environment and tasked to detect and monitor the roads that are not directly connected and, thus, DFS-SG generally
(Fig. 1). To perform the task, given the currently visible requires longer decision times than SG.
environment, the robots jointly plan how to move per the c) Simulation pipeline: The simulation pipeline consists
collaborativeautonomypipelineinFig.2.Particularly,thetask of the following modules (Fig. 3):
takes the form of the optimization problem in eq. (1) where • Network Self-Configuration: This module applies only to
f denotes the number of road pixels captured by all robots’ RAG since only RAG enables the network to self-configure
collective FOV after they traverse their planned trajectories itself across the planning steps subject to the robots’ band-width constraints and the robots’ relative locations. Particu-
larly,asdescribedalsointheaboveparagraphforRAG-knn,
atthebeginningofeachplanningstep,eachrobotselectsits
k nearestotherrobotswithinitscommunicationrange.This
neighborhood selection scheme is justified by Example 1.
• Perception:Thisprocessisdifferentforeachalgorithmsince
each algorithm requires each robot to process information
received from different sets of robots. For RAG, the robots
need the following three operations to detect the nearby
environment and evaluate where would be best to move: (i)
At the beginning of each planning step, each robot hovers
at a constant height (30 m) and rotates its camera to take
a picture in each of the 8 cardinal directions relative to its
body frame. The captured FOV in each direction is of size
34.6×26.0m2.Then,therobotusessemanticsegmentation
todetecttheroadsegmentsineachofthe8capturedimages. Fig.7:TotalRoad-AreaCoveragevs.Time(15robots).Thetotalroadarea
coveredisnormalizedbytheresultofRAG-6nn.Thereportedtimeincludes
The resulting segmented image has size 1 MByte. (ii) Each
ROS1delays,withamaximumof1.971secondsperreplanningperiod.
robot, upon receiving segmented images and relative poses
from neighbors that have committed actions in specific
directions, stitches these images together. That way, the
robot reconstructs the collective FOV of its neighbors that
have committed an action. This reconstruction will be used
next by the robot to select in which direction to move to
cover the most new road area. To this end, (iii) the robot
stitchesits8capturedimagesrespectivelywiththeprevious
reconstruction and counts the extra road pixels that can be
covered in each of the corresponding 8 cardinal directions.
For SG and DFS-SG, the operations above are similar, with
the modification being that instead of just the neighbors’
segmented and stitched images, each robot leverages all
previous robots’ stitched images in (ii) and (iii).
• Action Coordination: This process is different for each al-
gorithm.ForRAG,giventheirneighbors’alreadycommitted
Fig. 8: Maximum Total Road-Area Coverage vs. Replanning Time (15
actions, the robots that are still deciding will first each pick robots). The total road area covered is normalized by the result of RAG-
a trajectory whose FOV gives the most amount of newly 6nn.TeamreplanningtimesincludeROS1delays,withamaximumof1.971
secondsperreplanningperiod.
coveredroadarea.Then,theywillcomparethisamountwith
one another. Those who win their neighbors will commit
to their picked trajectories and share the corresponding
drivetheaerialrobotstomoveintheselecteddirectionwith
FOV and camera pose with neighbors. Otherwise, they will
speed 3.0 m/s for 10.0 m.
receive the FOVs and camera poses selected by newly
committed robots and repeat the process above.
A. Evaluations with 15 Robots
For SG, the robots make decisions sequentially in a line
graph. Each robot, upon receiving the stitched FOVs of the We present the results for the scenario with 15 robots. To
trajectoriesselectedbyallpredecessors,willfirstchoosethe this end, we first present in more detail the simulation setup.
trajectory whose FOV offers the most newly covered area SimulationSetup.AcrosstheMonteCarlotests,therobots
based on previous robots’ selections. It will then align and aredeployedneartooneanotherinasmallareasuchasforthe
stitch this FOV with the received ones, and finally send the leftmostgroupinFig.1,suchthattheirFOVslargelyoverlap.
newly stitched FOVs to the next robot. We ran the simulations on a 32-core CPU with 2 Nvidia
The coordination process for DFS-SG is similar to SG, with RTX 4090 24GB GPUs and 128GB RAM on Ubuntu 18.04.
the difference being that DFS-SG operates over a strongly Results. The results are summarized in Figs. 7 and 8. We
connected network, given the robots’ locations, bandwidth, observethatRAGachievesreal-timeplanningandsuperiorcov-
and communication range, instead of a line graph. Thus, erage.Wealsoobservethatasmallerneighborhoodinfavorof
during DFS-SG, the i-th robot in the decision sequence may higherdecisionefficiencyresultsinonlyadiminishingimpact
needtotransmitFOVstothe(i+1)-throbotinthedecision on the coverage performance. These observations validate the
sequence via relay robots. theoretical observation in Remarks 7 and 8.
• Control: The robots simultaneously traverse the trajectories a) Coverage performance over time: In Fig. 7, we
after coordination using “simple_flight”, a flight controller present the total road area covered across time for each of
in AirSim. “simple_flight” uses cascade PID controllers to the compared algorithms. We observe that RAG-knn achievesin all but one case of k (k = 0) superior performance, one
to two orders faster. For example, RAG-1nn achieves the same
performanceatt=40secasSGandDFS-SGdoatt=140sec.
The lower final performance for k =0 is expected since then
there is no coordination. Nevertheless, for the first 10 to 20
sec, RAG-0nn achieves better coverage since no coordination
enables higher replanning frequency.
ThereasonthatthealgorithmsSGandDFS-SGunderperform
is that they require more time to terminate per planning step,
therefore, over the allocated 120 sec, the robots replan fewer
times in comparison to RAG.
b) Coverage vs. replanning time: In Fig. 8, we plot the
total road area covered by the end of the simulation period
(130 sec) vs. the average replanning time. We observe that
when the neighborhood size for RAG increases, the covered
road area increases, as the replanning time also does. This is Fig.9:TotalRoad-AreaCoveragevs.Time(45robots).Thetotalroadarea
coveredisnormalizedbytheresultofRAG-6nn.Thereportedtimeincludes
expectedsincelargerneighborhoodsimplymorecoordination,
ROS1delays,withamaximumof5.808secondsperreplanningperiod.
thus better coverage performance but slower pace.
c) Smaller neighborhoods can be enough: In Fig. 8, we
observe diminishing returns in coverage performance as the
neighborhood size increases: although the total road area cov-
ered increases significantly from k to k+1 for k =0,1,2,4,
it increases marginally for higher k. Therefore, centralizing
coordination beyond a size of neighborhoods k = 4 appears
inefficient: RAG-4nn seems to balance the trade-off of total
coverage and decision speed, enjoying both fast replanning
(3.3 sec) and high coverage rate (95%): RAG-4nn achieves
95% coverage at 1/3 of the replanning time of RAG-6nn.
The observation validates the theory that decision speed
increases proportionally with the size of the network (The-
orem 3) but the total utility sublinearly (Proposition 2).
Fig. 10: Maximum Total Road-Area Coverage vs. Replanning Time (45
robots). The total road area covered is normalized by the result of RAG-
6nn.TeamreplanningtimesincludeROS1delays,withamaximumof5.808
B. Experiments with 45 Drones
secondsperreplanningperiod.
We demonstrate the scalability of our algorithm from 15
to 45 robots. We show that RAG maintains similar decision
time and coverage as for the 15-robot setting, being at most 2 15 times increase compared to the 15-robot case, as expected
timesslower,duetoenablingparallelizeddecision-making.In due to their superlinear time complexity (Table I).
contrast, the compared algorithms now require 2 to 3 minutes
perreplanningstepinsteadof12seconds,a15timesincrease.
VIII. CONCLUSIONANDFUTUREWORK
By executing the experiments, we also demonstrate that the Summary. We provided a rigorous coordination algorithm
providedsimulatorpipelinecansupportsuchlarge-scalemulti- that enables teams of distributed mobile robots to self-
robot scenarios. configure their communication topology to achieve real-time
SimulationSetup.AcrosstheMonteCarlotests,therobots and near-optimal coordination. Our coordination paradigm is
are divided into three groups, with the robots within each incontrasttothecurrentparadigmsthatareeithernear-optimal
groupbeingdeployedneartooneanothersuchthattheirFOVs but impractical for replanning times or real-time but offer
largely overlap (Fig. 1). In such a setting, RAG automatically no near-optimality guarantees. We made theoretical and al-
enables parallelized decision-making, maintaining similar de- gorithmic contributions to characterize and balance this trade-
cisiontimeandcoverageasforthe15-robotsetting,incontrast off between decision speed and optimality. On the theoretical
to the state-of-the-art near-optimal algorithms. side, we provided an analysis of how the network topology at
We ran the simulations on a remote server with 80 CPU the robot level —each robot’s coordination neighborhood—
cores (4x 2.4 GHz Intel Xeon Gold 6148), 360GB RAM, and affects the near-optimality of the coordination at the global
4 NVIDIA Tesla V100 16GB GPU. level. On the algorithmic side, we provided a communication-
Results. The results are summarized in Figs. 9 and 10. We and computation-efficient algorithm that enables the agents
observe that RAG still maintains real-time planning and supe- to balance the trade-off. Our algorithm is up to two orders
rior coverage, with all qualitative observations from the 15- faster than competitive near-optimal algorithms. In realistic
robot setting applying also here. The near-optimal algorithms simulations of surveillance tasks with up to 45 robots, the
now require on average 2 to 3 minutes per replanning step, a algorithm enabled real-time planning at the order of 1 Hzand superior coverage performance. To enable realistic sim- Then we have,
ulations, we provided a high-fidelity simulator that extends
f(AOPT)
the AirSim simulator to integrate a collaborative autonomy
pipeline and simulate v2v communication delays. ≤f(AOPT∪ARAG) (19)
Future Work. We will enhance our results in three direc- =f(ARAG)+ (cid:88) f(aOPT|ARAG∪AOPT) (20)
tions.(i)RAGassumessynchronouscommunication.Although i [i−1]
i∈N
RAG can be trivially modified to handle such cases, e.g., (cid:88)
≤f(ARAG)+ f(aOPT|ARAG ) (21)
by instructing each robot to execute its action without first i Ni∩[i−1]
waitingforallotherrobotstoselectactions,itsnear-optimality i∈N
(cid:88)
guarantees provided in this paper may become invalid. Our ≤f(ARAG)+ f(aRAG|ARAG ) (22)
i Ni∩[i−1]
future work will extend our theoretical and algorithmic anal- i∈N
(cid:88)
ysis beyond the above limitations. (ii) We will also extend =2f(ARAG)+ f(aRAG|ARAG )
our results to handle effective task execution over long time
i Ni∩[i−1]
i∈N
horizons. For example, in collaborative mapping over long −f(aRAG|ARAG ) (23)
i [i−1]
time horizons, the team needs to stay updated on the areas
(cid:88)
=2f(ARAG)+ f(aRAG|ARAG )
that have been mapped, such that the current plans do not i Ni∩[i−1]
repeat past actions. This is in addition to the focus of this i∈N
paper that only the current plans among the robots do not −f(aRAG|ARAG ∪ARAG ) (24)
i Ni∩[i−1] [i−1]\Ni
overlap. To this end, we may need also to handle network ≤2f(ARAG)+ (cid:88) f(aRAG)−f(aRAG|ARAG ) (25)
connectivity constraints over the time horizon. (iii) Finally, i i [i−1]\Ni
i∈N
we will enhance our simulator by integrating the simulation (cid:88)
≤2f(ARAG)+ f(aRAG)−f(aRAG|ARAG) (26)
of realistic communication channels and protocols towards i i Nc
i
communication-aware and -efficient coordination algorithms. i∈N
(cid:88)
≤2f(ARAG)+ coin (N ), (27)
f,i i
i∈N
APPENDIXI
where eq. (19) holds from the monotonicity of f; eqs. (20)
Proof of Proposition 1: Consider robot i ∈ N and two and (23) result from telescoping the sums; eqs. (21) and (26)
disjoint robot sets B ,B ⊆N \{i}, we have hold from the submodularity of f; eq. (22) holds since
1 2
RAG selects aRAG greedily; eq. (24) holds since ARAG =
i [i−1]
coin (B ∪B )−coin (B ) ARAG ∪ ARAG ; eq. (25) holds from the 2nd-order
f,i 1 2 f,i 1 Ni∩[i−1] [i−1]\Ni
submodularity of f; and eq. (27) holds from Definition 3.
=f(a |{a } )−f(a |{a } ) (15)
i j j∈B1∪B2 i j j∈B1
Therefore, eq. (9) holds.
≤f(a |{a } )−f(a |{a } )=0, (16)
i j j∈B1 i j j∈B1 Then, in the fully centralized case where Nc =∅,∀i∈N,
i
where the inequality holds since f is submodular. Hence, (cid:88)
f(AOPT)≤f(ARAG)+ f(aRAG|ARAG ) (28)
coin (N ) is non-increasing in N . Therefore, for any i ∈ i Ni∩[i−1]
f,i i i
i∈N
N, coin f,i(N i) achieves the lower bound coin f,i(N i) ≥
≤f(ARAG)+
(cid:88)
f(aRAG|ARAG ) (29)
coin f,i(N\{i})=f(a i)−f(a i|∅)≥0.Fortheupperbound, i [i−1]
i∈N
coin (N )≤coin (∅)=f(a )−f(a |A ) (17) =2f(ARAG), (30)
f,i i f,i i i N\{i}
≤κ f(a ), (18)
f i where eq. (28) follows eq. (22), eq. (29) holds since N =
i
N \{i},∀i∈N, and eq. (30) holds by telescoping the sums.
wherethefirstinequalityholdssincecoin isnon-increasing,
f,i Thus, eq. (10) is proved.
and the second inequality holds from eq. (5).
Alternatively,wecanproveeq.(10)witheq.(27)andusing
coin (N )=f(aRAG)−f(aRAG)=0.
f,i i i i
Finally, in the fully decentralized case where Nc = N \
APPENDIXII i
{i},∀i∈N, we have
We first prove Theorem 1, and then present and prove
(cid:88) (cid:88)
the bounds of RAG when f is submodular or approximately coin f,i(N i)= f(aR iAG)−f(aR iAG|AR NA \G {i}) (31)
submodular instead of 2nd-order submodular. i∈N i∈N
(cid:88)
a) Proof of Theorem 1: We index each agent in N per ≤κ f f(aR iAG) (32)
its selecting order in RAG, i.e., agent i ∈ N ≜ {1,...,|N|} i∈N
κ
is the i-th agent to select an action during the execution of ≤ f f(ARAG), (33)
RAG. If multiple agents select actions simultaneously, then we 1−κ f
index them randomly. We use also the notation:
whereeq.(32)holdsfromeq.(5),andeq.(33)holdsfrom[51,
• AR XAG ≜{aR iAG} i∈X for any X ⊆N, i.e., AR XAG is the set Lemma 2.1]. Combining eqs. (27) and (33), the lower bound
of actions selected by the agents in X. in eq. (12) can be proved.b) Suboptimality Bounds of RAG for Submodular or where eq. (39) follows eq. (22); eq. (40) holds by telescoping
Approximately Submodular f: We present the bounds in the sums; and eq. (41) holds from eq. (5):
Theorem 4. To this end, we use the following definition.
f(aRAG|ARAG ) f(aRAG|ARAG )
i N\{i} i [i−1]
Definition4(Totalcurvature[16],[17]). Considerf:2V (cid:55)→R 1−κ f ≤ f(aRAG) ≤ f(aRAG|ARAG ). (43)
is non-decreasing. Then, f’s total curvature is defined as i i Ni∩[i−1]
f({v}∪A)−f(A) When f is non-submodular, and G is fully centralized,
c ≜1−min min . (34)
f v∈VA,B⊆V\{v} f({v}∪B)−f(B) f(AOPT)
Similarlytoκ ,italsoisc ∈[0,1].Whenf issubmodular, (cid:88)
f f =f(ARAG)+ f(aOPT|ARAG∪AOPT) (44)
then c =κ . Generally, if c =0, then f is modular, while i [i−1]
f f f
i∈N
if c =1, then eq. (34) implies the assumption that f is non-
f (cid:88) 1
decreasing. In [52], any monotone f with total curvature c ≤f(ARAG)+ f(aOPT|ARAG ) (45)
f 1−c i Ni∩[i−1]
is called c f-submodular, as repeated below.7 i∈N f
(cid:88) 1
Theorem 4 (Suboptimality Bounds for Submodular or Ap- ≤f(ARAG)+ f(aRAG|ARAG ) (46)
1−c i Ni∩[i−1]
proximately Submodular Functions). ARAG enjoys the follow- i∈N f
ing approximation bounds: (cid:88) 1
=f(ARAG)+ f(aRAG|ARAG ) (47)
• if f is non-decreasing submodular and G is fully central- 1−c f i [i−1]
i∈N
ized, 2−c
1 = ff(ARAG), (48)
f(ARAG) ≥ f(AOPT); (35) 1−c
2 f
• iff isnon-decreasing submodularandG isnot fully cent- where eq. (44) follows from eq. (20), eq. (45) holds from
ralized, Definition 4, eq. (46) holds since RAG selects aRAG greedily,
1−κ i
f(ARAG) ≥ f f(AOPT); (36) eq. (47) holds since N i = N \{i}, and eq. (48) holds by
2−κ f telescoping the sums.
• if f is non-decreasing and G is fully centralized, When f is non-submodular, and G is not fully centralized,
1−c
f(ARAG) ≥ f f(AOPT); (37) f(AOPT)
2−c
f (cid:88) 1
≤f(ARAG)+ f(aRAG|ARAG ) (49)
• if f is non-decreasing and G is not fully centralized, 1−c i Ni∩[i−1]
f
i∈N
(1−c )2
f(ARAG) ≥
(1−c
)f 2+1f(AOPT). (38)
=
(1−c f)2+1
f(ARAG)+
(cid:88) 1
f(aRAG|ARAG )
f (1−c )2 1−c i Ni∩[i−1]
f f
c) Proof of Theorem 4: We present the proof separately i∈N
1
for each case. First, when f is submodular with G being fully − f(aRAG|ARAG ) (50)
(1−c )2 i [i−1]
centralized,RAGhasthesame1/2boundasinTheorem1that f
follows from eqs. (28) to (30). ≤ (1−c f)2+1 f(ARAG)+ (cid:88) 1 f(aRAG|ARAG )
When f is submodular, and G is not fully centralized, RAG (1−c f)2 (1−c f)2 i [i−1]
i∈N
provides the same bound as the lower bound in eq. (12):
1
− f(aRAG|ARAG ) (51)
f(AOPT) (1−c )2 i [i−1]
f
≤f(ARAG)+ (cid:88) f(aR iAG|AR NA iG ∩[i−1]) (39) ≤ (1 (− 1−c f c)2 )+
2
1 f(ARAG), (52)
i∈N f
2−κ
= ff(ARAG) (40) where eq. (49) follows eq. (46), eq. (50) holds by telescoping
1−κ
f the sums, and eq. (51) holds from Definition 4.
(cid:20) (cid:21)
(cid:88) 1
+ f(aRAG|ARAG )− f(aRAG|ARAG )
i∈N
i Ni∩[i−1] 1−κ
f
i [i−1]
APPENDIXIII
2−κ
≤ ff(ARAG) We provide the proofs regarding the a posteriori subopti-
1−κ f mality bound of RAG.
+ (cid:88) (cid:104) f(aRAG|ARAG )−f(aRAG|ARAG )(cid:105) d) Proof of Theorem 2: Since I i =N i∩[i−1], eq. (13)
i Ni∩[i−1] i Ni∩[i−1]
follows eq. (22), and thus Theorem 2 is proved. Notice that f
i∈N
(41) onlyneedstobesubmodularinsteadof2nd-ordersubmodular
2−κ for Theorem 2 to hold.
= 1−κf ff(ARAG), (42) e) Proof of Proposition 2: Let δ i(I i) ≜ f(a( iIi)|A Ii),
7Lehmannetal.[52]definedc f-submodularitybyconsideringineq.(34)
w thh ee ar ce tiA onIi sei ls ecth tee da bc ytio in ps erse Rle Ac Gt ,ed i.eb .,y gI rei ep de ilr y.R TA hG e, ra en fod rea ,( i pIi r) ovis
-
A⊆BinsteadofA⊆V.Generally,non-submodularbutmonotonefunctions
ing δ (I ) is non-increasing and approximately supermodular
havebeenreferredtoasapproximatelyorweaklysubmodular[53],[54],names i i
thathavealsobeenadoptedforthedefinitionofc f in[52],e.g.,in[55],[56]. in I i,∀i∈N, will be sufficient in proving Proposition 2.We start with the non-increasing property by proving δ is (e.g., 5 ↔ 3 ↔ 1 ↔ 2 ↔ 4 ↔ 6), which leads to
i
non-increasing. For disjoint sets B ,B ⊆ N \{i}, we have
(cid:80)|N|−1τ
×i=1/2τ |N|(|N|−1);
1 2 i=1 c c
A B1 ⊆A B1∪B2 and, thus, • for directed graphs G, e.g., when G is a one-directional
circlic graph yet the agents’ order increases in the other
δ (B )=f(a(B1)|A )≥f(a(B1∪B2)|A ) (53)
i 1 i B1 i B1 direction (Figure 11), and every agent i needs to traverse
≥f(a(B1∪B2)|A )=δ (B ∪B ), (54) all other agents to send information to i+1, which leads
i B1∪B2 i 1 2
to
(cid:80)|N|−1τ
×(|N|−2)=τ (|N|−1)(|N|−2).
where eq. (53) holds since RAG selects a( iB1) greedily given Therefori= e,1 thec worst-case commc unication time is O(τ |N|2)
A , and eq. (54) holds since A ⊆A . c
B1 B1 B1∪B2 for both undirected and directed G.
To prove the approximate supermodularity of δ , we will
i
firstproveanotherfunctionδ′ issupermodular,thenshowthat
δ (S)≤δ′(S)≤δ (S)+ϵ,∀i S ⊆N \{i} [57]. In particular, 1
i i i
let us define δ′(I ) ≜ f(a|A ), where A is the actions
i i Ii Ii 2 3 4 5
selected per RAG by I i as in the definition of δ i, but a ∈ V i
is an arbitrary fixed action. Consider robot set S ⊆ N \{i}
Fig. 11: Example of a directed communication graph with the worst-case
other than B 1,B 2, then agentorderwhereeachmessageneedstotraverse|N|−2edges.
δ′(S|B )−δ′(S|B ∪B ) (55)
i 1 i 1 2
=δ′(S∪B )−δ′(B )−δ′(S∪B ∪B )+δ′(B ∪B )
i 1 i 1 i 1 2 i 1 2 REFERENCES
(56)
=f(a|A )−f(a|A ) [1] N.Atanasov,J.LeNy,K.Daniilidis,andG.J.Pappas,“Decentralized
S∪B1 B1 active information acquisition: Theory and application to multi-robot
−f(a|A )+f(a|A ) (57) SLAM,”inIEEEInter.Conf.Rob.Auto.(ICRA),2015,pp.4775–4782.
S∪B1∪B2 B1∪B2
[2] P.Dames,P.Tokekar,andV.Kumar,“Detecting,localizing,andtracking
=f(a∪A )−f(A )−f(a∪A )+f(A )
S∪B1 S∪B1 B1 B1 anunknownnumberofmovingtargetsusingateamofmobilerobots,”
−f(a∪A )+f(A ) TheInternationalJournalofRoboticsResearch(IJRR),vol.36,no.13-
S∪B1∪B2 S∪B1∪B2 14,pp.1540–1553,2017.
+f(a∪A )−f(A ) (58) [3] M. Corah and N. Michael, “Distributed matroid-constrained submod-
B1∪B2 B1∪B2
ular maximization for multi-robot exploration: Theory and practice,”
=f(A |a∪A )−f(A |A )
S B1 S B1 AutonomousRobots(AURO),vol.43,no.2,pp.485–501,2019.
−f(A |a∪A )+f(A |A ) (59) [4] S.Shah,D.Dey,C.Lovett,andA.Kapoor,“Airsim:High-fidelityvisual
S B1∪B2 S B1∪B2 andphysicalsimulationforautonomousvehicles,”inFieldandService
≤f(A |a∪A )−f(A |A ) Robotics:Resultsofthe11thInternationalConference. Springer,2018,
S B1 S B1
pp.621–635.
−f(A |a∪A )+f(A |A )=0, (60)
S B1 S B1 [5] Z.XuandV.Tzoumas,“Resource-awaredistributedsubmodularmaxi-
mization:Aparadigmformulti-robotdecision-making,”inIEEECon-
where the inequality holds since f is 2nd-order submodular. ferenceonDecisionandControl(CDC),2022,pp.5959–5966.
Hence, δ′ is supermodular. Then, we have, [6] ——, “Performance-aware self-configurable multi-agent networks: A
i
distributed submodular approach for simultaneous coordination and
δ (S)−δ′(S)=f(a(S)|A )−f(a|A ) networkdesign,”2024.
i i i S S [7] A.Krause,A.Singh,andC.Guestrin,“Near-optimalsensorplacements
≤f(a(S))−(1−κ )f(a), (61) in gaussian processes: Theory, efficient algorithms and empirical stud-
i f
ies,”Jour.Mach.Learn.Res.(JMLR),vol.9,pp.235–284,2008.
which holds from the submodularity of f and eq. (5): [8] A. Singh, A. Krause, C. Guestrin, and W. J. Kaiser, “Efficient infor-
mativesensingusingmultiplerobots,”JournalofArtificialIntelligence
f(a|A ) f(a|A ) Research(JAIR),vol.34,pp.707–755,2009.
1−κ f ≤ f(aN )\{i} ≤ f(a)S . (62) [9] P. Tokekar, V. Isler, and A. Franchi, “Multi-target visual tracking with
aerial robots,” in IEEE/RSJ International Conference on Intelligent
Also,δ (S)−δ′(S)≥f(a(S)|A )−f(a(S)|A )=0since RobotsandSystems(IROS),2014,pp.3067–3072.
i i i S i S [10] M. Lauri, J. Pajarinen, J. Peters, and S. Frintrop, “Multi-sensor next-
RAGselectsa( iS)greedily.Allinall,δ i′(S)≤δ i(S)≤δ i′(S)+ϵ b IEes Et E-vi Re ow bop tl ia cn sn ain ng da As utm omat aro tii od n-c Lo en ts tt er ra sin (e Rd ALsu ),bm voo ld .u 5l ,ar nom .a 4x ,im ppi .za 5t 3io 2n 3, –”
holds true with
5330,2020.
[11] B.Schlotfeldt,V.Tzoumas,andG.J.Pappas,“Resilientactiveinforma-
ϵ= min max [f(a )−(1−κ )f(a )], (63)
1 f 2 tionacquisitionwithteamsofrobots,”IEEETransactionsonRobotics
a2∈Via1∈Vi
(TRO),vol.38,no.1,pp.244–261,2021.
that is, δ i is approximately supermodular. [12] B.Biggs,J.McMahon,P.Baldoni,andD.J.Stilwell,“Non-submodular
maximizationviathegreedyalgorithmandtheeffectsoflimitedinfor-
mationinmulti-agentexecution,”inIEEE/RSJInternationalConference
APPENDIXIV
onIntelligentRobotsandSystems(IROS),2022,pp.10118–10125.
We provide the proof of the communication time of the [13] O.Akcin,O.Unuvar,O.Ure,andS.P.Chinchali,“Fleetactivelearning:
A submodular maximization approach,” in 7th Annual Conference on
algorithm in [31], [32]: the worst-case communication time
RobotLearning(CoRL),2023.
of the two methods occurs when, for example, if the in- [14] X. Cai, B. Schlotfeldt, K. Khosoussi, N. Atanasov, G. J. Pappas,
formational DAG G′ is complete, i.e., each agent i requires and J. P. How, “Energy-aware, collision-free information gathering for
heterogeneousrobotteams,”IEEETrans.Robotics(TRO),2023.
information from [i−1], then
[15] U.Feige,“Athresholdofln(n)forapproximatingsetcover,”Journal
• for undirected graphs G, e.g., when agent 1 locates in the oftheACM(JACM),vol.45,no.4,pp.634–652,1998.
[16] M. Sviridenko, J. Vondrák, and J. Ward, “Optimal approximation for
center of a line graph and the rest are ordered alternately
submodular and supermodular optimization with bounded curvature,”
extending outward from the center to both ends of the line Math.ofOperationsResearch,vol.42,no.4,pp.1197–1218,2017.[17] ——, “Optimal approximation for submodular and supermodular opti- [39] M. Corah and N. Michael, “Distributed submodular maximization on
mizationwithboundedcurvature,”arXivpreprint:1311.4728,2013. partition matroids for planning on large sensor networks,” in IEEE
[18] M. L. Fisher, G. L. Nemhauser, and L. A. Wolsey, “An analysis ConferenceonDecisionandControl(CDC),2018,pp.6792–6799.
of approximations for maximizing submodular set functions–II,” in [40] A.Downie,B.Gharesifard,andS.L.Smith,“Submodularmaximization
Polyhedralcombinatorics,1978,pp.73–87. withlimitedfunctionaccess,”IEEETrans.Auto.Ctrl.(TAC),2022.
[19] Q.Wu,J.Xu,Y.Zeng,D.W.K.Ng,N.Al-Dhahir,R.Schober,andA.L. [41] Y.Crama,P.L.Hammer,andR.Holzman,“Acharacterizationofacone
Swindlehurst,“Acomprehensiveoverviewon5G-and-beyondnetworks of pseudo-boolean functions via supermodularity-type inequalities,” in
with UAVs: From communications to sensing and intelligence,” IEEE Quantitative Methoden in den Wirtschaftswissenschaften. Springer,
JournalonSelectedAreasinCommunications,vol.39,no.10,pp.2912– 1989,pp.53–55.
2945,2021. [42] S. Foldes and P. L. Hammer, “Submodularity, supermodularity, and
[20] A. Robey, A. Adibi, B. Schlotfeldt, H. Hassani, and G. J. Pappas, higher-ordermonotonicitiesofpseudo-booleanfunctions,”Mathematics
“Optimal algorithms for submodular maximization with distributed ofOperationsResearch,vol.30,no.2,pp.453–461,2005.
constraints,”inLearn.forDyn.&Cont.(L4DC),2021,pp.150–162. [43] J. Liu, L. Zhou, P. Tokekar, and R. K. Williams, “Distributed resilient
[21] R. Konda, D. Grimsman, and J. R. Marden, “Execution order matters submodularactionselectioninadversarialenvironments,”IEEERobotics
in greedy algorithms with limited information,” in American Control andAutomationLetters(RAL),vol.6,no.3,pp.5832–5839,2021.
Conference(ACC),2022,pp.1305–1310. [44] M. Conforti and G. Cornuéjols, “Submodular set functions, matroids
[22] B. Yamauchi, “Decentralized coordination for multirobot exploration,” andthegreedyalgorithm,”DiscreteAppliedMathematics,vol.7,no.3,
RoboticsandAutonomousSystems,vol.29,no.2-3,pp.111–118,1999. pp.251–274,1984.
[23] R.Zlot,A.Stentz,M.B.Dias,andS.Thayer,“Multi-robotexploration [45] T.M.CoverandJ.A.Thomas,ElementsofInformationTheory. John
controlledbyamarketeconomy,”inIEEEInternationalConferenceon Wiley&Sons,2012.
RoboticsandAutomation(ICRA),vol.3,2002,pp.3016–3023. [46] N. Rezazadeh and S. S. Kia, “Distributed strategy selection: A sub-
[24] M. Berhault, H. Huang, P. Keskinocak, S. Koenig, W. Elmaghraby,
modularsetfunctionmaximizationapproach,”Automatica,vol.153,p.
P. Griffin, and A. Kleywegt, “Robot exploration with combinatorial 111000,2023.
auctions,” in IEEE/RSJ International Conference on Intelligent Robots [47] B. Du, K. Qian, C. Claudel, and D. Sun, “Jacobi-style iteration for
andSystems(IROS),vol.2,2003,pp.1957–1962. distributedsubmodularmaximization,”IEEETransactionsonAutomatic
Control(TAC),vol.67,no.9,pp.4687–4702,2022.
[25] W. Sheng, Q. Yang, J. Tan, and N. Xi, “Distributed multi-robot coor-
[48] G. Calinescu, C. Chekuri, M. Pál, and J. Vondrák, “Maximizing a
dinationinareaexploration,”RoboticsandAutonomousSystems(RAS),
monotone submodular function subject to a matroid constraint,” SIAM
vol.54,no.12,pp.945–955,2006.
JournalonComputing,vol.40,no.6,pp.1740–1766,2011.
[26] A. J. Smith and G. A. Hollinger, “Distributed inference-based multi-
[49] C.GodsilandG.F.Royle,Algebraicgraphtheory. SpringerScience
robot exploration,” Autonomous Robots (AURO), vol. 42, no. 8, pp.
&BusinessMedia,2001,vol.207.
1651–1668,2018.
[50] M.MesbahiandM.Egerstedt,GraphTheoreticMethodsinMultiagent
[27] J.Yu,J.Tong,Y.Xu,Z.Xu,H.Dong,T.Yang,andY.Wang,“Smmr-
Networks. PrincetonUniversityPress,2010.
explore:Submap-basedmulti-robotexplorationsystemwithmulti-robot
[51] R.K.Iyer,S.Jegelka,andJ.A.Bilmes,“Curvatureandoptimalalgo-
multi-target potential field exploration method,” in IEEE International
rithmsforlearningandminimizingsubmodularfunctions,”inAdvances
ConferenceonRoboticsandAutomation(ICRA),2021,pp.8779–8785.
inNeuralInform.ProcessingSystems(NeurIPS),2013,pp.2742–2750.
[28] Y.Gao,Y.Wang,X.Zhong,T.Yang,M.Wang,Z.Xu,Y.Wang,Y.Lin,
[52] B.Lehmann,D.Lehmann,andN.Nisan,“Combinatorialauctionswith
C. Xu, and F. Gao, “Meeting-merging-mission: A multi-robot coordi-
decreasingmarginalutilities,”GamesandEconomicBehavior,vol.55,
nate framework for large-scale communication-limited exploration,” in
no.2,pp.270–296,2006.
IEEE/RSJ International Conference on Intelligent Robots and Systems
[53] A. Krause and V. Cevher, “Submodular dictionary selection for sparse
(IROS),2022,pp.13700–13707.
representation,”inInternationalConferenceonMachineLearning,2010.
[29] L.KlodtandV.Willert,“Equitableworkloadpartitioningformulti-robot
[54] E. R. Elenberg, R. Khanna, A. G. Dimakis, S. Negahban et al.,
exploration through pairwise optimization,” in IEEE/RSJ International
“Restricted strong convexity implies weak submodularity,” The Annals
Conf.IntelligentRobotsandSystems(IROS),2015,pp.2809–2816.
ofStatistics,vol.46,no.6B,pp.3539–3568,2018.
[30] B. Zhou, H. Xu, and S. Shen, “Racer: Rapid collaborative exploration
[55] L.F.ChamonandA.Ribeiro,“Near-optimalityofgreedysetselection
withadecentralizedmulti-uavsystem,”IEEETransactionsonRobotics
inthesamplingofgraphsignals,”inIEEEGlobalConferenceonSignal
(TRO),2023.
andInformationProcessing,2016,pp.1265–1269.
[31] B.GharesifardandS.L.Smith,“Distributedsubmodularmaximization [56] B. Guo, O. Karaca, T. Summers, and M. Kamgarpour, “Actuator
with limited information,” IEEE Transactions on Control of Network placement for optimizing network performance under controllability
Systems(TCNS),vol.5,no.4,pp.1635–1645,2017. constraints,”inIEEEConferenceonDecisionandControl(CDC),2019,
[32] D.Grimsman,M.S.Ali,J.P.Hespanha,andJ.R.Marden,“Theimpact pp.7140–7147.
of information in distributed submodular maximization,” IEEE Trans. [57] T. Horel and Y. Singer, “Maximization of approximately submodu-
Ctrl.Netw.Sys.(TCNS),vol.6,no.4,pp.1334–1343,2019. lar functions,” Advances in Neural Information Processing Systems
[33] F. F. Lizzio, E. Capello, and G. Guglieri, “Implementation and per- (NeurIPS),vol.29,2016.
formance evaluation of a consensus protocol for multi-uav formation
withcommunicationdelay,”inInternationalConferenceonUnmanned
AircraftSystems(ICUAS). IEEE,2022,pp.1592–1600.
[34] S. Baidya, Z. Shaikh, and M. Levorato, “FlyNetSim: An open source
synchronized UAV network simulator based on NS-3 and ArduPilot,”
inProceedingsofthe21stACMInternationalConferenceonModeling,
AnalysisandSimulationofWirelessandMobileSystems,2018,pp.37–
45.
[35] M. Calvo-Fullana, D. Mox, A. Pyattaev, J. Fink, V. Kumar, and
A. Ribeiro, “Ros-netsim: A framework for the integration of robotic
andnetworksimulators,”IEEERoboticsandAutomationLetters(RAL),
vol.6,no.2,pp.1120–1127,2021.
[36] S. Acharya, M. Bharatheesha, Y. Simmhan, and B. Amrutur, “A co-
simulation framework for communication and control in autonomous
multi-robotsystems,”inIEEE/RSJInternationalConferenceonIntelli-
gentRobotsandSystems(IROS),2023,pp.11087–11094.
[37] M.Selden,J.Zhou,F.Campos,N.Lambert,D.Drew,andK.S.Pister,
“BotNet:Asimulatorforstudyingtheeffectsofaccuratecommunication
modelsonmulti-agentandswarmcontrol,”inInternationalSymposium
onMulti-RobotandMulti-AgentSystems(MRS),2021,pp.101–109.
[38] O.S.Oubbati, M.Atiquzzaman,P.Lorenz, M.H.Tareque,and M.S.
Hossain, “Routing in flying ad hoc networks: Survey, constraints, and
futurechallengeperspectives,”IEEEAccess,pp.81057–81105,2019.