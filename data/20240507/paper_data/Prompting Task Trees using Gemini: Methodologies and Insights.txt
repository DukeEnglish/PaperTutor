Prompting Task Trees using Gemini: Methodologies
and Insights
Pallavi Tandra
Computer Science
University Of South Florida
Tampa, USA
pallavitandra@usf.edu
Abstract— Robots are the future of every technology where limitations.[5] This paper focuses on addressing how can we do
every advanced technology eventually will be used to make robots task planning in robotic cooking by introducing an innovative
which are more efficient. The major challenge today is to train the task tree generation approach. Our goal is to produce error-free
robots exactly and empathetically using knowledge and cost-effective task plans. To enhance plan accuracy, I have
representation. This paper gives you insights of how we can use employed a different method to check the correctness of task
unstructured knowledge representation and convert them to tress generated and finally used the best method to create
meaningful structured representation with the help of prompt
FOONs. Evaluation against previous methods demonstrates the
engineering which can be eventually used in the robots to make
superiority of our approach, highlighting enhanced task
help them understand how human brain can make wonders with
planning accuracy and improved cost-efficiency.
the minimal data or objects can providing to them.
II. RELATED WORKS
Keywords—Prompt, Prompt Engineering, task tree, gemini,
FOONs, LLMs, knowledge representation, functional unit, robots In their paper titled “Evaluating recipes generated from
Functional Object-Oriented Networks” in ResearchGate by
I. INTRODUCTION Sakib, Md et al., the authors explore the utilization of Functional
Object-Oriented Networks (FOON) for robotic task planning in
Prompt Engineering in recent years has gained immense
cooking scenarios. They investigate the generation of recipe-like
popularity for its problem solving and responsiveness. When
instructions from FOON task trees, aiming to evaluate the
creating a humanoid robot, the robots would need have excellent
quality of these instructions compared to text-based recipes.
problem solving and responsiveness features and this can be
Through a user study, they assess the correctness, completeness,
attained with the help of prompt engineering. Integration of this
and clarity of recipes generated from FOON task trees,
into robots will make the learning of robots more precise and
comparing them with equivalent recipes from the Recipe1M+
productive. Structured Knowledge representation can be
dataset. The study involves surveying participants on various
generated with the help of functional units which make them
aspects of the recipes, including their proficiency in cooking,
meaningful. Unstructured data can be converted to structured
perception of recipe correctness, completeness, and clarity.
and meaningful content using prompt engineering. In this paper,
Statistical tests, including Student’s t-Test and Two One-Sided
I did some trials on prompting techniques to get a best working
Tests (TOST), are conducted to analyze the differences between
prompting technique. Here, I am giving ingredients present in
FOON-generated recipes and Recipe1M+ recipes. The results
the kitchen as input to the function and trying to get recipes that
indicate no significant difference between the two types of
can be created using these ingredients.
recipes, suggesting the potential of FOON subgraphs in
To make this possible through implementation we need to accurately depicting cooking procedures. The authors also
use knowledge representation, just as humans learn from others discuss future directions for refining the recipe generation
in their environment or learn from manuals or guide to perform process and further utilizing it in evaluating task trees with
any task machine would need some kind of guide to learn from limited knowledge.[1]
this is where knowledge representation is used [1]. Here we are
The research paper "Functional Object-Oriented Network:
using FOONs as a source of knowledge representation. FOONs
mean functional object-oriented networks which are nothing but Construction & Expansion" by David Paulius, Ahmad Babaeian
Jelodar, and Yu Sun, et al., introduces the functional object-
an object-motion graph.[3][1][2] In detail theory, methodologies
oriented network (FOON) as a structured knowledge
and experiment details are provided in next sections.
representation for capturing object-motion affordances observed
The emergence of Large Language Models (LLMs) has in various activities. FOONs are learned from observations of
significantly addressed the limitations of traditional task human activities, such as instructional videos or demonstrations,
planning methods by providing the capacity to generate and consist of object nodes and motion nodes connected in a
potentially viable solutions for various scenarios.[5] While LLM bipartite, directed, acyclic graph structure. Functional units
outputs may not always be optimal, their generalization ability within FOONs represent single manipulation actions, and
offers promise in overcoming search-based task tree retrieval collections of these units describe entire activities. The paper
Identify applicable funding agency here. If none, delete this text box.
XXX-X-XXXX-XXXX-X/XX/$XX.00 ©20XX IEEEexplores methods for learning generalized FOONs from III. METHODOLOGIES
multiple video sources and investigates techniques for
For this project, we chose the Gemini language model by
expanding or abstracting FOONs to handle unknown objects or
Google, known for its advanced capabilities in understanding
unfamiliar states. Evaluation experiments compare the efficacy
and generating structured text. This model's ability to interpret
of expansion and abstraction methods, demonstrating the
complex instructions and produce detailed outputs made it an
potential of FOONs in solving manipulation problems and the
ideal choice for our exploration into generating task trees for
challenges in real-world application. This work contributes to
cooking recipes.
the field of robotic manipulation learning and lays the
foundation for future research in this area.[3] A. Prompting Approaches
We explored three distinct approaches to prompt the Gemini
model, each designed to examine how different types of input
influence the generation of task trees:
• Example-based Prompting
• User-guided Prompting
• Contextual Prompting
Let’s discuss about them in detail, about how they perform
and how does it function.
Example-based Prompting: Concept and Implementation:
Example-based Prompting involves providing the model with
several well-structured task trees that serve as models for the
Fig. 1. An Example FOON representation of macaroni recipe
desired output. These examples showcase various cooking
The research paper "Functional Object-Oriented Network methods and styles, guiding the AI in understanding and
replicating the essential elements and format of a task tree. The
for Manipulation Learning" by David Paulius et al. reviews
about the functional object-oriented network (FOON), a approach relies on the principle that high-quality examples can
train the model to recognize and produce similar structures in
structured knowledge representation for modeling manipulation
tasks. FOON captures object-state changes and human new contexts.
manipulations, enabling robots to understand task goals, identify We used a curated set of detailed task trees from diverse
objects, and generate manipulation motions. Previous
cooking scenarios to prompt the model. Each example was
neuroscience research supports FOON's approach by annotated to highlight crucial elements such as sequence of
highlighting the connection between object observation and
actions, ingredients used, and the utensils required, thus
functional motions. FOON extends prior robotics studies by
providing a comprehensive template for the model to emulate.
integrating object features, affordances, and human actions.
Recent work on object categorization and action recognition User-Guided Prompting: Concept and Implementation:
further validates FOON's effectiveness. By learning from User-guided Prompting puts the end-user in direct interaction
instructional videos, FOON demonstrates flexibility in with the model, allowing them to specify exactly what they want
generating manipulation motion sequences, illustrating its in a task tree. This approach tests the model's ability to adapt to
potential for solving complex tasks with structured varied and potentially novel instructions, making it highly
knowledge.[2] flexible and personalized.
The research paper "Approximate Task Tree Retrieval in a During our experiments, users were asked to provide
Knowledge Network for Robotic Cooking" published in IEEE specific instructions, which included preferences for cooking
Robotics and Automation Letters by Md. Sadman Sakib, David methods, ingredients, or dietary restrictions. These instructions
Paulius, and Yu Sun reviews about the challenges in flexible were then used as direct prompts for the model, challenging it to
task planning for robots, particularly in the domain of robotic align its outputs closely with user expectations.
cooking. It addresses the difficulty robots face in adapting task
Contextual Prompting: Concept and Implementation:
plans to new or unseen problems due to limited knowledge.
Contextual Prompting leverages the specific context of the
Inspired by human adaptability, the paper explores generating
cooking task—such as available ingredients and kitchen tools—
task plans using the Functional Object-Oriented Network
to generate appropriate task trees. This approach evaluates the
(FOON), a structured knowledge representation. By structuring
model's ability to integrate contextual information into its
knowledge from 140 cooking recipes into a FOON graph, the
outputs, aiming to produce realistic and executable cooking
study demonstrates how task trees can be retrieved and modified
plans based on the given conditions.
for novel scenarios. The approach leverages semantic similarity
to enrich FOON with new recipes, enabling robots to generate We simulated various cooking environments by providing
task plans with 76% correctness for previously unseen the model with different sets of available resources. The model
ingredient combinations.[4] was then prompted to generate task trees that could realistically
be executed within those constraints, testing its capacity for
contextual understanding and creativity.B. Performance Metrics The operation was carried out through the following steps:
To evaluate the effectiveness of each prompting approach, 1. Input Reading: The JSON file specifying dish
we focused on two key metrics: categories and details was read and parsed.
• Accuracy: This metric assessed how accurately the 2. Recipe Generation: For each dish, a recipe was
generated task trees followed the expected formats and generated by filling in a template with the dish's
instructions. specifics. This template could also incorporate
examples if provided.
• Completeness: This metric evaluated whether the
generated task trees were comprehensive, including all 3. Output Handling: The generated recipes were saved
necessary steps and components. in a structured JSON format, with filenames sanitized
to ensure compatibility across different file systems.
C. Comparative Analysis
The performance of each approach was recorded and B. Results
compared to understand their strengths and weaknesses. This The results of the experiments were JSON files containing
comparative analysis helped identify which methods are most the generated recipes. Each file corresponded to a specific dish,
effective under different conditions and for various user needs. and the content was structured to provide clear and detailed
cooking instructions based on the ingredients and tools listed in
TABLE I. COMPARATIVE ANALYSIS the input data. In cases where the AI model's response was not
valid JSON, the output was saved in a text format, preserving
Prompting
Approach Accuracy Completeness Reliability the generated content for further analysis.
Example-based Key Insights:
High High Consistent
Prompting
• The model demonstrated a strong ability to integrate
User-guided
Medium Low Variable multiple data points (ingredients, tools) into coherent
Prompting
and creative culinary directions.
Contextual
Low Low Inconsistent
Prompting • The use of template-based prompts allowed for
consistency in the style and structure of the generated
Fig. 2. Performance Summary of Prompting Approaches recipes, which could be beneficial for creating a recipe
book or digital application.
D. Conclusion
Our detailed examination of different prompting strategies TABLE II. EXPERIMENT RESULTS
using the Gemini model provided significant insights into the
Metric Value Notes
capabilities and limitations of AI-driven recipe generation.
Example-based Prompting proved most effective, likely due to Total number of
its reliance on structured and high-quality inputs that the model Total Recipes 34 recipes attempted
Generated based on the input
could easily interpret and replicate.
JSON file.
By focusing on each approach individually, this revised Recipes that were
Successful JSON
section provides a clearer and more detailed account of how we 27 successfully saved as
Outputs
tailored our methodologies to explore the potential of the valid JSON files.
Gemini language model for generating cooking task trees. This Outputs saved as text
approach not only demonstrates the versatility of the model but due to JSON parsing
Text Outputs (due to
also highlights the importance of prompt design in achieving errors) 7 errors, indicating
issues in model output
high-quality AI outputs.
format.
IV. EXPERIMENT
Fig. 3. Recipe Generation Results Summary
After the text edit has been completed, the paper is ready for the
template V. CONCLUSION
Our detailed examination of different prompting strategies
A. Experimental Setup
using the Gemini model provided significant insights into the
The experiment was designed to utilize the
capabilities and limitations of AI-driven recipe generation.
google.generativeai library, specifically the gemini-1.0-pro-
Example-based Prompting proved most effective, likely due to
latest model, to generate recipes based on a structured input
its reliance on structured and high-quality inputs that the model
from a JSON file. This input file contained various categories,
could easily interpret and replicate.
each with specific menu items that included details such as dish
names, ingredients, and tools required for cooking. Our By focusing on each approach individually, it provides a
RecipeGenerator class handled the process of reading this clearer and more detailed account of how we tailored our
input, generating recipe content based on predefined templates, methodologies to explore the potential of the Gemini language
and saving the results in a specified output folder. model for generating cooking task trees. This approach not only
demonstrates the versatility of the model but also highlights theimportance of prompt design in achieving high-quality AI [3] Paulius, David, Ahmad B. Jelodar, and Yu Sun. "Functional object-
outputs. oriented network: Construction & expansion." In 2018 IEEE International
Conference on Robotics and Automation (ICRA), pp. 5935-5941. IEEE,
2018. (https://ieeexplore.ieee.org/abstract/document/8460200,
REFERENCES
https://www.kavrakilab.org/2017-rss-workshop/paulius.pdf)
[4] M. S. Sakib, D. Paulius and Y. Sun, "Approximate Task Tree Retrieval in
[1] Sakib, Md & Baez, Hailey & Paulius, David & Sun, Yu. (2021). a Knowledge Network for Robotic Cooking," in IEEE Robotics and
Evaluating Recipes Generated from Functional Object-Oriented Network. Automation Letters, vol. 7, no. 4, pp. 11492-11499, Oct. 2022, doi:
J. Clerk Maxwell, A Treatise on Electricity and Magnetism, 3rd ed., vol. 10.1109/LRA.2022.3191068.keywords: {Task
2. Oxford: Clarendon, 1892, pp.68–73. analysis;Robots;Planning;Semantics;Search problems;Knowledge based
[2] D. Paulius, Y. Huang, R. Milton, W. D. Buchanan, J. Sam and Y. Sun, systems;Sun;Service robotics;task planning;planning under uncertainty},
"Functional object-oriented network for manipulation learning," 2016 [5] Sakib, Md Sadman, and Yu Sun. "From Cooking Recipes to Robot Task
IEEE/RSJ International Conference on Intelligent Robots and Systems Trees--Improving Planning Correctness and Task Efficiency by
(IROS), Daejeon, Korea (South), 2016, pp. 2655-2662, doi: Leveraging
10.1109/IROS.2016.7759413. LLMs with a Knowledge Network." arXiv preprint arXiv:2309.09181
keywords: {Videos;Merging;Robots;Mirrors;Neurons;Object oriented (2023). (https://arxiv.org/abs/2309.09181)
modeling;Visualization},.