Self-Organized Construction by Minimal Surprise
Tanja Katharina Kaiser Heiko Hamann
Institute of Computer Engineering Institute of Computer Engineering
University of Lu¨beck University of Lu¨beck
Lu¨beck, Germany Lu¨beck, Germany
kaiser@iti.uni-luebeck.de hamann@iti.uni-luebeck.de
behaviors aggregate blocks or form simple structures, such as
Abstract—Fortherobotstoachieveadesiredbehavior,wecan lines.
programthemdirectly,trainthem,orgivethemaninnatedriver Several approaches are similar to ours in terms of method-
that makes the robots themselves desire the targeted behavior.
ology, that is employing pairs of artificial neural networks
With the minimal surprise approach, we implant in our robots
(ANN). Ha and Schmidhuber [9] train world models and
the desire to make their world predictable. Here, we apply
minimal surprise to collective construction. Simulated robots controllers (both are ANNs) separately for OpenAI Gym
push blocks in a 2D torus grid world. In two variants of our scenarios. Generative Adversarial Nets (GANs) use an arms-
experiment we either allow for emergent behaviors or predefine race method to train artificial neural networks [10]. Turing
theexpectedenvironmentoftherobots.Ineitherway,weevolve
learning is conceptually similar to GANs and was already
robotbehaviorsthatmoveblockstostructuretheirenvironment
applied to scenarios of swarm robotics [11].
and make it more predictable. The resulting controllers can be
applied in collective construction by robots. The contribution of this paper is that we observe emergent
Index Terms—collective construction, evolutionary swarm robot controllers showing swarm construction behaviors. In
robotics, self-organization our previous work [3], we used a 2D torus grid world with
only robots living in it. Here, we increase the complexity of
I. INTRODUCTION
theenvironmentbyaddingmovableblocks.Weneedtochange
A simple approach to implement a robot swarm for self- the sensor model, such that robots can detect other robots but
organized construction or object aggregation is to define a alsoblocksandthattheycandistinguishthem.Beforewehad
probabilistic state machine: if there are few building blocks noticedthattheemergenceofinterestingbehaviorsdependson
around,thenpickupablock;iftherearemanyblocksaround, the robot density (i.e., number of robots per area) [3], [12].
thendropyours[1].Formorecomplexconstructionbehaviors Herewehavetosettheabsoluterobotandblockdensitiesbut
we would need to implement more complex state machines, we also have to consider their ratio.
test them, fix them, iterate, etc. Here we follow a different
II. METHODS
approach. We deny the robots a defined task and instead
A. Experimental Setup
implement an innate drive to prefer boring environments. The
robotsarefreetodevelopbehaviorsthatmakesuretogenerate Inallofourexperiments,weuseasimulatedhomogeneous
those boring environments. We follow the minimal surprise robot swarm of size N living on a 2D torus grid and we
approachwhichisroughlyinspiredbyFriston[2].Inprevious distribute B blocks of building material in the environment.
work, we have applied minimal surprise to generate collective Each robot and each block occupy one grid cell. We use two
behaviors, such as aggregation, flocking, and more recently differentgridsizesLkeepingtheblockdensity( B )constant
L×L
self-assembly[3].Wemakethenextstepincomplexitybypro- while varying the swarm density ( N ).
L×L
viding the robots with building blocks in this scenario. These The robots have discrete headings: North, South, East, and
blocks can be pushed around by robots to form clusters of West. In each time step, robots can either move one grid cell
differentsizes.A‘boringenvironment’isthenanenvironment forwardorrotateonthespot.Amoveforwardisonlypossible
with areas of few blocks and areas of many blocks. Hence, if the grid cell in front is not occupied by another robot.
the robots simplify to predict whether they may see a block. A robot pushes a single block one grid cell forward per time
Thereareseveralapproachesoncollectiveconstructionwith stepiftheblock’stargetgridcellisempty.Eachrobothastwo
multiple cooperating robots that differ in their complexity. sets of binary sensors covering the six grid cells in front of it,
Some use sophisticated methods to calculate local rules for see Fig. 1, that is, a total of 12 sensors. Sensors s ,...,s
0 5
the robots offline [4]. Others use simple reactive control but (Fig. 1a) sense robots while sensors s ,...,s (Fig. 1b)
6 11
then also the construction behavior is limited to pushing and observe blocks.
aggregatingbuildingmaterials[5],[6].Similarlyforbiological We equip each robot with a pair of ANN, see Fig. 2.
systems,thereseemtobebothvariants,forexample,sophisti- The action network is implemented as a feedforward net-
catedlocalrulesinwasps[7]andblindbulldozinginants[8]. work and determines the robot’s next action A(t). It selects
Here, we allow robots only to push blocks and the emerging between straight motion and rotation and outputs a turning
©2019IEEE.Personaluseofthismaterialispermitted.PermissionfromIEEEmustbeobtainedforallotheruses,inanycurrentorfuturemedia,including
reprinting/republishingthismaterialforadvertisingorpromotionalpurposes,creatingnewcollectiveworks,forresaleorredistributiontoserversorlists,or
reuseofanycopyrightedcomponentofthisworkinotherworks.
https://doi.org/10.1109/FAS-W.2019.00057
4202
yaM
5
]OR.sc[
1v08920.5042:viXraTABLEI
PARAMETERSETTINGS.
parameter value
s s s s s s gridsidelengthL {16,20}
5 3 4 11 9 10 #ofsensorsR 12
swarmsizeN 10to50
s s s s s s
2 0 1 8 6 7 #ofblocksB {32,50,75}
populationsize 50
numberofgenerations 100
evaluationlengthintimestepsT 1000
#ofsim.runsperfitnessevaluation 10
elitism 1
mutationrate 0.1
(a)robotsensors (b)blocksensors
Fig. 1. Sensor model. The gray circle represents the robot. The arrow
indicatesitsheading.
of a genome is the minimum fitness (Eq. 1) observed in
thosetenevaluations.Fortheevolutionaryalgorithm,weusea
s0(t)
. A(t)
s0(t)
. p0(t+1)
p ano dpu alat mio un tas ti iz oe no rf at5 e0, ofpr 0o .p 1or ft oio rn bat oe thse nle ec twtio on rk, se .li Wtis em eo vaf lo un ate e,
. . . . . . . . . . all scenarios in 20 independent evolutionary runs. Table I
. T(t) . . summarizes the used parameters.
s11(t) s11(t)
p11(t+1)
A(t) B. Metrics
A(t−1)
To validate our approach, we do several post-evaluations.
(a)actionnetwork (b)predictionnetwork Forthebestevolvedindividuals,wemeasurethefitness(Eq.1)
Fig. 2. Action network and prediction network. A(t−1) is the robot’s and classify formed block structures based on predefined
last action value and A(t) is its next action. T(t) is its turning direc- metrics. We determine the runs with altered block positions
tion. s0(t),...,s11(t) are the robot’s 12 sensor values at time step t,
and assess the similarity of their block positions at the start
p0(t+1),...,p11(t+1)areitssensorpredictionsfortimestept+1.
and the end of the run as well as the movement of blocks and
robots.
direction T(t) of ±90◦. The prediction network is a recurrent The similarity of the block positions is the quantity of grid
neural network enabling robots to predict their sensor values cells that were occupied by blocks at the start and that are
of the next time step. Both networks receive the robot’s still(oragain)occupiedbyblocksattheendoftheevaluation
currentsensorvaluesasinputs.Inaddition,theactionnetwork normalized by the total number of blocks (post-evaluation of
receives the robot’s last action A(t−1) and the prediction thebestevolvedindividual).Itservesasanindicatortoassess
network its next action A(t). roughly how many blocks were moved by robots.
We evolve the ANNs in pairs using a simple genetic In addition, we measure the movement M of robots and
algorithm [13]. The genomes consist of two sets of weights blocks,respectively,overatimeperiodofτ = L×L timesteps
2
that are randomly generated for the initial population: one for as by Hamann [12]. It represents the mean covered distance.
the action network and one for the prediction network. Each We define the movement M as
swarmmemberhasaninstanceofthesamegenomeinagiven
M =M +M , (2)
evaluation and thus, we use a homogeneous swarm. x y
We reward correct sensor predictions. The prediction net- whereM andM arethemovementinx-andy-directionon
x y
work receives direct selective pressure while the action net- the grid. We define M as
x
work is solely subject to genetic drift. It receives pressure
P−1 T−1
indirectly as it is paired with a pressured prediction network. 1 (cid:88) (cid:88)
M = |x (t)−x (t+1)|, (3)
The fitness function is defined as x Pτ p p
p=0t=T−τ
1 T (cid:88)−1N (cid:88)−1R (cid:88)−1 andM y accordingly.Inthecaseofmeasuringrobotmovement,
F = 1−|pn(t)−sn(t)|, (1)
NTR r r P istheswarmsizeP =N andinthecaseofmeasuringblock
t=0 n=0 r=0 movement it is the number of blocks P =B.
where N is swarm size, R is the number of sensors per Weclassifyformedblockstructuresaspairs,lines,clusters,
robot, pn(t) is the prediction for sensor r of robot n at time or dispersion based on their highest resemblance (automated
r
step t, and sn(t) is the value of sensor r. usingPythonscripts)atthestartandtheendoftheevaluation
r
We run the evolutionary algorithm for 100 generations and of the best evolved individual. Pairs and lines are formed by
evaluate each genome in ten independent simulation runs blocks placed next to each other horizontally or vertically and
(swarm size between 10 and 50) for 1000 time steps each differ only in length. Pairs consist of two blocks while lines
using random initial robot and block positions. The fitness are at least three blocks long. Both structures can have up toTABLEII
METRICS(CF.SEC.II-B)OF20INDEPENDENTEVOLUTIONARYRUNS.MEDIANVALUESINBRACKETS.
grid median similarity<1.0 structures
robots blocks ratio size fitness qty. similarity blockmov. robotmov. lines pairs clusters disp.
0.778 0.0 0.43 start 0.0 20.0 0.0 80.0
10 32 5:16 16×16 0.91 11
(0.875) (0.0) (0.47) end 0.0 27.5 5.0 67.5
0.648 0.0 0.49 start 0.0 15.0 0.0 85.0
16 32 1:2 16×16 0.898 11
(0.781) (0.0) (0.48) end 2.5 15.0 12.5 70.0
0.418 0.0 0.38 start 0.0 7.5 0.0 92.5
32 32 1:1 16×16 0.892 14
(0.344) (0.0) (0.42) end 5.0 47.5 10.0 37.5
0.848 0.0 0.33 start 0.0 2.5 0.0 97.5
20 50 2:5 20×20 0.902 10
(0.870) (0.0) (0.42) end 0.0 7.5 0.0 92.5
0.816 0.0 0.43 start 0.0 7.5 0.0 92.5
25 50 1:2 20×20 0.903 10
(0.830) (0.0) (0.45) end 0.0 12.5 0.0 87.5
0.494 0.0 0.24 start 0.0 12.5 0.0 87.5
50 50 1:1 20×20 0.866 7
(0.420) (0.0) (0.29) end 5.0 27.5 0.0 67.5
0.780 0.0 0.20 start 5.0 50.0 0.0 45.0
25 75 1:3 20×20 0.862 6
(0.820) (0.0) (0.20) end 15.0 47.5 0.0 37.5
prediction networks. Figure 3 shows the increase of the best
1.0
fitness over generations of 20 independent evolutionary runs
using 50 robots and 50 blocks on a 20×20 grid. It is repre-
0.9
sentative for the fitness curves observed in all experiments.
0.8 We compare the quantity of runs with altered block posi-
tions, that is, with a similarity lower than 1.0. For the smaller
0.7 robot-to-block ratios, half of the runs on the larger grid and
11 runs on the smaller grid lead to the alteration of block
0.6
positions. The number rises to 14 on the smaller grid and
decreases to seven on the larger grid for a 1:1 ratio.
0.5
0 10 20 30 40 50 60 70 80 90 As expected, we find that increasing robot-to-block ratios
Generation
lead to decreasing similarities (i.e., more moved blocks).
Precisely, runs with a 1 : 1 ratio have about 40 percentage
Fig.3. Bestfitnessof20independentevolutionaryrunsonthe20×20grid
points (pp) lower similarities than smaller ratios and thus,
with50robotsand50blocks.Mediansareindicatedbytheredbars.
block positions are altered most.
For all runs, we measured no block movement during the
half of their length of neighbors on each side next to them, lastτ timesteps(i.e.,τ =128forthe16×16grid,τ =200for
wherebynotwoadjacentgridcellsparalleltothestructureare the 20×20 grid). Thus, the system converged as blocks have
allowedtobeoccupiedbyblocks.Clustersareblocksthathave fixed positions and form a stable structure. In all runs with a
at least four blocks in their Moore neighborhoods and at least similaritybelow1.0,wefindrobotmovement.Incontrast,the
three in their von Neumann neighborhood. Blocks classified robot movement is mostly zero in runs without altered block
as lines cannot be part of a cluster. Dispersed blocks have positions indicating that robots mostly turn. We infer that the
maximally one direct diagonal neighbor. prediction task is easy as high fitness values are reached in
all runs. Nevertheless, in a few runs robots move constantly
III. RESULTS without pushing any blocks or self-assemble into structures.
Thus, we find a variety of swarm behaviors emerging due to
A. Impact of the Robot-to-Block Ratio
our task-independent reward.
In the following experiments, we use a constant block We compare the formed block structures at the start and
density of 12.5% by setting either 32 blocks on a 16×16 the end of the runs to estimate how much was changed
grid or 50 blocks on a 20×20 grid. On both grids, we do by the robots. A video of resulting behaviors can be found
experiments with robot-to-block ratios of 1 : 1 (high swarm online.1 Therandominitializationofblockpositionsismostly
density) and 1 : 2 (intermediate swarm density). In addition, classified as dispersion and in less than 20% of the runs as
we use a ratio of 5 : 16 on the smaller grid and of 2 : 5 on pairs except for the scenario with a 1:3 robot-to-block ratio,
thelargergrid(lowswarmdensities),cf.TableII.Weincrease cf.Tab.II.Denserblockdistributionsreducetheprobabilityof
the block density to 18.75% in one experiment to show the dispersion and increase the probability of pairs. For the lower
effects on the resulting structures. robot-to-block ratios, the best evolved behaviors decrease
A median best fitness of at least 0.86 in the last generation dispersion by 5 to 15 pp while they decrease dispersion by
is reached in all experiments, see Table II, meaning that 86%
and more of the sensor values are assessed correctly by the 1https://youtu.be/T9s5669ypXM
ssentiF
tseB(a)Clusters(10robots,32blocks) (b)Pairs(20robots,50blocks)
(c)Dispersion(16robots,32blocks) (d)Lines(25robots,75blocks)
Fig.4. Structuresatthestart(left)andend(rights)ofarun.Robotsarerepresentedbytriangles,blocksbycircles.Trianglesgivetherobots’headings.
55 pp on the smaller grid and by 20 pp on the larger grid for
1.0
the 1 : 1 ratio. Thus, we find that robots do not push blocks
into a new structure in all runs with altered block positions.
0.9
Scenarios with lower robot-to-block ratios lead to only one to
three runs with modified structures out of ten to 11 runs with 0.8
altered block positions while scenarios with a 1:1 ratio lead
to four out of seven runs on the larger grid and 11 out of 14 0.7
on the smaller grid. Thus, scenarios with a 1:1 ratio lead to
0.6
the greatest alteration of block structures.
We find that dispersion (Fig. 4c) is the most frequent
0.5
structure in all experiments except for the 1:3 robot-to-block 0 10 20 30 40 50 60 70 80 90
Generation
ratio case. Pairs (Fig. 4b) form frequently in all experiments
while lines emerge rarely. Only in the 1 : 3 ratio case, the
Fig.5. Bestfitnessof20independentrunsonthe20×20gridwith20robots
amount of pairs decreases during the run. Clusters (Fig. 4a)
and50blocksandpredefinedpairs.Mediansareindicatedbytheredbars.
form only on the smaller grid, maybe because robots need to
push blocks more grid cells forward to group blocks on the
larger grid. s = s = 0) and vary the block sensor predictions in three
4 5
In summary, we find that a 1 : 1 robot-to-block ratio different scenarios.
results in the most active swarm construction behaviors that First, we aim for pairs and lines by predefining the sensor
changetheinitialblockdistributionalotbyformingstructures. predictionsforthetwoblocksensorsinfrontoftherobotto1
Differentstructuresformonthetwogridsizes.Usingahigher (i.e.,s =s =1)whileallotherpredictionsaresetto0(i.e.,
6 9
blockdensitywitha1:3robot-to-blockratiodidnotimprove s = s = s = s = 0). We require all robots to have a
7 8 10 11
our results and thus, we focus on the first six experiments in pair or line of blocks directly in front of them to maximize
the following. fitness.
The mean best fitness is about 80% in all experiments,
cf. Tab. III, that is up to 8.4 pp lower than in our first
B. Engineered Self-Organized Construction
experiments. Fig. 5 shows the increase of best fitness over
To bias the emergence towards desired structures, we pre- generations.Itisrepresentativeforthefitnesscurvesobserved
define sensor predictions in the next step (cf. [3]). We set the in all following experiments.
robot sensor predictions to 0 (i.e., s = s = s = s = We find that block positions were altered in all runs. The
0 1 2 3
ssentiF
tseBTABLEIII
METRICS(CF.SEC.II-B)OF20INDEPENDENTEVOLUTIONARYRUNSWITHPREDEFINEDPREDICTEDPAIRS.MEDIANVALUESINBRACKETS.
grid median block robot structures
robots blocks ratio size fitness similarity(%) movement movement lines pairs clusters dispersion
0.661 0.03 0.25 start 0.0 20.0 0.0 80.0
10 32 5:16 16×16 0.873
(0.688) (0.03) (0.24) end 0.0 85.0 2.5 12.5
0.559 0.02 0.21 start 0.0 12.5 0.0 87.5
16 32 1:2 16×16 0.854
(0.562) (0.0) (0.22) end 10.0 72.5 5.0 12.5
0.439 0.0 0.26 start 0.0 12.5 0.0 87.5
32 32 1:1 16×16 0.808
(0.422) (0.0) (0.26) end 15.0 55.0 15.0 15.0
0.552 0.01 0.18 start 0.0 0.0 0.0 100.0
20 50 2:5 20×20 0.868
(0.560) (0.0) (0.20) end 15.0 75.0 5.0 5.0
0.519 0.01 0.18 start 0.0 7.5 0.0 92.5
25 50 1:2 20×20 0.861
(0.530) (0.0) (0.18) end 5.0 85.0 5.0 5.0
0.421 0.0 0.29 start 0.0 7.5 0.0 92.5
50 50 1:1 20×20 0.817
(0.430) (0.0) (0.30) end 5.0 55.0 15.0 25.0
TABLEIV
METRICS(CF.SEC.II-B)OF20INDEPENDENTEVOLUTIONARYRUNSWITHPREDEFINEDPREDICTEDCLUSTERS.MEDIANVALUESINBRACKETS.
grid median block robot structures
robots blocks ratio size fitness similarity(%) movement movement lines pairs clusters dispersion
0.567 0.05 0.24 start 0.0 20.0 0.0 80.0
10 32 5:16 16×16 0.658
(0.546) (0.06) (0.29) end 2.5 82.5 0.0 15.0
0.377 0.06 0.23 start 0.0 10.0 0.0 90.0
16 32 1:2 16×16 0.669
(0.344) (0.05) (0.19) end 5.0 80.0 5.0 10.0
0.203 0.04 0.18 start 0.0 5.0 0.0 95.0
32 32 1:1 16×16 0.637
(0.219) (0.03) (0.20) end 0.0 40.0 55.0 5.0
0.453 0.03 0.11 start 0.0 5.0 0.0 95.0
20 50 2:5 20×20 0.684
(0.480) (0.02) (0.10) end 0.0 90.0 0.0 10.0
0.323 0.02 0.14 start 0.0 0.0 0.0 100.0
25 50 1:2 20×20 0.687
(0.350) (0.02) (0.10) end 0.0 55.0 45.0 0.0
0.242 0.01 0.15 start 0.0 15.0 0.0 85.0
50 50 1:1 20×20 0.642
(0.240) (0.0) (0.14) end 0.0 20.0 80.0 0.0
TABLEV
METRICS(CF.SEC.II-B)OF20INDEPENDENTEVOLUTIONARYRUNSWITHPREDEFINEDZEROPREDICTIONS.MEDIANVALUESINBRACKETS.
grid median block robot structures
robots blocks ratio size fitness similarity(%) movement movement lines pairs clusters dispersion
0.773 0.0 0.46 start 0.0 10.0 0.0 90.0
10 32 5:16 16×16 0.930
(0.812) (0.0) (0.43) end 5.0 15.0 5.0 75.0
0.577 0.0 0.52 start 0.0 0.0 0.0 100.0
16 32 1:2 16×16 0.931
(0.594) (0.0) (0.48) end 0.0 35.0 15.0 50.0
0.295 0.0 0.42 start 0.0 5.0 0.0 95.0
32 32 1:1 16×16 0.907
(0.296) (0.0) (0.40) end 7.5 40.0 42.5 10.0
0.754 0.0 0.45 start 0.0 10.0 0.0 90.0
20 50 2:5 20×20 0.931
(0.820) (0.0) (0.45) end 2.5 2.5 5.0 90.0
0.572 0.0 0.52 start 0.0 10.0 0.0 90.0
25 50 1:2 20×20 0.929
(0.630) (0.0) (0.46) end 0.0 45.0 15.0 40.0
0.351 0.0 0.37 start 0.0 0.0 0.0 100.0
50 50 1:1 20×20 0.907
(0.360) (0.0) (0.36) end 5.0 45.0 35.0 15.0
median similarity decreased by roughly 20 pp on the smaller to see a block (i.e., s = s = s = s = s = s = 1).
6 7 8 9 10 11
grid and by 30 pp on the larger grid for the lower robot-to- Themedianbestfitnessis63%to69%andthus,around20pp
blockratioscomparedtoourinitialexperiments.Thus,wefind lower than in our previous experiments. We infer that the task
a greater alteration of the structures using low robot-to-block complexityincreased.Inallruns,blockpositionswerealtered.
ratios than before. This finding is supported by the formed The similarity of block positions decreases with the swarm
structures. The robots decrease dispersion during the runs by density on both grids from around 50% to 22%. Compared
67.5 pp. The majority of formed structures are pairs (Fig. 6) with all previous experiments, we reach the lowest similarity
and we observe lines. in this scenario and thus, the most intense pushing of blocks.
As before, the percentage of dispersion structures decreases
Next, we want to provoke that the robot swarm forms clus-
by 65 to 100 pp during the runs. We observe that the amount
tersofblocks.Wepredefinethatallblocksensorsarepredictedpredefining sensor value predictions. Some structures, such as
clusters or pairs, can easily be engineered while predefining
not to sense any blocks provides rather an additional intrinsic
driver to group blocks.
IV. DISCUSSIONANDCONCLUSION
Our study on self-organized swarm construction with min-
imal surprise shows that our approach can be used to evolve
swarm behaviors which require interaction with the envi-
ronment, too. We are able to engineer swarm construction
behaviors by predefining sensor predictions.
(a)initialposition (b)finalposition Infuturework,wewanttoinvestigatetheinfluenceofblock
Fig. 6. Resulting pair structure with predefined sensor predictions using density, swarm density and grid size more thoroughly. First
25robotsand50blocksona20×20grid.Robotsarerepresentedbytriangles,
investigations with discrete sensors indicating either block,
blocksbycircles.Trianglesgivetherobots’headings.
robot, or empty cell showed that it complicates the problem.
ThismayrequireastudyoftheANNparameters.Preliminary
investigations with seeds of block formations placed initially
in the environment showed that they can effectively trigger
the grouping of blocks at designated spots. However, seeds
were not as effective as predefining predictions. We want
to investigate more seed shapes and the combination with
predefined predictions in future.
Overall, we are confident to extend our presented results in
future work to evolve more complex and interesting swarm
construction behaviors using minimal surprise. The step from
simulation to robot hardware seems feasible.
(a)initialposition (b)finalposition
REFERENCES
Fig.7. Resultingclusterwithpredefinedsensorpredictionsusing32agents
and32blocksona16×16grid.Robotsarerepresentedbytriangles,blocks [1] H.Hamann,SwarmRobotics:AFormalApproach. Springer,2018.
bycircles.Trianglesgivetherobots’headings. [2] K.Friston,“Thefree-energyprinciple:aunifiedbraintheory?,”Nature
ReviewsNeuroscience,vol.11,no.2,pp.127–138,2010.
[3] T. K. Kaiser and H. Hamann, “Self-assembly in patterns with mini-
mal surprise: Engineered self-organization and adaptation to the en-
of emerging clusters varies with swarm density. Mainly pairs vironment,” in Distributed Autonomous Robotic Systems (N. Correll,
emergeforthetwolowerswarmdensitiesonbothgrids.While M. Schwager, and M. Otte, eds.), (Cham), pp. 183–195, Springer
InternationalPublishing,2019.
no clusters form for the lowest swarm density, one run on the
[4] J.Werfel,K.Petersen,andR.Nagpal,“Designingcollectivebehaviorin
smaller grid and roughly half of the runs on the larger grid atermite-inspiredrobotconstructionteam,”Science,vol.343,no.6172,
result in clusters for the intermediate density. pp.754–758,2014.
[5] C.A.C.ParkerandC.R.Kube,“Blindbulldozing:multiplerobotnest
The runs with the highest swarm density and a 1:1 robot-
construction,” in Proceedings IEEE/RSJ Int. Conference on Intelligent
to-block ratio mainly result in clustering on both grid sizes RobotsandSystems(IROS),vol.2,pp.2010–2015vol.2,Oct2003.
(Fig. 7) but the number is 25 pp higher on the larger grid. We [6] A. Vardy, “Orbital construction: Swarms of simple robots building
enclosures,”in2018IEEE3rdInternationalWorkshopsonFoundations
conclude that the task is harder for smaller grids and lower
andApplicationsofSelf*Systems(FAS*W),pp.147–153,Sep.2018.
swarm densities. There is more robot and block movement [7] G. Theraulaz and E. Bonabeau, “Modelling the collective building of
in the last τ time steps for the lower grid size. An increased complexarchitecturesinsocialinsectswithlatticeswarms,”Journalof
TheoreticalBiology,vol.177,pp.381–400,1995.
runtime may lead to more clusters.
[8] N.R.Franks,A.Wilby,B.W.Silverman,andC.Tofts,“Self-organizing
Inalastscenario,wepredefinethatrobotspredictnoblocks nest construction in ants: sophisticated building by blind bulldozing,”
in front of them (i.e., s = s = s = s = s = s = 0). Animalbehaviour,vol.44,pp.357–375,1992.
6 7 8 9 10 11
[9] D. Ha and J. Schmidhuber, “Recurrent world models facilitate policy
We observe that blocks are moved around in almost all runs
evolution,” in Advances in Neural Information Processing Systems 31
except for one run on the larger grid and for two runs on the (S.B.etal.,ed.),pp.2455–2467,CurranAssociates,Inc.,2018.
smaller grid with the lowest swarm density. The median best [10] I. Goodfellow, J. Pouget-Abadie, M. Mirza, B. Xu, D. Warde-Farley,
S. Ozair, A. Courville, and Y. Bengio, “Generative Adversarial Nets,”
fitness is above 90% for all runs and between 1.5 and 6.3 pp
in Advances in Neural Information Processing Systems 27 (Z. e. a.
higher than for the runs without predefined predictions. Ghahramani,ed.),pp.2672–2680,CurranAssociates,Inc.,2014.
Weobservevariousstructures.Robotstrytodispersethem- [11] R.Groß,Y.Gu,W.Li,andM.Gauci,“GeneralizingGANs:ATuring
perspective,” in Advances in Neural Information Processing Systems
selves to neither perceive robots nor blocks. Grouping blocks
(NIPS),pp.6319–6329,2017.
in clusters, pairs, or lines may be beneficial but especially for [12] H.Hamann,“Evolutionofcollectivebehaviorsbyminimizingsurprise,”
lower swarm densities the initial structures may already allow in 14th Int. Conf. on the Synthesis and Simulation of Living Systems
(ALIFE2014)(H.S.etal.,ed.),pp.344–351,MITPress,2014.
all robots to disperse and find an isolated position.
[13] J.H.Holland,AdaptationinNaturalandArtificialSystems.AnnArbor,
Insummary,wecanengineerself-organizedconstructionby MI:Univ.MichiganPress,1975.