Distributed Traffic Signal Control via Coordinated Maximum
Pressure-plus-Penalty
Vinzenz Tu¨tsch1, Zhiyu He2, Florian Do¨rfler2, and Kenan Zhang1
Abstract—This paper develops an adaptive traffic control MP selects a signal phase that maximizes its “pressure”, a
policy inspired by Maximum Pressure (MP) while imposing measure computed solely using the number of vehicles on
coordination across intersections. The proposed Coordinated
incoming and outgoing lanes associated with the phase. Ac-
Maximum Pressure-plus-Penalty (CMPP) control policy fea-
cordingly,MPcanbesolvedefficientlywithoutcommunica-
tures a local objective for each intersection that consists of
the total pressure within the neighborhood and a penalty tionamonginteractionsorcentralcoordination.Inadditionto
accounting for the queue capacities and continuous green satisfactory performances [9], [10], MP is widely celebrated
time for certain movements. The corresponding control task is for its strong theoretical underpinning. Using the Lyapunov
reformulatedasadistributedoptimizationproblemandsolved
drifttheory,[8]provedthatMPguaranteesthestabilityofthe
via two customized algorithms: one based on the alternating
stochastic queuing processes at all intersections. However,
directionmethodofmultipliers(ADMM)andtheotherfollows
a greedy heuristic augmented with a majority vote. CMPP a key assumption for the proof is infinite queue capacity,
not only provides a theoretical guarantee of queuing network whichmaynotholdfordenseroadnetworks.Toaddressthis
stability but also outperforms several benchmark controllers limitation, several recent studies have modified the original
in simulations on a large-scale real traffic network with lower
MP algorithm to explicitly consider limited queue lengths
average travel and waiting time per vehicle, as well as less
[11], [12]. Another issue with MP is the possibly extensive
network congestion. Furthermore, CPMM with the greedy
algorithm enjoys comparable computational efficiency as fully time of red lights for certain phases. To remedy this, cyclic
decentralized controllers without significantly compromising algorithms have been introduced that ensure each phase is
the control performance, which highlights its great potential activated at least once within a period [13], [14]. All these
for real-world deployment.
MP variants remain fully decentralized and are shown to
Keywords: traffic signal control; distributed optimization;
maintain the stability property under certain conditions.
Lyapunov minimum drift-plus-penalty
Recently, several studies leveraged the Lyapunov min-
I. INTRODUCTION
imum drift-plus-penalty control [15], an extension of the
A. Background and Motivations theory that MP is built upon, to tackle the issue of finite
Vehicular traffic in urban areas has surged dramatically queue lengths. In [16], a finite queue length is enforced
overthepastdecades[1]andisexpectedtocontinuegrowing as a constraint, while a queue-length-dependent penalty is
in future [2]. This forecast poses significant challenges to appended to the regular pressure for each intersection in
traffic control [3]. In dense urban road networks, traffic [17]. Although these algorithms leverage information from
signals have long constituted effective control instruments neighboring intersections, they still optimize control actions
to regulate traffic flows and ensure efficient vehicle move- for each agent independently, without explicit coordination.
ments. In the literature, Traffic Signal Controllers (TSCs) These decentralized approaches may lead to suboptimal per-
are often classified into three types: fixed-time, actuated, formancebecausetheindividualintersectionsdonotaccount
and adaptive. Specifically, fixed-time TSCs are the most for broader network effects and interdependencies.
commonlyusedinpractice,whichallocateafixedgreentime To augment the MP framework with coordination and
to each movement [4]. The actuated TSCs set green time attention to queue capacity constraints, this paper reformu-
in response to real-time traffic volumes, though the control lates the network signal control problem into a distributed
policyispredefined.Differently,adaptiveTSCsoptimizethe optimization [18], while exploiting the Lyapunov minimum
control actions to maximize the traffic throughput. Early drift-plus-penalty control to define local objectives and to
developments of adaptive signal control relied on central- prove the network queuing stability. Specifically, each inter-
ized approaches (e.g., [5], [6], [7]) and thus can hardly section aims to maximize the total pressure within its neigh-
be implemented in real practice due to rapidly increasing bor, penalized by its impact on neighboring intersections.
computationalandcommunicationcostsinlarge-scaletraffic Consequently, the coordinated signal control policy can be
networks. solved in an online and adaptive manner as per other MP
The scalability issue of classic adaptive TSCs was ad- methods(e.g.,[8],[11])whileachievingnetwork-wideglobal
dressed by the Maximum Pressure (MP) control, a decen- optimum.
tralized algorithm proposed by [8]. In short, at each time,
B. Contributions
1 Human-oriented mobility eco-system (HOMES) laboratory, EPFL, This paper develops a distributed traffic signal control
{vinzenz.tutsch, kenan.zhang}@epfl.ch
policy,namely,CoordinatedMaximumPressure-plus-Penalty
2 Automatic Control Laboratory (IfA), ETH Zu¨rich, {zhiyhe,
dorfler}@control.ee.ethz.ch (CMPP), which extends the standard MP approach by lever-
4202
rpA
03
]YS.ssee[
1v74591.4042:viXraaging communication and coordination across neighboring
intersections. Our key contributions include:
• Expand the per-intersection pressure to a neighborhood
of intersections and augment it with a penalty that
captures queue capacities and continuous green time of
certain vehicle movements.
• Establishthestabilityofthequeuingnetworkunderthe
CMPP control policy using the Lyapunov optimization
theorem [15]. Fig. 1: Eight phases in a typical intersection.
• Reformulate the network control problem as distributed
optimization and develop two consensus algorithms
basedonthealternatingdirectionmethodofmultipliers inflow is determined by the third term in (1), where U
l
(ADMM) and a greedy heuristic. denotes the set of upstream links of link l, d (t) represents
l
• Demonstrate the performance of CMPP through simu- the demand entering the network from link l, and r l,m(t)
lations of real-world road networks and traffic demand. is the turning ratio as the proportion of vehicles on link l
moving to link m. Note that d (t) is only non-zero for entry
II. PROBLEMSETTINGANDPRELIMINARIES l
links l∈L with U =∅.
entry l
A. Road Network, Signal Control, and Queue Dynamics
Consider a directed road network G = (L,I), where I B. Queuing Stability and Lyapunov Drift Theory
denotes the set of intersections with |I|=N and L denotes
The queuing network stability represented by the vector
the set of road links. We further divide L into three subsets:
Q(t) = [...,q (t),...] ∈ R|Λ|, where Λ denotes the set
i) entry links L , where vehicles enter the network; ii) l,m +
entry of all movements in the network, is defined as follows.
internal links L that connect intersections inside the
internal Definition 1 (Stability of queuing process): The stochas-
network; and iii) exit links L , from which vehicles leave
exit tic queuing process Q(t) is strongly stable if
the network.
EachintersectionfeaturesasetoflinksL i ⊂Lthatdenote 1(cid:88)t−1
thetrafficmovementsthroughit.Thetuple(l,m)withl,m∈ limsup E{|Q(τ)|}<∞. (3)
t
L i definesthemovementfromlinkltolinkminintersection t→∞ τ=0
i. Accordingly, the traffic signal control corresponding to A well-known approach to proving queue stability is the
each movement is given by s ∈ {0,1}. Specifically, Lyapunovdrifttheory(e.g.,[8],[16]).Specifically,astability
l,m
s =1indicatesthatthemovement(l,m)isactivated(i.e., condition is constructed with a conditional Lyapunov drift
l,m
defined as
agreenlightison)andviceversa.Sincemultiplemovements
can be activated simultaneously without collision, the signal ∆(Q(t))=△ E{L(Q(t+1))−(Q(t))|Q(t)}, (4)
control action is always defined on phase, a combination
of movements. In this paper, we consider a configuration
where L(Q(t) denotes the Lyapunov function, and a com-
of eight typical phases1 as depicted in Figure 1 and use
monly used one is
Φ to denote the set of phases for intersection i with size
i
K i = |Φ i|. Let ϕ i,k ∈ {0,1} denote the phase control of L(Q(t))=△ 1 (cid:88) q (t)2. (5)
l,m
k ∈Φ . Then, ϕ =1 implies s =1,∀(l,m)∈k. 2
i i,k l,m
(l,m)∈Λ
Suppose each movement uses dedicated lanes. Then, the
queue length corresponding to movement (l,m) at time t, TheLyapunovdrifttheory[15]statesthatiftheinitialqueues
denoted by q (t), can be modeled as follows: satisfyE{L(Q(0))}<∞,thenacontrolpolicyfulfillingthe
l,m
following condition guarantees the strong stability of Q(t)):
q (t+1)=q (t)−y (t)s (t)
l,m l,m l,m l,m
(cid:32) (cid:33) (cid:88)
(cid:88) (1) ∆(Q(t))≤B−ϵ |q l,m(t)|, (6)
+ y (t)s (t)+d (t) r (t),
k,l k,l l l,m
(l,m)∈Λ
k∈Ul
for some constants B ≥0,ϵ>0.
where y (t) gives the vehicle outflows and equals the
l,m
minimum between the current queue length q (t) and the
l,m
C. Maximum Pressure Control
capacityofthemovementc (t)(themaximumvehicleflow
l,m
that can pass the intersection over single green time), i.e., MaximumPressure(MP)isafeedbackcontrollawthatse-
lectstheactivephasesolelybasedonlocalqueuelengths[8].
y (t)=min{q (t),c (t)}. (2)
l,m l,m l,m At each time step t, a weight variable w (t) is first
l,m
Accordingly, y (t)s (t) gives the realized outflow of computed for each movement (l,m) as
l,m l,m
under the signal control at time t. On the other hand, the
(cid:88)
w (t)=q (t)− r (t)q (t),
l,m l,m m,p m,p
1Inthispaper,weconsistentlyallocategreentimetorightturns.
p∈DmwhereD denotesthesetofdownstreamlinksfromlinkm. theorem, the Lyapunov Optimization theorem provides the
m
Theseweightsarethenusedtocomputethepressureofeach condition of queuing stability with a bounded penalty:
phase k per intersection i as follows: Theorem 1 (Lyapunov Optimization theorem): Consider
(cid:88) the Lyapunov function L(Q(t)) defined in (5). Suppose
γ i,k(t)= c l,m(t)w l,m(t)s l,m(t). the initial queues satisfy E{L(Q(0))} < ∞, then the
(l,m)∈k queuing system is strongly stable if there exist constants
TheMPcontrollerthenactivatesthephasewiththemaximal B ≥0,V >0,ϵ>0 and p∗ such that ∀t,
pressure. Let ϕM i P(t) be the MP control at intersection i at ∆(Q(t))+VE{p(t)|Q(t)}≤B+Vp∗−ϵ (cid:88) q (t).
l,m
time t. Then,
(l,m)∈Λ
(cid:40) (9)
ϕMP(t+1)=
1, k =argmax k′∈Φ{γ i,k′(t)},
(7) Proof: See the proof of Theorem 4.2 in [15].
i,k 0, otherwise.
B. CMPP Control and Penalty Function
Note that MP policy (7) can be computed independently at
each intersection and thus is fully decentralized. It has also
Let ϕ i(t) = [...,ϕ i,k(t),...]⊤ ∈ {0,1}Ki de-
note the signal control of intersection i and x (t) =
b the een Lyp aro pv ue nn ovth da rt ifth te (4M
)
P wip tholi tc hy ei Ls ye aq pu ui nv oal ven ft unto ctim onini dm ei fiz nin eg
d
[ϕ i(t)⊤,...,ϕ i′(t)⊤,...]⊤ ∈{0,1}(cid:80) j∈Ni∪{i}Kj bei the sig-
nal control of the neighborhood centered at intersection i,
in (5). Further, constants B and ϵ can be found to obtain the
where N denotes the set of neighboring intersections of i.
upper bound of the resulting Lyapunov drift. Therefore, the i
At each time t, our proposed CMPP policy decides on the
MPpolicyisconcludedtostabilizethequeuingnetwork[8].
neighborhoodsignalcontrolthatmaximizesthetotalpressure
Nevertheless, the proof relies on several assumptions. A
in the neighborhood minus a penalty p (t) defined on the
critical one is the unlimited queue capacity, which tends to i
central intersection, which yields the control action as
violate in dense networks with short block lengths. In such
 
scenarios, the MP controller potentially induces queue spill-
(cid:88) (cid:88)
backsorevengridlock[11].Additionally,theMPpolicymay xC iMPP(t)=argmax γ j,k(t)−Vp i(t),
alsocausecertainphasestobepermanentlyinactivated[19]. x
j∈Ni∪{i}k∈Φj
These issues have motivated the MP extensions discussed in (10)
Section I-A, as well as the current study.
where V >0 is a weight parameter.
III. COORDINATEDMAXIMUM To address the issues of limited lane capacities and ex-
PRESSURE-PLUS-PENALTYCONTROL tensive green times, we design the penalty p i,k(t) to depend
onthequeuelengthsatbothintersectionianditsneighbors,
Inthispaper,weproposeacoordinatedadaptivetrafficsig-
as well as the elapsed time since the last time phase k is
nal control policy, namely, Coordinated Maximum Pressure-
activated. The resulting penalty function is given by
plus-Penalty (CMPP), that takes advantage of the standard
(cid:18)
MP framework while overcoming the aforementioned issues p (t)= (cid:88) α(1)h(1) (t)+α(2) (cid:88) h(2) (t)
by enforcing coordination among intersections. We further i l,m l,m,p
prove the strong stability still holds under CMPP control. In
(l,m)∈Λi
(cid:19)
p∈Dm (11)
the remainder of this section, we first give a brief review +α(3)h(3) (t)
l,m
of the Lyapunov optimization theorem [15], the main theory
used to establish the stability of CMPP (Section III-A), then where α(k) is the weight of penalty h(k), and the three
describe the CMPP control policy and the corresponding penalty terms are specified as follows:
penaltyfunction(SectionIII-B),andfinallyoutlinetheproof
(cid:40)
of stability (Section III-C). h(1) (t)= 1, qˆ l,m(t+1)>q¯, (12a)
l,m 0, otherwise,
A. Lyapunov Minimum Drift-Plus-Penalty Control
(cid:40)
1, qˆ (t+1)>q¯,
The Lyapunov Minimum Drift-Plus-Penalty (LDPP) con- h(2) (t)= m,p (12b)
l,m,p 0, otherwise,
trol is a prevalent control strategy in communication net-
works and queuing systems [15] with a primary goal to (cid:32) t (cid:33)
stabilize the queuing network while minimizing a penalty h( l,3 m) (t)= (cid:88) ϕ i,k(t) (cid:88) ϕ i,k(τ) . (12c)
function over time. The general LDPP formulation is: k∈Sl,m τ=t−H
min p¯π In(12a)and(12b),q¯denotesathresholdvalueforthequeue
π (8) length of each movement (e.g., lane capacity); in (12a),
s.t. Qπ(t) is stable, qˆ (t+1)isthepredictedqueuelengthasper(1);in(12b),
l,m
qˆ (t+1) gives an upper bound on inflow vehicles to the
wherep¯π = lim 1 (cid:80)⊤ E{pπ(t)}isthelong-timeaverage m,p
T→∞T t=0 downstream lane p of m, i.e.,
penalty, and Qπ(t) represents the queuing system under
qˆ (t+1)=q (t)−y (t)s (t)+y (t)s (t);
control policy π. As an extension of the Lyapunov drift m,p m,p m,p m,p l,m l,mandin(12c),S isthesetofphasesthatcontainsmovement where a and b are defined in (14a), (14b). Under
l,m l,m l,m
(l,m) and H specifies the backward tracing period. Hence, Assumption 1, both terms are bounded and thus B exists.
the first two penalty terms address lane capacities while the Note that the penalty defined in (11) has an upper bound
third penalizes continuous green time for certain phases. (cid:16) (cid:17)
p =M α(1)+D α(2)+α(3)H , (18)
max max max
C. Stability Analysis
where M = max |Λ | is the maximum number of
We finish this section by establishing the stability of the max i∈I i
movements at each intersection, and D =max |D |
CMPP control policy. The proof is largely inspired by [8] max m∈L m
is the maximum number of downstream lanes for each lane.
while evoking Theorem 1. To start with, we introduce the
Combining (17) and (18), we finally obtain the upper
following assumption, which is also used in [8], to ensure
bound on the drift-plus-penalty as
the traffic demand does not exceed the control capability.
Assumption 1 (Bounded demand rate): The demand rate ∆(Q(t))+VE{p(t)|Q(t)}≤B+Vp −ϵ′ (cid:88) q (t),
vectord=[...,d ,...]⊤ isboundedsuchthatthereexists max l,m
l,m
(l,m)∈Λ
a control policy that satisfies
(19)
E{a l,m(t)}≤E{b l,m(t)}+ϵ ∀(l,m)∈Λ, (13) which yields the strong stability as per Theorem 1.
Following[15],weproceedtoshowthelong-termaverage
for some ϵ>0, where a (t),b (t) are respectively total
l,m l,m
totalqueuelengthisalsobounded.Tothisend,wesum(19)
inflow and outflow of lane l specified as
over time τ =0,...,t−1 and yield
(cid:88)
a = (y (t)s (t)+d (t))r (t), (14a)
l,m k,l k,l l l,m t−1
(cid:88)
k∈Ul E{L(Q(t))}−E{L(Q(0))}+V E{p(t)|Q(t)}
b =y (t)s (t). (14b)
l,m l,m l,m τ=0
Now we are ready to present the main theoretical result t−1
(cid:88) (cid:88)
of this paper. ≤Bt+Vp t−ϵ′ q (t). (20)
max l,m
τ=0(l,m)∈Λ
Theorem 2 (Stability of CMPP): Suppose Assumption 1
Rearranging the inequality and dropping E{L(Q(t))} ≥
holds and that the initial queues satisfy E{L(Q(0))} < ∞, 0, 1(cid:80)t−1 E{p(t)|Q}≥0, we arrive at
then the CMPP with penalty specified in (11) guarantees t τ=0
s letr no gn tg h is sta bb oil ui nty d. eF d.urther, the long-term average total queue 1
t
(cid:88)t−1 (cid:88) κ l,mq l,m(t)≤ B+ ϵV ′p max + E{L( ϵQ ′t(0))} ,
Proof: As per (10), the control action for intersection i τ=0(l,m)∈Λ
is determined by the total pressure within the neighborhood.
Taking t → ∞, we finally get the upper bound on the total
Hence, we redefine the Lyapunov function as follows:
queue length as
t−1
L(Q(t))=△ 1(cid:88) (cid:88) (cid:88) q (t)2 lim 1(cid:88) (cid:88) q (t)≤ B+Vp max.
2 l,m t→∞ t l,m ϵ′
i∈Ij∈Ni∪{i}(l,m)∈Λj τ=0(l,m)∈Λ
1 (cid:88)
= κ q (t)2, (15) This concludes the proof.
l,m l,m
2
(l,m)∈Λ IV. SOLUTIONALGORITHMFORCMPP
where κ is a positive integer indicating how many times
l,m The key difference between CMPP and MP is the scope
q for each movement (l,m) ∈ Λ is counted in L(Q(t)).
l,m of local problems. Specifically, CMPP not only solves each
According to Theorem 4.2 in [15], the stability condition
intersection’s own control action but also those of its neigh-
(9) also applies to this general form of Lyapunov function.
bors. Therefore, CMPP can no longer be solved indepen-
Following a similar derivation in [8], [15], we derive the
dently at each interaction but requires coordination among
upper bound on the corresponding Lyapunov drift as
neighboring intersections.
∆(Q(t))≤B−ϵ (cid:88) κ q (t) For notation simplicity, we drop the time index t in this
l,m l,m
section. Let z = [...,ϕ⊤,...] ∈ {0,1}K be the control
(l,m)∈Λ i
(cid:88) actions of all intersections and define an incidence matrix
≤B−ϵ′ q l,m(t), (16) M
i
∈ {0,1}((cid:80) j∈Ni∪{i}Kj)×K that transfer z into z
i
=
(l,m)∈Λ M z that corresponds to x . Accordingly, the CMPP policy
i i
where ϵ′ = ϵmax κ scales the original ϵ in prescribed in (10) is equivalent to solving the following
(l,m)∈Λ l,m
Assumption 1 by the maximum copy of queues in L(Q(t)), optimization problem:
and B is a constant that satisfies (cid:88)
max f (x ) (21a)
i i
B ≥
1 (cid:88)
κ
l,mE(cid:8)
(a l,m(t)−b
l,m(t))2|Q(t)(cid:9)
, (17)
z
i∈I
2
(l,m)∈Λ
s.t. x i−z
i
=0, ∀i∈I, (21b)where the local objective is defined as Algorithm 1 Greedy algorithm for CMPP
  Input: f i(x i) Output: x∗ i
f i(x i)= (cid:88) (cid:88) γ j,k(t)−Vp i(t). 1 2:
:
I wn hit ii la eli |z Ie D: ETS |et <I NDET d=
o
∅.
j∈Ni∪{i}k∈Φj
3: ∀i∈I\I DET, locally solve optimal control actions
Problem (21) is a distributed optimization with consensus
x∗ =argmaxf (x),
constraints [18], though the binary decision variables x and i i
i x
z bring particular challenges to the solution procedure. In
given x∗,∀j ∈I .
what follows, we detail two consensus algorithms that solve j DET
(21) efficiently at each time step. The first is based on the
4: Compute local objectives f i∗ =f i(x∗ i), ∀i∈I.
5: ∀i∈I\I DET,
alternating direction method of multipliers (ADMM) [20]
6: if the consensus conditions (x i) i = (x j) i, (x i) j =
and the other is a greedy heuristic with a majority vote.
(x ) , ∀j ∈N hold then
j j i
A. ADMM 7: Add i and j,∀j ∈N i to I DET.
8: end if
ADMM features a decomposition-coordination algorithm 9: ∀i∈I\I DET,
that achieves the global optimum by iteratively solving local 10: if f i∗ <f j∗, ∀j ∈N i then
sub-problems[20].Althoughdevelopedforconvexoptimiza- 11: Determine x∗ by majority vote of neighbors.
i
tion with continuous variables, ADMM shows a satisfactory 12: Add i to I DET.
performance in solving (21) in our experiments. 13: end if
To obtain ADMM-based updating rules of each intersec- 14: end while
tion, we first construct the augmented Lagrangian of (21)
L(x,z,λ)=(cid:88)(cid:16)
f (x )−λ⊤(x −z )−
ρ
||x −z
||2(cid:17)
,
i i i i i 2 i i 2 Similar to ADMM, the greedy algorithm can be im-
i∈I plemented in a distributed fashion. Specifically, Lines 5-
where λ is the dual variable introduced for each consensus 8 and Lines 9-13 can be conducted in parallel, where the
i
constraint (21b), and ρ>0 is a penalty parameter. We then additionofintersectionsinLines7and12arefirstperformed
derivethefollowingiterationrulesthatareexecutedbyeach on local copies of I DET. These updates are then merged
intersection independently. Namely, in each iteration, each to update the global I DET. Although the greedy algorithm
intersection i∈I performs lacks an optimality guarantee, it demonstrates satisfactory
performance in simulations, as will be shown in Section V.
ρ
xk+1 =argmaxf (x )−x⊤λk− ∥x −zk∥2, (22a)
i xi i i i i 2 i i 2 V. SIMULATIONEXPERIMENTS
(z)k+1 =argmax (cid:88) (cid:16) (λk) +ρ(xk+1) (cid:17)⊤ (z) , We evaluate the performance of our proposed CMPP con-
i j i j i i
troller against several benchmarks using CityFlow, an open-
(z)i
j∈Ni∪{i}
source traffic simulator for large-scale signal control [21].
(22b)
λk+1 =λk+ρ(xk+1−zk+1). (22c) A. Simulation Environment
i i i i
The simulation scenario is constructed based on the
In(22b),(z)
i
∈{0,1}Ki,differentfromz i,denotesthesub-
road network and traffic patterns in the midtown area of
sequence in z that corresponds to the control of intersection
Manhattan, see Figure 2. In total, the network has 290
i. The same notations apply to (λ ) ,(x ) .
j i j i intersectionsandfeaturesanaveragedemandof9600veh/h.
Note that (22a) and (22c) are directly derived from the
Eachsimulationisrunfor4000secandthetemporaldemand
generalupdatingrulesofADMM,while(22b)requiressome
pattern is illustrated in Figure 3. The free-flow travel speed
additionaldecomposition,whichisdelineatedinAppendixI.
is set to 30km/h and the signal is updated every 20 sec.
B. Greedy Heuristic B. Benchmarks and Evaluation Metrics
AlthoughADMMcansolvethesubproblemsefficientlyin Besides CMPP, we implement three benchmark con-
a distributed manner, it still requires quite a few iterations trollers: i) fixed-time (FT), where the signal plan is prede-
toreachaconsensus,whichmaytakeextensivecomputation fined; ii) classic MP; and iii) capacity-aware backpressure
time in large networks. Hence, we develop another greedy (CA-BP)proposedin[11]thatlargelyresemblesMPbutac-
algorithm with much lower computational complexity. The countsfortheeffectoflimitedqueuecapacity.Theresultsof
core idea is to perform a majority vote in the neighborhood CMPP using the above two solution algorithms are referred
of the intersection with the minimum local objective when to as CMPP-ADMM and CMPP-Greedy, respectively.
a conflict emerges. Accordingly, in each consensus iteration, Duetothelimitofspace,weonlyreportkeyperformance
at least one intersection determines its control action, which metrics in this paper, including i) the average vehicle travel
yields a computational complexity of O(|I|). The algorithm time, ii) the average vehicle waiting time (with speed less
is detailed in Algorithm 1. than 0.1m/sec), iii) the number of vehicles traveling in the(a) Region of interest. (b) Road network in the simulator.
Fig. 2: Simulated traffic network based on Midtown Manhattan.
MP controller leads to the longest average vehicle travel
time among the four. Since the Manhattan network is quite
1000 dense with particularly short blocks along the avenues (the
horizontalroadsinFigure2b),queuespilloversareobserved
frequentlyinthemovementsfromhorizontalroadstovertical
500
roads; see an example illustrated in Figure 5.
0
0 1000 2000 3000 4000
Simulation Time [sec]
Fig. 3: Traffic demand over simulation horizon.
network at each time step, and iv) the average computation
time for the control action at each time step.
C. Main Results
Fig. 5: Example of queue spillover under MP.
This section reports the main simulation results of CMPP
andbenchmarkcontrollers.Afterextensiveparametertuning,
ThespilloverissueispartiallyaddressedbyCA-BPthanks
we use the penalty weights α(1) = 4,α(2) = 2,α(3) = 0.1
to its specific attention to lane capacity, which ultimately
and the history horizon H = 3. Since the weight for each
results in slightly better performance than MP. Yet, CA-
penalty component is specified, V is simply set to 1.
BP does not coordinate among neighboring intersections
and thus tends to produce suboptimal control. The proposed
FT CMPP-ADMM CMPPcontrol,ontheotherhand,outperformsallthebench-
1500
1290 CA-BP CMPP-Greedy marks regardless of its solution algorithms. The additional
MP
12% saving from the MP controller is largely due to the
1000 coordination across intersections, which effectively prevents
729 746 spillovers at high demand levels.
654 653
2) Average Waiting Time: A more significant difference
500
can be observed in Figure 6, which compares the average
vehiclewaitingtimeamongthetestedcontrollers.Inaddition
0 to the expected extensive waits under FT, MP also results
in quite a long waiting time, followed by CA-BP. This
Fig. 4: Average vehicle travel time [sec]. phenomenon is likely attributed to the second issue of MP
discussed in Section II-C: since pressures at the current
1) Average Travel Time: Figure 4 presents the average time step are the only metrics used to determine the phase
vehicle travel time. As expected, the FT controller performs activation, some phases may endure a long red time.
the worst because it fails to adapt to the varying traffic 3) Network Congestion: Figure 7 depicts the number of
dynamics. All other adaptive controllers achieve at least vehiclestravelinginthenetworkoverthesimulationhorizon.
40% improvement compared to the FT baseline, while the Since the demand is relatively stable (see Figure 3), it also
]selcihev[
dnameD
]ces[
emiTTABLE I: Average computation time for each signal update.
FT CMPP-ADMM
1000 891 CA-BP CMPP-Greedy ControlMethod Time[sec]
MP
800 MaxPressure 0.3
Capacity-AwareBP 1.8
600 CMPP(ADMM) 90.2
CMPP(Greedy) 1.5
400 325
283
200 157 158
sensus by directly handling consensus equality constraints
0
(see (21b)), the greedy algorithm achieves almost the same
performance as ADMM with much higher computational
Fig. 6: Average vehicle waiting time [sec].
efficiency. As shown in Figure 8, although both algorithms
converge to the same global optimum, ADMM takes more
iterationstoconvergeandthusrequiresalongercomputation
reflects the congestion level. In other words, an effective
time.Ontheotherhand,thegreedyalgorithmisobservedto
trafficsignalcontrollershouldbeabletomaintainthevehicle
oftenconvergetothegloballyoptimalsolutioneventhoughit
number below a certain threshold.
hasnorigorousoptimalityguarantee.Hence,itisworthwhile
Since the network is empty at the beginning of the
to further explore whether the same result holds in general
simulation, all controllers present the same increase before
traffic networks.
500sec. Afterward, the curve of FT grows faster than the
others,demonstratingmoreseverecongestioninthenetwork.
Both MP and CA-BP closely match CMPP until 2000sec, 1000
from which the two curves start to deviate and increase
at different rates. In contrast, both CMPP controllers well 500
controlthecongestionandstabilizethenumberofvehiclesin
thenetworkaround2000inthesecondhalfofthesimulation. 0
ADMM Optimum
500 Greedy
FT CMPP-ADMM −
1 2 3 4 5 6 7 8 9 10
4000 CA-BP CMPP-Greedy
MP Consensus Iteration
2000 Fig. 8: Example of consensus iterations under ADMM and
Greedy algorithms.
0
0 1000 2000 3000 4000
Simulation Time [sec] VI. CONCLUSION
This paper developed Coordinated Maximum Pressure-
Fig. 7: The number of vehicles in the network.
plus-Penalty(CMPP)control,anovelcoordinatedtrafficsig-
nalcontrolpolicy,anddemonstrateditssuperiorperformance
4) Computation Time: Table I reports the average com- through extensive simulations. Inspired by Maximum Pres-
putation time of each time step. As expected, MP achieves sure (MP) control, CMPP adaptively updates traffic signals
the highest efficiency thanks to its simple computations. without predicting how traffic propagates over the network
CA-BP takes a slightly longer time because of the more infuturetimestepsandthusenjoysahighcomputationalef-
complex expression of pressure. The two CMPP algorithms ficiency. Meanwhile, CMPP addresses existing issues of MP
show drastically different computational efficiencies. Since by enforcing coordination across intersections. In particular,
the ADMM algorithm normally requires up to 10 consensus it defines each local control problem over a neighborhood
iterationstoconverge,eachupdaterequiresupto90sec.Yet, rather than a single intersection and introduces a penalty
its computational efficiency is expected to further improve functionthatcapturesqueuecapacitiesandcontinuousgreen
withmorecomputationalresourcesandbetter-tunedstopping times. The resulting control policy was further proved to
criteria. Nevertheless, ADMM can hardly outperform MP guarantee the queuing network stability by evoking the
and CA-BP given the consensus iterations. On the other Lyapunov optimization theorem.
hand, the greedy algorithm shows a comparable computa- To solve CMPP, we reformulated it as a distributed opti-
tional efficiency with MP. On average, it takes 1.5 sec to mization problem and proposed two consensus algorithms.
complete each control update. Our experiments show that CMPP outperforms benchmark
5) Consensus Mechanism: We end this section by com- controllers, regardless of its solution algorithm, in both indi-
paring the consensus mechanism of ADMM and greedy vidual vehicle travel and network congestion. The ADMM-
algorithms.Asdiscussedabove,whileADMMenforcescon- based method usually requires a much longer computation
]ces[
emiT
selciheV
eulaV
evitcejbOtime to converge. In contrast, our simulations show that [2] Gov.uk,“Nationalroadtrafficprojections2022,”Dec.2022.
the greedy heuristic achieves comparable computational ef- [3] S.JayasooriyaandY.Bandara,“MeasuringtheEconomiccostsoftraf-
ficcongestion,”in2017MoratuwaEngineeringResearchConference
ficiency as fully decentralized controllers (e.g., MP) without
(MERCon),May2017,pp.141–146.
a considerable compromise of the control performance. [4] S. Barman and M. W. Levin, “Performance Evaluation of Modified
Although this paper focuses on a signal specification of CyclicMax-PressureControlledIntersectionsinRealisticCorridors,”
TransportationResearchRecord,vol.2676,no.6,pp.110–128,Jun.
the penalty function, the CMPP control framework offers
2022.
flexibility in designing the penalty to tackle various control [5] P. B. Hunt, D. I. Robertson, R. D. Bretherton, and M. C. Royle,
scenarios and objectives. Yet, additional scrutiny is needed “The SCOOT on-line traffic signal optimisation technique,” Traffic
Engineering&Control,vol.23,no.4,Apr.1982.
to extend the stability result for general penalty functions.
[6] P. Lowrie, “SCATS: Sydney Co-Ordinated Adaptive Traffic System:
Additionally,morecomplexvehiclebehaviors(e.g.,dynamic A traffic responsive method of controlling urban traffic,” in SCATS,
rerouting)andsignalcoordinationstrategies(e.g.,offset)can Sydney Co-Ordinated Adaptive Traffic System. Transport for NSW,
1990.
be integrated into future studies on CMPP.
[7] J. J. Henry, J. L. Farges, and J. Tuffal, “The PRODYN Real Time
Traffic Algorithm,” IFAC Proceedings Volumes, vol. 16, no. 4, pp.
APPENDIXI
305–310,Apr.1983.
ADMMUPDATEOFz [8] P. Varaiya, “Max pressure control of a network of signalized inter-
sections,” Transportation Research Part C: Emerging Technologies,
The original ADMM iterative rule to update z is given by
vol.36,pp.177–195,Nov.2013.
zk+1
=argmin(cid:88)N (cid:18)(cid:104) λk(cid:105)⊤
z −
ρ
∥xk+1−z
∥2(cid:19)
. (23)
[9] SX i. gS nau ln iza en dd InY t. erY sein c, ti“ oA nsS ,”im Tru al na sti po on rtS at tu iod ny Ro en seM aa rcx hP Rre es cs ou rr de :C Joo un rt nro al lo of
f
z i i 2 i i 2 the Transportation Research Board, vol. 2672, no. 18, pp. 117–127,
i=1 2018.
Following [20], we rewrite z as a vector of N elements, [10] J. Lioris, A. Kurzhanskiy, and P. Varaiya, “Adaptive Max Pressure
ControlofNetworkofSignalizedIntersections,”IFAC-PapersOnLine,
eachofwhichcorrespondstothecontrolofoneintersection.
vol.49,no.22,pp.19–24,Jan.2016.
Let N i = |N i| be the number of neighbors and M(i,j) [11] J.Gregoire,X.Qian,E.Frazzoli,A.deLaFortelle,andT.Wongpirom-
denote the j-th neighbor of intersection i. Accordingly, (23) sarn, “Capacity-Aware Backpressure Traffic Signal Control,” IEEE
TransactionsonControlofNetworkSystems,vol.2,no.2,pp.164–
is expanded as
173,Jun.2015.
 (zk)  [12] N.Xiao,E.Frazzoli,Y.Li,Y.Wang,andD.Wang,“Pressurereleasing
zk+1 =arg
zmin(cid:88)N
(cid:2) (λ i) i,...,(λ i) M(i,Ni)(cid:3)  . . .
i
 
[13]
p
I
TEo .Eli LEc ey ,Ci
o
Pn .nft Kera
r
of
e
vfi
n
a´c
c ce
ss
o
,ig
n
Nn Da .l
e
Wcc io asn
i lo
tt or no nl
a
,nw Hdi .t Ch Lofi .nn
t
Vri ot ue
l
,,Dq Lu
e
.e cu L.e
2
.0c A1a
4
np
,
da
p
rc ei pt w.ie ,6s 4, a”
9 n2
din
–6
S5
4
.3 9r S7d
.
.
i=1 (zk)
M(i,Ni) Hoogendoorn,“Decentralizedsignalcontrolforurbanroadnetworks,”
(cid:13) (cid:13) (x ik+1)
i
  (zk)
i
(cid:13) (cid:13)2 T 43ra 1n –s 4p 5o 0r ,ta 2t 0io 1n 5.ResearchPartC:EmergingTechnologies,vol.58,pp.
−
ρ 2(cid:13) (cid:13)
(cid:13) (cid:13)
(cid:13)
 
(xk i+1)
. .
.M(i,1) 
 
−
 
(zk) M
. .
.
(i,1) 
 
(cid:13) (cid:13)
(cid:13) (cid:13)
(cid:13)
[14]
c
TM
y
e.
cc
hlW
i
nc.
oal
lL ope gv
h
iei an ss, ,eJ vs. otH
lr
.uu
c
1,
t
2ua 0rn ,ed
,
p”M
.T
1r. 0aO
2n
8d
s
2pe 8l ol ,r,
t
N“ aM
t oio
va .nx 2- Rp 0er 2e
s
0s
e
.s au rr ce hs Pig an ra tl Cc :on Et mro el rgw ii nt gh
(cid:13) (cid:13) (xk i+1) M(i,Ni) (zk) M(i,Ni) (cid:13) (cid:13) 2 [15] CM o. mJ m. uN ne ice aly ti, onSto ac nh das Qtic ueN uee it nw gor Sk ysO tep mti sm ,iz sa ert .io Sn ynw ti hth esiA sp Lpl ei cc ta ut ri eo sn ot no
N Learning, Networks, and Algorithms. Springer International Pub-
=argmin(cid:88) (cid:88) (λk)⊤(z) lishing,2010.
i j j [16] L.BraccialeandP.Loreti,“LyapunovDrift-Plus-PenaltyOptimization
z
i=1j∈Ni∪{i} for Queues With Finite Capacity,” IEEE Communications Letters,
− ρ(cid:0) ∥(xk+1) ∥2−2(xk+1)⊤(z) +∥(z) ∥2(cid:1) vol.24,no.11,pp.2555–2558,Nov.2020.
2 i j 2 i j j j 2 [17] S.Hao,L.Yang,Y.Shi,andY.Guo,“Backpressurebasedtrafficsignal
controlconsideringcapacityofdownstreamlinks,”Transport,vol.35,
N
(cid:88) (cid:88) (cid:16) (cid:17)⊤ no.4,pp.347–356,Sep.2020.
=argmin (λk i) j +ρ(xk i+1) j (z) j. [18] T.Yang,X.Yi,J.Wu,Y.Yuan,D.Wu,Z.Meng,Y.Hong,H.Wang,
z i=1j∈Ni∪{i} Z.Lin,andK.H.Johansson,“Asurveyofdistributedoptimization,”
AnnualReviewsinControl,vol.47,no.1,May2019.
Thisallowsustofurtherdecomposetheupdateanddistribute [19] B.Ji,C.Joo,andN.B.Shroff,“Delay-BasedBack-PressureSchedul-
it to each intersection i as follows: ing in Multihop Wireless Networks,” IEEE/ACM Transactions on
Networking,vol.21,no.5,pp.1539–1552,Oct.2013.
(z)k+1 =argmin (cid:88) (cid:16) (λk) +ρ(xk+1) (cid:17)⊤ (z) . [20] S. Boyd, Parikh Neal, Chu, Eric, Peleato, Borja, and Eckstein,
i j i j i i Jonathan, “Distributed Optimization and Statistical Learning via
(z)i
j∈Ni∪{i} the Alternating Direction Method of Multipliers,” Foundations and
Trends®inMachineLearning,vol.3,no.1,pp.1–122,2010.
REFERENCES
[21] H. Zhang, S. Feng, C. Liu, Y. Ding, Y. Zhu, Z. Zhou, W. Zhang,
[1] M.Czepkiewicz,J.Heinonen,andJ.Ottelin,“Whydourbanitestravel Y. Yu, H. Jin, and Z. Li, “CityFlow: A Multi-Agent Reinforcement
morethandoothers?Areviewofassociationsbetweenurbanformand LearningEnvironmentforLargeScaleCityTrafficScenario,”inThe
long-distanceleisuretravel,”EnvironmentalResearchLetters,vol.13, WorldWideWebConference,May2019,pp.3620–3624.
Jul.2018.