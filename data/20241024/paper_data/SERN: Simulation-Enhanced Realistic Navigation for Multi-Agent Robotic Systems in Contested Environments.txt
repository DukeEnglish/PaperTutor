SERN: Simulation-Enhanced Realistic Navigation for Multi-Agent
Robotic Systems in Contested Environments
Jumman Hossain1, Emon Dey1, Snehalraj Chugh1, Masud Ahmed1, MS Anwar1, Abu-Zaher Faridee1,2,
Jason Hoppes3, Theron Trout3, Anjon Basak3, Rafidh Chowdhury3, Rishabh Mistry3, Hyun Kim3, Jade
Freeman4, Niranjan Suri4, Adrienne Raglin4, Carl Busart4, Timothy Gregory4,
Anuradha Ravi1, and Nirmalya Roy1
Abstract—Theincreasingdeploymentofautonomoussystems
in complex environments necessitates efficient communication
andtaskcompletionamongmultipleagents.Thispaperpresents
SERN (Simulation-Enhanced Realistic Navigation), a novel
framework integrating virtual and physical environments for
real-time collaborative decision-making in multi-robot systems.
SERN addresses key challenges in asset deployment and co-
ordination through a bi-directional communication framework
using the AuroraXR ROS Bridge. Our approach advances the
SOTA through: accurate real-world representation in virtual
environments using Unity high-fidelity simulator; synchroniza-
tionofphysicalandvirtualrobotmovements;efficientROSdata
distributionbetweenremotelocations;andintegrationofSOTA
semantic segmentation for enhanced environmental perception.
Our evaluations show a 15% to 24% improvement in latency Fig. 1: The figure illustrates the integration of physical and
and up to a 15% increase in processing efficiency compared virtual robots via the Aurora Bridge Server, which enables
to traditional ROS setups. Real-world and virtual simulation
bi-directional communication, synchronized path planning,
experiments with multiple robots demonstrate synchronization
and semantic segmentation across distinct networks. This
accuracy, achieving less than 5 cm positional error and under
2◦ rotational error. These results highlight SERN’s potential to setup demonstrates our SERN framework’s capability to
enhance situational awareness and multi-agent coordination in maintain consistent situational awareness and coordinated
diverse, contested environments. actionsbetweenrobotsoperatinginbothphysicalandvirtual
environments, thereby validating the system’s effectiveness
I. INTRODUCTION
in supporting distributed multi-agent robotic operations with
The deployment of autonomous multi-robot systems in real-time data sharing and adaptive control.
real-world environments presents significant challenges, in-
cluding the need for robust communication, real-time syn-
chronization, and adaptive decision-making. As these sys- potential to significantly enhance the performance of multi-
tems increasingly operate in complex, dynamic, and often agentsystemsbycombiningthestrengthsofbothapproaches
contested environments—ranging from urban areas to dis- [1], [9]. However, existing frameworks face challenges such
aster sites—there is a growing need for frameworks that as high latency in data synchronization, inefficient commu-
can seamlessly integrate virtual simulations with physical nication protocols, and difficulties in maintaining consistent
deployments[1]–[3].Suchintegrationenablesmoreeffective situationalawarenessacrossdistributedenvironments[2],[6],
testing, planning, and execution, allowing robots to leverage [10].
both simulated predictions and real-world feedback to en- To address these challenges, we introduce SERN
hance their operational efficiency [4]. (Simulation-Enhanced Realistic Navigation), a novel frame-
Traditional approaches to robot navigation and coordina- workdesignedtointegratevirtualandphysicalenvironments
tionoftenrelyoneitherpurelyvirtualsimulationsorphysical seamlessly. SERN provides an adaptive bi-directional com-
trials, each with inherent limitations [5]–[7]. Virtual simula- munication infrastructure that reduces latency and optimizes
tions can offer predictive insights but often lack the fidelity data flow, ensuring that both virtual and physical agents
needed for accurate real-world replication, while physical operate with synchronized situational awareness [5], [11].
trials can be costly, time-consuming, and limited in scope Byincorporatingaphysics-basedsynchronizationmodeland
[8]. Bridging the gap between these two domains has the semantic-awareROStopicmanagement,SERNimprovesthe
fidelity of virtual-to-physical transitions and enhances the
*ThisworkhasbeensupportedbyU.S.ArmyGrant#W911NF2120076
overallcoordinationamongroboticagents[6],[12].Themain
andNSFCNSEAGERGrant#2233879.
1DepartmentofInformationSystems,UniversityofMaryland,BaltimoreCounty, contributions of our work are:
USA.{jumman.hossain,edey1,schugh1,mahmed10,nroy}@umbc.edu. • Integrated Virtual-Physical Environment Represen-
2AmazonInc.,USA.abufari@amazon.com.
3StormfishScientificCorporation,theron.trout@stormfish-sci.com. tation: We present a novel approach for accurate
4DEVCOMArmyResearchLab,USA. real-world representation in virtual environments using
4202
tcO
22
]OR.sc[
1v68661.0142:viXraUnity’shigh-fidelitysimulator.Ourmethodincorporates top of that to bring realism in virtual training environments.
geospatial data and adaptive modeling techniques, sig- Proactive decision-making was first presented by Zhang et
nificantly reducing the time and effort associated with al.[15],butJawharetal.[16]emphasizedtheinefficienciesin
traditional manual terrain modeling. staticdatamodelsandhighlightedcommunicationconstraints
• AuroraXR ROS Bridge for Distributed Communi- in multi-robot systems. While Tan et al. [4] addressed sim-
cation: We develop an efficient ROS data distribution to-real concerns, Lipton et al. [17] investigated the potential
system between remote locations using the AuroraXR of virtual reality to enhance human-robot interaction. In
framework [13]. This bridge enables secure, remote their work, Liang et al. [18] synchronized digital twins with
distribution of ROS data between disparate nodes, both robotics,andStadleretal.[19]addressedcollaborativeplan-
real and virtual, showing a 15% to 24% improvement ning. This latter strand is supported by the study conducted
in latency compared to traditional ROS setups as the byTrout et al. [20] onthe roleof collaborativemixed reality
number of agents increases. indecision-making.Weuseadaptivecommunicationtosolve
• Physics-Aware Synchronization of Robot Move- the challenges faced by high-latency networks, which were
ments: We introduce a dynamic modeling approach for previously encountered by Dennison et al.’s cross-reality
synchronizing physical and virtual robot movements. architecture [13], [21]. In contrast to existing systems, our
Our method incorporates key physical parameters and framework greatly enhances system performance and scala-
a PD control strategy, achieving an average positional bilitybysmoothlyintegratingmorerobotswithoutinterfering
error of less than 5cm and rotational error under 2 with running operations. While synchronisation optimisation
degrees between physical and virtual robots. was studied by Dennison et al. [22], our customised mes-
• Scalable Multi-Agent Coordination: We demonstrate sagepassingtechniqueguaranteesmoreseamless,automated
the scalability of SERN through extensive experiments robotintegration.Ourworkextendsthisconceptbyenabling
involving various numbers of robots, showing robust real-time bidirectional updates between physical and virtual
performance improvements in scenarios that reflect domains.
real-world operational challenges. SERN’s design sup-
B. Integrated Planning and Semantic Data Management
ports the deployment of large-scale multi-agent sys-
tems, maintaining system integrity and synchronization It’s critical to manage ROS data effectively with con-
accuracy even as the number of participating agents strained bandwidth. Zelenak et al.’s [23] research on ROS-
increases. based motion control overlooked data priority, and Mur-
• Cross-Domain Semantic Segmentation and Naviga- Artal and Tardo´s’ [24] optimization of SLAM skipped over
tion: We implement a domain adaptation-based ap- selective handling. The work of Lee et al. [13], [25] focused
proach for semantic segmentation, leveraging 3D Li- on motion data optimization, whereas Guo et al. [26] inves-
DARdatatoenhancegeneralizationacrossdifferenten- tigated reinforcement learning with multiple agents. Wen et
vironments. This is integrated with a navigation system al. [27] applied reinforcement learning to navigation tasks
that operates seamlessly in both physical and virtual for robots, yet scalability remained an issue. There are still
domains, demonstrating improved path planning and issues with path planning because Leet et al.’s [28] scalable
obstacle avoidance. techniques lacked flexibility. The simulations conducted by
ExperimentsdemonstrateSERN’sperformanceincomplex Tuci et al. [29] and Narang et al. [14] did not integrate
scenarios. Compared to traditional ROS systems, our eval- virtual and physical settings. While navigation in simula-
uations show a 15% to 24% improvement in latency and tors was the focus of Dennison et al. [21] and Goecks et
up to a 15% increase in processing efficiency, with results al. [30], our method smoothly integrates planning across
indicating improved network performance (46.9% to 54.5% real and virtual domains. Semantically aware data is given
latency reduction), scalability, and synchronization accuracy priority, enabling automated robot-to-robot communication
(<5cm positional error, <2◦ rotational error). withoutmanualoversight.Althoughearlierresearchachieved
advancementsinplanning,synchronization,andcommunica-
II. RELATEDWORK tion, deficiencies in flexibility and scalability still exist.
Inthissection,weaddressexistingchallengesinreal-time Our SERN framework addresses these shortcomings by
communication, synchronization, and multi-robot coordina- enhancing real-time adaptability and seamlessly integrating
tion during navigation between virtual and physical robotics. virtual and physical robots for improved coordination and
navigation.
A. Synchronizing Physical and Virtual Domains with Real-
Time Communication
III. METHODOLOGY
A. Representing Real Environment in Virtual World
Efficientbidirectionalcommunicationandreal-timemulti-
agent coordination is a primary factor to create consistent Accurate representation of real-world environments in vir-
representations between physical and virtual environments. tual domains is essential for effective sim-to-real transfer,
Tanetal.[4]introducedamethodforgeneratinghigh-fidelity particularly for multi-agent robotic systems operating in
virtualenvironmentsfromreal-worldsensordata,facilitating complex and contested scenarios. We propose a novel ap-
more accurate simulations. Narang et al. [14] improved on proach that integrates geospatial data and adaptive modelingtechniquestogeneratehigh-fidelityvirtualterrainsfromreal- Algorithm 1 Convert GPS to Unity Coordinates
world geographic data. Utilizing Unity, our framework auto- Require: Reference coordinates (ϕ ,λ ,h ), Target co-
ref ref ref
mates the creation of virtual environments by incorporating ordinates (ϕ,λ,h), Scaling factor s
datafromDigitalElevationModels(DEM),satelliteimagery, 1: Initialize: Earth’s radius r ←6371000 meters
and vector data, significantly reducing the time and effort 2: function HAVERSINEDISTANCE(ϕ 1,λ 1,ϕ 2,λ 2)
associated with traditional manual terrain modeling. This 3: ∆ϕ←ϕ 2−ϕ 1
method enhances scalability and allows for frequent updates 4: ∆λ←λ 2−λ 1
that accurately reflect dynamic changes in the physical envi- 5: a←sin2(∆ 2ϕ)+ √cos( √ϕ 1)·cos(ϕ 2)·sin2(∆ 2λ)
ronment. 6: c←2·arctan2( a, 1−a)
To maintain spatial fidelity, we employ the Haversine 7: return r·c
formula [31] to calculate great-circle distances between 8: end function
geographiccoordinates,accountingfortheEarth’scurvature: 9: d x ← HAVERSINEDISTANCE(ϕ ref,λ ref,ϕ ref,λ)
(cid:32)(cid:115) (cid:18) (cid:19) (cid:18) (cid:19)(cid:33)10: d z ← HAVERSINEDISTANCE(ϕ ref,λ ref,ϕ,λ ref)
∆ϕ ∆λ
d=2rarcsin sin2
2
+cos(ϕ 1)cos(ϕ 2)sin2
2
1 1,1 2:
:
if λ d<
x
←λ ref −t dh xen ▷ Adjust for direction
(1) 13: end if
where d is the distance between two points, r is the Earth’s 14: if ϕ<ϕ ref then
radius,∆ϕ=ϕ 2−ϕ 1 isthedifferenceinlatitude,and∆λ= 15: d z ←−d z
λ 2−λ 1isthedifferenceinlongitude.Thiscalculationensures 16: end if
accurate spatial representation in Unity by converting these 17: u x ←s·d x
distances into Unity units with appropriate scaling factors, 18: u y ←s·(h−h ref)
mapping latitude to the Z-axis, longitude to the X-axis, and 19: u z ←s·d z
altitude to the Y-axis. The scaling is defined by: 20: return (u x,u y,u z)
u=s·d, (2)
Algorithm 2 Adaptive Level of Detail (LoD) Scaling
where u = (u ,u ,u ) represents the Unity coordinates,
x y z
Require: Critical Regions C, Environment Grid G, LoD
d = (d ,d ,d ) is the vector of distances derived from the
x y z
Levels {L ,L ,L }
Haversine calculation, and s is the scaling factor determined high medium low
by the Unity environment configuration to ensure correct 1: for each cell (x,y,z)∈G do
proportions. Detailed on (Algorithm 1). 2: if (x,y,z)∈C then
A significant addition of our approach is the adaptive Level 3: Set LoD(x,y,z)←L high
of Detail (LoD) scaling (Algorithm 2), which dynamically 4: elseifproximity to critical(x,y,z)<thresholdthen
adjusts the fidelity of the virtual environment according to 5: Set LoD(x,y,z)←L medium
the simulation’s operational requirements. The LoD scaling 6: else
algorithm prioritizes computational resources by applying 7: Set LoD(x,y,z)←L low
high-resolution rendering in critical regions—such as those 8: end if
with dense obstacles or complex navigation paths—while 9: end for
simplifying less critical areas:
(cid:40)
High, if (x,y,z)∈Critical Regions change of information between augmented- and virtual- re-
LoD(x,y,z)= ,
Low, otherwise ality environments with real-world sensors, data-feeds, and
(3) compute platforms. The capabilities that it provides to en-
where LoD(x,y,z) denotes the level of detail at a specific able those usage scenarios were evaluated as applicable to
coordinate, dynamically assigned based on the region’s rele- developing advanced remote communication capabilities for
vance to the navigation task. robotic systems. Building upon this framework, we have im-
plementedtheAuroraXRROSBridge,whichofferstwocore
B. Distribution of ROS Data Between Remote Locations functionalities essential for our distributed robotic system:
A critical challenge in distributed robotics systems is the 1) Secure, remote distribution of ROS data between dis-
efficientandsecuretransmissionofROSdatabetweenremote parate ROS nodes, both real and virtual. This capability
locations. While ROS provides robust capabilities for local extends the work of Crick et al. [32] on ROS network
network communication, it lacks native support for remote, transparency, providing a more robust solution for long-
distributedcommunications.Ourmethodologyaddressesthis distance, potentially unreliable network connections.
limitation through the integration of the AuroraXR Cross- 2) Representation of ROS entities as AuroraXR objects
Reality framework [13] and the development of Bridge to with associated metadata to enable interactive visualization
enable data communication between agents (Fig. 2). inaugmented-,mixed-,andvirtual-realityenvironments.This
The AuroraXR was developed to provide a secure, high- abstraction allows for more flexible and efficient handling
performance framework for mediating the bi-directional ex- of ROS data across different platforms and environments,similar to the approach proposed by Quigley et al. [11]
but extended to cross-reality applications, and opens new
opportunities for enabled human-machine interfacing as well
as integration with external AI/ML capabilities.
Our methodology leverages these capabilities to transport
ROSdatafromaROSnodeviaAuroraXR,andthenrepublish
it as original ROS data at a remote location using the
AuroraXR App Proxy (Fig. 3). This approach ensures that
ROS data can be seamlessly distributed and utilized across
geographically disparate systems, whether they are physical
robots or virtual simulations. Fig. 3: Bi-directional Communication Framework Overview
ZMQ Subscriber thread retrieves these serialized messages,
deserializesthem,andrepublishesthemtothecorresponding
ROS topics. This approach not only facilitates efficient data
handling but also reduces latency compared to traditional
ROS communication setups, making it well-suited for real-
time applications.
Configuration of the AuroraXR ROS Bridge can be per-
formedmanually,wherespecifictopicsarepredefinedincon-
figuration files, or dynamically, where the bridge’s Dynamic
Configuration Thread automatically discovers and manages
new ROS topics. This flexibility allows the bridge to adapt
Fig. 2: AuroraXR System tochangingnetworkconditionsandoperationalrequirements
without manual reconfiguration, enhancing its usability in
dynamicenvironments.Furthermore,theintegrationofsecure
C. AuroraXR Bridge Integration communication protocols through the AuroraXR App Proxy
The AuroraXR ROS Bridge plays a crucial role in facil- ensuresthatdataintegrityandconfidentialityaremaintained,
itating communication between distributed ROS nodes and which is particularly critical in applications operating in
virtual environments by leveraging the AuroraXR server contested environments.
for secure and efficient data transfer. This integration is
D. Synchronizing Physical and Virtual Robot Movements
pivotalinscenariosinvolvingmulti-agentcoordinationacross
geographically separated nodes, as it enables seamless data Acrucialaspectofourmethodologyisthesynchronization
exchange between physical robots, controllers, and simula- of movements between the physical robot and its virtual
tion systems [33]. counterpart.Thissynchronizationisessentialformaintaining
The AuroraXR ROS Bridge framework, presented in consistency between the real and simulated environments, a
Fig.3,consistsofcomponentsthatmanagethebi-directional key challenge in robotics research [35].
flow of data between ROS environments. Central to this The synchronization process begins with the real-time
setup are the ROS Publishers and Subscribers, ZeroMQ collection of state data from the physical robot, including its
(ZMQ) [34] communication nodes, and the AuroraXR App current position p , velocity v , and acceleration a .
phys phys phys
Proxy. The ZMQ Publisher and Subscriber threads are the These values are fed into a dynamic model M , which
phys
core of the bridge’s operation, where the Publisher thread predictsthenextstateofthevirtualrobotusingthefollowing
serializes ROS messages from subscribed topics into binary equations:
streams, which are then transmitted across the network. a = f phys−f res, (4)
Conversely, the Subscriber thread deserializes incoming bi- virt pred m
nary streams into ROS messages and directs them to the
v =v +a ∆t, (5)
appropriate ROS publishers on the receiving end. This bi- virt pred virt virt pred
directionalflowallowsforconsistentsynchronizationofdata
p =p +v ∆t, (6)
virt pred virt virt pred
between different network segments, effectively integrating
physical and virtual systems. wheref representstheforcesactingonthephysicalrobot,
phys
The operational workflow of the AuroraXR ROS Bridge f accounts for resistive forces such as friction, m is the
res
involves multiple threads working together. The ZMQ Pub- mass of the robot, v is the current velocity of the virtual
virt
lisher thread collects data from ROS topics, serializes it, robot, p is its current position, and ∆t is the time step.
virt
and routes it through the AuroraXR App Proxy to the The forces f are estimated using inertial measurement
phys
AuroraXR server, which manages the secure transmission of units(IMUs)andmotorcurrentsensorsonthephysicalrobot,
this data across distributed nodes. On the receiving side, the providing real-time force data for accurate synchronization.The predicted state of the virtual robot, S , is then This transformation reduces computational complexity and
virt pred
calculated as: enables the robot to perform path planning using the 2D
representation.
S =[p ,v ,a ] (7)
virt pred virt pred virt pred virt pred
S (r,θ)=minL (r,θ,z)
Thisstatevectorincludesthepredictedposition,velocity,and 2D z 3D
acceleration of the virtual robot. The predicted state S
virt pred Here, L (r,θ,z) represents the 3D lidar points, and
3D
is then compared against the actual physical state S to
phys S (r,θ) represents the 3D lidar points. Simultaneous Lo-
2D
calculate synchronization errors in position and velocity:
calization and Mapping (SLAM) [36] is implemented on the
e =p −p , (8) 2Dscanfornavigation,wheretherobotcomputesamapand
pos phys virt pred
identifies an optimal path toward a final goal position.
e vel =v phys−v virt pred. (9) To handle semantic segmentation, we developed a domain
adaptation-based approach [37], leveraging 3D lidar data
If these errors exceed predefined thresholds ϵ and ϵ ,
pos vel
to enhance generalization across different domains (e.g.,
corrective forces f are applied to the virtual robot using a
corr
different environments). Domain adaptation is crucial for
proportional-derivative (PD) control strategy:
improvingthemodel’sabilitytogeneralizewithoutrequiring
f corr =K p·e pos+K d·e vel, (10) vast amounts of labeled data from the target domain. By
aligning the source and target domain distributions, our
where K and K are proportional and derivative gains,
p d
model is able to better understand and segment the 3D lidar
respectively.Thesecorrectiveforcesadjustthevirtualrobot’s
data in real-time, ensuring accurate perception (Fig. 5).
acceleration, velocity, and position to more closely match
those of the physical robot, thereby minimizing discrep- IV. EXPERIMENTSANDRESULTS
ancies and maintaining synchronization. This synchronized
This section details the implementation of our SERN
operation between physical and virtual robots is crucial for
framework, experimental scenario design, compares it with
maintainingcoherentactionsandsharedunderstandingacross
traditional ROS architecture on computational and commu-
both domains. Fig. 4 illustrates the data flow enabled by our
nication metrics, and demonstrates its application in LiDAR
framework,highlightinghowconsistentsituationalawareness
point cloud-based semantic segmentation and navigation.
is achieved between virtual and physical domains, thereby
facilitating effective and coordinated actions. A. Experimental Setup
ToassesstheeffectivenessofourdistributedSERN frame-
work, we designed a test environment that simulates geo-
graphically separated ROS networks connected through the
AuroraXRserver.Fig.2illustratesthenetworktopologyused
in our experiments, comprising two distinct ROS networks,
each operating on separate subnets. Each network includes
physical robots, virtual robots, a ROS Master node, a ROS
Bridge interfacing with the AuroraXR server, a WiFi access
pointforlocalwirelesscommunication,andanetworkswitch
for wired connections. The AuroraXR server acts as the
central component bridging these two networks, facilitating
communication between the geographically separated ROS
environments. It connects to both networks via distinct
network interfaces, enabling efficient routing of messages
between the ROS nodes in each network. This setup allows
us to rigorously test various scenarios that are crucial for
Fig. 4: Visualization of data received from our framework.
distributed multi-agent systems, including real-time synchro-
nization of robot movements across networks, transmission
E. Environmental Perception and Navigation Planning
of sensor data between robots, and distributed control where
To evaluate command and control, we also integrated se- operators on one network can command robots on the other.
manticsegmentationandnavigationcapabilitiesinbothphys- Additionally, we simulated latency and network disruptions
ical and virtual domains, enabling simultaneous command toevaluatethesystem’srobustnessunderadverseconditions.
execution. This integration facilitates real-time interaction We have selected an experimental scenario to solidify
between the perception system and navigation algorithms, our conceptualization of SERN, which involves real-time
ensuring efficient operation in dynamic environments. navigation,coordinationwiththevirtualenvironment,andthe
Fornavigation,3Dlidarisfirsttransformedintoa2Dscan applicationofanon-the-flysemanticsegmentationtechnique.
byapplyingacondition:ifanobjectwithinthelidar’sdetec- Wehavecreatedanidenticalvirtualrepresentationofanarea
tionrangesurpassesacertainthreshold(i.e.,consideredtobe of the UMBC CARDS Lab [38] using Unity, where we have
in close proximity to the robot), it is flagged as an obstacle. placed a car as an obstacle (Fig. 5). The robot’s task is to(a) (b) (c)
Fig.5:VirtualandphysicalenvironmentsusedforevaluatingSERNframework.(a)Virtualenvironmentshowingthesimulated
robotnavigatinganareawithobstacles(b)Correspondingphysicalenvironmentwiththerealrobotexecutingnavigationtasks
in a similar setup, demonstrating real-world implementation and validation of the framework. (c) Semantic segmentation
outputfromtheenvironment,highlightingthesystem’sabilitytoidentifykeyfeaturessuchasobstaclesandnavigablepaths,
ensuring synchronized perception and navigation between the virtual and physical domains.
Fig. 6: Performance Comparison of AuroraXR ROS Bridge integrated SERN framework vs. Traditional ROS. We
implemented the identical process of increasing the robot numbers by 2, 3 and 5 and recorded the CPU, memory usage,
power consumption, and latency overhead of the AuroraXR server and traditional ROS Master. We have chosen the point
cloud data generated by each of the robots as data modality to be read and visualized and illustrated the averaged values
after 20 iterations of each setup.
avoid it and navigate through a wooden bridge, provided it object insertions reflected in the physical robot’s perception
is not obstructed by other adversaries. To better understand with an average positional error of only 2.3cm. The system
the virtual-physical coordination, we have maintained some achieved a 10Hz refresh rate for physical-to-virtual environ-
discrepancies between the two environments. For example, ment updates, allowing for near real-time synchronization.
the virtual scenario includes fallen tree logs on the bridge, This capability enhances situational awareness and enables
while the actual environment’s bridge remains navigable. To more effective remote operation and mission planning.
initiate the experiment, the physical robot will continuously
To evaluate the scalability and performance of the Auro-
gather environmental information from the virtual robot,
raXR integration, we conducted a series of tests comparing
all while operating simultaneously. However, the physical
our system against a traditional ROS setup across different
robot should also detect any discrepancies among the virtual
numbers of agents. The metrics considered include CPU
information and act using its own semantic segmentation
usage, memory usage, power consumption, and the latency
algorithm. Information exchange is primarily carried out
for sending commands and data as the number of agents
via ROStopics and transmitted over the AuroraXR server.
increases.
Additionally, an app proxy is set up within each agent.
As shown in Fig. 6, the AuroraXR ROS Bridge demon-
Extending the experimental scenario, we systematically aug-
strates superior scalability compared to the traditional ROS
mentedthequantityoftopicsoriginatingfromseveralrobots
setup across an increasing number of agents. The AuroraXR
and Rosbags, and subsequently assessed the computational
Bridge consistently exhibits lower CPU and memory usage,
and communication metrics.
as well as reduced power consumption, which are critical
B. Performance Analysis
factorsfordeployingdistributedroboticsystemsinresource-
The synchronization between physical and virtual robots constrained environments. Notably, the power consumption
was highly accurate, with an average positional error of less overhead on the server node shows an improvement of a
than 5cm and rotational error under 2 degrees. This high range from approximately 10% to 39% while increasing the
fidelity in synchronization ensures that virtual simulations numberofroboticagentsfrom2to5,comparedtotraditional
closely represent real-world scenarios, enhancing the relia- ROS Master, mainly due to the offloading technique adopted
bility of mission planning and training exercises. The cross- in the SERN architecture. Furthermore, the latency for both
reality integration showed promising results, with virtual command and data transmission remains significantly lowerwith AuroraXR, with improvements ranging from 15.7% to V. CONCLUSION,LIMITATIONS,ANDFUTURE
24.7% as the number of agents increases. This indicates DIRECTIONS
that the AuroraXR integration not only enhances commu-
nication efficiency but also scales effectively, maintaining In this paper, we introduced SERN, a framework that
performance advantages even as the system load grows. bridges physical and virtual environments to enhance co-
ordination and decision-making in multi-agent robotic sys-
ThereducedCPUconsumptioninSERNisattributedtoits
tems. Testing in simulated and real-world scenarios showed
intelligentcommunicationmanagementanddecoupledarchi-
improvedsynchronizationandnavigationperformance.How-
tecture,whicheffectivelyminimizestheprocessingburdenon
ever,SERN’srelianceonnetworkstabilitycanimpactperfor-
individual nodes. This is particularly advantageous when the
manceindisruptedorlow-connectivityenvironments,andits
quantityofrobotsgrows,asconventionalROShaschallenges
real-timeprocessingposeschallengeswhenprocessingmulti-
with increased CPU requirements owing to its synchronous
modal data for a common mission with increasing agent
and more tightly coupled communication structures. The
numbers. Future work will focus on enhancing resilience to
SERNdesignfacilitatesthetransferandenhancementofdata
network disruptions, exploring edge computing to reduce la-
processing amongst several components, therefore enabling
tency, enhancing the capability of SERN for remote robotics
more effective resource management, subsequently improv-
experimentationacrossdifferentgeolocations,andexpanding
ing memory utilization and power consumption. The utiliza-
support for heterogeneous robot teams, including aerial and
tion of ZMQ for serialized binary data transfer improves the
underwater vehicles, with advanced machine learning for
latency values while handling data originating from several
predictive navigation.
robots by reducing the overhead caused by the consistently
growingROStopicscommonlyobservedinconventionalROS
communication stacks. REFERENCES
Dynamic Configuration Validation: Our real robot test-
ing setup demonstrates the system’s dynamic configuration [1] YongcanCao,WenwuYu,WeiRen,andGuanrongChen.Anoverview
ofrecentprogressinthestudyofdistributedmulti-agentcoordination.
capability. Initially, multiple robots are connected to the
IEEETransactionsonIndustrialinformatics,9(1):427–438,2013.
bridgeononenetwork,withvisualizersonanother.TheROS [2] Lingzhi Luo, Nilanjan Chakraborty, and Katia Sycara. Distributed
bridge, set to dynamic topic discovery mode, continuously algorithms for multirobot task assignment with task deadline con-
straints. IEEETransactionsonAutomationScienceandEngineering,
monitors for new nodes and topics. When a new robot
12(3):876–888,2015.
joins the network, the bridge automatically detects it and [3] ZhiYan,NicolasJouandeau,andArabAliCherif. Asurveyandanal-
subscribes to its relevant topics, integrating its data into the ysis of multi-robot coordination. International Journal of Advanced
RoboticSystems,10(12):399,2013.
existing flow without system interruption. This approach en-
[4] Jie Tan, Tingnan Zhang, Erwin Coumans, Atil Iscen, Yunfei Bai,
ablesseamlessexpansionoftherobotteamduringoperation,
Danijar Hafner, Steven Bohez, and Vincent Vanhoucke. Sim-to-
enhancing flexibility and scalability. real:Learningagilelocomotionforquadrupedrobots. arXivpreprint
arXiv:1804.10332,2018.
Cross-Network ROS Communication Testing: To vali- [5] Edwin Olson. Apriltag: A robust and flexible visual fiducial system.
date the effectiveness of the SERN framework in managing In2011IEEEInternationalConferenceonRoboticsandAutomation,
pages3400–3407.IEEE,2011.
cross-networkcommunication,weconductedtestsusingROS
[6] Abdelghani Chibani, Antonio Ferrara, Alessio Gennaro, Mattia Luc-
publisher and subscriber nodes connected via the AuroraXR chese, and Laura Piccinini. A critical review of communication
server. In this setup, each ROS bridge was deployed on technologies in multi-robot systems. In 2021 IEEE International
ConferenceonRoboticsandAutomation(ICRA),pages14087–14094.
separate laptops operating on distinct networks, simulating
IEEE,2021.
a distributed multi-agent environment. On the publishing
[7] Nathan Koenig and Andrew Howard. Design and use paradigms for
side, ROS traffic was generated using ROS bag files, which gazebo, an open-source multi-robot simulator. In 2004 IEEE/RSJ
emulates real-world sensor data and control commands. This International Conference on Intelligent Robots and Systems (IROS),
volume3,pages2149–2154.IEEE,2004.
data was published to the ROS bridge, which subscribes to
[8] Stephen James, Paul Wohlhart, Mrinal Kalakrishnan, Dmitry Kalash-
theincomingmessages.Thebridgethenencapsulatesthedata nikov, Alex Irpan, Julian Ibarz, Sergey Levine, Raia Hadsell, and
within a custom envelope format optimized for transmission Konstantinos Bousmalis. Sim-to-real via sim-to-sim: Data-efficient
roboticgraspingviarandomized-to-canonicaladaptationnetworks. In
across the AuroraXR server. On the receiving side, the ROS
Proceedings of the IEEE/CVF Conference on Computer Vision and
bridge re-publishes the data to the ROS broadcast network, PatternRecognition,pages12627–12637,2019.
where it is subscribed to by various nodes, including a [9] Josh Tobin, Rachel Fong, Alex Ray, Jonas Schneider, Wojciech
Zaremba, and Pieter Abbeel. Domain randomization for transferring
data visualizer for monitoring. This end-to-end test setup
deepneuralnetworksfromsimulationtotherealworld.arXivpreprint
demonstrates the bi-directional communication capabilities arXiv:1703.06907,2017.
of SERN, allowing for seamless data flow and interaction [10] Xue Bin Peng, Abhishek Gupta, Atsunori Usman, Bo Zhang, Lerrel
between distributed ROS networks. A video demonstration Pinto, Handong Lee, Dimitri Kolev, Shixiang Song, Silvio Savarese,
and Jitendra Malik. Sim-to-real transfer of robotic control with
is provided.1 dynamics randomization. In 2018 IEEE International Conference on
RoboticsandAutomation(ICRA),pages1–8.IEEE,2018.
[11] MorganQuigley,KenConley,BrianGerkey,JoshFaust,TullyFoote,
JeremyLeibs,RobWheeler,AndrewYNg,etal.Ros:anopen-source
robotoperatingsystem. InICRAworkshoponopensourcesoftware,
1Videodemonstrationavailableat:https://youtu.be/BqNoqDPqhNc volume3,page5.Kobe,Japan,2009.[12] AbhishekKadian,JoanneTruong,AaronGokaslan,AlexanderClegg, [30] Vinicius G Goecks, Nicholas Waytowich, Derrik E Asher, Song
ErikWijmans,StefanLee,ManolisSavva,SoniaChernova,andDhruv Jun Park, Mark Mittrick, John Richardson, Manuel Vindiola, Anne
Batra. Sim2real predictivity: Does evaluation in simulation predict Logie,MarkDennison,TheronTrout,etal. Ongamesandsimulators
real-world performance? In IEEE Robotics and Automation Letters, as a platform for development of artificial intelligence for command
volume5,pages6670–6677.IEEE,2020. and control. The Journal of Defense Modeling and Simulation,
[13] M.S.DennisonandT.T.Trout.Auroraxr–motivationsandobjectives 20(4):495–508,2023.
forachievinganinteroperableframeworkforcross-realityapplications. [31] Wikipedia contributors. Haversine formula — Wikipedia, the free
TechnicalReportARL-TR-9524,USDEVCOMArmyResearchLab, encyclopedia,2023. Accessed:2024-09-15.
2022. [32] ChristopherCrick,GraylinJay,SarahOsentoski,BenjaminPitzer,and
[14] YashrajNarang,KierStorey,IretiayoAkinola,MilesMacklin,Philipp Odest Chadwicke Jenkins. Rosbridge: Ros for non-ros users. In
Reist,LukaszWawrzyniak,YunrongGuo,AdamMoravanszky,Gavriel RoboticsResearch,pages493–504.Springer,2017.
State, Michelle Lu, et al. Factory: Fast contact for robotic assembly. [33] Unitysimulator. https://unity.com/products/unity-simulation-pro. Ac-
arXivpreprintarXiv:2205.03532,2022. cessed:2024-09-14.
[34] ZeroMQProject.Zeromq-high-performanceasynchronousmessaging
[15] Ceyao Zhang, Kaijie Yang, Siyi Hu, Zihao Wang, Guanghe Li,
library. https://zeromq.org/,2024. Accessed:2024-09-14.
Yihang Sun, Cheng Zhang, Zhaowei Zhang, Anji Liu, Song-Chun
[35] Jemin Hwangbo, Joonho Lee, Alexey Dosovitskiy, Dario Bellicoso,
Zhu,etal. Proagent:buildingproactivecooperativeagentswithlarge
languagemodels.InProceedingsoftheAAAIConferenceonArtificial VassiliosTsounis,VladlenKoltun,andMarcoHutter. Learningagile
Intelligence,volume38,pages17591–17599,2024. anddynamicmotorskillsforleggedrobots. ScienceRobotics,4(26),
2019.
[16] Imad Jawhar, Nader Mohamed, Jie Wu, and Jameela Al-Jaroodi.
[36] T Bailey. Simultaneous localization and mapping (slam) part i:
Networking of multi-robot systems: Architectures and requirements.
the essential algorithms. IEEE Robotics and Automation Magazine,
JournalofSensorandActuatorNetworks,7(4):52,2018.
13(3):99–110,2006.
[17] Jeffrey I Lipton, Aidan J Fay, and Daniela Rus. Baxter’s homuncu-
[37] Bichen Wu, Xuanyu Zhou, Sicheng Zhao, Xiangyu Yue, and Kurt
lus: Virtual reality spaces for teleoperation in manufacturing. IEEE
Keutzer. Squeezesegv2: Improved model structure and unsupervised
RoboticsandAutomationLetters,3(1):179–186,2017.
domain adaptation for road-object segmentation from a lidar point
[18] Ci-Jyun Liang, Wes McGee, Carol Menassa, and Vineet Kamat. Bi- cloud. In 2019 international conference on robotics and automation
directional communication bridge for state synchronization between (ICRA),pages4376–4382.IEEE,2019.
digitaltwinsimulationsandphysicalconstructionrobots. InProceed- [38] UMBCCARDSLab. https://cards.umbc.edu/. Accessed:2024-09-15.
ings of the International Symposium on Automation and Robotics in
Construction(IAARC),2020.
[19] MartinaStadler,JacopoBanfi,andNicholasRoy. Approximatingthe
valueofcollaborativeteamactionsforefficientmultiagentnavigation
in uncertain graphs. In Proceedings of the International Conference
on Automated Planning and Scheduling, volume 33, pages 677–685,
2023.
[20] TheronTTrout,StephenRussell,AndreHarrison,MarkDennisonJr,
Ryan Spicer, Evan Suma Rosenberg, and Jerald Thomas. Collabo-
rative mixed reality (mxr) and networked decision making. In Next-
GenerationAnalystVI,volume10653,pages186–194.SPIE,2018.
[21] MarkDennison,JeraldThomas,TheronTrout,andEvanSumaRosen-
berg. Assessingthequantitativeandqualitativeeffectsofusingmixed
realityforoperationaldecisionmaking. emergence,1(2),2018.
[22] Mark Dennison, Christopher Reardon, Jason Gregory, Theron Trout,
and John G Rogers III. Creating a mixed reality common operating
picture across c2 echelons for human-autonomy teams. In Virtual,
Augmented, and Mixed Reality (XR) Technology for Multi-Domain
Operations,volume11426,pages137–144.SPIE,2020.
[23] AndyZelenak,RobertReid,AdamPettinger,andMitchPryor. Reac-
tive motion control for real-time teleoperation and semi-autonomous
contact tasks. In International Conference on Intelligent Robots and
Systems.IROS,2019.
[24] RaulMur-ArtalandJuanDTardo´s. Orb-slam2:Anopen-sourceslam
system for monocular, stereo, and rgb-d cameras. IEEE transactions
onrobotics,33(5):1255–1262,2017.
[25] Michael Lee, Andrew Tweedell, Mark Dennison Jr, Paul Sabbagh,
JosephConroy,TheronTrout,JadeFreeman,andBrentLance.Model-
ingandanalysisofmotiondatafromdynamicsoldierstateestimation
toenablesituationalunderstanding. InVirtual,Augmented,andMixed
Reality (XR) Technology for Multi-Domain Operations III, volume
12125,pages139–144.SPIE,2022.
[26] YueGuo,JosephCampbell,SimonStepputtis,RuiyuLi,DanaHughes,
Fei Fang, and Katia Sycara. Explainable action advising for multi-
agentreinforcementlearning. In2023IEEEInternationalConference
onRoboticsandAutomation(ICRA),pages5515–5521.IEEE,2023.
[27] JoshuaWen,ZihanChen,JiahaoKong,NathanCahill,SarahKeegan,
andJohnJLeonard. Efficientreinforcementlearningforrobotsusing
informativesimulatedpriors. In2020IEEEInternationalConference
onRoboticsandAutomation(ICRA),pages96–103.IEEE,2020.
[28] Christopher Leet, Jiaoyang Li, and Sven Koenig. Shard systems:
Scalable, robust and persistent multi-agent path finding with perfor-
manceguarantees.InProceedingsoftheAAAIConferenceonArtificial
Intelligence,volume36,pages9386–9395,2022.
[29] Elio Tuci, Muhanad HM Alkilabi, and Otar Akanyeti. Cooperative
object transport in multi-robot systems: A review of the state-of-the-
art. FrontiersinRoboticsandAI,5:59,2018.