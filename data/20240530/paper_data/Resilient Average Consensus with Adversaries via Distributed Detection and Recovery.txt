IEEETRANSACTIONSANDJOURNALSTEMPLATE 1
Resilient Average Consensus with Adversaries
via Distributed Detection and Recovery
Liwei Yuan, Member, IEEE and Hideaki Ishii, Fellow, IEEE
Abstract—We study the problem of resilient average TABLEI
consensus in multi-agent systems where some of the COMPARISONSWITHRELATEDRESILIENTAVERAGINGWORKS
agents are subject to failures or attacks. The objective of Algorithm3 [38] [23] [22]
resilientaverageconsensusisfornon-faulty/normalagents
Network
to converge to the average of their initial values despite type Directed Undirected Undirected Directed
the erroneous effects from malicious agents. To this end,
Adversary
weproposeasuccessfuldistributediterativeresilientaver- type Malicious Malicious Malicious Byzantine
ageconsensusalgorithmforthemulti-agentnetworkswith
Neighboring
general directed topologies. The proposed algorithm has adversaries Yes No No Yes
twopartsateachiteration:detectionandaveraging.Forthe
Communication detection part, we propose two distributed algorithms and range Two-hop Two-hop Two-hop Flooding
oneofthemcandetectmaliciousagentswithonlytheinfor-
mationfromdirectin-neighbors.Fortheaveragingpart,we
extend the applicability of an existing averaging algorithm properlyfunctioneveninthepresenceoffaultsandadversarial
wherenormalagentscanremovetheeffectsfrommalicious agents have been actively studied; see, e.g., [17]–[21]. The
agents so far, after they are detected. Another important objective is for the non-faulty/normal agents to reach consen-
featureofourmethodisthatitcanhandlethecasewhere
sus without being affected by the misbehaviors of adversarial
malicious agents are neighboring and collaborating with
agents. In this context, resilient algorithms for performing
eachothertomisleadthenormalonesfromaveraging.This
case cannot be solved by existing detection approaches averageconsensushaveremainedsomewhatlimitedexceptfor
in related literature. Moreover, our algorithm is efficient in the recent works [22]–[24]. A major challenge is that, normal
storage usage especially for large-scale networks as each agents should reach consensus on the exact average of their
agent only requires the values of neighbors within two
initial values despite adversarial agents’ misbehaviors, which
hops. Lastly, numerical examples are given to verify the
may include adding erroneous values to the normal agents’
efficacyoftheproposedalgorithms.
values during the interactions with normal neighbors.
Index Terms—Average consensus, directed topologies,
In this paper, we propose an iterative distributed algorithm
distributeddetection,resilientconsensus.
to tackle the resilient average consensus (RAC) problem in
general directed networks under the attacks by the so-called
I. INTRODUCTION malicious agents. Such an agent is capable to send arbitrary
DISTRIBUTED consensus in multi-agent systems is a butidenticalvaluestoitsneighborsateachiteration[19],[25],
[26]. This is the typical way of communication in broadcast
fundamental and well-studied topic across different re-
networks[27].Therearebasicallytwotypesofapproachesfor
search areas including systems control, computer science, and
handlingtheresilientconsensusproblem,wherenormalagents
communication [1]–[4]. Under this broad topic, a particular
needtoreachacommonvaluebutnotnecessarilytheaverage
problem that has been extensively studied is that of average
of the initial values: (i) mean subsequence reduced (MSR)
consensus where agents try to reach consensus on the average
algorithms [19], [28]–[35] and (ii) detection and isolation
oftheirvaluesthroughlocalinteractionsamongnearbyagents
algorithms [36], [37]. In MSR algoirthms, agents utilize only
[5]–[13]. Average consensus algorithms are also useful to
thevaluesinatime-varyingsafetyintervaltoupdatetheirnext
maintain the total of the resources invariant and have found
values, with no capabilities to recognize whether a neighbor
applications in, e.g., economic dispatch problems for power
is adversarial or not. On the other hand, in detection and
systems [14], distributed computation of PageRank for the
isolation algorithms, agents detect the neighbors violating
search engine of Google [15], [16]. As concerns for cyber-
the given consensus protocol and remove the values of such
security sharply rise in our society, consensus protocols that
neighbors for updating their next values. This property makes
the detection approach a good basis for our RAC algorithm.
This work was supported in the part by JSPS under Grant-in-Aid
for Scientific Research Grant No. 22H01508, and in the part by the The reason is that the information of identities of normal
YuelushanCenterforIndustrialInnovationunderGrant2023YCII0102. agents must be known by the algorithms, which is the key
L. Yuan is with the College of Electrical and Information Engi-
to accumulate the values of normal agents for averaging.
neering, Hunan University, Changsha, 410082, China (e-mail: yuanli-
wei@hnu.edu.cn). Our RAC algorithm is based on the detection approach and
H. Ishii is with the Department of Information Physics and Com-
hastwoparts:detectionandaveraging.Existingrelatedworks
puting, The University of Tokyo, Tokyo, 113-8656, Japan (e-mail:
hideakiishii@ipc.i.u-tokyo.ac.jp). for the RAC problem share this structure [22], [23], [38].
4202
yaM
92
]AM.sc[
1v25781.5042:viXra2 IEEETRANSACTIONSANDJOURNALSTEMPLATE
However, our method has certain advantages over them in agents have access to the inputs of their neighbors. This will
different aspects as listed in Table I. More specifically, the enable them to obtain multiple reconstructed versions of the
work[22]proposedasecurebroadcastandretrievalalgorithm outputs of their neighbors and then to compare them to find
fortheRACproblemindirectednetworks.There,eachnormal the true outputs. The difference between the two algorithms
agent uses a certified propagation algorithm to broadcast its lies in the levels in the capabilities for the normal agents
initial value to all agents and retrieve the initial values of to share the detection information among themselves. The
normal agents for averaging. This approach would cost a firstalgorithmassumestheavailabilityofauthenticatedmobile
huge amount of storage and time for collecting the values detectors,whichhelptoreducetherequirementonthenetwork
of all normal agents in a large-scale network. The work connectivity. It will be referred to as the sharing detection
[23] proposed a detection and compensation algorithm for the algorithm. Our second algorithm is more significant in that it
RAC problem in undirected networks. It utilizes the two-hop can be implemented in a fully distributed fashion in our RAC
neighbors’ information to detect misbehaving neighbors and algorithm. Here, each normal node is able to acquire all the
it requires a doubly stochastic adjacent matrix for averaging. inputs of an in-neighbor through the majority voting under
As a result, their algorithm is applied in undirected networks a necessary graph structure. Besides, it obtains the detection
only and also cannot handle the case where malicious agents information of any two-hop in-neighbor (in-neighbor’s in-
are neighboring with each other. Recently, the authors of neighbor) by the same approach. As a result, normal nodes
[24] proposed an RAC algorithm for directed networks. It can independently detect all the malicious neighbors violating
allowsnormalagentstodynamicallyremoveoraddthevalues the given averaging algorithm in general directed networks.
received from neighbors, however, with the assumption that Both detection algorithms can handle the case of neigh-
each normal agent can have access to a correct detection of boring malicious nodes, which cannot be solved by related
neighbors. Then in [38], [39], the same authors proposed a works for the RAC problem [23], [38], [39]. Moreover, we
detection and compensation algorithm for RAC problem in provide tight graph conditions for our algorithms to achieve
undirected networks. However, their detection requires the the detection and averaging functions, respectively. We also
direct communication with two-hop neighbors and it cannot prove that the graph condition for the fully distributed de-
handle the case of neighboring malicious agents either. tection algorithm can be simplified for undirected networks,
In [36], we proposed a secure detection algorithm for which makes it more convenient to check whether a graph
resilientconsensus,whereeachnormalagentactsasadetector meets the condition or not. We emphasize that although the
of its neighbors. An important feature is that it can guaran- topology requirement may be dense, we can generate the
tee the fully distributed detection of malicious neighbors in directed/undirected network topologies that satisfy our con-
general directed networks. Besides, it is able to tackle the ditions in large scale. Lastly, we provide extensive examples
case of neighboring malicious agents. This is accomplished to show the efficacy of our RAC algorithm in large-scale
throughthemajorityvoting[40],[41]underacertaintopology networks as well as in an extreme adversarial situation, where
requirement on the network. In this paper, we exploit these over half of the nodes in the network are compromised by
properties and develop a novel RAC algorithm based on the malicious attackers.
two-hop detection approach. The rest of this paper is organized as follows. Section II
The contributions of this paper are summarized as follows. outlines preliminaries on graph notions and the problem set-
WeproposeanovelRACalgorithmunderwhichnormalagents tings. Section III presents the novel RAC algorithm with an
can iteratively detect malicious neighbors and converge to the emphasisontheaveragingpart.SectionsIVandVpresentthe
average of their initial values in general directed networks. sharing detection algorithm and the fully distributed detection
The proposed algorithm consists of the detection part and algorithm, respectively. Moreover, tight graph conditions for
the averaging part. Specifically, for the averaging part, we the proposed algorithms to achieve resilient average consen-
employ the running-sum based algorithm from [24], where sus are proved. Section VI provides numerical examples to
each node has local buffers to store the total effects received demonstrate the efficacy of the proposed algorithms. Finally,
from its in-neighbors. It allows the normal nodes to precisely Section VII concludes the paper.
recover from the influence of malicious neighbors once any
misbehavior is detected. We also improve the applicability of II. PRELIMINARIES AND PROBLEM SETTING
theaveragingalgorithmbyrelaxingthenecessaryassumptions
In this section, we present preliminaries on graph theory,
in[24].Inparticular,itissufficientfornormalagentstoaccess
the average consensus algorithm, and the problem settings.
thecorrectdetectionofonlyin-andout-neighborsforourRAC
algorithm, which can save storage resources. Furthermore, we
A. GraphNotions
extend the class of misbehaviors of the malicious nodes and
consider scenarios where they may go beyond manipulating Consider the directed graph G = (V,E) consisting of the
their identities and also remain to act normally at all times. nodesetV ={1,...,n}andtheedgesetE ⊂V×V.Here,the
For the detection part, we propose two novel algorithms edge (j,i) ∈ E indicates that node i can receive information
which allow normal nodes to monitor their neighbors and fromnodej.Nodej issaidtobeanin-neighborofnodei,and
detect as soon as malicious agents perform any misbehaviors node i is an out-neighbor of node j. The sets of in-neighbors
in the messages that they broadcast. The fundamental idea and out-neighbors of node i are denoted by N− = {j ∈ V :
i
is to exploit the two-hop communication so that the normal (j,i)∈E} and N+ ={j ∈V : (i,j)∈E}, respectively. The
iYUANetal.:RESILIENTAVERAGECONSENSUSWITHADVERSARIESVIADISTRIBUTEDDETECTIONANDRECOVERY 3
i an n- dde dg +re =e a (cid:12) (cid:12)n Nd +o (cid:12) (cid:12)u ,t r- ed se pg er ce te ivo ef lyn .o Hd ee rei ,a |Sre |g isiv te hn eb cy ardd i− i na= lity(cid:12) (cid:12)N oi f− a(cid:12) (cid:12) i on f, te h. eg., in[ i2 ti4 a] lt vh aa lt ur ei s[ ,k i] .ea .s ,ymptoticallyconvergestotheaverage
i i
finite set S. If the graph G is undirected, the edge (j,i) ∈ E (cid:80) y [0]
i bn ydi Ecat =es( {i (, ij ,) j)∈ ∈E. VA ×com Vp :let ie ̸=gra jp }h .K
An
p= at( hV, frE o) mis nd oe dfi ene id kl →im ∞r i[k]= (cid:80)j
jz
jj
[0]
=X, ∀i∈V. (3)
1
to i is a sequence of distinct nodes (i ,i ,...,i ), where Now, the running-sum ratio consensus algorithm is a varia-
m 1 2 m
(i ,i ) ∈ E for j = 1,...,m−1. It is also referred to as tionofthepush-sumalgorithmusedtoovercomepacketdrops
j j+1
an (m−1)-hop path. We say that node i is reachable from orunknownoutdegrees[11].Itcanbesummarizedasfollows.
m
node i . Node i is an (m−1)-hop in-neighbor of node i . At each time k, node i does not send y [k], z [k] in (2) to its
1 1 m i i
A directed graph G is said to be strongly connected1 if every out-neighbors. Instead, it sends the so-called y and z running
nodeisreachablefromeveryothernode.Anundirectedgraph sumsdenotedbyλandγ,respectively.Thetwovaluescontain
G issaidtobek′-connectedifitcontainsatleastk′+1nodes the information of y [k] and z [k], and are defined as
i i
and does not contain a set of k′ −1 nodes whose removal
k k
disconnects the graph. λ [k+1] :=(cid:88) y [t], γ [k+1] :=(cid:88) z [t]. (4)
i i i i
t=0 t=0
B. AverageConsensusandtheRunning-sumAlgorithm Therefore,anout-neighborobtainsnodei’svaluesy [k],z [k]
i i
The problem of multi-agent average consensus can be by taking the difference of two consecutive λ [k], γ [k] as
i i
described as follows: Consider a system with n agents in-
y [k] =λ [k+1]−λ [k],
teracting over the network modeled by the directed graph i i i
G = (V,E). Each agent i ∈ V has a scalar state x [k] ∈ R z i[k] =γ i[k+1]−γ i[k].
i
to be updated over time k ∈ Z . The goal is to design Thus, the running-sum algorithm can achieve average consen-
≥0
distributedalgorithmsthatallowagentstoeventuallyconverge susasthepush-sumalgorithmdoes,withadditionalbookkeep-
to the average value of their initial states X = 1 (cid:80)n x [0], ing procedures at each node.
n i=1 i
where each agent utilizes only the local information from Next, we formally outline the structure of the running-
their neighboring agents during the consensus forming. The sum ratio consensus algorithm [11]. At each time k, node
push-sum ratio consensus algorithm [42] was proposed to i maintains two kinds of values: (i) the running-sum values
achievethisgoalthroughtwoiterativeprocessesoneachagent. λ [k] and γ [k] of its own; and (ii) the two incoming running-
i i
Here, we describe this algorithm for the time-varying graph sums from each in-neighbor j. More specifically, node i uses
G[k] = (V,E[k]), where E[k] ⊆ E. Denote the set of out- δ [k] and ω [k] to keep track of the y and z running sums
ij ij
neighbors of agent i at time k by N+[k] and the out-degree from node j, respectively. They are given as
i
by d+[k]=|N+[k]|; we employ similar notations for the set
i i δ [k]=λ [k], δ [0]=0,
of in-neighbors N−[k] and the in-degree d−[k]. ij j ij (5)
i i
ω [k]=γ [k], ω [0]=0.
We first introduce the push-sum algorithm, which is the ij j ij
basisoftherunning-sumalgorithm.Eachnodeihastwostate
variables, y [k] and z [k], and updates them as C. UpdateRuleandThreatModel
i i
We now introduce the model of the adversaries and the
y i[k+1] = (cid:88) 1+y j d[k +] [k], generalstructureoftheproposedresilientalgorithm.First,the
j∈N−[k]∪{i} j node set V is partitioned into the set of normal nodes N and
i (1)
z [k+1] =
(cid:88) z j[k]
,
the set of adversary nodes A. The latter set is unknown to
i 1+d+[k] the normal nodes at time k = 0. The adversary nodes in A
j∈N−[k]∪{i} j try to prevent the normal nodes in N from reaching average
i
consensus. All algorithms in this paper are synchronous.
where y [0] = x [0] and z [0] = 1 for i ∈ V. The algorithm
i i i
requireseachnodeitoknowitsout-degreed+[k],andtransmit In our problem setting, the adversary nodes can be quite
i
powerful. We assume that they may behave arbitrarily, de-
to each out-neighbor the values
viating from the protocols with which the normal nodes are
y [k] z [k]
y [k] := i , z [k] := i . (2) equipped. Here, we define the threat model of this paper; see
i 1+d+[k] i 1+d+[k]
also [19], [22], [36], [39].
i i
Then, by (1), these out-neighbors take the sum of received Definition 1: (f-total / f-local set) The set of adversary
values as their new values. nodes A is said to be f-total if it contains at most f nodes,
At each time k, node i calculates the ratio i.e., |A| ≤ f. Similarly, it is said to be f-local if for any
normal node i∈N, it has at most f adversary in-neighbors,
r [k]:=
y i[k]
. i.e.,
(cid:12) (cid:12)N−∩A(cid:12)
(cid:12)≤f,∀i∈N.
i z [k] i
i Definition 2: (Maliciousnodes)Anadversarynodei∈Ais
Undersomejointconnectivityassumptionsontheunionofthe said to be malicious if it changes its own value arbitrarily and
underlying graphs in a certain time window, it was reported sends the same value2 to its neighbors at each transmission.
1An undirected graph is simply said to be connected if every node is 2Itmayalsodecidenottomakeatransmissionatanytime.Thiscorresponds
reachablefromeveryothernode. tothecrashmodel[1].4 IEEETRANSACTIONSANDJOURNALSTEMPLATE
In this paper, we focus on the malicious model. This information set Φ [k] to be broadcasted at time k+1 is
i
model is reasonable in applications such as wireless sensor
(cid:16)
networks and robotic networks, where neighbors’ information Φ [k]= A [k],(i,δ [k+1|k],ω [k+1|k]),
i i ii ii
isobtainedbybroadcastcommunicationorvisionsensors[27]. (cid:17) (6)
{(j,δ [k|k],ω [k|k])} .
This model is different from the Byzantine model, which is ij ij j∈N−∪{i}
i
well-studiedincomputerscience[1].Specifically,aByzantine
It has three parts. The first is the set A [k] of adversaries
nodecansenddifferentvaluestoitsdifferentneighbors.Here, i
detected by node i by time k. The second and the third are
wedefineaconnectivitynotionfordirectedgraphs.Adirected
graph G is said to be k′-strongly connected if after removing node i’s own and its in-neighbors’ information. We use the
any set of nodes satisfying the (k′ − 1)-local model, the notation δ ii[k +1|k] to indicate that this value is in the set
Φ [k] from time k. Note that Φ [k − 1] and Φ [k] contain
remaining digraph is strongly connected. i i i
δ [k|k−1]andδ [k|k],respectively,andifnodeiismalicious,
As mentioned in the Introduction, the proposed algorithm ii ii
these values may be different.
for resilient average consensus is based on detection of the
malicious nodes in the network. To this end, each normal Next, we introduce assumptions on the nodes’ knowledge
node i is equipped with a detection algorithm to monitor and the attacks generated by the malicious nodes.
the behaviors of its own neighbors. The output of such an Assumption 1: Eachnodei∈N hasaccesstotheinforma-
algorithmwillbethesetofmaliciousnodesknownordetected tion sets received from its in-neighbors. It knows the indices
by node i by time k and is denoted by A [k]. andtopologyofitstwo-hopin-neighborsandthoseofitsdirect
i
The overall structure of the proposed algorithm is as fol- out-neighbors.
lows.Ateachtimek,eachnormalnodeiformsaninformation Assumption 2: Each node i ∈ A may have all the infor-
set denoted by Φ [k]. This set will be shared with its out- mation of the entire network including the topology and state
i
neighbors, who will make use of it for their averaging and values of all nodes and may cooperate with other malicious
detection algorithms. The exact contents of the information nodes even if no edges exist. It can manipulate its own
sets will be given in the next subsection. Specifically, node i information set in (6) and broadcasts the same set to out-
conducts the four steps given below at time k+1: neighbors.
1.TransmittheinformationsetΦ [k](describedin(6)later) By Assumption 1, each normal node has only partial
i
and the detection information A [k] to all its out-neighbors knowledge about the network. To perform detection based
i
j ∈N+. on two-hop communication, normal nodes are aware of the
i
2. Receive the information sets Φ [k] and the detection topologyoftwo-hopin-neighbors.Thissettingmaybejustified
j
information A [k] from all in-neighbors j ∈N−. in sensor networks when the nodes are geographically fixed
j i
3. Detect neighbors according to the detection algorithm to and the network topology remain the same. Similar settings
obtain A [k+1]. are studied in [23], [38], [39]. We should highlight that this
i
4. Update x [k + 1] according to the resilient average assumption can be met relatively easily and is of low cost.
i
consensus algorithm. In MSR-based resilient consensus algorithms [19], [32], it is
TheRACalgorithminStep4willbeoutlinedinSectionIII sufficient that fault-free nodes have access to the information
whereas the detection algorithm in Step 3 will be given in onlyfromtheirone-hopneighbors.Clearly,thisrequirementis
Sections IV and V. weakerthanAssumption1,butMSR-basedalgorithmsarenot
capabletodetectmaliciousagents(thoughtheycanavoidtheir
influences). Also, in contrast, each fault-free node must know
D. DetectionofAdversariesandInformationSets
the topology of the entire network in related works based on
We now describe the general approach for our detection observer-based detection [20], [25], multi-hop communication
algorithms,basedontheideasfrom[36].Asmentionedabove, [1], [31], and Byzantine agreement [43].
each normal node monitors its neighboring nodes and checks Ontheotherhand,inAssumption2,sincetwo-hopcommu-
if any inconsistencies can be found in their behaviors. In par- nication is employed, a malicious node may modify not only
ticular,ourapproachemploystwo-hopcommunicationamong its own states but also those received from its in-neighbors,
the nodes. That is, each node sends the information received whicharepartofitsinformationset.Thismeansthatthereare
from its direct in-neighbors to its out-neighbors together with more options in terms of attacks compared to, e.g., the MSR-
its own information. We assume that each node receives based algorithms. However, we emphasize that such attacks
information from its two-hop in-neighbors via a sufficient can be detected. For example, a malicious node may add or
numberofdifferentpaths.Then,ifanyofitsdirectin-neigbors delete some pairs of agent IDs and values in its information
make changes in the information to be passed on, there will set. It may also decide to remove information from some of
be inconsistencies in the data, which can lead to detections of its in-neighbors. Since the normal agents have the knowledge
misbehaviors. To formalize this approach, in this subsection, of up to their two-hop in-neighbors, attacks will be found
we first introduce the key notion of information sets of the by their direct out-neighbors. Moreover, in the case that a
nodes and then provide assumptions regarding these sets for malicious node adopts an ID of another node, such attacks
both normal and malicious nodes. can be detected too [36]. Therefore, our approach does not
Information sets define the data exchanged within the assumethateachnodeshouldidentifythesendersofincoming
network for performing detection and averaging. Node i’s messages, which is imposed in [24], [38].YUANetal.:RESILIENTAVERAGECONSENSUSWITHADVERSARIESVIADISTRIBUTEDDETECTIONANDRECOVERY 5
III. RESILIENT AVERAGE CONSENSUS todesignsuchanadjacencymatrixfordirectednetworks,and
even tougher for time-varying networks.
In this section, we define the RAC problem and introduce
Next, we introduce the major steps of our RAC algorithm.
our algorithm with an emphasis on the averaging part.
At each time k, each normal node i utilizes the detection
algorithmtoupdateitsdetectioninformationregardingin-/out-
A. ProblemStatement neighbors in A [k]. Then it updates the set of non-faulty in-
i
Consider a time-invariant directed graph G = (V,E). In neighborsasM−
i
[k]=N i−\A i[k]andupdatesthesetofnon-
our resilient average consensus (RAC) problem, the goal is faultyout-neighborsasM+
i
[k]=N i+\A i[k].Simultaneously,
to design distributed algorithms that allow normal agents to theout-degreeisupdatedbyd+
i
[k]=|M+
i
[k]|=|N i+\A i[k]|.
eventually converge to the average value of their initial states, Given the new A i[k], node i updates its y and z using only
i.e., the running sums from the in-neighbors in M−[k]∪{i}:
i
(cid:80) (cid:88)
x [k]→X :=
i∈N0x i[0]
as k →∞, ∀i∈N, (7)
y i[k] = (δ ij[k]−δ ij[k−1]),
i N0 |N 0| j∈M−[k]∪{i}
i (8)
(cid:88)
regardless of the adversarial actions taken by the nodes in A. z [k] = (ω [k]−ω [k−1]).
i ij ij
In (7), the resilient average consensus is not defined on the j∈M−[k]∪{i}
i
true set N of normal agents but on the set N ⊇ N of all
0
By the assumption that every normal node obtains the
nodes that behave properly over time. This is justified for the
correct detection of malicious neighbors by time k , eq. (8)
case where an adversary node acts as normal for all times. c
constrains the averaging within only normal nodes for time
In this case, such an adversary agent’s value is included in
k > k . Therefore, the running-sum algorithm on normal
the average computing since there is no way to detect such c
nodes achieves ratio consensus of the values of normal agents
adversary nodes. See Section V-E for more discussions.
at time k if the subgraph of normal nodes (i.e., the normal
Similar problems have been studied in related works [22], c
network) is strongly connected. However, due to possible
[23], [38]. However, our approach has advantages over these
erroneouseffectsfrommaliciousneighbors,thesumofvalues
works in different aspects as we discuss in due course.
ofnormalagentsattimek maynotbethesumofinitialvalues
c
ofnormalagents.Thus,iftheerroneouseffectsfrommalicious
B. OverviewoftheRACAlgorithm neighbors can be subtracted by normal agents and normal
TosolvetheRACprobleminadistributediterativefashion, agents’valuessenttomaliciousneighborscanbecompensated
normal agents must know whether their neighbors are mali- precisely, then normal agents can recover the sum of their
cious or normal. Thereafter, they only interact with normal initial values and achieve resilient average consensus.
onestoobtainthedesiredaverage.Hence,ourRACalgorithm
contains two parts: (i) detection and (ii) averaging. The detec- C. RemovingMaliciousEffectsBasedonDetection
tionalgorithmguaranteesthateachnormalnodecandetectany
Inthispart,weintroducehowthenormalagentsconductthe
malicious in-/out-neighbors. On the other hand, the averaging
subtraction of in-coming malicious values and compensation
algorithm needs to ensure that each normal node can remove
of out-going normal values, respectively. The two actions are
theerroneouseffectsreceivedfrommaliciousneighborsbythe
differentforthecaseswherein-neighborsorout-neighborsare
time those neighbors are detected as malicious.
detected as malicious for the first time. Note that the actions
In this section, we first present the averaging algorithm
taken by each node i are based on its own detection A [k].
i
based on the RAC approach of [24], where each normal node
Case 1: A malicious in-neighbor j is detected for the first
is assumed to have access to the correct detection information
time at time k. In this case, node i not only ignores node
of all normal nodes in the network. Note that the detection
j’s values for updating as in (8) but also removes the effects
approach is not discussed in [24]. For ease of presentation,
received from node j so far, i.e., δ [k],ω [k] in (5). This
ij ij
we assume that every normal node can obtain the correct
subtraction of in-coming malicious values has to be done for
detection of malicious neighbors by a certain time k c. Our eachin-neighborj intheset∆M−[k]=M−[k−1]\M−[k],
i i i
detection algorithms presented later in Sections IV and V are
which consists of node i’s in-neighbors that are detected as
tailored for working with this averaging algorithm and realize
malicious at time k. Specifically, we replace y [k] and z [k],
i i
the important function of correct detection.
respectively, with
Recall that in the running-sum algorithm, each agent main-
(cid:88)
tainstwovariablesλandγ torecordthesumofitsowny and y i[k] = y i[k]− δ ij[k−1],
z values from the initial time. This feature makes it a good j∈∆M−[k]
i (9)
basis for our RAC algorithm. Moreover, for the running-sum (cid:88)
z [k] = z [k]− ω [k−1].
algorithm to achieve average consensus, the adjacency matrix i i ij
needs to be column stochastic, which is easy to realize in j∈∆M− i [k]
directed networks. In contrast, the related resilient averaging Case 2: A malicious out-neighbor q is detected for the first
worksforundirectednetworks[23],[38]arebasedonaverage time at time k. In this case, node i not only decreases its out-
consensusvialineariterations[2],whichrequiretheadjacency degree by one (d+[k]=d+[k−1]−1) but also compensates
i i
matrix to be doubly stochastic. However, it may be difficult for all its own values sent to node q while q was considered6 IEEETRANSACTIONSANDJOURNALSTEMPLATE
normal. It does so by adding to its y and z values its own y storage usage compared to the related works [22], [24], [38],
andz runningsums(λ [k],γ [k]),respectively.SimilartoCase where each normal agent must obtain the correct detection of
i i
1,thisadjustmenthastobedoneforeveryout-neighborthatis all malicious or normal agents in the network.
detected as malicious at time k. Let ∆M+[k]=M+[k−1]\
i i
M+ i [k] be the set of node i’s out-neighbors that are detected Algorithm 1: Resilient Average Consensus Algorithm
as malicious at time k. Then y [k] and z [k] are updated as
i i Input: Node i knows x [0], N−, N+ by
i i i
y [k] = y [k]+|∆M+[k]|λ [k], Assumption 1.
i i i i
z [k] = z [k]+|∆M+[k]|γ [k]. (10) 1 Initialization:
i i i i 2 Node i initializes A i[0]=A i[1]=∅, and
This is needed because, e.g., λ i[k] is the cumulative y values y i[0]=x i[0], λ i[0]=0, δ ij[0]=0, ∀j ∈N i−,
that were sent to any malicious out-neighbor by time k. z i[0]=1, γ i[0]=0, ω ij[0]=0, ∀j ∈N i−.
3 At k =1, send λ i[1], γ i[1] using eq. (4) to
∀q ∈N+ and receive δ [1], ω [1] from
D. ConvergenceAnalysis i ij ij
∀j ∈N−.
i
Finally, we are ready to present our RAC algorithm in 4 Obtain y i[1], z i[1] using eq. (1).
Algorithm 1. By Assumption 1, node i knows the sets N i−, 5 Obtain λ i[2], γ i[2] using eq. (4).
N+.Moreover,throughourdetectionalgorithms,nodeikeeps
trai ck of the set of misbehaving in-/out-neighbors A [k] that 6 for k ≥2 do
it detected by time k. Then, by following the aboi ve two 7 Transmit: Φ i[k−1] to ∀q ∈N i+.
processes for malicious in-/out-neighbors, resilient average 8 Receive: Φ j[k−1] from ∀j ∈N i−.
consensus can be achieved with Algorithm 1. The following 9 Detect: in-/out-neighbors according to the
Detection Algorithm to obtain A [k].
proposition is the main convergence result for this algorithm i
from [24] with some enhanced applicability. 10 Update using detection of in-neighbors:
Proposition 1: Consider the directed network G = (V,E), 11 Set M− i [k]=N i−\A i[k].
where each node i ∈ V has an initial value x [0]. Under 12 In Case 1:
Assumptions 1 and 2, if each normal node can dei tect all the 13 For each (cid:40)j ∈N i−∪{i}, set
λ [k], ∀j ∈M−[k]∪{i},
malicious in- and out-neighbors, and the normal network is 14 δ ij[k]= j i
strongly connected, then the normal nodes executing Algo- 0, otherwise.
rithm 1 converge to the average of their initial values given (cid:40) γ [k], ∀j ∈M−[k]∪{i},
by X N0 = (cid:80) i∈ |N N0 0|xi[0] in (7) as k →∞. 15 ω ij[k]= 0,j otherwisei .
Remark 1: Theconvergenceresultsofthispropositionhave 16 Compute:
appearedin[24];hence,weomittheproofforbrevity.Thekey 17 y i[k] = (cid:80) (δ ij[k]−δ ij[k−1]),
idea is to show that the sums of the y and z values of normal j∈N−∪{i}
agentsremaininvariantatalltimes.Moreover,itisemphasized 18 z i[k] =
(cid:80)i
(ω ij[k]−ω ij[k−1]).
that we have improved the results for the averaging algorithm j∈N−∪{i}
i
by relaxing the required assumptions as well as justifying
19 Update using detection of out-neighbors:
nt S th
r
op ae dne ec sc i ma fi Is
i
Dce sa sl iw l toy hn,h ae tt ohre
f
ae llara oe nd ws yv u se l ntr s
o
ts ha di er n ey r[
i
e2a c∈g 4 ee ] in vVnt ees re isda tc oatt sh
s
ien doo ecar nism
a
ts itu fa
e
yml dly p
tw
htia eio tt n
h
sa et al h nl a dutt enim re
i
.qae c
u
Is nh e. 222 210 SSS eee ttt ∆dM +
i
M[+ i k[ ]
+
ik =] [k= ]|M =N + ii M+ [k\
+
i]|A [. ki[ −k] 1.
]\M+
i
[k].
23 In Case 2:
c a mo s isn sut br m ea hs et a, t vh iw a ote re oh a fa c cv h he am nd a gi ls ii nc cu gios Is u De sd cn aoi nn de bS eme dc ut ei s to t en cs te eI nI d- dD bi ytst oh r ua e rt a alw lgIe D ord iao ts hmn tho set
.
22 54 zy ii [[ kk ]] == zy ii [[ kk ]] ++ || ∆∆ MM + i+ i [[ kk ]] || γλ ii [[ kk ]] .,
Besides, the work [24] requires the assumption that each 26 Compute:
normal node knows the correct detection information of all 27 λ i[k+1] = λ i[k]+y i[k]/(1+d+ i [k]),
normal nodes in the network after time k c. However, each 28 γ i[k+1] = γ i[k]+z i[k]/(1+d+ i [k]).
normal node is supposed to detect only the malicious in- Output: r [k]=y [k]/z [k]
i i i
and out-neighbors in Proposition 1, which can save storage
resources. We will show later that such detection can be
realized through our fully distributed detection algorithm.
In the following sections, we present two detection algo- IV. SHARING DETECTION IN UNDIRECTED NETWORKS
rithms for ourRAC algorithm, which are redesignedbased on We introduce our first distributed detection algorithm to
the two-hop detection approach in our previous work [36]. be presented as Algorithm 2, where the normal nodes are
In Section IV, we propose the sharing detection algorithm capable to detect malicious neighbors by using the two-hop
for undirected networks. In Section V, we present the fully information in undirected networks. It provides the basis for
distributed detection algorithm for general directed networks. thetwo-hopdetectioninanadversarialenvironment,motivated
The latter algorithm is fully distributed and is efficient in by the works [36], [37].YUANetal.:RESILIENTAVERAGECONSENSUSWITHADVERSARIESVIADISTRIBUTEDDETECTIONANDRECOVERY 7
Algorithm 2: Sharing Detection Algorithm
Input: Φ [k−1],∀j ∈N−∪{i}
j i
1 Initialization:
2 Node i follows the initialization in Algorithm 1.
3 At k =1, let A i[1] include the IDs of in-neighbors
not sending initial values to i.
(a) (b)
4 Let C i[1]={δ ij[1],ω ij[1],∀j ∈N i−∪{i}} be the
initial check set. Fig.1. IllustrationofthegraphconditionforAlgorithm2:(a)Thereisat
least one common normal neighbor between any pair of neighboring
5 for k ≥2 do malicious nodes. (b) There are at least f − 1 common neighbors
(cid:83)
6 Let A i[k]= v∈N A v[k−1] by Assumption 3. betweenanypairofneighborsunderthef-totalmodel.
7 for j ∈M− i [k] do
8 (Step 1) if A j[k−1]̸=A i[k] then
shouldnotusethevaluesfromthenodesdetectedasmalicious
9 let j ∈A i[k].
already. Moreover, it ensures that a node does not falsely
10 (Step 2) if any ID in Φ j[k−1] ∈/ N j−∪{j} claim another node being malicious. Step 2 is to prevent
then the malicious nodes from faking any neighbors. Step 3 is to
11 let j ∈A i[k]. enforce the normal nodes not to modify the values received
12 (Step 3) if any of δ jh[k−1|k−1] or from their neighbors. Finally, step 4 is to guarantee that the
ω [k−1|k−1] in Φ [k−1] is not equal to neighbors follow the averaging in Algorithm 1.
jh j
the corresponding value in C [k−1] then
i
B. NecessaryGraphStructureforAlgorithm2
13 let j ∈A i[k].
In this part, we provide the necessary graph condition for
14 (Step 4) if any of δ jj[k|k−1] or ω jj[k|k−1]
Algorithm 2. We can observe that a malicious node can
in Φ [k−1] is not equal to the reconstructed
j
be detected if there is at least one normal node among its
λ′[k] or γ′[k] by node i then
j j neighbors that monitors its behavior. However, such detection
15 let j ∈A i[k].
may fail if neighboring malicious nodes cooperate with each
Output: A [k] other. Hence, it is critical that one or more normal nodes are
i
16 Store: δ jj[k|k−1] and ω jj[k|k−1] from present as their common neighbors. We illustrate this graph
Φ [k−1], j ∈N−∪{i}, into C [k]. structure in Fig. 1(a). Here, nodes i and j are malicious.
j i i
They can cooperate as follows: Node i manipulates δ [k|k]
ij
in its information set, and node j manipulates δ [k|k] in its
ji
information set. If there is no normal node having access to
A. DetectionAlgorithmDesign
theinformationsetsofbothnodesiandj,suchanattackwill
For this algorithm, the sharing detection function below is not be detected. In contrast, the detection works if there is a
needed for the communication among the nodes when events common neighbor h of nodes i and j.
of detecting adversaries occur. Next, we state the necessary and sufficient graph condition
Assumption 3: Once a malicious node is detected by any for Algorithm 2 to detect all the misbehaving agents.
normal node at any time step, its ID will be securely notified Lemma 1: Consider the undirected graph G = (V,E).
to all nodes within the same time step. Algorithm 2 detects every pair of neighboring misbehaving
This assumption also appeared in [36], [37] for resilient nodes if and only if they have at least one normal common
consensus. As we reported in [36], the sharing detection neighbor.
functioncanberealizedbyintroducingfault-freemobilenodes Proof: We can show similarly to Lemma 8 in [36]
whichareappropriatelydistributedthroughoutthenetworkand except that the update check in step 4 in Algorithm 2 is more
arecapabletoimmediatelyverifyifthedetectionreportsfrom complexthanthegeneralconsensusprotocolusedthere.Here,
anodeistrueorfalse.Notethatthedeploymentofsuchmobile we provide a sketch of the proof. In the undirected network
agents is only for verification of detection reports instead of using Algorithm 2, each normal node i can at least verify
detecting malicious agents by themselves. its own values δ [k|k] and ω [k|k] in Φ [k], j ∈ N−. If a
ji ji j i
The sharing function is crucial for Algorithm 2 since it is malicious node is only surrounded by normal agents, then it
necessary for detecting malicious nodes that are neighboring cannot change any δ [k|k] and ω [k|k] values from neigh-
ji ji
andcooperatingwitheachother.Wemustemphasizethatifwe bors. Moreover, normal neighbor i can reconstruct λ [k+1]
j
do not have this function for Algorithm 2, it can only handle orγ [k+1]throughtheaveragingpartinAlgorithm1tocheck
j
thecasewherenoneighboringmaliciousnodesexist(i.e.,any ifnodej isfollowingtheaveragingornot.Thus,misbehaving
malicious node is surrounded by normal nodes only). This is nodej willbedetectedbyallnormalneighbors.Inthecaseof
exactly the case studied in related works [23], [38], [39]. neighboringmaliciousnodes,theycanmodifythevaluesfrom
We now present Algorithm 2. To ensure that all nodes each other, but this is also detected by the normal common
followthecorrectaveraginginAlgorithm1,thenormalnodes neighbor of them as discussed before.
check consistency among the neighbors’ information sets. In Given that the malicious nodes are unknown and possibly
Algorithm 2, step 1 is to guarantee that each normal node cooperatewitheachothertolaunchattacks,weshouldimpose8 IEEETRANSACTIONSANDJOURNALSTEMPLATE
(a) (b)
Fig.3. IllustrationofthegraphconditionforAlgorithm3.
Fig.2. Illustrationofthegraphconditionfornodehbeingdetectableby
nodeiinDefinition3.
However, to achieve fully distributed detection without any
outsideauthentication,nodeishouldbeabletoindependently
a connectivity requirement so that the condition in Lemma 1
verify whether any entries of the past values are manipulated
holds for any possible combination of pairs of neighboring
in the information sets of its in-neighbors. We have seen that
malicious nodes in the network. The following proposition is
node i can directly obtain the original value and the detection
the main result of this section.
information of an in-neighbor j. For other values that node i
Proposition 2: ConsidertheundirectednetworkG =(V,E)
cannot directly obtain, we impose a certain graph structure
under the f-total malicious model. Suppose that Assumptions
so that it can access the original value and the detection
1, 2, and 3 hold. Then, for Algorithm 1 with Detection
information of a two-hop in-neighbor h through majority
Algorithm 2, the following hold:
voting. Specifically, if node i receives m values of node h,
(a) All malicious nodes that behave against the averaging
among the m values, if more than m/2 values are the same,
in Algorithm 1 are detected if and only if for every pair of
thennodeiwilltakeitasthetruevalueofnodeh.Incomputer
neighboringnodes,theyhaveatleastf−1commonneighbors.
science, such redundancy schemes are common strategies to
(b) Under the condition of (a), normal nodes achieve re-
enhance the security and reliability of systems [40], [41].
silient average consensus if G is (f +1)-connected.
Next, we formally introduce the notion of detectable nodes
We proved in [36] that under the f-total model, the graph
to indicate the kind of nodes that can be detected by node i
conditioninLemma1isequivalenttocondition(a)inProposi-
using Algorithm 3.
tion2.Moreover,condition(b)inProposition2guaranteesthat
Definition 3: In the directed graph G = (V,E) under the
the normal network is connected. Thus, normal nodes using
f-local malicious model, node h is said to be detectable by
Algorithm 1 with Detection Algorithm 2 can achieve resilient
node i if one of the following conditions holds:
average consensus as we proved in Proposition 1.
As we will further explain in Section VI-B, the graph con- • h∈N i−;
ditionforAlgorithm2doesnotrequiredensegraphstructures. • there are at least 2f +1 two-hop paths from h to i.
We illustrate the above graph condition in Fig. 2. Here, we
However, this feature is achieved at the cost of additional
also say that there is a detectable path from node h to node i
authentication from the secure mobile agents.
if node h is detectable by node i. To achieve fully distributed
detection, we need to impose a certain graph structure so that
V. FULLY DISTRIBUTED DETECTION IN DIRECTED
each node can have access to the necessary information used
NETWORKS
in its neighbors’ updates (see Fig. 3). We introduce the graph
In this section, we present our second distributed detection
condition for Algorithm 3 as follows.
algorithm as Algorithm 3. It is fully distributed and operates
Assumption 4: A directed graph G = (V,E) under the f-
without outside authentication for resilient average consensus
localmaliciousmodelsatisfiesallthefollowingconditionsfor
ingeneraldirectednetworks.Thisimportantfeatureisrealized
∀i∈V:
throughmajorityvoting[40],[41]andrequiringadensergraph
1) any two-hop in-neighbor h is detectable by i;
structure.Moreover,weproveanecessaryandsufficientgraph
2) any out-neighbor q is detectable by i;
condition for Algorithm 3 to properly function.
3) any out-neighbor l of in-neighbor j is detectable by i.
We will refer to conditions 1)–3) together as the graph
A. DetectionAlgorithmDesign
condition for Algorithm 3.
In the last section, we have seen that node i’s information Although the above graph condition may require a locally
set consists of two parts that need to be investigated by its densegraphstructure,suchagraphdoesnotnecessarilyhavea
out-neighbors: (i) the current value y [k] (z [k]) to check if it smalldiameter.Thismeansthatthepathlengthoftheshortest
i i
isupdatedaccordingtoAlgorithm1;(ii)thepastvaluesδ [k] pathbetweenanytwonodesmaynotbesmall.Infact,wecan
ij
(ω [k]) used as inputs for updates to check if they are equal construct graphs satisfying the conditions in large scales. See
ij
tothetruevaluesofthecorrespondingnodes.InAlgorithm2, the examples in Section V-D.
normal node i can check whether part of the past values are WenowpresentAlgorithm3.Eachnormalnodeiperforms
manipulated in the information sets of its neighbors. More majority voting on two things: the nodes’ values and the
specifically, node i knows the true past values of its direct detection information. Since we consider the f-local model
neighbors. Then, using the sharing detection function, node i in this section, if node i receives the same information from
canreportamaliciousnode(orapairofneighboringmalicious at least f + 1 distinct in-neighbors, it considers this infor-
nodes) if any values known by itself are manipulated. mation trustable. Additionally, node i keeps a local set (onlyYUANetal.:RESILIENTAVERAGECONSENSUSWITHADVERSARIESVIADISTRIBUTEDDETECTIONANDRECOVERY 9
Algorithm 3: Fully Distributed Detection Algorithm Proof: (a)Necessity:Weprovecondition1)bycontradic-
Input: Φ [k−1],∀j ∈N−∪{i} tion; conditions 2) and 3) follow by a similar proof. Suppose
j i that there is a node h∈N− with h∈/ N−, and that there are
1 Initialization: j i
at most 2f two-hop paths from node h to node i including
2 Node i follows the initialization in Algorithm 2.
3 Let A2 i[1]=∅. t ah ne dp that eh reco arn eta fin −in 1g mno ad lie cij o. uS su mpp ido ds le et nh oa dt en so id ne tj heis pm athal sic fi ro ou ms
4 for k ≥2 do h to i (by the assumption of the f-local model). Then, in the
5 Majority voting: worst case, node i could get f copies of the true value of
6 Let C i[k−1]=C i[k−1]∪{δ jh[k−1|k−1], δ [k] from the f normal middle nodes. In the mean time,
ω [k−1|k−1],∀h∈N2−}, i.e., the hh
mj ah
jority values of h
fromi
Φ [k−1], j ∈N−.
node i also gets f copies of an identical false value of δ hh[k]
j i from the f malicious middle nodes (including j). Thus, node
7 Let A i[k]=A i[k−1], A (cid:83)2 i[k]=A2 i[k−1]. icannotgetmajorityregardingthetruevalueofδ hh[k].Thus,
8
9
for ifID mm ∈∈ Nm i−aj ∪or Nity i+o tf henj∈N i−A j[k−1], do it c Sa un ffin co it ed ne ct ye :c Bt yno Dd ee fij n’ is tiom na 3n ,ip ifu ala nti oo un t-o nn eiδ gj hh b[ ok r|k q] oi fn nΦ odj e[k i].
is
10 let m∈A i[k], the faulty reporter detectablebynodei,thennodeqbecomesadirectin-neighbor
j′ ∈A i[k]; oratwo-hopin-neighborofi.Therefore,thedetectionofnode
11 else q is the same as the detection of node j or h below.
12 let m∈A2 i[k], j′ ∈A i[k]. We must show that node i can confirm the true value of
every entry of the information set Φ [k] of in-neighbor j
j
13 for j ∈M− i [k] do by three major steps at time k + 1. See the illustration in
14 (Step 1a) if N j−∩A j[k−1] contains any Fig. 3. First, it can obtain the true values δ hh[k], ω hh[k] of
different detection of the nodes in everyneighborh∈N− (i.e.,i’stwo-hopin-neighborh)from
j
A i[k]∪A2 i[k] then the previous time k. Second, node i can obtain the correct
15 let j ∈A i[k]. detection of h ∈ N− before the detection loop at time k.
j
16 (Step 1b) if N j2−∩A j[k−1] contains any ID Moreover, node i can obtain the correct detection of j’s out-
not in A [k]∪A2[k] or it does not contain a neighbor l depending on the corresponding case (l can be a
i i
same ID in A [k]∪A2[k] for the second time two-hop in-neighbor or a direct in-neighbor of i by condition
i i
then 3)inAssumption4).Thenwecanprovethatnodeiwilldetect
17 let j ∈A i[k]. node j at time k+1 if node j sends out faulty Φ j[k].
Depending on how the detectable path is formed, consider
18 Steps 2-4 in Algorithm 2 two cases for node i: (i) nodes h and l are direct in-neighbors
Output: A i[k] of i; (ii) nodes h and l are two-hop in-neighbors of i.
19 Store: δ jj[k|k−1] and ω jj[k|k−1] from (i) In the case where h,l ∈ N−, it is clear that node i
Φ j[k−1], j ∈N i−∪{i}, into C i[k]. can receive the true values δ hh[k] ai nd ω hh[k] from Φ h[k−1].
Moreover, it can have the correct detection of its direct in-
neighbors h and l before time k.
(ii) Suppose that h ∈/ N−, and there are at least 2f +1
accessible to i) for the detection of two-hop in-neighbors as i
two-hop paths from h to i. In this case, there is some normal
A2[k]attimek.Afterobtainingthetruevaluesofitsone-hop
i node p∈N+∩N− which carries the true values δ [k] and
in-neighbors ∀j ∈N− and two-hop in-neighbors ∀h∈N2−, h i hh
i i ω [k] in its information set Φ [k]. Then, node i can get the
it follows similar procedures as the ones in Algorithm 2. hh p
true values δ [k] and ω [k] since the majority of the 2f+1
hh hh
paths from h to i contain nodes as p by the f-local model.
B. NecessaryGraphStructureforAlgorithm3 For node i to obtain the correct detection of two-hop in-
In Algorithm 3, we must impose the connectivity require- neighborshandl,itfollowsasimilaranalysis.Welookatthe
mentinAssumption4oneverynodeanditsin-/out-neighbors. case for h. If h transmits faulty Φ [k−1], then it is detected
h
This enables the detection to be guaranteed for any combina- by its one-hop neighbors at time k. Recall that there are at
tion of nodes being malicious in the network. The following least 2f +1 directed two-hop paths from h to i. Thus, under
theorem is the main result of this section. the f-local model, node i can obtain the correct detection of
Theorem 1: Consider the directed network G =(V,E) un- h by majority voting before the detection loop of time k+1.
der the f-local malicious model. Suppose that Assumptions 1 Therefore, node i knows the true values δ [k], ω [k] and
hh hh
and2hold.Then,forAlgorithm1withDetectionAlgorithm3, obtains the correct detection of its two-hop in-neighbors h,
the following hold: l before running the detection loop at time k + 1. Thus if
(a) Each normal node detects all malicious nodes in its nodej ∈N− sendsoutfaultyΦ [k]bypossiblemanipulation
i j
out-neighbors and in-neighbors within two hops that behave including modifying δ [k] and/or ω [k] in Φ [k], or by
jh jh j
against the averaging in Algorithm 1 if and only if G satisfies sending false detection information of nodes h and l, then
the condition for Algorithm 3 (in Assumption 4). nodeiwilldetect.Notethatwhenout-neighborl isatwo-hop
(b) Under the condition of (a), normal nodes achieve re- in-neighborofj,thedetectionoflisincludedinA [k+1]and
j
silient average consensus if G is (f +1)-strongly connected. issenttonodeiinΦ [k+1].Therefore,step1binAlgorithm3
j10 IEEETRANSACTIONSANDJOURNALSTEMPLATE
is designed to handle this case. This procedure will not cause digraphs since strong connectivity is necessary for achieving
problems since the removal of malicious neighbors can be average consensus in directed graphs [11]. Moreover, we can
asynchronous at each normal agent. confirm that a complete graph K satisfies the condition for
n
Next, we show that node i can verify if node j updates Algorithm 3. To avoid trivial cases, we consider n>3 in the
δ [k + 1] and ω [k + 1] in Φ [k] by the averaging in following discussions.
jj jj j
Algorithm 1 or not. This is done by reconstructing λ′[k+1] Lemma 2: If a strongly connected and incomplete digraph
j
and γ′[k+1] and checking whether ϵ =ϵ =0, where G = (V,E) (under the f-local model) satisfies the condition
j λ γ
for Algorithm 3 in Assumption 4, then G has the minimum
δ [k+1]=λ′[k+1]+ϵ ,
jj j λ in-degree no less than 2f +1.
ω [k+1]=γ′[k+1]+ϵ .
jj j γ The proof of Lemma 2 can be found in the Appendix.
We note that the detection condition (a) for Algorithm 3 is
As shown above, node i can verify A [k] in Φ [k]. Thus,
j j
not sufficient to guarantee strong connectivity of the graph.
λ′ j[k] = δ jj[k−1|k−1] A simple counter example is a graph with two disconnected
y′[k−1]+|∆M+[k−1]|δ [k−1|k−1] completesubgraphs.Clearly,thewholegraphisnotconnected
+ j 1+j d+[k−1]jj , while it meets the detection condition for Algorithm 3. This
j observation reveals that the consensus condition (b) guaran-
γ′[k] = ω [k−1|k−1]
j jj teeing the normal network to be strongly connected is also
z′[k−1]+|∆M+[k−1]|ω [k−1|k−1] critical for our RAC algorithm.
+ j j jj ,
1+d+[k−1]
j
C. GraphConditioninUndirectedNetworks
whereδ [k−1|k−1],ω [k−1|k−1],∆M+[k−1],d+[k−1]
jj jj j j For the special case of undirected networks, the condition
are from Φ [k−1] with A [k−1]. Moreover, y′[k−1] and
j j j for Algorithm 3 can be simplified as follows.
z j′[k−1] are obtained by node i through Lemma 3: An undirected graph G = (V,E) satisfies the
y′[k−1] = (δ [k|k−1]−δ [k−1|k−1]) condition for Algorithm 3 in Assumption 4 if for each node
j jj jj i ∈ V, it holds that any two-hop in-neighbor h of node i is
×(1+d+[k−1]),
j detectable by node i.
z′[k−1] = (ω [k|k−1]−ω [k−1|k−1]) Proof: We can easily observe that condition 2) in As-
j jj jj
×(1+d+[k−1]). sumption 4 is satisfied automatically in undirected networks.
j
Moreover, it holds that an out-neighbor l of node i’s in-
Wealsonotethatnodeihasaccesstothetruevaluesδ hh[k] neighbor j is a two-hop in-neighbor of node i in undirected
and ω hh[k]. Besides, node i knows δ jh[k−1] = δ hh[k−1] networks. Therefore, condition 3) can be derived if condition
and ω jh[k−1]=ω hh[k−1] from Φ j[k−1]. Otherwise, node 1) holds in an undirected network.
j would have been detected at time k. Thus, we have Next, we show that for undirected networks, the condition
(cid:88) for Algorithm 3 and connectivity of the graph together guar-
λ′[k+1] = λ′[k]+ (δ [k]−δ [k−1]),
j j jh jh anteethatthenormalnetworkisconnectedafterremovingthe
h∈N j−∪{j} f-local malicious node set.
(cid:88)
γ′[k+1] = γ′[k]+ (ω [k]−ω [k−1]), Proposition 3: Consider the undirected graph G = (V,E)
j j jh jh
under the f-local model. If (i) G is connected and (ii) for any
h∈N−∪{j}
j node i∈V, it holds that any two-hop in-neighbor h of node i
where δ jh[k]=0 and ω jh[k]=0 for h∈A j[k]. Then node i is detectable by node i, then the normal network induced by
cancompareδ jj[k+1](andω jj[k+1])inΦ j[k]withλ′ j[k+1] the normal agents in N ⊆V is connected.
(and γ′[k+1]) and checks if node j follows the averaging in The proof of Proposition 3 can be found in the Appendix.
j
Algorithm 1 or not. We can see from the above two results that both the
(b) A malicious node will be detected immediately once detection condition (a) and consensus condition (b) for undi-
it manipulates its information set. Thus, misbehavior of any rected networks are simplified compared to the conditions
maliciousnodecannotaffectnormalnodessincenormalnodes in Theorem 1 for directed networks. We formally state the
excludevaluesfromdetectedmaliciousnodesinAlgorithm1. conditions for undirected networks as follows, which can be
Moreover, since G is (f +1)-strongly connected, the normal proved by Lemma 3 and Proposition 3.
network is strongly connected after removing the f-local Theorem 2: Consider the undirected network G = (V,E)
adversary node set. Therefore, resilient average consensus is underthef-localmaliciousmodel.SupposethatAssumptions
achieved as shown in Proposition 1. 1 and 2 hold. Then, for Algorithm 1 with Detection Algo-
Here, we show that the graph satisfying the condition for rithm 3, the following hold:
Algorithm3hastheminimumin-degreeas2f+1.Itindicates (a)Eachnormalnodedetectsallmaliciousneighborswithin
thatweneedtomaketheminimumin-degreenolessthan2f+ two hops that behave against the averaging in Algorithm 1 if
1 when we design a desirable network topology. Conversely, and only if for any node i ∈ V, it holds that any two-hop
itisstraightforwardthatagraphwithminimumin-degreeless neighbor h of node i is detectable by node i.
than 2f +1 does not meet our condition. We formally state (b) Under the condition of (a), normal nodes achieve re-
the property in the next lemma for general strongly connected silient average consensus if G is connected.YUANetal.:RESILIENTAVERAGECONSENSUSWITHADVERSARIESVIADISTRIBUTEDDETECTIONANDRECOVERY 11
(a) Thefour-layerdirectedgraphwhichcontains
anundirectedgraphafterremovingthereddi- (a) (b)
rectededges.
Fig.5. Small-scalegraphssatisfyingtheconditionforAlgorithm3under
the1-localmodel(exceptforthefullaccessnode1in(a)).
could tolerate two malicious nodes when the conditions for
1-local are met except for the full access node 1. In the same
graph, if only node 1 becomes malicious and the conditions
for1-localarealsometforothernodes,thenRACisstillguar-
anteed. As another example, in the 8-node directed network
in Fig. 8, normal nodes using Algorithm 1 with Detection
Algorithm 3 can achieve resilient average consensus even in
(b) Thefive-layerdirectedgraph. the presence of 5 malicious nodes. More details are discussed
Fig.4. Large-scalegraphssatisfyingtheconditionforAlgorithm3under in the numerical examples.
thef-localmodel.Here,wesetf =1forillustration. Thefollowingcorollarystatesthemaximumtolerablenum-
ber of malicious nodes in a network applying our algorithms.
It can be directly proved from Theorem 1.
D. ConstructionofGraphsSatisfyingtheCondition Corollary 2: InthecompletegraphK ,normalnodesusing
n
Algorithm 1 with Algorithm 3 (or Algorithm 2) achieve
In this part, we present some example graphs satisfying
resilient average consensus in the presence of f ≤ n − 2
the conditions for our algorithms. Furthermore, we present a
malicious nodes in the network.
systematic way to construct large-scale graphs that meet the
Remark 2: From above, we see that it is relatively easy to
condition for Algorithm 3.
check whether a graph meets the condition in Assumption 4
We first give example graphs satisfying the conditions in
since there is no combinatorial process in the checking.
Theorem 1. The network in Fig. 4(a) satisfies the conditions
In particular, the verification of the detectable condition in
for Algorithm 3 under the 1-local model. Moreover, there is a
Definition 3 is very simple. Further, the checking on the
characteristic four-layer structure. We can extend this idea to
condition in Assumption 4 requires less than n(n−1) times
thecaseswithanyf.Eachlayershouldhave2f+1nodesfor
of such verification (usually much less for sparse graphs). In
thef-localmodel.Eachnodeinonelayershouldbeconnected
contrast, the verification of robustness of a graph in resilient
witheverynodeintheneighborlayersandhavenoconnection
consensusworks(e.g.,[19],[32],[35])involvescombinatorial
with the nodes in its own layer. This structure can also have
processesandiscomputationallyNP-hard.Moreover,wehave
many layers as long as the f-local set is met for ∀i ∈ N. A
proved a much simpler condition for undirected networks
similar way for constructing large-scale directed networks for
using our algorithm, which is suitable for the deployment in
Algorithm3ispresentedinFig.4(b).Fromtheseexamples,we
large-scalenetworks.Besides,theproposedsystematicwayfor
canconcludethattheunbalanceddirectedgraphscanalsomeet
constructingthedesirablelarge-scalegraphscanalsofacilitate
the condition for Algorithm 3. Simulations of Algorithm 3 in
the deployment of our algorithm in various applications.
these networks will be given in Section VI.
Nodeiissaidtobeafullaccessnodeifitisanout-neighbor
of all other nodes in the network [36]. Notice that such a E. DiscussionsandComparisonswithRelatedWorks
node can detect any malicious node in the network. We can We discuss the differences between the resilient consensus
enhance the performance of Algorithm 3 (and Algorithm 2) (RC) algorithm from [36] and RAC Algorithm 3 for directed
byincorporatingnodeswithsuchcharacteristics.However,we networks.In[36],normalnodesachieveresilientconsensusby
emphasize that we do not assume such full access nodes to monitoringtheirin-neighbors.However,thesituationbecomes
be normal. As long as the conditions for Algorithm 3 (or muchmorecomplexforAlgorithm3.Asidefromthedetection
Algorithm 2) are met, a full access node can also be detected ofin-neighbors,nodeishouldalsobeabletodetecteachout-
by its normal neighbors when it misbehaves. This result can neighbor. This is because for solving the RAC problem, node
be easily proved by Theorem 1 and is given as follows. i should not send its y and z values to the malicious out-
Corollary 1: A normal full access node using Algorithm 3 neighbor(s)sothatthenormalnetworkcanaccuratelypreserve
(or Algorithm 2) detects any node behaving against the aver- the “mass” of normal nodes only and achieve averaging as
aging in Algorithm 1 in the network. showninTheorem1.ThedetectionconditionforAlgorithm3
As an example, the 5-node undirected network in Fig. 5(a) hencerequiresdensergraphsthantheonefortheRCalgorithm12 IEEETRANSACTIONSANDJOURNALSTEMPLATE
[36].Moreover,noticethatthenecessaryconditionforresilient 10
1
average consensus is the strong connectivity of the graph. 2
8 3
It requires each node to have at least one out-going edge. 4
6 5 In contrast, the necessary condition for resilient consensus is 6
that there is at least one rooted spanning tree in the graph. 4
Therefore, the necessary condition for Algorithm 3 is stricter 2
than the one for the RC algorithm [36].
0
The recent work [22] proposed a certified propagation 0 5 10 15 20
Time
algorithm (CPA)-type broadcast and retrieval approach for the
(a) Underattackswithlessedges.
RAC problem. There, each normal node broadcasts its initial
value to all the nodes in the network through relaying by 10
1
neighbors(i.e.,thefloodingtechnique).Then,thenormalnode 2
8 3
confirms another node’s initial value if it receives more than 4
6 5 f copies of the value of the same node, which is similar to X 15 6
Y 4.8
the CPA approach [44]. Lastly, the normal node converges to 4
the average of values from the nodes which it has confirmed.
2
We must note that this kind of approaches for each node to
0
verify and store the initial values of all the normal agents 0 5 10 15 20
Time
become infeasible in large-scale networks, as it consumes
(b) Underattacks.
intensive storage and computation for each single node to
monitor the whole network. Compared to these approaches, Fig.6. TimeresponsesofAlgorithm3inthe6-nodenetworkinFig.5(b).
our iterative detection algorithm is more efficient, especially
in large-scale networks. Specifically, the storage needed on
A. SimulationswithDirectedNetworks
each node for our algorithm is modest as each node stores
only local information of its in-neighbors within two hops. In this part, we provide the simulations of Algorithm 3 in
three directed networks of different scales.
It is challenging for our algorithms, as well as any other
1) Small Directed Network: Consider the 6-node network
algorithms [20], [21], [37], [39] to identify adversarial nodes
in Fig. 5(b). It meets the graph condition (Assumption 4)
that adopt extreme initial values but behave according to the
for Algorithm 3 under the 1-local model. Moreover, it is
proposed algorithms as if they were normal nodes. Clearly,
2-strongly connected (i.e., the remaining graph is strongly
such nodes are indistinguishable from normal nodes with
connectedaftertheremovalofthe1-localmaliciousnodeset).
extremeinitialvalues.Tomitigatetheimpactofsuchadversary
Hence, it meets the requirements in Theorem 1.
nodes, we can set a safety interval [y ,y ] (recall that
min max
y [0]=x [0])fornormalnodessothatneighborstakinginitial Set the initial values x[0] = [9 7 1 3 4 6]T and the
i i
adversary node set A={6}. Malicious node 6 is indicated in
values outside this interval are considered malicious [36].
red in Fig. 5(b). First, we show that the detection condition
We conduct some comparisons between Algorithms 2 and
for Algorithm 3 is critical for the success of our RAC
3forthecaseofundirectednetworks.RecallthatAlgorithm2
algorithm. Suppose that three undirected edges (1,4), (2,5),
is for the f-total model while Algorithm 3 is for the f-
and (3,6) are removed from the network, i.e., the condition
local model. We first note that the f-local model contains
for Algorithm 3 is not satisfied. The simulation under attacks
the f-total model and is more adversarial in the sense that
for the above case with less edges is displayed in Fig. 6(a).
more than f malicious agents in total may be in the entire
Until time k = 2, malicious node 6 follows the averaging in
network under the f-local model. The reason is that if the
Algorithm 1 to avoid being detected. Then it manipulates its
graph condition for Algorithm 2 is satisfied under the f-local
y valuesthroughchangingthepastvaluesofnode2whilenot
model,thenitcannotguaranteethatthereisanormalneighbor
manipulating other entries of its information set. We can see
of any pair of adjacent malicious nodes (Lemma 1). Here is
inFig.6(a)thatresilientaverageconsensusisnotachievedby
a simple counter example. Consider the 5-node network in
Algorithm3withlessedges.Thisisbecauseonlynodes2and
Fig. 5(a) with malicious node set A = {1,4,5}. It satisfies
4 can detect the above misbehavior of node 6. Normal nodes
the f−1 common neighbors condition for Algorithm 2 under
1, 3 and 5 are misled by node 6 due to the lack of necessary
the 2-local model. Yet, it does not meet the condition in
graph structure to obtain the correct value of node 2.
Lemma 1. However, we must note that this phenomenon
Next, we apply Algorithm 3 in the 6-node network as
is not in presence for Algorithm 3 since the condition in
presented in Fig. 5(b), where the condition for Algorithm 3 is
Theorem2hasrequiredthenecessaryconditionforeachnode
met. Consider the same initial states and the same attacks for
to independently detect the malicious neighbors.
the network. The simulation result is presented in Fig. 6(b).
Malicious node 6 launches attacks as before, however, this
VI. NUMERICAL EXAMPLES misbehaviorissoondetectedbyitsnormalout-neighbors.The
normal nodes then compensate the erroneous effects received
We present numerical examples to verify the efficacy of from node 6 and start to form consensus among normal
RAC Algorithm 1 with Detection Algorithms 2 and 3. neighbors only. Lastly, the normal nodes are able to reach
seulaV
seulaVYUANetal.:RESILIENTAVERAGECONSENSUSWITHADVERSARIESVIADISTRIBUTEDDETECTIONANDRECOVERY 13
15
Normal
Malicious
10
X 30
Y 6.5
5
0
5 10 15 20 25 30
Time Fig. 8. The 8-node network satisfying the condition for Algorithm 3
underthe1-localmodel.
(a) Noattack.
15 15
Normal 1
Malicious 2
3
10 10 X 15 4 5 Y 10 6
Y X 6 .3 70 5 7
8
5 5
0 0
0 5 10 15 20 25 30 0 5 10 15 20
Time Time
(b) Underattacks. Fig.9. TimeresponsesofAlgorithm3inthe8-nodenetworkinFig.8.
Fig. 7. Time responses of Algorithm 3 in the 14-node network in
Fig.4(b).
Set the initial values x[0] = [3 15 9 8 4 7 1 12]T. The
simulation result is presented in Fig. 9. All malicious nodes
the average of their initial values X =
(cid:80) i∈Nxi[0]
= 4.8,
simultaneously launch attacks at time k =3 by manipulating
N |N| their values arbitrarily. However, these attacks are soon de-
and resilient average consensus is reached using Algorithm 3.
tected.InFig.9,thenormalnodeseventuallyreachtheaverage
2) Medium-scale Directed Network: Next, consider the 14-
of their initial values X = 10. Therefore, we can conclude
node network in Fig. 4(b) constructed using the method in N
thatresilientaverageconsensusisstillguaranteedusingAlgo-
Section V-D. It satisfies the condition for Algorithm 3 under
rithm 3 despite the erroneous effects from 5 malicious nodes.
the 1-local model and is 2-strongly connected.
Lettheinitialvaluesx[0]=[11293210146975148]T
and A = {2,14} in Fig. 4(b). The time responses of nodes B. SimulationswithLarge-scaleUndirectedNetworks
under no attack are shown in Fig. 7(a), where all nodes 1) Simulation of Algorithm 2: Here, we show the effec-
using Algorithm 3 reach the average of their initial values tiveness of Algorithm 2 by conducting a simulation in the 5-
X =
(cid:80)x[0]
= 6.5. Here, the lines not in red represent the node undirected network in Fig. 5(a) with initial states x[0]=
n
values of normal nodes. Then, the time responses of nodes [8 6 1 3 9]T. It is 3-connected and with at least one common
under attacks are displayed in Fig. 7(b). There, until time neighbor for every pair of neighbors. Given these properties,
k = 3, malicious nodes 2 and 14 pretend to be normal by Proposition2indicatesthatresilientaverageconsensuscanbe
following the averaging. Then node 14 changes its own value achievedusingAlgorithm2underthe2-totalmaliciousmodel.
to a fixed value and is detected by its normal out-neighbors at Let the adversary set A={4,5}. The simulation result under
the next time step. In the meantime, node 2 keeps concealing attacksisshowninFig.10.Maliciousnode5firstattacksother
itself. At time k =11, node 2 and normal nodes almost reach agents by transmitting arbitrary values at time k =4 and it is
the average of their initial values (around 6.385). However, soon detected by its normal neighbors. At time k =13, nodes
node 2 starts to manipulate its y value through changing the 1, 2, 3 and 4 almost reach the average of their initial values
past values of its in-neighbors in its information set. Such an (i.e.,4.5).However,node4startstomanipulateitsownvalue.
attack is also quickly detected and normal nodes remove the Suchanattackisalsoquicklydetected.Thenthenormalnodes
effects received from node 2 until then. Finally, the normal reach the average of their initial values X =5.
N
nodes reach the average of their initial values X N = 6.75, 2) Simulation of Algorithm 3: In this part, we carry out the
and resilient average consensus is attained. Moreover, the simulation of Algorithm 3 in a large-scale network, which is
convergence of Algorithm 3 is quick even in the presence of constructed by the method proposed in Section V-D. Specif-
malicious attacks. ically, we consider the 30-node network in Fig. 11. It has
3) Over Half of the Nodes Turn Malicious: We conduct the a 10-layer structure satisfying the condition for Algorithm 3
simulationofAlgorithm3underanextremelyadversarialcase, under the 1-local model. The malicious nodes are indicated in
where over half of the nodes in the network turn malicious. red with A={3,6,15,18,27,30}.
Considerthe8-nodenetworkinFig.8withA={3,4,5,6,7}. Let the initial values x[0] = [8 7 5 3 2 11 1 4 6 9
It is almost complete except that there are 4 directed edges 10 12 11 13 14 3 5 2 8 7 5 3 2 11 1 4 6 9 10 12]T. The
from node 2. Moreover, it satisfies the condition for Algo- simulation results of Algorithm 3 without and with attacks
rithm 3 under the 1-local model for non-full access node 2. are shown in Figs. 12(a) and (b), respectively. One can see in
seulaV
seulaV seulaV14 IEEETRANSACTIONSANDJOURNALSTEMPLATE
10 15
1 Normal
2 Malicious
8 3
4 10
6 5
4 X Y 1 58 X 160
5 Y 6.8
2
0 0
0 5 10 15 20 0 20 40 60 80 100 120 140 160
Time Time
Fig. 10. Time responses of Algorithm 2 in the 5-node network in (a) Noattack.
Fig.5(a).
15
Normal
Malicious
10
5 Y 6X .4 11 67 61
0
0 20 40 60 80 100 120 140 160
Fig.11. Alarge-scalenetworksatisfyingtheconditionforAlgorithm3 Time
underthe1-localmodel.
(b) Underattacks.
Fig. 12. Time responses of Algorithm 3 in the 10-layer network in
Fig. 12(a) that all nodes achieve average consensus X = 6.8 Fig.11.
usingAlgorithm3althoughtheconvergenceisslowduetothe
large network size. As for the results of nodes under attacks,
values of two-hop neighbors. In the end, we have provided
it shows in Fig. 12(b) that at time k =9, all the 6 malicious
extensive numerical examples to show the effectiveness of the
nodesstarttomanipulatetheirvaluesthroughcooperatingwith
proposed algorithms.
their malicious neighbors and changing the past values of
Infutureworks,weareinterestedinapplyingouralgorithms
each other in their information sets. Such attacks are soon
to various applications of average consensus where security
detected by their normal neighbors. Thereafter, the normal
needs to be enhanced, e.g., the economic dispatch problem
nodes reach the average of their initial values X =6.4166.
N
and the PageRank problem.
TheRACproblemissolvedbyAlgorithm3inthepresenceof
6 malicious nodes. Note that Algorithm 3 can still guarantee
resilient average consensus if any one of the nodes become APPENDIX
malicious in each one of the 6 layers containing malicious PROOF OF LEMMA 2
nodes currently. This is because the malicious nodes also
Proof: The proof is shown in two stages. First, we show
satisfy the 1-local model in this case. We finally emphasize
that the clique structure (see the examples in Fig. 13(a)) is
that none of the methods in [23], [38], [39] can handle the
the minimum subgraph not having any node with in-degree
above case of neighboring malicious nodes.
more than 2f while satisfying the condition for Algorithm 3.
Due to the f-local model, each node must have at least f in-
VII. CONCLUSION
neighbors. It is obvious that if any node uses the majority
In this paper, we have investigated the problem of resilient voting structure (i.e., 2f + 1 two-hop paths) to obtain the
average consensus in the presence of adversaries. We have original value of a two-hop in-neighbor or an out-neighbor,
proposed a distributed iterative detection and averaging algo- then such a node will have at least 2f + 1 in-neighbors.
rithmfornormalagentstoachieveresilientaverageconsensus Considernodeiwithf in-neighbors.Bytheabovediscussion,
in general directed topologies. For the detection part, we it has undirected edges to the f in-neighbors, which results in
have proposed two distributed algorithms and the second one these in-neighbors being two-hop in-neighbors to each other.
can achieve fully distributed detection of malicious agents. Thus, by the same argument, there must be undirected edges
For the averaging part, it can precisely preserve the sum of between them. Therefore, the clique is the only structure
the initial values of normal agents. Moreover, we have fully satisfying the condition for Algorithm 3 while not having any
characterized the network requirement for the algorithms to node with in-degree more than 2f.
successfully achieve resilient average consensus. Compared Next, we show the minimum in-degree of the whole graph.
to the existing detection approaches, our method is the only Sincethegraphisstronglyconnected,thereexistbi-directional
one that can handle the case of neighboring malicious agents. edges (one undirected edge or two separate directed edges)
Besides, we have solved the resilient average consensus in connecting two subgraphs. For example, we take the undi-
directed networks, whereas the existing detection approaches rected edge between nodes i and j in Fig. 13(b). Then other
studied undirected networks only. Moreover, in comparison nodes in the right subgraph become two-hop neighbors of
withtheexistingsecurebroadcastandretrievalapproach[22], nodei.Bysimilardiscussionsasabove,thereexistundirected
our algorithm can save storage as each agent keeps only the edges between node i and all the neighbors of node j (as
seulaV seulaV
seulaVYUANetal.:RESILIENTAVERAGECONSENSUSWITHADVERSARIESVIADISTRIBUTEDDETECTIONANDRECOVERY 15
(a) (b)
Fig.13. (a)Examples:Acliqueisacompletesubgraph.(b)Illustration
(a) (b)
fortheminimumin-degree.
Fig.14. (a)Theminimumsubgraphofanundirectedgraphsatisfying
theconditionforAlgorithm3.(b)Illustrationfortwoconnectedsubgraphs
indicated by the blue edges in the figure). As a result, node
V1andV2.
i has 2f +1 in-neighbors. Moreover, we can check that all
the rest of nodes also have 2f +1 in-neighbors to fulfill the
normal neighbors. Finally, since the malicious set is f-local,
condition for Algorithm 3. We conclude that the whole graph
we conclude that the normal network induced by the normal
has the minimum in-degree no less than 2f +1.
agents in N ⊆V is connected.
PROOF OF PROPOSITION 3
REFERENCES
Proof: We first show that for any node i ∈ V, there
must exist the minimum subgraph containing node i as the [1] N.A.Lynch,DistributedAlgorithms.MorganKaufmann,1996.
[2] R.Olfati-Saber,J.A.Fax,andR.M.Murray,“Consensusandcoopera-
one in Fig. 14(a). Recall from Lemma. 2 that an undirected
tioninnetworkedmulti-agentsystems,”Proc.IEEE,vol.95,no.1,pp.
graph satisfying the condition for Algorithm 3 has minimum 215–233,2007.
in-degree no less than 2f +1. In Fig. 14(a), we set f = 1 [3] F.Bullo,J.Corte´s,andS.Martinez,DistributedControlofRoboticNet-
works: A Mathematical Approach to Motion Coordination Algorithms.
for illustration. The edges in blue and black represent the
PrincetonUniversityPress,2009.
detectable path and the communication edge, respectively. [4] M.MesbahiandM.Egerstedt,GraphTheoreticMethodsinMulti-agent
Note that this subgraph also includes the middle nodes on the Networks.PrincetonUniversityPress,2010.
detectable path (not shown in the figure for convenience) if [5] G.S.Seyboth,D.V.Dimarogonas,andK.H.Johansson,“Event-based
broadcasting for multi-agent average consensus,” Automatica, vol. 49,
such path is not constructed by an undirected communication
no.1,pp.245–252,2013.
edge. It can be observed that in a minimum subgraph, after [6] K. Cai and H. Ishii, “Quantized consensus and averaging on gossip
removing any node set being f-local, the remaining graph digraphs,”IEEETransactionsonAutomaticControl,vol.56,no.9,pp.
2087–2100,2011.
is connected. This means that there is at least one path
[7] K.CaiandH.Ishii,“Averageconsensusongeneralstronglyconnected
connecting any two nodes in the remaining graph. digraphs,”Automatica,vol.48,no.11,pp.2750–2761,2012.
Now, consider any two minimum subgraphs with node sets [8] M.E.Chamie,J.Liu,andT.Basar,“Designandanalysisofdistributed
averagingwithquantizedcommunication,”IEEETransactionsonAuto-
V and V (see Fig. 14(b)). There must be at least one
1 2 maticControl,vol.61,no.12,pp.3870–3884,2016.
edge between them since the whole graph is connected by [9] T. C. Aysal, M. J. Coates, and M. G. Rabbat, “Distributed average
assumption.Therearethreesubcasesforplacingsuchanedge. consensus with dithered quantization,” IEEE Transactions on Signal
Processing,vol.56,no.10,pp.4905–4918,2008.
These are between (i) i and j , (ii) i and j, (iii) i and j .
1 1 1 [10] A. Olshevsky and J. N. Tsitsiklis, “Convergence speed in distributed
(Without loss of generality, select j
1
as one of j’s neighbors.) consensusandaveraging,”SIAMJournalonControlandOptimization,
In cases (i) and (ii), node j or j becomes a direct neighbor vol.48,no.1,pp.33–55,2009.
1
[11] C.N.Hadjicostis,N.H.Vaidya,andA.D.Dominguez-Garcia,“Robust
of node i. Thus, node j or j is connected with any node in
1 distributed average consensus via exchange of running sums,” IEEE
V
1
after removing an f-local node set in V 1. Since node j
1
TransactionsonAutomaticControl,vol.61,no.6,pp.1492–1507,2016.
or j is also connected with any node in V after the removal, [12] M. Zhu and S. Martinez, “Discrete-time dynamic average consensus,”
2 Automatica,vol.46,no.2,pp.322–329,2010.
we can conclude that in cases (i) and (ii), any node in V is
2 [13] E. Montijano, J. I. Montijano, C. Sagues, and S. Martinez, “Robust
connectedwithanynodeinV 1 afterremovinganf-localnode discretetimedynamicaverageconsensus,”Automatica,vol.50,no.12,
set in the whole graph. pp.3131–3138,2014.
[14] S. Yang, S. Tan, and J. Xu, “Consensus based approach for economic
In case (iii), nodes i and j become neighbors (see
1 1 dispatchprobleminasmartgrid,”IEEETransactionsonPowerSystems,
Fig. 14(b)). There should be detectable paths between i 1 and vol.28,no.4,pp.4416–4426,2013.
j and also between i and j . If any of the two paths is [15] H.IshiiandR.Tempo,“ThePageRankproblem,multiagentconsensus,
1
andwebaggregation:Asystemsandcontrolviewpoint,”IEEEControl
constructed by an undirected communication edge, the result
SystemsMagazine,vol.34,no.3,pp.34–53,2014.
is the same as the one in case (i). So we examine the [16] H.IshiiandA.Suzuki,“DistributedrandomizedalgorithmsforPageR-
case where both paths are constructed by 2f + 1 two-hop ankcomputation:Recentadvances,”inT.Basar(editor),Uncertaintyin
ComplexNetworkedSystems:InHonorofRobertoTempo,Birkhauser,
communication paths. Suppose that node i is connected to
pp.419-447,2018.
node j 1 through nodes i 4, i 5, and i 6. The three nodes become [17] L.YuanandH.Ishii,“Event-triggeredapproximateByzantineconsensus
two-hop neighbors of node j and there should be detectable withmulti-hopcommunication,”IEEETransactionsonSignalProcess-
ing,vol.71,pp.1742–1754,2023.
paths to node j. In this case, even if we remove the f-local
[18] S.SundaramandB.Gharesifard,“Distributedoptimizationunderadver-
model consisting of both nodes i 1 and j 1, node i and node j sarialnodes,”IEEETransactionsonAutomaticControl,vol.64,no.3,
areconnectedwitheachother,andsoaretherestofthenodes pp.1063–1076,2018.
[19] H.J.LeBlanc,H.Zhang,X.Koutsoukos,andS.Sundaram,“Resilient
in V and V . Note that removing both nodes i and j does
1 2 1 1 asymptotic consensus in robust networks,” IEEE Journal on Selected
not violate the f-local model since they do not have common AreasinCommunications,vol.31,no.4,pp.766–781,2013.16 IEEETRANSACTIONSANDJOURNALSTEMPLATE
[20] F. Pasqualetti, A. Bicchi, and F. Bullo, “Consensus computation in LiweiYuan(Member)receivedtheB.E.degree
unreliable networks: A system theoretic approach,” IEEE Transactions in Electrical Engineering and Automation from
onAutomaticControl,vol.57,no.1,pp.90–104,2012. Tsinghua University, China, in 2017, and the
[21] A.Fagiolini,F.Babboni,andA.Bicchi,“Dynamicdistributedintrusion Ph.D. degree in Computer Science from Tokyo
detection for secure multi-robot systems,” in Proc. IEEE Int. Conf. Institute of Technology, Japan, in 2022. He is
RoboticsandAutom.,2009,pp.2723–2728. currentlyaPostdoctoralResearcherintheCol-
[22] S.M.Dibaji,M.Safi,andH.Ishii,“Resilientdistributedaveraging,”in legeofElectricalandInformationEngineeringat
Proc.AmericanControlConference,2019,pp.96–101. HunanUniversity,Changsha,China.Hiscurrent
[23] W. Zheng, Z. He, J. He, and C. Zhao, “Accurate resilient average researchfocusesonsecurityinmulti-agentsys-
consensusviadetectionandcompensation,”inProc.IEEEConference temsanddistributedalgorithms.
onDecisionandControl,2021,pp.5502–5507.
[24] C.N.HadjicostisandA.D.Dominguez-Garcia,“Trustworthydistributed
averageconsensus,”inProc.IEEEConferenceonDecisionandControl,
2022,pp.7403–7408.
[25] S. Sundaram and C. N. Hadjicostis, “Distributed function calculation
vialineariterativestrategiesinthepresenceofmaliciousagents,”IEEE
TransactionsonAutomaticControl,vol.56,no.7,pp.1495–1508,2011.
[26] A.Teixeira,D.Pe´rez,H.Sandberg,andK.H.Johansson,“Attackmodels
andscenariosfornetworkedcontrolsystems,”inProc.1stInternational
ConferenceonHighConfidenceNetworkedSystems,2012,pp.55–64.
[27] A. Goldsmith, Wireless Communications. Cambridge University Press,
2005
[28] M.AzadmaneshandR.Kieckhafer,“Asynchronousapproximateagree-
mentinpartiallyconnectednetworks,”InternationalJournalofParallel
andDistributedSystemsandNetworks,vol.5,no.1,pp.26–34,2002.
[29] N.H.Vaidya,L.Tseng,andG.Liang,“IterativeapproximateByzantine
consensus in arbitrary directed graphs,” in Proc. ACM Symposium on
PrinciplesofDistributedComputing,2012,pp.365–374.
[30] L. Yuan and H. Ishii, “Resilient consensus with multi-hop communi-
cation,”inProc.IEEEConferenceonDecisionandControl,2021,pp.
2696–2701. Hideaki Ishii (M’02-SM’12-F’21) received the
[31] L. Su and N. H. Vaidya, “Reaching approximate Byzantine consensus M.Eng.degreeinappliedsystemssciencefrom
withmulti-hopcommunication,”InformationandComputation,vol.255, KyotoUniversity,Kyoto,Japan,in1998,andthe
pp.352–368,2017. Ph.D. degree in electrical and computer engi-
[32] S.M.Dibaji,H.Ishii,andR.Tempo,“Resilientrandomizedquantized neeringfromtheUniversityofToronto,Toronto,
consensus,”IEEETransactionsonAutomaticControl,vol.63,no.8,pp. ON, Canada, in 2002. He was a Postdoctoral
2508–2522,2018. Research Associate at the University of Illinois
[33] L.YuanandH.Ishii,“AsynchronousapproximateByzantineconsensus at Urbana-Champaign, Urbana, IL, USA, from
viamulti-hopcommunication,”inProc.AmericanControlConference, 2001to2004,andaResearchAssociateatThe
2022,pp.755–760. University of Tokyo, Tokyo, Japan, from 2004
[34] D.M.Senejohnny,S.Sundaram,C.DePersis,andP.Tesi,“Resilience to 2007. He was an Associate Professor and
againstmisbehavingnodesinasynchronousnetworks,”Automatica,vol. Professor at the Department of Computer Science, Tokyo Institute
104,pp.26–33,2019. of Technology, Yokohama, Japan in 2007–2024. Currently, he is a
[35] H.Ishii,Y.Wang,andS.Feng,“Anoverviewonmulti-agentconsensus ProfessorattheDepartmentofInformationPhysicsandComputingat
underadversarialattacks,”AnnualReviewsinControl,vol.53,pp.252– The University of Tokyo, Tokyo, Japan. He was a Humboldt Research
272,2022. Fellow at the University of Stuttgart in 2014–2015. He has also held
[36] L.YuanandH.Ishii,“Secureconsensuswithdistributeddetectionvia visitingpositionsatCNR-IEIITatthePolitecnicodiTorino,theTechnical
two-hopcommunication,”Automatica,vol.131,no.109775,2021. UniversityofBerlin,andtheCityUniversityofHongKong.Hisresearch
[37] C.Zhao,J.He,andJ.Chen,“Resilientconsensuswithmobiledetectors interests include networked control systems, multiagent systems, dis-
againstmaliciousattacks,”IEEETransactionsonSignalandInformation tributedalgorithms,andcyber-securityofcontrolsystems.
ProcessingoverNetworks,vol.4,no.1,pp.60–69,2018. Dr.IshiihasservedasanAssociateEditorforAutomatica,theIEEE
[38] C.N.HadjicostisandA.D.Dominguez-Garcia,“Trustworthydistributed ControlSystemsLetters,theIEEETransactionsonAutomaticControl,
average consensus based on locally assessed trust evaluations,” arXiv theIEEETransactionsonControlofNetworkSystems,andtheMath-
preprint,arXiv:2309.00920,2023. ematicsofControl,Signals,andSystems.HewasaVicePresidentfor
[39] C. N. Hadjicostis and A. D. Dominguez-Garcia, “Identification of the IEEE Control Systems Society (CSS) in 2022–2023. He was the
malicious activity in distributed average consensus via non-concurrent ChairoftheIFACCoordinatingCommitteeonSystemsandSignalsin
checking,”IEEEControlSystemsLetters,vol.7,pp.1927–1932,2023. 2017–2023.HeservedastheIPCChairfortheIFACWorldCongress
[40] B.Parhami,“Votingalgorithms,”IEEETransactionsonReliability,vol. 2023heldinYokohama,Japan.HereceivedtheIEEEControlSystems
43,no.4,pp.617–629,1994. MagazineOutstandingPaperAwardin2015.Dr.IshiiisanIEEEFellow.
[41] R. E. Blahut, Theory and Practice of Error Control Codes. Addison-
Wesley,1983.
[42] D.Kempe,A.Dobra,andJ.Gehrke,“Gossip-basedcomputationofag-
gregateinformation,”inProc.AnnualIEEESymposiumonFoundations
ofComputerScience,2003,pp.482–491.
[43] L. Tseng and N. H. Vaidya, “Fault-tolerant consensus in directed
graphs,” in Proc. ACM Symposium on Principles of Distributed Com-
puting,2015,pp.451–460.
[44] L. Tseng, N. Vaidya, and V. Bhandari, “Broadcast using certified
propagation algorithm in presence of Byzantine faults,” Information
ProcessingLetters,vol.115,no.4,pp.512–514,2015.