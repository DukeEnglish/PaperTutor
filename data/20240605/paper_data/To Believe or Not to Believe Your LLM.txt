To Believe or Not to Believe Your LLM
Yasin Abbasi Yadkori, Ilja Kuzborskij, András György, Csaba Szepesvári
Google DeepMind
June 5, 2024
Abstract
We explore uncertainty quantification in large language models (LLMs), with the goal to identify
when uncertainty in responses given a query is large. We simultaneously consider both epistemic
and aleatoric uncertainties, where the former comes from the lack of knowledge about the ground
truth (such as about facts or the language), and the latter comes from irreducible randomness (such
as multiple possible answers). In particular, we derive an information-theoretic metric that allows
to reliably detect when only epistemic uncertainty is large, in which case the output of the model
is unreliable. This condition can be computed based solely on the output of the model obtained
simply by some special iterative prompting based on the previous responses. Such quantification, for
instance,allowstodetecthallucinations(caseswhenepistemicuncertaintyishigh)inbothsingle-and
multi-answer responses. This is in contrast to many standard uncertainty quantification strategies
(such as thresholding the log-likelihood of a response) where hallucinations in the multi-answer case
cannot be detected. We conduct a series of experiments which demonstrate the advantage of our
formulation. Further, our investigations shed some light on how the probabilities assigned to a given
output by an LLM can be amplified by iterative prompting, which might be of independent interest.
1 Introduction
Who’s talking? I asked, peering behind the mirror. Many dead spiders and a lot
of dust were there. Then I pressed my left eye with my index finger. This was
an old formula for detecting hallucinations, which I had read in To Believe or
Not to Believe?, the gripping book by B. B. Bittner. It is sufficient to press on
the eyeball, and all the real objects, in contradistinction to the hallucinated, will
double. The mirror promptly divided into two and my worried and sleep-dulled
face appeared in it.
—"Monday Starts on Saturday" by A. and B. Strugatsky
Like the protagonist of the novel, language models too occasionally suffer from hallucinations, or
responses with low truthfulness, that do not match our own common or textbook knowledge (Bubeck
et al., 2023; Gemini Team, Google, 2023). At the same time, since LLMs work by modeling a probability
distribution over texts, it is natural to view the problem of truthfulness through the lens of statistical
uncertainty. In this paper we explore uncertainty quantification in LLMs. We distinguish between two
sources of uncertainty: epistemic and aleatoric (Wen et al., 2022; Osband et al., 2023; Johnson et al.,
2024). Epistemic uncertainty arises from the lack of knowledge about the ground truth (e.g., facts or
grammar in the language), stemming from various reasons such as insufficient amount of training data or
model capacity. Aleatoric uncertainty comes from irreducible randomness in the prediction problem, such
as multiple valid answers to the same query. Hence, truthfulness can be directly analyzed via looking at
the epistemic uncertainty of a model in the sense that when the epistemic uncertainty is low, the model
predictions must be close to the ground truth.
Rigorously identifying when (either) uncertainty is small1 is notoriously hard, especially in deep
neural networks (Blundell et al., 2015; Antorán et al., 2020). This is because we generally lack guarantees
1Forinstance,bysayingthatpredictionsliveinaconfidencesetwithhighprobability.
1
4202
nuJ
4
]GL.sc[
1v34520.6042:viXraabout learning the ground truth (consistency), or even a weaker guarantee about how large the variance
of a learning algorithm is. At the same time, there exist many heuristic approaches for uncertainty
quantificationbasedonsimplylookingatthelog-likelihoodofresponses(Kadavathetal.,2022),estimating
entropy (Kuhn et al., 2023), ensembling (Lakshminarayanan et al., 2017b; Dwaracherla et al., 2023;
Osband et al., 2023), or sometimes even more principled formulations, such as conformal prediction
(Angelopoulos et al., 2023; Ravfogel et al., 2023; Yadkori et al., 2024) (which however come with strong
assumptions).
Tothebestofourknowledge,acommonlimitationoftheseapproachesisthattheyareonlymeaningful
in problems where there exists a single correct response (e.g. label) as they aim for detecting if one
response is dominant (or multiple responses with the same meaning), that is, if there is only little
uncertainty in the prediction. On the other hand, when multiple responses are correct, that is, there is
aleatoric uncertainty in the ground truth, simply estimating the amount of uncertainty in the LLM’s
output is insufficient, as the perfect (ground-truth) predictor may have large aleatoric uncertainty and no
epistemic uncertainty, while a completely useless predictor may have large epistemic uncertainty only, but
the total amount of uncertainty of the two predictors might be the same.
Contributions. In this paper we address the above problem directly, and design methods to decouple
epistemic and aleatoric uncertainty, allowing us to effectively deal with multi-response queries. Rather
thantryingtoquantifyhowsmallepistemicuncertaintycanbe,weaimtoidentifywhenonlytheepistemic
uncertainty is large, in which case we can suspect that the response is hallucinated.2
As a starting point we make a simple observation: If multiple responses are obtained to the same
query from the ground truth (the language), they should be independent from each other, that is, in
probabilistic interpretation, the joint distribution of these multiple responses, for a fixed query, must be a
product distribution.
This observation can be used to measure how far the language model can be from the ground truth.
The sequential model implemented by a language model allows us to construct a joint distribution over
multiple responses, which is done through iterative prompting of an LLM based on its previous responses
and the application of the chain rule of probability: first we ask the model to provide a response given a
query, then to provide another response given the query and the first response, then a third one given
the query and the first two responses, an so on. This is in contrast to some of the earlier works that
approached decoupling epistemic and aleatoric uncertainty for classification problems by training the
model with pairs (or tuples) of labels (Wen et al., 2022).
So, if the response to a prompt containing the query and previous responses is insensitive to the
previous responses, we have the desired independence and the LLM-derived joint distribution can be
arbitrarily close to the ground truth. On the other hand, if the responses within the context heavily
influence new responses from the model then, intuitively speaking, the LLM has low confidence about the
knowledge stored in its parameters, and so the LLM-derived joint distribution cannot be close to the
ground truth. As more responses are added to the prompt, this dependence can be made more apparent,
allowing to detect epistemic uncertainty via our iterative prompting procedure.
Interestingly, as we will see in Section 3, we can force an LLM to provide a desired (possibly incorrect)
response by adding this response repeatedly to the prompt. This phenomenon is then further investigated
from the viewpoint of a transformer LLM architecture in Section 3.1.
The iterative prompting procedure then leads to the following main contributions:
(i) Based on the above iterative prompting procedure, we derive an information-theoretic metric of
epistemic uncertainty inLLMs(Section4),whichquantifiesthegapbetweentheLLM-deriveddistribution
over responses and the ground truth. This gap is insensitive to aleatoric uncertainty, and therefore we
can quantify epistemic uncertainty even in cases where there are multiple valid responses.
(ii) We derive a computable lower bound on this metric, which turns out to be a mutual information
(MI) of an LLM-derived joint distribution over responses,3 and propose a finite-sample estimator for it.
We prove that this finite-sample MI estimator sometimes suffers only a negligible error even though LLMs
and their derived joint distributions are defined over potentially infinite supports (all possible strings in a
language).
2Intechnicaltermsthiscorrespondstogivingalowerbound,ratherthananupperbound,onthequantitycapturingthe
uncertainty.
3HereMIisunderstoodasafunctionalofajointdistribution(seeSection2).
2(iii) We discuss an algorithm for hallucination detection based on thresholding a finite-sample MI
estimator, where the threshold is computed automatically through a calibration procedure. We show
experimentallyonclosed-bookopen-domainquestion-answeringbenchmarks(suchasTriviaQA,AmbigQA,
and a dataset synthesized from WordNet) that when the data is mostly composed of either single-label or
multi-label queries, our MI-based hallucination detection method surpasses a naive baseline (which is
based on the likelihood of the response), and achieves essentially similar performance to that of a more
advanced baseline which is based on the entropy of the output as a proxy for uncertainty. However, on
datasetswhichcontainbothsingle-andmulti-labelsamplesatthesametime,ourmethodalsosignificantly
outperforms the entropy-based baseline, by achieving a much higher recall rate on samples with high
output entropy while maintaining similar error rates.
(iv) Focusing on a single self-attention head, we identify a simple mechanistic explanation for how
the model output can be changed through iterative prompting using previous responses, as discussed
earlier. Supposethatthepromptiscomposedfromaqueryandarepeatedelement(e.g.,apossiblywrong
answer). If the query lies within the space spanned by the large principal components of a key-query
matrix product, then the output will be generated according to the knowledge extracted from the training
data (now stored in a value matrix). On the other hand, if the query has little overlap with the large
principal components, then the repeated element is likely to be copied from the prompt.
Notation. As usual, N and R denote the sets of natural and real numbers, respectively. For any
measurable set Z, we denote the the set of distributions supported on Z by M (Z). For any positive
1
integer k, we denote [k]={1,...,k}.
2 Preliminaries
In this section we present some basic definitions used throughout the paper.
Conditional distributions and prompting. Let X be the space of finite text sequences, that is
X ⊂Σ∗ where Σ is a finite alphabet (and Σ∗ =(cid:83)∞ Σn). Moreover, consider a family of conditional
n=1
distributions P ={µ:X →[0,1] | (cid:80) µ(x|x′)=1 ∀x′ ∈X}. In the following, we let P ∈P be the
x∈X
ground-truth conditional probability distribution over text sequences (responses) given a prompt, and we
let Q∈P be the learned language model. Given a fixed query x∈X and possible responses Y ,...,Y ,
1 t
we define a family of prompts F ={F :X →X | t∈N}, such that F (x,Y ,...,Y ) is defined as:
t t 1 t
Consider the following question: Q: x
One answer to question Q is Y . Another answer to question Q
1
is Y .[...] Another answer to question Q is Y .
2 t
Provide an answer to the following question:
Q: x. A:
Information-theoretic notions. Let µ,µ′ be distributions supported on set Z = Z ×···×Z
1 n
where (Z ) is a collection of countable sets. The entropy of a distribution µ is defined as H(µ) =
i i
(cid:80) µ(z)ln(1/µ(z)).4 If µ,µ′ are such that µ′(z) = 0 only if µ(z) = 0, we have a Kullback-Leibler
z∈Z
divergence between them defined as D (µ,µ′)=(cid:80) µ(z)ln(µ(z)/µ′(z)). For any z ∈Z, we denote
KL z∈Z
z\i = (z ,...,z ,z ,...,z ), and the marginal of the ith coordinate of µ is given by µ (z) =
1 i−1 i+1 n i
(cid:80)
µ(z). The product distribution of the marginals of µ is given by
µ⊗(z)=(cid:81)n
µ (z), and the
z\i∈Zn−1 i=1 i
mutual information of µ is defined as I(µ)=D (µ,µ⊗).
KL
3 Probability amplification by iteratively prompting
Inthissectionwedemonstratethat,asmentionedintheintroduction,repeatingpossibleresponsesseveral
times in a prompt can have pronounced effects on the output of a language model. Consider x=“What
4Followingtheusualconvention,wedefine0ln0=0andaln(a/0)=∞foranya>0.
3Q:WhatisthecapitaloftheUK? Q:WhowasthefirstUSpresident? Q:WhoistheauthorofTheGrapes Q:Whatisthelargestcountryin
A: London (≈ 1.0) and Paris A:GeorgeWashington(0.999)and of Wrath? A:John Steinbeck (≈ theworld? A:Russia(0.999)and
(1.29×10−10). AbrahamLincoln(3.1×10−06). 1.0)andErnestHemingway(1.34× UnitedKingdom(9.02×10−06).
10−10).
Figure 1: Single-label queries with low epistemic uncertainty: Conditional normalized probability of
the correct completion given repetitions of an incorrect response. Each figure shows the query and the
considered two responses with their initial probabilities, as a response for the query, in parentheses (the
first response is the correct one).
Q:Whatisthenationalinstrument Q:Which actor became M in the Q:Whichcanlastlongerwithout Q:IfMonday’schildisfairofface
of Ireland? A: The harp (0.936) Bond film Skyfall? A: Ralph wateracamelorarat? A:Arat whatisSaturday’schild? A:Work
andUilleannpipes(0.063). Fiennes (0.651) and Judi Dench (0.538)andAcamel(0.461). hardforaliving (0.093)andFull
(0.348). ofgrace(0.906).
Figure 2: Single-label queries with high epistemic uncertainty: Conditional normalized probability of
the correct completion given repetitions of an incorrect response. Each figure shows the query and the
considered two responses with their initial probabilities, as a response for the query, in parentheses (the
first response is the correct one).
is the capital of the UK?” and Y = ··· = Y =“Another answer to question Q is Paris.” Here we can
1 t
repeat the sentence “Another answer to question Q is Paris.” an arbitrary number of times. Although
the number of repetitions changes the behavior of the LLM, the correct response maintains a significant
probability: as Figure 1 shows, the conditional normalized probability5 of the correct response, “London”,
reduces from approximately 1 to about 96% as we increase the number of repetitions of the incorrect
response to 100. Figure 1 shows 3 more examples where, with initially low epistemic uncertainty in the
response to the query (the aleatoric uncertainty is also low as we consider single-response queries), the
correct response maintains a significant or non-negligible probability even in the presence of repetitions of
incorrect information, while the probability of predicting the latter is increased.
Next, we consider a queries for which the model is more uncertain. For the prompt “What is the
national instrument of Ireland?”, we observe that responses “The harp” and “Uilleann pipes” both have
significant probabilities (the first answer is the correct one). This time, by incorporating the incorrect
response in the prompt multiple times, the probability of the correct answer quickly collapses to near
zero, as shown in Figure 2, together with three more examples with significant epistemic uncertainty.
Finally, we consider multi-label queries for which the LLM confidently knows a correct answer. This
time, by incorporating a potential response in the prompt, the probabilities of other correct answers stay
relatively large. Figure 3 shows four such examples.
3.1 In-context learning vs. in-weight learning
The sensitivity of the response of an LLM to extra in-context information, as observed above, can already
be observed in a single attention head as explained next.
Weconsideranidealizedattentionmechanismasfollows. LetZ∈Rn×d′ beaninputmatrixcomprised
of n semantic feature vectors each of dimension d′. Each row is meant to represent a complete statement
5Toobtainconditionalnormalizedprobabilities,weconsidertheprobabilitiesofthetworesponses,andnormalizethem
sothattheyaddto1.
4Q: Name a city in the UK A: Q:NameayellowfruitA:Banana Q: Name an alcoholic drink, A: Q:Nameaballgamethatisplayed
London (0.958) and Manchester (0.715)andLemon(0.284). Wine(0.685)andBeer(0.314). bymorethan5playersA:Volley-
(0.041). ball(0.542)andSoccer(0.457).
Figure 3: Multi-label queries with aleatoric uncertainty: Conditional normalized probability of the first of
the two provided responses, both of which are correct, given repetitions of the second response in the
prompt. Each figure shows the query and the considered two responses with their initial probabilities, as
a response for the query, in parentheses.
(such as “What is the capital of the UK?” or “One answer to the question is Paris.”, etc.) rather than
a single token. Let X⊤ ∈ R1×d′ be the first row of Z, which represents the query of interest, such as
“What is the capital of the UK?”. Let E⊤ ∈R1×d′ be a special vector indicating the end of the input. The
matrix Z\X, denoting the Z matrix without its first row, represents the in-context information.
We assume the ground-truth distribution P is such that a query vector is mapped to its response, but
a statement is simply copied. For example, for V =“What is the capital of the UK?”, P(· |V) would be
a distribution with support on “London” and its variations, while for V′ =“What is the capital of the UK?
One answer to the question is Paris.”, P(· |V′) returns the same distribution. We assume a parameter
matrix WV is learned such that V⊤WV estimates P(· |V) for vector V.
Let WQ,WK,WV ∈Rd′×d be the query, key, and value matrices. A self-attention head with query
X and context Z\X is defined as
(cid:18) (cid:19)
1
f(Z;WQ,WK,WV)=Softmax √ E⊤WQ(ZWK)⊤ ZWV
d
where the output of the Softmax is a row vector of length n.
If X has appeared many times in the training data, then parameters WQ and WK could be learned
such that E⊤WQ(WK)⊤X is large, that is, X is within the space spanned by the large principal
components of the key-query matrix product. Then, no matter what in-context information appears in Z,
the probability assigned to X will dominate the sotmax, and we will have
(cid:18) (cid:19)
1
Softmax √ E⊤WQ(ZWK)⊤ Z≈X⊤,
d
and therefore f(Z;WQ,WK,WV)≈P(· |X).
On the other hand, consider the case that X has not appeared many times in the training data, and
vector Y is copied in many rows of Z. Then E⊤WQ(WK)⊤X could be small as X is not in the span of
the large principal components of the key-query matrix product. Therefore f(Z;WQ,WK,WV)≈Y
since
(cid:18) (cid:19)
1
Softmax √ E⊤WQ(ZWK)⊤ Z≈Y⊤.
d
Even if X is in the span, repeating Y t times in Z would give a t-times increased total weight to Y inside
the softmax, which can dominate the weight assigned to X when t is large enough, also resulting in Y as
the answer.
4 Metric of epistemic uncertainty and its estimation
In this section we apply iterative prompting to estimate the epistemic uncertainty of a language model
about responding to some query. The idea is to utilize the different behavior patterns observed in
Section 3, which can be used to differentiate between two modes of high uncertainty: when the aleatoric
uncertainty is high vs. when only the epistemic uncertainty is high. We then apply our new uncertainty
metric to design a score-based hallucination detection algorithm.
5Recall the family of prompts F defined in Section 2. We make the following assumption about the
ground truth, which states that multiple responses to the same question drawn according to the ground
truth are independent from each other:
Assumption 4.1 (Ground truth independence assumption). The ground-truth satisfies
P(Y |F (x,Y ,...,Y ))=P(Y |x) for any t∈N and any x,Y ,...,Y ∈X.
t t−1 1 t−1 t 1 t
Notethattheaboveassumptionisheavilydependentonourpromptconstruction. Withoutembedding
Y ,...,Y in the prompt, the independence assumption would not hold, for example, if Y ,...,Y were
1 t−1 1 t
partial answers, such as a step of an algorithm or a part of a story, because in such a case Y might indeed
t
depend on the previous outputs Y ,...,Y . Roughly speaking, the assumption tells that the response
1 t−1
distribution is insensitive to a query based on previously sampled responses. For example, for query
x=“A city in the UK:”, the probability of Y =“Manchester” does not change if a city is Y =“London”.
2 1
Now we formally introduce a notion of the joint distribution over responses given a query, derived from
the language model:
Definition 4.2 (Pseudo joint distribution). Given a family of prompt functions F, a conditional
distribution µ∈P, and n∈N, we use notation · to denote a pseudo joint distribution defined as
(cid:101)
µ(Y ,...,Y |x)=µ(Y |F (x))µ(Y |F (x,Y ))···µ(Y |F (x,Y ,...,Y )). (1)
(cid:101) 1 n 1 0 2 1 1 n n−1 1 n−1
The above is a pseudo joint distribution since the standard conditioning in the chain-rule is replaced
with prompt functions of the conditioning variables. In the following we focus on Q(cid:101) derived from the
LLM and P(cid:101) derived from the ground truth.
Remark 4.3 (Sampling from Q(cid:101)). Note that sampling from Q(cid:101) can be simply done through a chain-
rule-like procedure as can be seen from the above definition, that is, to have (Y 1,...,Y n) ∼ Q(cid:101) we draw
Y ∼Q(·|F (x)), Y ∼Q(·|F (x,Y )), Y ∼Q(·|F (x,Y ,Y )), and so on.
1 0 2 1 1 3 2 1 2
In the rest of the paper we drop subscripts in joint distributions and conditioning on query x (which
is understood implicitly), for example, P(cid:101) ≡P(cid:101)Y1···Yn|x.
To measure epistemic uncertainty, we need to quantify how far the estimated pseudo joint distribution
Q˜ is from the ground truth P˜. One natural choice is the following definition:
Definition 4.4 (Epistemic uncertainty metric). Given an input x ∈ X, we say that the epistemic
uncertainty of Q(cid:101) is quantified by D KL(Q(cid:101),P(cid:101)).
Here D
KL
measures how well Q(cid:101) approximates P(cid:101) for a given
query x. Namely, this metric determines if Q(cid:101) assigns a large
probability to an event which has a small probability under P(cid:101). In
case of LLMs, this means the LLM generates a sequence that is
unlikely in the typical usage of the language. In Figure 4 we have
a situation where P(cid:101) is a pseudo joint distribution derived from the
ground-truth, and Q(cid:101) suffers from a high hallucination rate. Given
an input x, we want to estimate the above hallucination metric,
but we only have access to Q(cid:101), and so computing it explicitly is
Figure 4: A hallucination: Q(cid:101) places
an excessive mass where the ground
impossible. However, next we show that under Assumption 4.1 we
can lower bound D KL(Q(cid:101),P(cid:101)) by a quantity which only depends on truth P(cid:101) has a low mass.
Q(cid:101) (the proof is given in Appendix B).
Theorem 4.5. For all pseudo joint distributions P(cid:101) satisfying Assumption 4.1, we have that
D KL(Q(cid:101),P(cid:101))≥I(Q(cid:101)) .
The lower bound in the theorem holds uniformly for all P(cid:101), and it is computable solely based on
Q˜. This makes the bound applicable for decision making; in fact we chose to consider D KL(Q(cid:101),P(cid:101)) as
the measure of epistemic uncertainty (out of many similar distance measures) because it admits this
property).
61: Input:
µ∈M (Xn) .....................................any (pseudo-) joint distribution over Xn
1
k ∈N .............................................sample size
stabilization parameter (typically selected as
γ ≥0 .............................................
1/k)
2: Independently sample tuples X 1, ..., X k ∼µ∈M 1(Xn)
(cid:8) (cid:9)
3: Construct a set of indices of unique elements S = i∈[k] : X i ̸=X j ∀j <i
4: Construct empirical distributions: for all i∈S,
µ(X )
µ(X )= i ,
(cid:98) i Z
µ⊗(x′)=(cid:89)n (cid:80) x\iµ(x 1,...,x i−1,x′ i,x i+1,...,x n)
(for all x′ ∈Xn)
(cid:98) Z⊗
i=1
(cid:88) (cid:88)(cid:88)
where Z = µ(X ) , Z⊗ = µ(x ,...,x ,X ,x ,...,x )
j 1 i−1 j,i i+1 n
j∈S j∈S x\i
5: Compute estimate
(cid:18) (cid:19)
I(cid:98)k(γ)=(cid:88)
µ (cid:98)(X i) ln
µ⊗µ (cid:98)( (X Xi) )+ +γ γ/ /Z
Z⊗
(cid:98) i
i∈S
Algorithm 1: MI estimator
Also, note that we have I(Q(cid:101))=D KL(Q(cid:101),Q(cid:101)⊗) , Q(cid:101)⊗ =(cid:81) i(cid:80) y\iQ(cid:101)(y 1,...,y i−1,Y i,y i+1,...,y n). In gen-
(cid:80)
eral y\iQ(cid:101)(y 1,...,y i−1,Y i,y i+1,...,y n)̸=Q(cid:101)(Y i), because the independence assumption Assumption 4.1
does not necessarily (and, in practice, almost never) holds for Q.
Finally, a quantity related to D KL(Q(cid:101),P(cid:101)) is D
KL
with arguments arranged in the opposite order, that
is D KL(P(cid:101),Q(cid:101)) which is a (query) conditional excess risk of the LLM-derived pseudo joint distribution
Q(cid:101), under the logarithmic loss. Controlling the excess risk (for instance, upper-bounding it) for various
algorithms is one of the central questions in learning theory, however it is a much harder task than the
one we consider here, because for the former we need to theoretically control all sources of errors (such as
generalization, estimation, and approximation error).
4.1 A computable lower bound on epistemic uncertainty
Theorem 4.5 gives a lower bound on the epistemic uncertainty by the mutual information. However,
to compute the mutual information term, in practice we need to evaluate Q(cid:101) on its entire support,
which is potentially infinite. Practically speaking, it is impossible to observe probabilities of all strings
under the language model and so we must rely on a finite sample. Therefore, we replace Q(cid:101) with an
empirical distribution with a finite support; in the following we show that the error induced by such
an approximation is controlled. To estimate the MI we employ the method given in Algorithm 1; for
generality it is presented for an arbitrary (pseudo) joint distribution µ, but we keep in mind that our case
of interest is µ=Q(cid:101).
Note that the estimator is constructed using only each unique element in the sample (the indices of
these representative elements are collected in S), that is, we do not account for duplicate samples.6 Also
note that most terms in the summations defining the product distribution µ⊗ are zero (except the ones
(cid:98)
which correspond to the observed data). Furthermore, adding γ/Z and γ/Z⊗ in the estimator I(cid:98)k(γ) is
intended to account for the total probability of missing observations, not included while constructing µ
(cid:98)
6WhentheXi areresponsesfromlanguagemodels(i.e.,whenweconsidertheresponsesXi=(Y1,...,Yn)),weusually
considertheequalityofXi=Xj semantically,asdefinedbysomefunctioncomparatorfunctionaimingtocomparetoo
responsessemantically(ourchoicesfortheexperimentsaredescribedinSection6).
7and µ⊗, making sure the estimate is bounded. Similar ideas are well-know in probability and information
(cid:98)
theory, such as in universal coding (?), Laplace smoothing (Polyanskiy and Wu, 2024) and Good-Turing
smoothing (Gale and Sampson, 1995; McAllester and Schapire, 2000).
The bias introduced by γ in the last equation allows us to rigorously bound the error in estimating
I(µ) via I(cid:98)k(γ), which is explored next. In particular, in Theorem 4.6 we prove a high-probability lower
bound on I(µ) in terms of I(cid:98)k. The core of controlling the estimation error is in accounting for the missing
mass, or in other words, how much of µ we miss out by only observing a finite sample. In Appendix C,
we present a more complete discussion and the proof of the bound on the estimation error for mutual
information. Here we adapt this result to our particular case.
Define the missing mass as
U =
(cid:88) µ(x)I(cid:8)
x̸∈{X ,...,X
}(cid:9)
.
k 1 k
x∈Xn
Using this quantity, we are ready to present a non-asymptotic bound on the estimation error, which
depends on the estimator I(cid:98)k(γ), the expected missing mass, and the sample size:
Theorem4.6. SupposethatI(cid:98)k(γ)isgivenbyAlgorithm1,andassumethatX isfinite. Forγ =1/(k|Xn|),
with probability at least 1−δ,
(cid:18) (cid:19)
1 (cid:0) (cid:1)
I(µ)≥(1−ε k)I(cid:98)k(γ)−
k
+(1+n ln 1+k|X|) ε
k
(cid:115)
ln(1)
where ε =E[U ]+ δ .
k k k
Furthermore, given δ ∈[0,1), let X˜ ⊆Xn such that µ(X˜)≥1−δ . Then, for γ =1/(k|X˜|), with
supp supp
probability at least 1−δ,
(cid:18) (cid:19)
I(µ)≥(1−ε k)I(cid:98)k(γ)−
k1 +(1+ln(cid:0) 1+k|X˜|)(cid:1)
(δ supp+ε k) .
The theorem is a corollary of Theorem C.4 shown in Appendix C. Note that in Theorem 4.6 we
consider two bounds. The first one is pessimistic in the sense that it does not expect that the samples
carry much information about the support, and it is most suitable in situations where we expect µ to be
spread out (uniformly) across its entire support. The price of not having samples covering the whole
support in this case is a factor nln|X| appearing in the bound. For example, in case of a language model
with 10,000 tokens, considering all possible strings of length T tokens yields nln|X|=nT ln(10000), and
so
(cid:18) (cid:19)
1 (cid:0) (cid:1)
I(µ)≥(1−ε k)I(cid:98)k(γ)−
k
+(1+nT ln 1+k ln(10000)) ε
k
.
Arguably, in practice, such situations are rare, as in natural languages we will not encounter all possible
strings. To this end, we consider an optimistic scenario where the effective support of µ, denoted by
X˜, is small with high probability. In this case, we can replace the size of the support for strings of
length n, |X|n, in the first bound with the effective support size |X˜|, and we only pay essentially a factor
ln(1+k|X˜|) instead of nln(1+k|X|). In case the effective sample size is only polynomial in n, this
leads to an exponential reduction in n for the second term in the bounds. In fact, in Appendix C.4 we
demonstrate some empirical evidence that on two question-answering benchmarks, |X˜| rarely exceeds
≈100 with µ(X˜)≥0.95, while sampling responses from an LLM given a query.
Next we consider sufficient conditions for the estimator to converge to the mutual information. In
particular, using the first bound in the theorem, we have (hiding logarithmic factors)
(cid:16) (cid:17)
I(µ)=Ω˜ (1−E[U k])I(cid:98)k(γ)−E[U k] k →∞ .
This tells us that the rate of estimation error is essentially controlled by the expected missing mass E[U ],
k
which, as we will see, converges to zero as k →∞, however the decay can be very slow in general. For
8example, it is known that for a finite support of size N, E[U k]≤e− Nk when k ≤N and E[U k]≤N/(ek)
otherwise (Berend and Kontorovich, 2012). For countable distributions with entropy bounded by h, one
has E[U ]≤h/ln(k) (Berend et al., 2017).7
k
Despite these pessimistic bounds, in reality we expect the expected missing mass to be significantly
smaller, especially when µ is heavy-tailed. It is well-known that natural languages (and many artificial
ones) follow a Zipf distribution, where probability of each word (or a text piece) is proportional to
1/freq(text)α forsomeexponentα>1,wherefreq()isafrequencyofoccurrenceinthecorpus(Piantadosi,
2014). Then, we expect that E[U ] should be much smaller than in such a case, since sampling from
k
the tail of Zipf distribution is a rare event. To this end, in Appendix C we show that if Q(cid:101) is Zipf with
exponent α>1, then for any free parameter β >0,
(cid:16) (cid:17)
E[U k]=O k−(α α−1−β) .
Hence, the rate at which the expected missing mass vanishes can be very fast (potentially matching a
√
concentration rate 1/ k for α=2).
Finally in Appendix C.4 we present a data-dependent estimation of E[U ] based on a concentration
k
inequality for a missing mass and repetitive sampling from LLM, in the context of some Q/A datasets.
We conclude that the expected missing mass is very small: Most of the upper bounds on the expected
missing mass (we have one upper bound per question) are highly concentrated close to 0.
5 Score-based hallucination tests
Let I(cid:98)k(γ,x) ≡ I(cid:98)k(γ) computed as in Algorithm 1 for µ = Q(cid:101), to emphasize the explicit dependence on
the query x. The uncertainty estimate I(cid:98)k(γ,x) derived above can be used as a score indicating the
strength of our belief that the LLM hallucinates for the given query x. Such a score can then be used
to design abstention policies: if the response is deemed to be hallucinated, the system abstains from
responding, while a response is provided otherwise. Score-based abstention methods usually compute a
score chosen by the user (such as the response likelihood or the estimator I(cid:98)(γ) discussed earlier), and
declare hallucination if the score is above or below a threshold, which is determined through calibration.
To detect hallucinations successfully, the threshold can be adjusted through calibration on a given task
using a hold-out (ground-truth) sample, see, for instance, the paper of Yadkori et al. (2024) where this
calibration is discussed in detail.
Given our estimated lower bound on the epistemic uncertainty, we can define an abstention policy (a
policy which decides when the LLM should abstain from prediction) as
(cid:40)
a (x)=
0, if I(cid:98)k(γ,x)<λ;
λ
1, if I(cid:98)k(γ,x)≥λ;
where λ>0 is a threshold parameter tuned on a hold-out sample of some particular task. This policy
abstains (a (x) = 1) when the epistemic uncertainty in the prediction (response) is large. When the
λ
policy does not abstain (a λ(x)=0), any prediction from Q(cid:98) can be served.
In the experiments, we compare a number of scoring functions for detecting hallucinations, including
I(cid:98)(γ), the probability of the greedy (temperature zero) response, and an estimate of the entropy of the
response distribution.
6 Experiments
In this section we evaluate our abstention method derived based on the MI estimate in Section 5 on a
variety of closed-book open-domain question-answering tasks.
7Note that expected missing mass E[U ] appearing here is related to the well-known Good-Turing estimator. Let
k
M be the number of elements among X1,...,X
k
which appear exactly once. Then, the Good-Turing estimator is
defined as UGT = M/k. An attractive property of the Good-Turing estimator is that it is unbiased in the sense that
k
E[UGT]−E[U ] = E[U(1)]/k where the random variable U(1) is the cumulative probability of the sequences appearing
k k k k
exactlyonceinthedata. AlthoughwedonotdirectlyworkwiththeGood-Turingestimatorinthispaper,itsconvergence
propertiescanbeanalyzedusingatechniquesimilartotheoneweemployhere(BerendandKontorovich,2012).
9Language model. We used a Gemini 1.0 Pro model (Gemini Team, Google, 2023) to generate
outputs and scores.
Datasets. We consider three different datasets and their combinations: As base datasets, we consider
(i) a random subset of 50,000 datatpoints from the TriviaQA dataset (Joshi et al., 2017), and (ii) the
entire AmbigQA dataset (with 12038 datapoints) (Min et al., 2020). These datasets mostly contain
single-label queries, and only contain a few multi-label ones.8 Moreover, we created a multi-label dataset
based on the WordNet dataset (Fellbaum, 1998): We extracted all (6015) datapoints from WordNet
at depth 4 or more of the physical_entity subtree. For each datapoint (entity, children) in
WordNet, we constructed a query of the form “Name a type of entity.” and children are considered
target labels.
Comparison of responses and computing the output distributions. We use the F1 score9
thresholded at 0.25 to decide if two text sequences match. When multiple responses are sampled, we
approximate the output distribution of an LLM in a semantically meaningful way by collapsing matching
responses into a single response: we sample k = 10 responses at temperature 0.9 for each query, and
all those that match (according to the F1 score) are considered identical and their probabilities are
aggregated. We only consider queries for which the greedy (temperature zero) and at least one of the
random responses are shorter than 20 characters. This is because the F1 score (as a match function) and
log-probabilities (as a measure of uncertainty) are less reliable for longer sequences. After this filtering,
we are left with 38870 datapoints for TriviaQA, 5315 datapoints for AmbigQA, and 3296 datapoints for
WordNet.
Baselines. We consider abstention policies based on four scoring methods. The first three are as
follows: (i) the probability of the greedy response (denoted by T0); (ii) the semantic-entropy method of
Kuhnetal.(2023)whosescoreistheentropyofk =10generatedsamples(denotedbyS.E.). Tocalculate
entropy, we first aggregate probabilities of equivalent responses and normalize the probabilities so that
theysumto1(asdescribedabove);and(iii) ourproposedmutualinformationscoreasdefinedinSection4
(and denoted by M.I.) with the choices of k =10, n=2, and γ =0 (the latter choice approximates the
case that the number of potential responses can be very large in which case the theoretical choice of γ
would be very small). To calculate the mutual information, we first generate k = 10 random samples.
ThenforanyresponseY,wecalculatetheprobabilityofallgeneratedresponsesgiventhepromptF (x,Y).
1
We construct estimates Q(cid:98)(Y) and Q(cid:98)(Y′|Y) by aggregating probabilities of equivalent responses, and
normalizing the probabilities so that they sum to 1.
Each baseline also has a default choice which is taken when the relevant score is above a threshold,
and hence the method does not abstain. For T0, the default choice is the greedy (temperature zero)
response. For S.E., the default choice is the response with the highest (aggregate) probability among the
generated random responses. For the M.I. method, the default choice is the sampled response with the
highest probability according to the marginalized pseudo joint distribution.
We also consider a version of the self-verification method of Kadavath et al. (2022) (denoted by S.V.)
that, for a query x, first finds Y , the element with the largest (aggregated) probability (which is the
1
default choice of S.E. method), and then calculates the probability of token “True” (normalized for the
two tokens “True” and “False”) for the following query: “Consider the following question: Q: x. One
answer to question Q is Y . Is the above answer to question Q correct? Answer True or False. A:”. The
1
default choice of this baseline is the same as the default choice of the S.E. method. By this design, our
intention is to construct a score that (unlike the first-order scores10 we consider) is not sensitive to the
size of the label set.
In our experiments we either sweep through all abstention thresholds (Figure 5), or optimize the
threshold on some calibration data, as explained in the description of the relevant experiment (Figure 6).
Results. We consider the precision-recall (PR) trade-off for the various methods on the different
8Note that the multi-label queries in these datasets typically behave as single-label ones in the sense that the LLM
assignsoverwhelmingprobabilitytoadominantresponse.
9In this context, the F1 scoreis calculated based ontoken inclusion (Joshi etal., 2017; Devlin etal., 2019): for two
sequencesa=(a1,...,an)andb=(b1,...,bm),definingp=|a∩b|/nandr=|a∩b|/m(where|a∩b|isthesizeofthe
intersection of a and b, in which for repetitions of an element y, we consider the minimum number of repetitions in a
andb, i.e., min c∈{a,b}|{i : ci =y}|, incalculatingthesizeoftheintersection)wedefineF1=2pr/(p+r). Relatingto
thestandarddefinitionoftheF1score,pandr playtheroleofprecisionandrecall,respectively,ifaisthoughtofasa
predictionofb.
10ThescoresT0andS.E.arefirstorderbecausetheyonlyconsiderthemarginaldistributionofasingleresponse,unlike
ouruncertaintyscorewhichisbasedonMIestimationbyconsidering(pseudo)jointdistributionsovermultipleresponses.
10(a) TriviaQA (b) AmbigQA (c) TriviaQA+WordNet (d) AmbigQA+WordNet
Figure 5: PR-curve for the baseline and the proposed methods on various datasets. On the TriviaQA
and AmbigQA datasets, M.I. and S.E. perform nearly identically, but they outperform the T0 and
S.V. baselines. For the S.E. and M.I. methods, the responses for a large number of queries can be
clustered into a single group, and therefore the semantic entropy and mutual information scores are zero.
This is why the starting point of their curves is at a higher recall values. On the TriviaQA+WordNet
and AmbigQA+WordNet datasets with a significant number of high entropy multi-label queries, M.I.
outperforms the S.E. baseline. The methods perform nearly identical on the recall area that is not shown.
datasets. Here, recall is the percentage of queries where the method does not abstain, and precision is
the percentage of correct decisions among these queries.11 Figure 5ab show PR-curves for the baselines
and the proposed method on TriviaQA and AmbigQA. As can be seen, our method is better than the
T0 and S.V. baselines, but performs similarly to the S.E. method. This is because the TriviaQA and
AmbigQA datasets contain mostly single-label queries, and therefore a first-order method such as S.E. is
sufficient to detect hallucinations. The AmbigQA dataset contains a few multi-label queries, but upon
closer inspection, we observe that the LLM has low entropy on most of these queries.12 Therefore, a
first-order method can perform as well as our method on such queries. Our proposed method, as well as
the baselines, make no mistakes on the WordNet dataset (as the prediction of the LLM is always correct),
hence we omit those results. The S.V. baseline performs significantly worse than the other methods when
the recall is not high (is below about 0.8).
ThesimilarperformancefortheS.E.andM.I.methodsshowninFigure5abisduetothefactthatthe
LLM has low entropy on most multi-label queries. However, ideally, an LLM should have higher entropy
on multi-label queries (which would demonstrate broader knowledge, not focusing on a single possible
answer). To include such queries, we mix the TriviaQA and AmbigQA datasets with our WordNet-based
dataset with “truely” multi-label queries as constructed above. To enhance the intended effect, we filter
our WordNet dataset by keeping only queries with entropy higher than 0.7 (approximately the entropy of
theuniformdistributionovertwoatoms). Thenwehave842remainingdatapointsinWordNet. Notethat
when considered in isolation, both our proposed method and the semantic entropy method rarely make
mistakes on this dataset. Then we create two new datasets by combining our 842 WordNet datapoints
with 842 randomly selected datapoints from TriviaQA and AmbigQA, respectively, resulting in the
TriviaQA+WordNet and AmbigQA+WordNet datasets. Figure 5cd show PR-curves for the S.E. and
M.I. methods on these two combined datasets. Apart from low recall values, the performance of the S.E.
method degrades noticeably with the addition of extra multi-label data. This precision/recall curve might
look somewhat strange (with precision sometimes increasing with recall); this is due to the fact that
both methods are always correct on the large number of high-entropy WordNet queries, where the LLM’s
default predictions are correct.
The hardness with the combined datasets is that the predominantly single-label datasets (TriviaQA,
AmbigQA) might need a different calibration threshold than the multi-label WordNet dataset, and this
is better handled by our proposed method than by S.E. To better illustrate the improved abstention
propertiesofourmethod,weexaminehowthetwomethodshandlewhentheoutputoftheLLMisdiverse
(i.e., has high entropy). In order to do this, we perform the following experiment: We create a calibration
dataset by adding 500 random datapoints from the WordNet dataset to 500 random datapoints from
TriviaQA, and another such random dataset for test. We determine the abstention thresholds on the
calibration dataset for both the S.E. and the M.E. methods,13 and measure the performance (error rate,
11Insomefigures,forbetterillustration,weshowtheerror rate whichisoneminustheprecision.
12Such a case can also be seen in the query “Name a city in the UK.” in Figure 3 where the response “London” has
probability0.958.
13Thisisdonebyfixingthetargetlossratesof0.05forTriviaQAand0.15forAmbigQA,andfindingthresholdparameters
11(a) TriviaQA+WordNet (b) TriviaQA+WordNet (c) AmbigQA+WordNet (d) AmbigQA+WordNet
Figure 6: Recall and error rates (one minus precision: percentage of mistakes when not abstaining) of
the proposed and the baseline method on TriviaQA+WordNet and AmbigQA+WordNet datasets. On
TriviaQA+WordNet and AmbigQA+WordNet datasets, the methods are calibrated at target loss of 0.05
and 0.15, respectively. On the x-axis, the queries are partitioned according to the entropy of the LLM’s
output. Error bars show 2 standard deviation confidence intervals (based on 10 repetitions). While
the first-order S.E. method has similar recall and error rates to those of the proposed M.E. method on
low-entropy queries, its recall values are nearly zero for queries with higher entropy.
i.e., 1 minus precision, and recall) of the resulting abstention policies on the test set. We repeat this
process 10 times and report mean values and 95% confidence intervals with Gaussian approximation. We
perform a similar evaluation process for mixtures of AmbigQA and WordNet datasets. Figure 6 show that
while the S.E. method has similar recall and error rates to those of the proposed method on low-entropy
queries, its recall values are much lower for queries with higher entropy, while the M.E. method makes
only few mistakes on these queries.
7 Conclusions
In this paper we considered epistemic uncertainty as a proxy for the truthfulness of LLMs. We proposed
a mutual-information-based uncertainty estimator that admits a provable lower bound on the epistemic
uncertainty of the LLM’s response to a query. That we consider joint distributions of multiple answers
allows us to disentangle epistemic and aleatoric uncertainty, which makes it possible to better detect
hallucination than first order methods, which can only tackle uncertainty as a whole, not epistemic
uncertainty alone. This approach yielded an abstention method that performs significantly better on
mixed single-label/multi-label datasets than first-order methods. While earlier methods for classification
that aim to quantify epistemic uncertainty are usually based on a modified training method using
response-tuples, utilizing the sequential nature of LLMs, our method does not need to change the training
procedure, but needs to prompt the model iteratively with multiple responses generated by the LLM for
the same query.
References
AnastasiosNAngelopoulos,StephenBates,etal.Conformalprediction: Agentleintroduction.Foundations
and Trends® in Machine Learning, 16(4):494–591, 2023.
Javier Antorán, James Allingham, and José Miguel Hernández-Lobato. Depth uncertainty in neural
networks. Conference on Neural Information Processing Systems (NeurIPS), 2020.
Amos Azaria and Tom Mitchell. The internal state of an LLM knows when its lying. In Conference on
Empirical Methods in Natural Language Processing (EMNLP), 2023.
Daniel Berend and Aryeh Kontorovich. The missing mass problem. Statistics & Probability Letters, 82(6):
1102–1110, 2012.
Daniel Berend and Aryeh Kontorovich. On the concentration of the missing mass. Electronic Communi-
cations in Probability, 2013.
thatleadtotheseratesonthecalibrationset.
12Daniel Berend, Aryeh Kontorovich, and Gil Zagdanski. The expected missing mass under an entropy
constraint. Entropy, 19(7):315, 2017.
Charles Blundell, Julien Cornebise, Koray Kavukcuoglu, and Daan Wierstra. Weight uncertainty in
neural network. In International Conference on Machine Learing (ICML), 2015.
Sébastien Bubeck, Varun Chandrasekaran, Ronen Eldan, Johannes Gehrke, Eric Horvitz, Ece Kamar,
PeterLee, YinTatLee, YuanzhiLi, ScottLundberg, HarshaNori, HamidPalangi, MarcoTulioRibeiro,
and Yi Zhang. Sparks of artificial general intelligence: Early experiments with gpt-4. arXiv preprint
arXiv:2303.12712, 2023.
Collin Burns, Haotian Ye, Dan Klein, and Jacob Steinhardt. Discovering latent knowledge in language
models without supervision. In International Conference on Learning Representations (ICLR), 2023.
Chao Chen, Kai Liu, Ze Chen, Yi Gu, Yue Wu, Mingyuan Tao, Zhihang Fu, and Jieping Ye. INSIDE:
LLMs’ internal states retain the power of hallucination detection. In International Conference on
Learning Representations (ICLR), 2024.
Jeremy R. Cole, Michael JQ Zhang, Daniel Gillick, Julian Martin Eisenschlos, Bhuwan Dhingra, and
Jacob Eisenstein. Selectively answering ambiguous questions. In Conference on Empirical Methods in
Natural Language Processing (EMNLP), 2023.
Jacob Devlin, Ming-Wei Chang, Kenton Lee, and Kristina Toutanova. BERT: Pre-training of deep
bidirectional transformers for language understanding. arXiv preprint arXiv:1810.04805, 2019.
Vikranth Dwaracherla, Zheng Wen, Ian Osband, Xiuyuan Lu, Seyed Mohammad Asghari, and Ben-
jamin Van Roy. Ensembles for uncertainty estimation: Benefits of prior functions and bootstrapping.
Transactions on Machine Learning Research (TMLR), 2023. ISSN 2835-8856.
Christiane Fellbaum. WordNet: An electronic lexical database. MIT press, 1998.
William A Gale and Geoffrey Sampson. Good-turing frequency estimation without tears. Journal of
quantitative linguistics, 2(3):217–237, 1995.
Gemini Team, Google. Gemini: A family of highly capable multimodal models. arXiv preprint
arXiv:2312.11805, 2023. [Online; accessed 01-February-2024].
Bairu Hou, Yujian Liu, Kaizhi Qian, Jacob Andreas, Shiyu Chang, and Yang Zhang. Decomposing
uncertaintyforlargelanguagemodelsthroughinputclarificationensembling.InInternationalConference
on Machine Learing (ICML), 2024.
Mingjian Jiang, Yangjun Ruan, Sicong Huang, Saifei Liao, Silviu Pitis, Roger Grosse, and Jimmy
Ba. Calibrating language models via augmented prompt ensembles. In Workshop on Challenges in
Deployable Generative AI at International Conference on Machine Learning, 2024.
Daniel D. Johnson, Daniel Tarlow, David Duvenaud, and Chris J. Maddison. Experts don’t cheat:
Learning what you don’t know by predicting pairs. arXiv preprint arXiv:2402.08733, 2024.
Mandar Joshi, Eunsol Choi, Daniel S Weld, and Luke Zettlemoyer. TriviaQA: A large scale distantly
supervised challenge dataset for reading comprehension. In Transactions of the Association for
Computational Linguistics (ACL), pages 1601–1611, 2017.
Saurav Kadavath, Tom Conerly, Amanda Askell, Tom Henighan, Dawn Drain, Ethan Perez, Nicholas
Schiefer, Zac Hatfield Dodds, Nova DasSarma, Eli Tran-Johnson, and et al. Language models (mostly)
know what they know. arXiv preprint arXiv:2207.05221, 2022.
Nora Kassner and Hinrich Schütze. Negated and misprimed probes for pretrained language models: Birds
can talk, but cannot fly. In Transactions of the Association for Computational Linguistics (ACL), 2020.
Lorenz Kuhn, Yarin Gal, and Sebastian Farquhar. Semantic uncertainty: Linguistic invariances for
uncertainty estimation in natural language generation. In International Conference on Learning
Representations (ICLR), 2023.
13Balaji Lakshminarayanan, Alexander Pritzel, and Charles Blundell. Simple and scalable predictive
uncertainty estimation using deep ensembles. In Conference on Neural Information Processing Systems
(NeurIPS), volume 30, 2017a.
Balaji Lakshminarayanan, Alexander Pritzel, and Charles Blundell. Simple and scalable predictive
uncertainty estimation using deep ensembles. Conference on Neural Information Processing Systems
(NeurIPS), 2017b.
Daliang Li, Ankit Singh Rawat, Manzil Zaheer, Xin Wang, Michal Lukasik, Andreas Veit, Felix Yu, and
Sanjiv Kumar. Large language models with controllable working memory. In Transactions of the
Association for Computational Linguistics (ACL), 2023.
Zhen Lin, Shubhendu Trivedi, and Jimeng Sun. Generating with confidence: Uncertainty quantification
for black-box large language models. arXiv preprint arXiv:2305.19187, 2023.
Shayne Longpre, Kartik Perisetla, Anthony Chen, Nikhil Ramesh, Chris DuBois, and Sameer Singh.
Entity-basedknowledgeconflictsinquestionanswering. InConference on Empirical Methods in Natural
Language Processing (EMNLP), 2021.
Andrey Malinin and Mark Gales. Uncertainty estimation in autoregressive structured prediction. In
International Conference on Learning Representations (ICLR), 2020.
Potsawee Manakul, Adian Liusie, and Mark J. F. Gales. SelfCheckGPT: Zero-resource black-box
hallucination detection for generative large language models. In Conference on Empirical Methods in
Natural Language Processing (EMNLP), 2023.
David A McAllester and Robert E Schapire. On the convergence rate of good-turing estimators. In
Conference on Computational Learning Theory (COLT), 2000.
Sabrina J. Mielke, Arthur Szlam, Emily Dinan, and Y-Lan Boureau. Reducing conversational agents’
overconfidence through linguistic calibration. In Transactions of the Association for Computational
Linguistics (ACL), 2022.
SewonMin,JulianMichael,HannanehHajishirzi,andLukeZettlemoyer. AmbigQA:Answeringambiguous
open-domainquestions. InConferenceonEmpiricalMethodsinNaturalLanguageProcessing(EMNLP),
2020.
Ella Neeman, Roee Aharoni, Or Honovich, Leshem Choshen, Idan Szpektor, and Omri Abend. Disentqa:
Disentangling parametric and contextual knowledge with counterfactual question answering. arXiv
preprint arXiv:2211.05655, 2022.
Mesrob I Ohannessian and Munther A Dahleh. Distribution-dependent performance of the good-turing
estimator for the missing mass. In 19th International Symposium on Mathematical Theory of Networks
and Systems, MTNS, 2010.
Ian Osband, Charles Blundell, Alexander Pritzel, and Benjamin Van Roy. Deep exploration via boot-
strapped dqn. In Conference on Neural Information Processing Systems (NeurIPS), volume 29, 2016.
Ian Osband, Zheng Wen, Seyed Mohammad Asghari, Vikranth Dwaracherla, Morteza Ibrahimi, Xiuyuan
Lu,andBenjaminVanRoy. Epistemicneuralnetworks. InConferenceonNeuralInformationProcessing
Systems (NeurIPS), 2023.
StevenTPiantadosi. Zipf’swordfrequencylawinnaturallanguage: Acriticalreviewandfuturedirections.
Psychonomic bulletin & review, 21:1112–1130, 2014.
Yury Polyanskiy and Yihong Wu. Information theory: From coding to learning. Cambridge University
Press, 2024.
Stephan Rabanser, Anvith Thudi, Kimia Hamidieh, Adam Dziedzic, and Nicolas Papernot. Selective
classification via neural network training dynamics. arXiv preprint arXiv:2205.13532, 2022.
14Shauli Ravfogel, Yoav Goldberg, and Jacob Goldberger. Conformal nucleus sampling. In Transactions
of the Association for Computational Linguistics (ACL), pages 27–34. Association for Computational
Linguistics, 2023.
Robert J Tibshirani and Bradley Efron. An introduction to the bootstrap. Monographs on statistics and
applied probability, 57(1), 1993.
XuezhiWang,JasonWei,DaleSchuurmans,QuocVLe,EdHChi,SharanNarang,AakankshaChowdhery,
and Denny Zhou. Self-consistency improves chain of thought reasoning in language models. In
International Conference on Learning Representations (ICLR), 2022.
Zheng Wen, Ian Osband, Chao Qin, Xiuyuan Lu, Morteza Ibrahimi, Vikranth Dwaracherla, Mohammad
Asghari, and Benjamin Van Roy. From predictions to decisions: The importance of joint predictive
distributions. arXiv preprint arXiv:2107.09224, 2022.
Yasin Abbasi Yadkori, Ilja Kuzborskij, David Stutz, András György, Adam Fisch, Arnaud Doucet, Iuliya
Beloshapka, Wei-Hung Weng, Yao-Yuan Yang, Csaba Szepesvári, Ali Taylan Cemgil, and Nenad
Tomasev. Mitigating llm hallucinations via conformal abstention. arXiv preprint arXiv:2405.01563,
2024.
GalYona,RoeeAharoni,andMorGeva. Narrowingtheknowledgeevaluationgap: Open-domainquestion
answering with multi-granularity answers. arXiv preprint arXiv:2401.04695, 2024.
Jiaxin Zhang, Zhuohang Li, Kamalika Das, Bradley Malin, and Sricharan Kumar. Sac3: Reliable
hallucination detection in black-box language models via semantic-aware cross-check consistency. In
Conference on Empirical Methods in Natural Language Processing (EMNLP), 2023.
Yukun Zhao, Lingyong Yan, Weiwei Sun, Guoliang Xing, Chong Meng, Shuaiqiang Wang, Zhicong Cheng,
Zhaochun Ren, and Dawei Yin. Knowing what llms do not know: A simple yet effective self-detection
method. arXiv preprint arXiv:2310.17918, 2024.
15A Related works
In this section we present an overview of the related literature.
A.1 Training models with pairs of responses
Wen et al. (2022); Osband et al. (2023); Johnson et al. (2024) show that we can distinguish between
epistemic and aleatoric uncertainty if we train the models with paired observations.
A.2 Epistemic neural nets
Ensemble methods are based on the classical idea of bootstrap for confidence estimation (Tibshirani and
Efron,1993), wheremultipleestimatorsfortheregressionfunction, eachcomputedonaperturbedversion
of the data (e.g., by drawing samples from the empirical distribution over the data), are combined.
The empirical distribution of the resulting estimates is then used to construct confidence intervals.
While many of these methods can be interpreted as sample-based approximations to Bayesian methods,
model-hyperparameter selection (e.g., scale of perturbations, learning) for ensemble methods is typically
done using a validation on holdout data (a subset of the training data). Many recent papers have studied
ensemble methods in the context of deep learning and reinforcement learning (Osband et al., 2016;
Lakshminarayanan et al., 2017a; Malinin and Gales, 2020). In the context of LLMs, the methods require
training multiple language models, which is very expensive. Osband et al. (2023) introduces epistemic
neural networks (epinets), which approximate ensemble methods by training a single network with an
artificiallyinjected(controlled)sourceofrandomness. Rabanseretal.(2022)proposestouseintermediate
model checkpoints to quantify the uncertainty of the final model in its responses. While these approaches
aim to mimic the bootstrap procedure during prediction, their validity is not justified by theoretical
considerations, and hence remain heuristic approximations.
A.3 Hallucination detection using first-order methods
First-ordermethodsconsidervarianceintheresponsedistributionasameasureofhallucination(Kadavath
et al., 2022; Cole et al., 2023; Manakul et al., 2023; Lin et al., 2023; Kuhn et al., 2023; Wang et al., 2022;
Jiang et al., 2024; Zhang et al., 2023; Zhao et al., 2024; Yadkori et al., 2024). A common limitation of
these approaches is that they are only applicable to prompts where there exists a single correct response,
as they aim for detecting if one response (or multiple responses with the same meaning) is dominant.
On the other hand, when multiple responses are correct, there is an aleatoric uncertainty in the ground
truth: If an LLM correctly assigns non-negligible scores to multiple correct responses, most of these (if
not all) will be declared as hallucination since, by design, only very few (typically at most one) responses
can have scores higher than the threshold at the same time. Thus, hallucination detectors unaware of
aleatoric uncertainty will invalidate most of the correct answers.
Yonaetal.(2024)designamethodthatgeneratesmultipleresponses, andthenaggregatesthemintoa
single response at a (typically higher) granularity level where no further uncertainty (contradiction) is left
compared to the generated responses. Although not a strictly first order method, it does not differentiate
between aleatoric and epistemic uncertainty.
A.3.1 Asking language models to quantify uncertainty (self-verification)
Kadavath et al. (2022) propose to use LLM self-prompting to measure a model’s uncertainty in its
responses. Morespecifically,foragivenquery,anumberofresponsesaregenerated, andthenthemodelis
queried if the responses are correct. For this query, the log-probability of “True" is returned as a measure
of uncertainty. Related approaches are studied by Mielke et al. (2022).
A.4 Uncertainty estimation based on sensitivity to contexts
Kassner and Schütze (2020) show that an LLM’s responses can be influenced by irrelevant contexts.
Longpre et al. (2021); Neeman et al. (2022) study two sources of knowledge: parametric knowledge stored
in the network weights, and contextual knowledge retrieved from external sources. They view reliance of
the model on its parametric knowledge and ignoring relevant contextual information as hallucination.
16These works are mainly motivated by situations where the LLM’s knowledge is outdated and it is
instructed to use the (new) contextual information. Accordingly, they design strategies to prioritize
contextual information over parametric knowledge. Longpre et al. (2021) also show that larger models
are more likely to ignore in-context information in favor of in-weight information. They propose creating
training data with modified contextual information so that the model learns to favor the contextual
information. Neeman et al. (2022) propose to train a model that predicts two answers: one based on
parametric knowledge and one based on contextual information.
Similarly to Neeman et al. (2022), Li et al. (2023) aims to design a mechanism such that the model’s
behavior is influenced more by relevant context than by its parametric knowledge (controllability), while
the model is robust to irrelevant contexts (robustness). They improve controllability and robustness using
finetuning.
Hou et al. (2024) study an approach to estimate model uncertainty due to ambiguity in a question.
For a given question, their method generates multiple input clarification questions, and a new question is
formed by augmenting the original question with each clarification question. The clarification questions
are generated using an LLM with the aim of removing ambiguity in the question. This is different than
the problem we study as the model can be uncertain about the answer even if the query itself has no
ambiguity. For such queries, the method of Hou et al. (2024) might decide that no clarification is needed,
and therefore there is no uncertainty.
A.5 Hallucination detection using internal states of LLMs
There are a number of papers that try to extract knowledge/truthfulness by inspecting hidden-layer
activations of LLMs (Burns et al., 2023; Azaria and Mitchell, 2023; Chen et al., 2024). Such methods
clearly require access to the LLM’s internal states, which is not always possible, and severely limits the
applicability of these methods.
17B Omitted proofs
Proof of Theorem 4.5. In the following we will use abbreviations
(cid:88) (cid:88) (cid:88) (cid:88)
= , =
y y1,...,yn y\i y1,...,yi−1,yi+1,...,yn
where each coordinate belongs to X. Now,
(cid:88) 1
D KL(Q(cid:101),P(cid:101))=−H(Q(cid:101))+ Q(cid:101)(y 1,...,y n) ln
y
P(cid:101)(y 1,...,y n)
(cid:88) 1
=−H(Q(cid:101))+ Q(cid:101)(y 1,...,y n) ln
(cid:81) (cid:0) (cid:1)
(using Definition 4.2)
P y |F (y ,...,y )
y i i i−1 1 i−1
(cid:88) 1
=−H(Q(cid:101))+ Q(cid:101)(y 1,...,y n) ln
(cid:81)
P(y )
. (by the independence assumption)
y i i
Focusing on the last (cross-entropy) term
(cid:88) 1
Q(cid:101)(y 1,...,y n) ln
(cid:81)
P(y )
y i i
(cid:88) (cid:88) 1
= Q(cid:101)(y 1,...,y n) ln
P(y )
i
y i
(cid:88)(cid:88)(cid:88) 1
= Q(cid:101)(y 1,...,y n) ln
P(y )
i
i yi y\i
(a)(cid:88)(cid:88)(cid:88) 1
≥ Q(cid:101)(y 1,...,y n) ln
(cid:80)
i yi y\i
y\iQ(cid:101)(y 1,...,y n)
(cid:88) 1
= Q(cid:101)(y 1,...,y n) ln
(cid:81) (cid:80)
y i
y\iQ(cid:101)(y 1,...,y n)
where in (a) we used the fact that entropy is no larger than cross-entropy. Thus,
D
KL(Q(cid:101),P(cid:101))≥(cid:88)
Q(cid:101)(y 1,...,y n)ln
(cid:81)
(cid:80)Q(cid:101)(y 1,...,y n)
=I(Q(cid:101);Y 1,...,Y n) .
y i
y\iQ(cid:101)(y 1,...,y n)
18C Estimation of mutual information and missing mass problem
In this section, we discuss how to estimate the mutual information from a finite sample, which may not
cover the full distribution. To control the estimation error, we first introduce the concept of missing mass.
C.1 The missing mass problem
Let X be a countable set and suppose that X ,...,X ∼µ∈M (Xn) independently. In the following x
1 k 1
is used as an element of Xn rather than the query (as in Section 4). Then, the missing mass is defined as
the random variable
(cid:88)
U = µ(x)ξ(x) , ξ(x)=I{x̸∈{X ,...,X }} .
k 1 k
x∈Xn
Here we are primarily interested in two questions: (i) how quickly U approaches the expected missing
k
mass EU , where it is not hard to see that
k
(cid:88)
EU = µ(x)(1−µ(x))k ;
k
x∈Xn
and (ii) we are also interested in giving an estimate for EU given µ and k. The first question is answered
k
by the following theorem:
Theorem C.1 (Concentration of a missing mass (Berend and Kontorovich, 2013)). For any t>0, we
have an upper-tail bound
P(U >EU +t)≤e−tk2 ,
k k
and moreover for a universal constant c≈7.6821, we have an lower-tail bound
P(U <EU −t)≤e−ctk2 .
k k
√
Notably U exhibits a sub-gaussian concentration (i.e. 1/ k), which is surprisingly fast. As we will
k
see next, the main bulk of the error incurred for missing a subset of the support is hidden in EU .
k
In particular, when X is finite with |X|=N, Berend and Kontorovich (2012) showed that
(cid:40)
EU ≤
e− Nn, if n≤N;
k N , if n>N.
en
In the countably infinite X, we cannot generally have a non-trivial bound on EU only in terms of n.
k
In fact, Berend and Kontorovich (2012) show a bound that depends on µ which is expected to be finite
for rapidly decaying atoms. Interestingly, when the entropy of µ is bounded, one has the following result
(Berend et al., 2017):
Theorem C.2. Let H(µ)≤h<∞. For all n≥1, we have EU ≤ h ≤ h .
k (cid:80)k i−1 ln(n)
i=1
Notethattheseestimatesareverypessimistic,andinrealityweexpecttheexpectedmissingmasstobe
significantly smaller. Since natural (and many artificial) languages follow a Zipf distribution (Piantadosi,
2014), we expect that E[U ] should be much smaller than in the above cases, since sampling from the tail
k
of a Zipf distribution is a rare event. In Appendix C.4 we show the following:
Corollary C.3 (Expected missing mass of Zipf distribution). Consider distribution µ(i)=i−α/H(α,N)
for i∈[N], where α>1 and H(α,N)=(cid:80)N i−α. Then, for any β >0,
i=1
(cid:16) (cid:17)
E[U k]=O k−(α α−1−β) .
Proof. The statement followss by combining Lemma C.7 and Proposition C.8.
19C.2 Estimating mutual information from the partial support
Our goal is to estimate
(cid:18) (cid:19)
(cid:88) µ(x)
I(µ)=D (µ,µ⊗)= µ(x)ln
KL µ⊗(x)
x∈Xn
by only having access to X ,...,X ∼µ. Note that that the sample might cover only some part of the
1 k
support of X and therefore we are facing a missing mass problem. In the following we consider estimator
I(cid:98)k(γ) given by Algorithm 1.
In particular in Appendix C.3 we show the following
Theorem C.4. Fix X˜ ⊆Xn. For any fixed γ >0,δ ∈(0,1), with probability at least 1−δ,
(cid:18) (cid:18) e(cid:19)(cid:16) (cid:17)(cid:19)
(1−ε k)I(cid:98)k(γ)− |X˜|γ+ln e+
γ
µ(Xn\X˜)+ε
k
≤I(µ)
where
(cid:115)
ln(1)
ε =EU + δ .
k k k
In particular, Theorem C.4 implies the following:
Corollary C.5. Under conditions of Theorem C.4, there exists γ∗ ∈(0,1) such that
k
(cid:18) (cid:19)
(1−ε k)I(cid:98)k(γ k∗)− k1 +(1+n ln(cid:0) 1+k|X|)(cid:1) ε
k
≤I(µ) .
Note that, choosing any of the upper bounds on EU discussed in Appendix C.1, we can see that
k
Corollary C.5 implies asymptotic convergence in as a sense
lim I(cid:98)k(γ k∗)≤I(µ) .
k→∞
C.3 Proof of Theorem C.4
The proof will heavily rely on the simple fact that
(cid:40)
1, if x∈{X ,...,X };
1−ξ(x) = 1 k (2)
0, otherwise.
(cid:8) (cid:9)
Recalling that S = i∈[k] : X ̸=X ∀j <i , this immediately implies the following connection
i j
between U and the quantities used in Algorithm 1:
k
Proposition C.6. We have that
(cid:88) (cid:88)
µ(X )= (1−ξ(x))µ(x)=1−U .
j k
j∈S x∈Xn
Recall that the product distribution of µ is defined as
n
(cid:89)(cid:88)
µ⊗(x)= µ(x ,...,x ,x ,x ,...,x ) .
1 i−1 i i+1 n
i=1 x\i
(cid:80)
Note that we use µ(···) instead of µ(x ) since these are not necessarily equal for some µ.
x\i i
Introducing a one-dimensional version of ξ, for i∈[n] and z ∈X, as
ξ (z)=I{z ̸∈{X ,...,X }} ,
i 1,i k,i
20we introduce the normalization factors
n
(cid:88) (cid:89)(cid:88) (cid:88)
Z = (1−ξ(x))µ(x) , Z⊗ = (1−ξ (z)) µ(x ,...,x ,z,x ,...,x ) .
i 1 i−1 i+1 n
x∈Xn i=1z∈X x\i
We first note that by the definition of µ⊗, for any x′ ∈Xn,
(cid:98)
µ⊗(x′)=(cid:89)n (cid:80) x\iµ(x 1,...,x i−1,x′ i,x i+1,...,x n)
(cid:98) (cid:80) (cid:80) µ(x ,...,x ,X ,x ,...,x )
i=1 j∈S x\i 1 i−1 j,i i+1 n
=(cid:89)n (cid:80) x\iµ(x 1,...,x i−1,x′ i,x i+1,...,x n)
(cid:80) (cid:80)
(1−ξ (z)) µ(x ,...,x ,z,x ,...,x )
i=1 z∈X i x\i 1 i−1 i+1 n
µ⊗(x′)
= ,
Z⊗
where the second equality comes from the definition of ξ and the fact that the X are all different. Now,
i i
using the definitions of I(cid:98)k and µ (cid:98),
(cid:32) (cid:32) (cid:33) (cid:33)
I(cid:98)k(γ)=
(cid:80)
1
µ(X
)(cid:88) µ(X i) ln
(cid:80)
µ(X µi ()
X )
+
(cid:80)
γ
µ(X )
−ln(cid:16) µ (cid:98)⊗(X i)+ Zγ ⊗(cid:17)
j∈S j i∈S j∈S j j∈S j
=
1 (cid:88)
µ(X
)(cid:18) ln(cid:18) µ(X i)+γ(cid:19) −ln(cid:18) µ⊗(X i)+γ(cid:19)(cid:19)
(by Proposition C.6)
Z i Z Z⊗
i∈S
1 (cid:88)
(cid:18) (cid:18) µ(x)+γ(cid:19) (cid:18) µ⊗(x)+γ(cid:19)(cid:19)
= (1−ξ(x))µ(x) ln −ln (by Eq. (2))
Z Z Z⊗
x∈Xn
1 (cid:88) (cid:18) (cid:18) µ(x)+γ (cid:19)(cid:19) Z⊗
≤ (1−ξ(x))µ(x) ln +ln
Z µ⊗(x)+γ Z
x∈Xn
1 (cid:88) (cid:18) µ(x)+γ (cid:19) 1 (cid:88) (cid:18) µ⊗(x)+γ(cid:19) Z⊗
= µ(x)ln + ξ(x)µ(x)ln +ln .
Z µ⊗(x)+γ Z µ(x)+γ Z
x∈Xn x∈Xn (cid:124) (cid:123)(cid:122) (cid:125)
(cid:124) (cid:123)(cid:122) (cid:125) (cid:124) (cid:123)(cid:122) (cid:125) (iii)
(i) (ii)
To control (i) we will first need the fact that qln((q+γ)/p) ≤ qln(q/p)+γ for any q,p ∈ [0,1],γ > 0.
Note that this follows since
(cid:18) (cid:19) (cid:18) (cid:19) (cid:18) (cid:19) (cid:18) (cid:19)
q+γ γ q q
qln =qln 1+ +qln ≤γ+qln (3)
p q p p
using that ln(1+a)≤a for a>−1. Getting back to (i), and using the aforementioned inequality, we get
(cid:18) (cid:19)
1 (cid:88) µ(x)+γ
(i)= µ(x)ln
Z µ⊗(x)+γ
x∈Xn
(cid:18) (cid:19) (cid:18) (cid:19)
1 (cid:88) µ(x)+γ 1 (cid:88) µ(x)+γ
= µ(x)ln + µ(x)ln
Z µ⊗(x)+γ Z µ⊗(x)+γ
x∈X˜ x∈Xn\X˜
(cid:18) (cid:19) (cid:18) (cid:19)
≤ 1 (cid:88) µ(x)ln µ(x)+γ + 1 ln 1+γ µ(Xn\X˜)
Z µ⊗(x)+γ Z γ
x∈X˜
(cid:18) (cid:18) (cid:19) (cid:19) (cid:18) (cid:19)
≤ 1 (cid:88) µ(x)ln µ(x) +γ + 1 ln 1+ 1 µ(Xn\X˜) (by Equation (3))
Z µ⊗(x) Z γ
x∈X˜
1 (cid:16) (cid:17) 1 (cid:18) 1(cid:19)
= D (µ,µ⊗)+|X˜|γ + ln 1+ µ(Xn\X˜) .
Z KL Z γ
Furthermore,
(cid:18) (cid:19) (cid:18) (cid:19)
1 (cid:88) 1 1−Z 1
(ii)≤ ξ(x)µ(x)ln 1+ = ln 1+ .
Z γ Z γ
x∈Xn
21Next, observe that (iii)≤ln(1/Z). Finally, putting all together,
1 (cid:16) (cid:17) 1 (cid:18) 1(cid:19)(cid:16) (cid:17)
I(cid:98)k(γ)≤
Z
D KL(µ,µ⊗)+|X˜|γ +
Z
ln 1+
γ
µ(Xn\X˜)+1−Z +ln(1/Z) .
Finally, multiplying through by Z the entire inequality, and using the fact that Zln(1/Z)≤1−Z, we get
(cid:18) 1(cid:19)(cid:16) (cid:17)
ZI(cid:98)k(γ)≤D KL(µ,µ⊗)+|X˜|γ+ln 1+
γ
µ(Xn\X˜)+1−Z +1−Z
(cid:18) e(cid:19)(cid:16) (cid:17)
≤D (µ,µ⊗)+|X˜|γ+ln e+ µ(Xn\X˜)+1−Z
KL γ
To complete the proof we need to give a lower bound on Z. Note that Z =1−U by the definition of
k
Z and Proposition C.6, and so by Theorem C.1
P(1−EU >1−U +t)≤e−tk2 .
k k
Usingthisconcentrationboundtogetherwiththechoicesofγ (alsosettingδ =0forthefirstinequality
supp
in the main statement) completes the proof of Theorem C.4. □
C.4 Expected missing mass under Zipf distribution
We will rely on some machinery used by Ohannessian and Dahleh (2010) who established distribution-
dependent bounds on the expected missing mass. As before let µ be supported on a countable set. The
accrual function is defined as
(cid:88)
F(v)= µ(i) (v ∈[0,1])
µ(i)≤v
and moreover the accrual rates are defined as
lnF(v) lnF(v)
ρ=liminf , ρ=limsup
v→0 lnv v→0 lnv
We use the following result:
Lemma C.7 (Ohannessian and Dahleh, 2010, Theorem 1). Let µ have lower and upper accrual rates
0<ρ≤ρ<∞. Then for every β >0 there exists k such that for all k >k we have:
0 0
k−(p+β) ≤E[U ]≤k−(p−β)
k
or, equivalently, for every β >0 we have that E[U ] is both Ω(k−(p+β)) and O(k−(p−β)).
k
Proposition C.8. Consider the distribution µ(v) = i−α/H(α,N) for i ∈ [N] where α > 1 and
H(α,N)=(cid:80)N i−α. Then, ρ=Ω(α−1) as N →∞.
i=1 α
Proof. The idea is to use Lemma C.7 to give an upper bound on the missing mass. Therefore, we need to
establish a lower bound on lnF(v). For now, abbreviate
u=(vH(α,N))− α1 .
First note that for some 1≤u≤N
(cid:88)N i−α ≥(cid:90) N (1+i)−αdi= 1 (cid:0) (1+u)1−α−(1+N)1−α(cid:1) .
α−1
i≥u u
22On the other hand,
(cid:88)N (cid:90) N 1
i−α ≤ (1+i)−αdi≤ (1−N1−α) .
α−1
i=1 1
So,
lnF(v)≥ln(cid:0) (1+u)1−α−(1+N)1−α(cid:1) −ln(1−N1−α)
≥ln(cid:0) (1+u)1−α−(1+N)1−α(cid:1)
and then
lnF(v)=Ω((1−α)ln(1+u)) (asN →∞)
=Ω((1−α)ln(u))
(cid:16) (cid:17)
=Ω (1−α)ln((vH(α,N))− α1)
(cid:18) (cid:19)
α−1 α−1
=Ω ln(v)+ lnH(α,N)
α α
(cid:18) (cid:19)
α−1
=Ω ln(v) .
α
Data-dependent estimate of the expected missing mass We perform an experiment designed to
give a data-dependent estimate of the expected missing mass E[U ] for some specific datasets. Clearly,
k
we cannot simply apply a concentration bound discussed in Appendix C.1 since the complete support of
the pseudo joint distribution derived from the LLM is unknown. To this end, we approximate it with a
finite support driven by the language model itself. In particular, given a query we sample responses (at
temperature 0.9) until their total probability mass reaches 0.95 or we reach 1000 responses per query.
In case of TriviaQA, we performed 1233 queries in total. The mean and the median number of unique
responses per query was eventually 118.3 and 22, respectively. In case of the AmbigQA dataset, we
performed 700 queries, while the mean and the median number of unique responses was 277 and 69,
respectively.
At this point, we denote the set of responses by X˜ and let U˜ be the missing mass computed on X˜.
k
Then, we have
(cid:115) (cid:115) (cid:115)
ln(1) ln(1) ln(1)
E[U ]≤U + δ ≤U˜ +U −U˜ + δ ≤U˜ +1−P(X˜)+ δ ,
k k k k k k k k k
whichcanbecomputedinpractice. InFigure7wepresentourresultsintheformofempiricaldistributions
of different quantities, where each observation corresponds to a single query. We compute the bounds
for TriviaQA and AmbigQA datasets (see Section 6 for details about these datasets). From Figure 7 we
can conclude that the expected missing mass for both datasets is very small: Both the missing mass
computed on X˜ and the resulting upper bound on E[U ] are concentrated close to 0, while the cumulative
k
probability of the approximate support X˜ is close to 1 most of the time, showing that our approximations
are meaningful.
231.0
H.p. upper bound on [Uk]
1.0
Uk 1.0Total mass of sampled responses
1.0
H.p. upper bound on [Uk]
1.0
Uk 1.0Total mass of sampled responses
0.8 0.8 0.8 0.8 0.8 0.8
0.6 0.6 0.6 0.6 0.6 0.6
0.4 0.4 0.4 0.4 0.4 0.4
0.2 0.2 0.2 0.2 0.2 0.2
0.0 0.2 0.4 0.6 0.8 1.0 0.00.0 0.2 0.4 0.6 0.8 1.0 0.0 0.2 0.4 0.6 0.8 1.0 0.0 0.2 0.4 0.6 0.8 1.0 0.00.0 0.2 0.4 0.6 0.8 1.0 0.0 0.2 0.4 0.6 0.8 1.0
Value of upper bound Value of Uk Probability Value of upper bound Value of Uk Probability
TriviaQA dataset AmbigQA dataset
Figure 7: Distributions of bounds on the missing mass. The left figure for each dataset presents the
empirical distribution of the upper bounds on the missing mass E[U ]. The middle figure presents the
k
empirical distribution of U˜ , the missing mass computed on a finite support approximation (where the
k
supportisobtainedbytakingsamplesfromtheLLMuntilacumulativeprobabilityof95%or1000samples
are achieved). The right graph shows the empirical distribution of P(X˜), the cumulative probabilities of
all responses generated by the language model. For each figure, one observation (sample) corresponds to
a single query. The black curves represent the corresponding empirical cumulative distribution functions
for the upper bounds on EU and for U˜ , and the empirical survival function (1 minus the empirical
k k
distribution function) for the distribution of P(X˜).
24
ycneuqerF ycneuqerF ycneuqerF ycneuqerF ycneuqerF ycneuqerF