Large Language Model-Enabled Multi-Agent Manufacturing Systems
Jonghan Lim1, Birgit Vogel-Heuser2, and Ilya Kovalenko1
Abstract—Traditionalmanufacturingfaceschallengesadapt- available data, their ability to adapt to new formats or spec-
ing to dynamic environments and quickly responding to ifications is limited, leading to increased downtime. Thus,
manufacturing changes. The use of multi-agent systems has
a significant challenge includes the limited ability of agents
improved adaptability and coordination but requires further
to dynamically adapt to new information including product
advancementsinrapidhumaninstructioncomprehension,oper-
ationaladaptability,andcoordinationthroughnaturallanguage specifications (RCh1). Another challenge lies in processing
integration. Large language models like GPT-3.5 and GPT-4 unstructured textual data. Textual data is crucial because
enhancemulti-agentmanufacturingsystemsbyenablingagents it is more expressive than numerical data, offering vast
to communicate in natural language and interpret human in-
knowledge that is currently underutilized in manufacturing,
structionsfordecision-making.Thisresearchintroducesanovel
where structured data fails to include varied influencing
framework where large language models enhance the capabili-
ties of agents in manufacturing, making them more adaptable, factors [8]. The capability of natural language processing
and capable of processing context-specific instructions. A case to formalize unstructured textual data can enable downtime
studydemonstratesthepracticalapplicationofthisframework, reduction and process optimization [8]. Therefore, advanced
showing how agents can effectively communicate, understand natural language processing is essential for interpreting and
tasks, and execute manufacturing processes, including precise
implementingtextualdatafromhumanoperatorsorintercon-
G-code allocation among agents. The findings highlight the
importance of continuous large language model integration nected systems (RCh2).
intomulti-agentmanufacturingsystemsandthedevelopmentof TheadventofLargeLanguageModels(LLMs)presentsa
sophisticatedagentcommunicationprotocolsforamoreflexible novel solution to these challenges. LLMs, such as OpenAI’s
manufacturing system.
GPT-3 [9] and GPT-4 [10], provides opportunities to bring
more flexibility and adaptability into multi-agent manufac-
I. INTRODUCTION turing systems. With Machine to Machine (M2M) protocols
in the manufacturing industry, such as Message Queuing
The escalating demand for customized products and the
Telemetry Transport (MQTT) [11] and MTConnect [12]
increasing complexities of production processes are driving
that uses predefined structures, incorporating LLMs offer
a transformation in the manufacturing sector. This paradigm
benefits. LLMs can interpret, generate, and act on natural
shifthasrequiredmanufacturerstoquicklyadjusttoevolving
language instructions, facilitating complex decision-making
productspecificationsandadeptlyaddressunforeseenopera-
processesandadaptiveresponsestochangingmanufacturing
tional changes. In this context, manufacturers are required
conditions [13]. The integration of natural language capabil-
to be not only agile and responsive but also to maintain
ities may also benefit operators, engineers, and other system
high-quality products and cost efficiency in a dynamically
users who have limited experience with the specific process
changing environment.
or system [14], [15]. For manufacturing systems, natural
One significant approach for enhancing the adaptability
language capabilities can allow new users to quickly and
and quick response of manufacturing systems is the use of
efficiently adapt to managing and optimizing processes and
multi-agent control [1], [2]. A Multi-Agent System (MAS)
resources[16].Themaincontributionsofthispaperinclude:
is composed of several autonomous agents for decision-
LeveragingLLMtoallocateandexecutemanufacturingtasks
making, communication, and coordination [3]. Many multi-
based on user instructions, to enhance task efficiency (Cn1),
agentarchitectureshavebeendevelopedforcontrollingman-
enabling LLM agents to interpret and adapt to evolving
ufacturing systems [1], [4], [5], [6]. By enabling decen-
specifications ensuring the production process is correctly
tralized decision-making and enhancing coordination among
executed with the appropriate resources (Cn2), and applying
various agents, MAS have contributed significantly to han-
advanced natural language processing capabilities to enable
dling complexities in the manufacturing system [7].
agents to effectively comprehend context-specific instruc-
However, there are still challenges in integrating MAS
tions from users and other agents (Cn3).
frameworks in the manufacturing context. While agents in
The rest of the manuscript is organized as follows. Sec-
MAS can automate processes and make decisions from
tionIIprovidesbackgroundregardingMAS,LLMsinMAS,
and LLMs in manufacturing. Section III details the architec-
1Jonghan Lim and Ilya Kovalenko are with the Department of In-
ture and functioning of the proposed framework. Section IV
dustrial and Manufacturing and the Department of Mechanical Engineer-
ing, Pennsylvania State University, State College, USA (e-mail: {jxl567; demonstrates a case study to illustrate the applications and
iqk5135}@psu.edu). effectiveness of our framework. Section V presents chal-
2BirgitVogel-HeuseriswiththeInstituteofAutomationandInformation
lenges and limitations encountered while integrating LLM.
Systems,TechnicalUniversityofMunich,Munich,Germany(e-mail:vogel-
heuser@tum.de). SectionVIsummarizesthepaperanddiscussesfuturework.
4202
nuJ
4
]AM.sc[
1v39810.6042:viXraII. BACKGROUND line approach to assign different roles to each agent for
software engineering tasks, outperforming previous chat-
A. Multi-Agent Systems in Manufacturing
based systems in complex problems. Similarly, ChatDev
Various MAS architectures have been developed to en- [25], a virtual chat-powered framework that applies LLMs
hanceagentcommunication,significantlycontributingtothe to automate and streamline the entire software development
increased flexibility of manufacturing systems. For instance, process, including efficient collaboration across designing,
the Axiomatic Design of a Multi-Agent Reconfigurable coding, testing, and documenting phases.
Mechatronic System (ADMARMS) framework is an early These works demonstrate advanced multi-agent interac-
MAS architecture designed for reconfigurable manufactur- tions,realisticbehaviorsimulation,andefficienttasks,which
ing,incorporatingaxiomaticdesignandquantitativemethod- can be applied in manufacturing to enhance adaptability, co-
ologiestofacilitatedesign-basedreconfigurability.Studiesby ordination, and advanced natural language processing capa-
Wangetal.[17]andKimetal.[18]haveexpandedthescope bilities.Buildingontheinsightsfrompriorstudies,wedelve
of MAS by integrating these systems with big data analytics into the integration of LLMs in a multi-agent framework,
and reinforcement learning. Wang et al. focused on improv- aiming to address the unique requirements and benefits in
ing manufacturing flexibility through agent negotiation for the manufacturing sector.
deadlock prevention, while Kim et al. aimed at facilitating
autonomous decision-making, particularly for personalized C. Large Language Models in Manufacturing
production systems. Additionally, the works of Kovalenko With the advancement of LLM technology, recent studies
et al. [19] and Bi et al. [6] have concentrated on dynamic have also been increasingly focusing on exploring both the
resourceandtaskallocationwithinMAS.Kovalenkoetal.in- opportunities and challenges associated with implementing
troducedaframeworkfordynamicresourcetasknegotiation, LLMswithinthemanufacturingdomain.Makaturaetal.[13]
utilizing a network-based coordination strategy that enables explores the application of LLMs in design and manufactur-
Product Agents (PAs) to effectively explore and understand ing, including CAD/CAM. Their approach investigates the
resource capabilities. Similarly, Bi et al. developed a model- potentialroleofLLMsinavarietyoftasks,includingdesign
based Resource Agent (RA) architecture to address disrup- specification and manufacturing instruction, and highlights
tions in manufacturing systems by improving coordination thecapabilitiesandlimitations.TheanalysisofGPT-4shows
and decision-making capabilities. strengths in knowledge and iteration in design and manufac-
WhiletheseMASarchitecturesweredevelopedtoenhance turing but faces challenges in reasoning and accuracy, with
agent communication for increased flexibility, they focus potential solutions like specialized languages and improved
on utilizing predefined mathematical models and algorithms context management [13]. Furthermore, recent research on
for task allocation and agent communication. Furthermore, LLM in manufacturing delves into language models for spe-
there has been limited exploration in using natural language cific manufacturing applications. Jignasu et al. [26] presents
interpretation from human operators or other agents to en- a comprehensive evaluation of LLMs for understanding,
hance the responsiveness of manufacturing process control. debugging, and manipulating G-code in 3D printing, testing
By leveraging LLMs, agents can achieve higher operational theircapabilitiesinerrordetectionandcorrection,geometric
flexibility and efficiency in addressing these gaps. transformations, and discussing their potential and limita-
tionsinG-codecomprehension.Similarworkhasbeendone
B. Large Language Models in Multi-Agent Systems
by Badini et al. [27], which explores using ChatGPT to
TheemergenceofLLMshassparkedsignificantinterestin optimize the G-code generation in additive manufacturing,
the development of multiple interacting autonomous agents enhancingefficiencyandqualityinmanufacturingprocesses.
powered by the LLM technology [20]. The agents enabled ThesestudiesprovethatLLMcaninterpretG-code,essential
byLLMsdemonstrateenhancedproblem-solvingcapabilities for tasks like debugging, manipulating, and comprehending
through multi-agent discussions and diverse applications, the code used in manufacturing processes. Studies by Fakih
from sociological studies to complex task solutions. For et al. [28] and Koziolek et al. [29] explore the use of LLMs
instance,Parketal.[21]showcaseasimulationwith25gen- for enhancing programming in industrial control systems,
erative agents in a virtual town, designed to exhibit realistic specifically focusing on Programmable Logic Controllers
human behavior and facilitate studying social understanding (PLCs). Fakih et al. developed LLM4PLC, a framework
through memory retrieval. Another work by Wu et al. [22] that iteratively refines LLM-generated code through user
introduces an open-source framework called AutoGen that feedback and verification tools to improve code generation
facilitates customizable agent interactions and conversation quality. Koziolek et al. conducted an exploratory study to
programming. ChatEval [23] incorporates debater agents assess GPT-4’s capability to generate control logic from
in an LLM-powered MAS for text evaluation, achieving natural language prompts.
enhanced accuracy and depth over traditional methods and Several studies have investigated the integration of LLMs
single agent setups. LLMs have also been effectively inte- into manufacturing, including areas such as CAD/CAM, G-
grated into specialized domains like software engineering. code, and PLCs, aiming to enhance efficiency in manufac-
MetaGPT [24], a meta-programming framework, enhances turing processes. However, these studies have not focused
LLM-based multi-agent collaboration using an assembly on using LLMs with MAS for autonomous task allocation,Fig. 1: Framework for LLM-Enabled Multi-Agent Manufacturing Systems
adaptability to evolving specifications, and interpretation demands of a complex manufacturing environment with
of context-specific instructions. The framework described natural language processing capabilities.
in Section III focuses on developing autonomous agents that
A. Agent Initialization
use instructions and specifications in context-specific natural
language to dynamically adjust to new product information
and coordinate during runtime to complete manufacturing Algorithm 1: Agent Creation
tasks.Ourproposedframeworkcanbeidentifiedasaninitial
1: procedureCREATEAGENTS(Agent_list,Agent_functions)
steptowardenhancingtheCAD/CAMworkflowforautomat-
2: Agents←[]
ically adapting CAM processes based on changes in CAD 3: foragent_initializationinAgent_listdo
specifications, ensuring seamless manufacturing operations. 4: configuration←LoadJSON(agent_initialization)
5: forname,agent_datainconfigurationdo
6: function_list←[]
III. FRAMEWORK 7: if’functions’inagent_datathen
8: forfunction_nameinagent_data[’functions’]do
The novel architecture presented in Figure 1 is designed 9: function_reference←GetFunction(Agent_functions,
based on the architecture of a MAS that includes both PAs 10: function_name)
11: iffunction_reference̸=Nonethen
and RAs. A PA is an agent responsible for decision-making
12: function_list.append(function_reference)
related to a product, while an RA serves as a controller for 13: agent←NewAgent(name,agent_data,function_list)
a specific resource, such as a robot or machine [30]. 14: Agents.append(agent)
Figure 1 provides a general overview of an LLM-enabled 15: returnAgents
multi-agent manufacturing system framework, where a user
initializes LLM agents with instructions and capabilities. The agent initialization process aims to configure a coop-
PAs are assigned specific processes including G-code speci- erativeMASforoperationbydefiningroles,capabilities,and
fications, while possessing the ability to communicate and communication protocols for each agent. This setup ensures
access historical data for informed decision-making. RAs agents operate effectively and collaborate towards system
are responsible for the process execution of tasks, informed goals. The following initial prompt is given to all agents
by instructions and tool specifications provided by the user. in the system:
LLM is applied for processing and responding to natural
"You are a helpful agent in a cooperative
language inputs from both PAs and RAs. For evaluation, the
Multi-Agent System. If you are asked for a service
chosen LLM is GPT-4, the latest and most advanced version
you can provide you should help. If necessary,
of GPT developed by OpenAI [10].
you may ask the other agent for clarifying
This framework facilitates adaptability, enables real-time information. You may communicate with your
coordination, and provides the ability to respond to the peers to achieve your goals. If you do not knowthe answer do not make things up. Only use the reference function_reference is obtained by searching within
functions you have been provided with. However, a provided set of agent functions Agent_functions. If the
you may call these functions recursively." functionisfound,itsreferenceisappendedtofunction_list.A
These instructions ensure that each agent operates within new agent instance agent is created with the specified name,
the boundaries of its capabilities and knowledge, engages agent data, and the list of function references. This agent is
in effective communication, and contributes to the overall then added to the Agents list. This algorithm facilitates the
objectives of the MAS. flexible creation of agents allowing for dynamic adaptation
Following the initial prompts common to all agents in the to various tasks and scenarios.
system,theinitializationprocessinvolvesvariousparameters,
assigning each agent to its specific role. These parameters Algorithm 2: Chat Interaction
wereselectedtoachievethedesiredbehaviorsofadaptability,
1: procedureCHAT(prompt,model)
real-time response, autonomous decision-making, and effi-
2: with_functions←len(function_info)>0
cientcoordinationwithintheMAS.Theprocessincludesthe 3: msgs←[]
following key parameters essential for the agents: 4: ifinstructionsthen
5: msgs.append({"role":"system","content":instructions})
• Functions: Capabilities within the manufacturing pro- 6: msgs.append({"role":"user","content":prompt})
cess, that range from retrieving manufacturing history 7: response←__get_response(msgs,model_,with_functions)
to executing manufacturing tasks. 8: msgs.append(response.message)
9: function←response.message.function_call.name
• Annotation: Agent’s role and responsibilities, aiding 10: args←json.loads(response.message.function_call.arguments)
theselectionoftheappropriateagentamongotherLLM 11: function_response←executables[function](**args)
agents. 12: returnfunction_response,msgs
• Instructions: User instructions offer a sequence of op-
erations, techniques, and standards for agent activities.
B. Agent Capabilities and LLM Integration
• Inbox: The agent is initialized with an inbox to receive
and manage instructions, updates, and feedback from ThroughtheintegrationofLLM,agentsgainthecapability
various agents. to interpret complex instructions and specifications, facili-
For PAs, an additional parameter is introduced: tating a flexible approach to manufacturing operations. The
framework employs LLM to enable agents to decode user
• Specification File: Detailed manufacturing specifica-
instructions for manufacturing, integrating a communication
tions, such as G-code files for CNC operations, for
mechanismthroughfunctioninformationandexecutioncapa-
precise manufacturing execution.
bilities with the OpenAI Application Programming Interface
RAs are further configured with:
(API) feature called function calling [33]. This allows for
• Configurations:Thisparameteroutlinestheoperational the automatic execution of user-defined functions, including
settings specific to RAs, such as process times, defect
specific manufacturing operations (e.g., milling, drilling)
rates, and breakdown probabilities.
through descriptions that include operation parameters and
The integration of these parameters into LLM-enabled required inputs like product name, machine name, process
MAS for manufacturing extends the structured and stan- name, and product specifications (e.g. G-code).
dardized approaches (e.g. FIPA [31] and JADE [32]) to The‘chat’function,cp.Algorithm2,facilitatesdynamic
incorporatenaturallanguageprocessingcapabilitiesformore interaction among agents, based on available function in-
flexible and human-like agent interactions. Integrating user- formation and executing function calls as defined by the
defined instructions and parameters in agent initialization manufacturingprocessrequirements,utilizingtheappropriate
can be further expanded through user studies to ensure LLM model. The outcome, function_response, includes the
applicability to real scenarios and industries. details like operation type, product, and machine names,
Based on the initialization information, the Agent along with a message, msgs, to facilitate the subsequent
Creation function, cp. Algorithm 1, enables the dynamic steps in the manufacturing process. This approach enables
generation of agents. The Agent Creation function pro- context-aware execution of manufacturing tasks, enhancing
vides advanced LLM agents with different capabilities in the adaptability and efficiency of the manufacturing process.
manufacturingsystems,improvingoperationalefficiencyand
C. Operational Workflow
adaptabilitytochangingrequirements.Thealgorithmiterates
over each entry in the Agent_list, which contains initializa- The workflow, as depicted in Figure 2, shows how user
tion information. For every entry, configuration data con- instructions in textual data can be converted into actionable
figuration for the agent is loaded from a JSON, containing manufacturingoperations.Thisapproachenablesthetransla-
details such as the agent’s name, role, capabilities, and any tionofhigh-leveldirectivesofusersintomachine-executable
specific functions the agent can perform. For each agent actions, enhancing the responsiveness of the manufacturing
specifiedintheconfigurationdata,anemptylistfunction_list workflow to changing conditions.
is initially prepared. If the ‘functions’ key is present in the The workflow begins with the user initializing PAs and
agent’s data, the algorithm iterates through each function RAs within the manufacturing system. Users describe prod-
name listed under this key. For each function name, a uct goals, sequences of operations, and specifications. ThisFig. 3: Case Study Setup
issubjectedtocontouringanddrillingoperations.The4-step
processextendsthissequencebyincorporatingcounterboring
and threading operations, testing the system’s capability
to handle extended manufacturing workflows. The G-code
specifications for these processes are adapted from [34],
as detailed in Figure 4. Notably, explicit labels for G-code
specifications(e.g.Step1-Contouring,Step2-Drilling)arenot
provided to the LLM agent. Leveraging LLM’s capability
to interpret and assign appropriate G-code based on tool
specifications for each resource agent demonstrates the sys-
tem’s potential to efficiently manage G-code assignments,
demonstrating the advanced comprehension capabilities of
LLMs in a simulated manufacturing context.
Each product has an LLM-enabled PA which oversees
high-level decision-making for its associated product. For
Fig.2:OperationalWorkflowof theFrameworkUsingLLM instance, ‘product-1’ is instructed for a 2-step process with
for Task Execution and Coordination the following instructions as:
information is then processed by the LLM, which generates "Make sure to get contouring to shape the
responses to guide the process. The PA determines the external profile of the product. Then, get a
suitable RA for the next task, prompting it to carry out the drilling operation to create precise holes. This
requiredoperation.TheselectedRAconstructsthenecessary operation can precede or follow the contouring.
argumentstorequestthecorrespondingfunctioncall,leading Proceed to Exit Buffer completed. Your product
to the execution of the specified process. Upon successful name is ’product-1’. The G-code specifications are
operation, the LLM formulates an appropriate response, as follows: %358 N1 N10 G90 G71 G80 G40..."
informingthePAoftheprocessstatus.Thisfeedbackupdates Likewise,eachLLM-enabledRAisresponsibleforopera-
the LLM-integrated PA with the current process status, tional decisions related to its specific machine. ‘Milling1’ is
determining the completion of the task. If additional tasks tasked with both contouring and counterboring to demon-
remain,thecyclerepeats;otherwise,theuserisnotifiedwith strate how LLM can adaptively assign operations to the
the completion of all processes. appropriate machine. ‘Drilling1’ focuses on drilling, while
‘Threading1’ manages threading tasks. Each machine is
IV. CASESTUDY
assigned specific tool numbers that are used in G-code
In this case study, we examine the proposed framework
specifications to ensure that PAs provide only the relevant
and demonstrate how the LLM is integrated into a multi-
G-codeinstructionstoeachRA.Forexample,the‘Milling1’
agent framework to execute the manufacturing process.
machine receives the following operational prompt:
A. Case Study Setup "Perform milling operations as required,
A simulated manufacturing environment is equipped with including contouring the external shape and
threedistinctmachines,eachspecializedformilling,drilling, counterboring for holes. Your machine name is
and threading tasks, as highlighted in Figure 3. To evaluate Milling1. The tool number for contouring T4. The
the system’s adaptability to new product information, we tool number for counterboring is T6."
structuredthecasestudyintotwodistinctprocesses:a2-step This experiment investigates the LLM’s capability to
process and a more comprehensive 4-step process. In the 2- identify and allocate correct manufacturing task and their
step process, a prototype product, referred to as ‘product-1’, corresponding G-code specifications. It aims to enhance theFig. 4: Case Study G-code Product Specification
adaptability by showcasing natural language communication
between PA and RA, simulating human-like interaction for
seamless task execution within the manufacturing environ-
ment. Fig. 5: Agent Communication Result for 2-step Process
andcomprehendspecifictaskswithinthemanufacturingpro-
B. Case Study Simulation and Results Analysis
cess.Utilizingnaturallanguageprocessing,agentsinteracted
Following the setup of our case study, simulations were in both the 2-step and 4-step processes, showcasing their
conducted to evaluate the system performance, as shown in capability for nuanced communication. In the 2-step pro-
one example, depicted in Figure 5. In this example, the user cess, the communication between the ’Product-1’ agent and
initiates the workflow by instructing the ‘Product-1’ agent the ‘Milling1’ and ‘Drilling1’ agents showed the system’s
and all other RAs, using Algorithm 1 from Section III- efficiency in handling straightforward task sequences and
A. Following the agent initialization, the system operates distributing G-code specifications in human-like communi-
according to the steps detailed in the operational workflow, cation. The 4-step process further explored the agents’ ca-
as depicted in Section III-C. First, the ‘Product-1’ agent pability in managing and understanding complex sequences,
communicates the need for contouring to the ’Milling1’ requiring accurate G-code allocation where ‘Milling1’ was
agent, providing only the contouring section of G-code tasked with both contouring and counterboring. In this sce-
specifications.Afterthe‘Milling1’agentcompletesthetask, nario,the‘Product-1’agentcoordinatedthesequenceofcon-
it informs the ‘Product-1’ agent, indicating it is ready for touring, drilling, counterboring, and threading, showing the
the next operation. The process continues with the ‘Product- agents’abilitytointerpretandimplementlongerinstructions.
1’ agent assigning the drilling operation to the ‘Drilling1’ 2) Accuracy and Performance: The data presented in Ta-
agent,whichupdatesthe‘Product-1’agentaftercompletion. ble I reveals that GPT-4 achieved success rates of 100% for
When all operations are completed, the ‘Product-1’ agent 2-stepand86%for4-stepmanufacturingprocessesacross50
updates the user, indicating that all manufacturing processes trials for each. This shows a decline in performance as task
for ‘Product-1’ are completed and are now ready to move complexity increases, with the 4-step process experiencing
to the exit buffer. All agent communications are facilitated a 14% overall error rate. The detailed error breakdown
by the chat interaction protocol defined in Algorithm 2, as in Table II reveals that within the overall 14% error rate
outlined in Section III-B. for the 4-step process, incorrect function calls and process
This section details the outcomes from the simulations, inexecution have 43% of the errors, while inaccurate G-
highlighting the communications among agents, their under- code allocation accounts for 14% of the total errors. It is
standing and execution of tasks, the system’s accuracy, and observedthattheincreaseinpromptlengthcorrelateswitha
the insights gained from these case studies. riseinerrors,highlightingtheneedforrefinedmodeltraining
1) Communication and Comprehension: Our case study and improved prompt engineering. Addressing these issues
focused on evaluating the agents’ ability to communicate aims to enhance task execution capabilities and effectiveTABLE I: Success Rates for Case Studies with GPT-4 inSectionIV.Thepotentialdecreaseinaccuracywithlarger
datasets poses a challenge to scaling LLM-enabled multi-
Metric 2-Step 4-Step
agent control across more complex manufacturing opera-
Success Rate 1 .86
tions.
Overall Error Rate 0 .14
- P1. Contouring Failure Rate 0 0
- P2. Drilling Failure Rate 0 .06 C. Reliability
- P3. Counterboring Failure Rate N/A .02
The integration of LLMs into manufacturing settings
- P4. Threading Failure Rate N/A .06
highlights the importance of reliability. LLMs generating
TABLE II: Detailed Error Analysis with GPT-4 hallucinated responses or making false decisions raises sig-
nificantsafetyconcerns,asshowninSectionIV.TheLLMin
Error Type 2-Step 4-Step
the case study allocated inaccurate G-code or executed the
Incorrect Function Calls 0 .43
incorrect function calls. Moreover, the reasoning provided
Inaccurate G-code Allocation 0 .14
Process Inexecution 0 .43 by LLMs may require validation in practical manufacturing
scenarios even if it seems logical. Therefore, it is essential
integration of LLMs into MASs for manufacturing, improv-
to implement robust verification mechanisms, as well as
ing system adaptability and operational efficiency even in
incorporate real-time observability and monitoring capabil-
unexpected scenarios.
ities. This approach ensures LLMs’ outputs and reasoning
3) Insights from Case Studies: The case study provided
are consistent and allow immediate adjustments with man-
insights into the capabilities of LLM-enabled MASs in
ufacturing standards and safety protocols. For instance, the
manufacturing. The current framework incorporates LLM
studybyJoublinetal.[35]presentsasystemarchitecturefor
to transition towards a system capable of understanding the
robotics that utilizes LLMs for planning tasks, focusing on
manufacturing tasks (Cn1), interpreting and adapting to new
a strategy for replanning in response to errors via feedback.
product specifications (Cn2), and agent communication via
Thismethodenablesrobotstoadjusttofailuresandchanges,
naturallanguageinstructions(Cn3).Thisshiftenhancessys-
enhancing reliability. Thus, feedback loops in LLM systems
temflexibilityandexpandsitsabilitytomanagevarioustasks
ensure safety and reliability in complex manufacturing envi-
without relying on predetermined models or rules. However,
ronments.
accuracy issues with GPT-4 highlight the need for model
improvement and adaptation to manufacturing needs. Diffi-
VI. CONCLUSIONANDFUTUREWORK
cultieswithincorrectargumentpassingduringfunctioncalls
point to the necessity for better prompt engineering, error Inourresearch,weexploredtheintegrationofLLMwithin
management,andvalidationwithinthesystem.Theseresults MAS to enhance manufacturing processes. Our research
guide future research toward enhancing LLM integration in demonstrates the effect of LLM in manufacturing, where
manufacturing, developing advanced agent communication they serve to dynamically match tasks with optimal process
protocols, and increasing system robustness against errors. parameters, improving task allocation efficiency and oper-
ational adaptability (Cn1). Moreover, LLM enables agents
V. CHALLENGESANDLIMITATIONS
to adapt to evolving product specifications (e.g. G-code),
A. Performance meetingthemanufacturingrequirements(Cn2).Additionally,
A significant challenge within the use of LLMs in manu- through advanced natural language processing, LLM en-
facturing processes is achieving the level of performance re- ables agents to effectively understand and execute complex,
quired for high-quality production. Manufacturing processes context-specific instructions from humans and other agents
demand precision to ensure product consistency, safety, and enhancingtheagentcommunicationandcollaborationwithin
reliability. However, LLMs, while effective in processing the manufacturing process (Cn3). However, challenges have
naturallanguage,occasionallyshowslimitationsindelivering been identified, such as task execution performance, scala-
the precision necessary for these applications, as indicated bility, and reliability, highlighting the need for a verification
in Section IV-B.2. This issue raises concerns about the process and monitoring capabilities when making decisions
feasibility of relying on LLMs for tasks where errors can for manufacturing operations. Furthermore, the diversity in
leadtootherconsequences,such asmachinebreakdownand userinstructionsbasedondifferentskilllevelsandmanufac-
low product quality. turingrequirementsaffectstaskinterpretationandexecution,
which requires a strategy to dynamically adapt to these
B. Scalability changes when integrating LLM to ensure reliability.
Scalability is also a challenge when integrating LLMs Futureworkwillfocusondevelopingcommunicationpro-
into manufacturing systems. As the volume of data and the tocolsincorporatingLLMforagentsthatcanaccommodatea
complexity of tasks grow, there is a risk that LLMs may widevarietyofmanufacturinginstructionsandrequirements,
not maintain their initial levels of accuracy and efficiency. influencedbyvaryingproficiencylevelsofhumanoperators.
This limitation is particularly noticeable in situations where This approach seeks to showcase the capability of agents
extensive historical data and detailed prompts are essential to learn and adapt from historical data, enhancing their
for task execution, as exemplified in the 4-step process responsiveness to rapid changes in modern manufacturingindustries. Additionally, efforts will be directed towards en- [16] T. Schulte, G. Mouratidis, and V. Pfanschilling, “From Expert to
hancing the accuracy and scalability of LLM. While this pa- Novice: Increasing Reactive Resilience by Transfering Knowledge,”
Proceedingsofthe2021Pre-ICISSIGDSASymposium.15,2021.
perinitiallyfocusedonwidelyusedmanufacturingprocesses [17] S. Wang, J. Wan, D. Zhang, D. Li, and C. Zhang, “Towards Smart
(e.g. drilling, milling), future investigations will extend to FactoryforIndustry4.0:ASelf-OrganizedMulti-AgentSystemwith
BigDataBasedFeedbackandCoordination,”Computernetworks,vol.
include less commonly used manufacturing processes with
101,pp.158–168,2016.
largerdatasetstoevaluatetheeffectivenessofourframework. [18] Y. G. Kim, S. Lee, J. Son, H. Bae, and B. Do Chung, “Multi-
The goal is to assess if integrating additional processes AgentSystemandReinforcementLearningApproachforDistributed
Intelligence in a Flexible Smart Manufacturing System,” Journal of
results in less effective outcomes or if they can also be
ManufacturingSystems,vol.57,pp.440–450,2020.
improved by applying these methodologies, ensuring effi- [19] I. Kovalenko, D. Ryashentseva, B. Vogel-Heuser, D. Tilbury, and
cientprocessingoflargerdatasetsanddiversemanufacturing K. Barton, “Dynamic Resource Task Negotiation to Enable Product
Agent Exploration in Multi-Agent Manufacturing Systems,” IEEE
processes without impacting performance.
RoboticsandAutomationLetters,vol.4,no.3,pp.2854–2861,2019.
[20] L. Wang, C. Ma, X. Feng, Z. Zhang, H. Yang, J. Zhang, Z. Chen,
ACKNOWLEDGMENT
J. Tang, X. Chen, Y. Lin, W. X. Zhao, Z. Wei, and J.-R. Wen, “A
We thank Felix Ocker for his valuable comments and SurveyonLargeLanguageModelBasedAutonomousAgents,”arXiv
preprintarXiv:2308.11432,2023.
suggestions.
[21] J. S. Park, J. O’Brien, C. J. Cai, M. R. Morris, P. Liang, and
M.S.Bernstein,“GenerativeAgents:InteractiveSimulacraofHuman
REFERENCES
Behavior,”Proceedingsofthe36thAnnualACMSymposiumonUser
InterfaceSoftwareandTechnology,pp.1–22,2023.
[1] P.Leitão,“Agent-basedDistributedManufacturingControl:AState-
of-the-art Survey,” Engineering applications of artificial intelligence, [22] Q. Wu, G. Bansal, J. Zhang, Y. Wu, S. Zhang, E. Zhu, B. Li,
L. Jiang, X. Zhang, and C. Wang, “AutoGen: Enabling Next-Gen
vol.22,no.7,pp.979–991,2009.
LLM Applications via Multi-Agent Conversation Framework,” arXiv
[2] B. Vogel-Heuser, J. Lee, and P. Leitão, “Agents Enabling Cyber-
Physical Production Systems,” at-Automatisierungstechnik, vol. 63,
preprintarXiv:2308.08155,2023.
[23] C.-M. Chan, W. Chen, Y. Su, J. Yu, W. Xue, S. Zhang, J. Fu, and
no.10,pp.777–789,2015.
Z. Liu, “ChatEval: Towards Better LLM-based Evaluators Through
[3] M.Wooldridge,“AnIntroductiontoMultiAgentSystems,”2009.
Multi-AgentDebate,”arXivpreprintarXiv:2308.07201,2023.
[4] P. Leitão, V. Maˇrík, and P. Vrba, “Past, Present, and Future of
Industrial Agent Applications,” IEEE Transactions on Industrial In- [24] S.Hong,M.Zhuge,J.Chen,X.Zheng,Y.Cheng,C.Zhang,J.Wang,
formatics,vol.9,no.4,pp.2360–2372,2012. Z. Wang, S. K. S. Yau, Z. Lin, L. Zhou, C. Ran, L. Xiao, C. Wu,
andJ.Schmidhuber,“MetaGPT:MetaProgrammingforMulti-Agent
[5] I. Kovalenko, D. Tilbury, and K. Barton, “The Model-based Product
CollaborativeFramework,”arXivpreprintarXiv:2308.00352,2023.
Agent: A Control Oriented Architecture for Intelligent Products in
Multi-agent Manufacturing Systems,” Control Engineering Practice, [25] C.Qian,X.Cong,C.Yang,W.Chen,Y.Su,J.Xu,Z.Liu,andM.Sun,
“Communicative Agents for Software Development,” arXiv preprint
vol.86,pp.105–117,2019.
arXiv:2307.07924,2023.
[6] M. Bi, I. Kovalenko, D. M. Tilbury, and K. Barton, “Dynamic
[26] A. Jignasu, K. Marshall, B. Ganapathysubramanian, A. Balu,
Distributed Decision-Making for Resilient Resource Reallocation in
DisruptedManufacturingSystems,”InternationalJournalofProduc- C.Hegde,andA.Krishnamurthy,“TowardsFoundationalAIModels
tionResearch,pp.1–21,2023. forAdditiveManufacturing:LanguageModelsforG-codeDebugging,
Manipulation,andComprehension,”arXivpreprintarXiv:2309.02465,
[7] I.Kovalenko,E.C.Balta,D.M.Tilbury,andK.Barton,“Cooperative
2023.
Product Agents to Improve Manufacturing System Flexibility: A
Model-basedDecisionFramework,”IEEETransactionsonAutomation [27] S. Badini, S. Regondi, E. Frontoni, and R. Pugliese, “Assessing the
ScienceandEngineering,vol.20,no.1,pp.440–457,2022. Capabilities of ChatGPT to Improve Additive Manufacturing Trou-
bleshooting,”AdvancedIndustrialandEngineeringPolymerResearch,
[8] M. C. May, J. Neidhöfer, T. Körner, L. Schäfer, and G. Lanza,
“ApplyingNaturalLanguageProcessinginManufacturing,”Procedia 2023.
CIRP,vol.115,pp.184–189,2022. [28] M.Fakih,R.Dharmaji,Y.Moghaddas,G.Q.Araya,O.Ogundare,and
M.A.A.Faruque,“LLM4PLC:HarnessingLargeLanguageModels
[9] L. Floridi and M. Chiriatti, “GPT-3: Its Nature, Scope, Limits, and
Consequences,”MindsandMachines,vol.30,pp.681–694,2020. for Verifiable Programming of PLCs in Industrial Control Systems,”
arXivpreprintarXiv:2401.05443,2024.
[10] J.Achiam,S.Adler,S.Agarwal,L.Ahmad,I.Akkaya,F.L.Aleman,
D. Almeida, J. Altenschmidt, S. Altman, S. Anadkat et al., “GPT-4 [29] H. Koziolek, S. Gruener, and V. Ashiwal, “ChatGPT for PLC/DCS
TechnicalReport,”arXivpreprintarXiv:2303.08774,2023.
ControlLogicGeneration,”arXivpreprintarXiv:2305.15809,2023.
[30] P.Vrba,P.Tichy`,V.Maˇrík,K.H.Hall,R.J.Staron,F.P.Maturana,
[11] U. Hunkeler, H. L. Truong, and A. Stanford-Clark, “MQTT-S—A
Publish/SubscribeProtocolforWirelessSensorNetworks,”20083rd and P. Kadera, “Rockwell Automation’s Holonic and Multiagent
International Conference on Communication Systems Software and
ControlSystemsCompendium,”IEEETransactionsonSystems,Man,
MiddlewareandWorkshops(COMSWARE’08),pp.791–798,2008. and Cybernetics, Part C (Applications and Reviews), vol. 41, no. 1,
pp.14–30,2010.
[12] MTConnect,2008.[Online].Available:http://www.mtconnect.org/
[31] P. D. O’Brien and R. C. Nicol, “FIPA—Towards a Standard for
[13] L. Makatura, M. Foshey, B. Wang, F. HähnLein, P. Ma, B. Deng,
SoftwareAgents,”BTTechnologyJournal,vol.16,pp.51–59,1998.
M. Tjandrasuwita, A. Spielberg, C. E. Owens, P. Y. Chen, A. Zhao,
[32] F.Bellifemine,A.Poggi,andG.Rimassa,“JADE–AFIPA-Compliant
A. Zhu, W. J. Norton, E. Gu, J. Jacob, Y. Li, A. Schulz, and
AgentFramework,”ProceedingsofPAAM,vol.99,no.97-108,p.33,
W. Matusik, “How Can Large Language Models Help Humans in
DesignandManufacturing?”arXivpreprintarXiv:2307.14377,2023. 1999.
[33] OpenAI, “Function Calling.” [Online]. Available: https://platform.
[14] J. Leinonen, A. Hellas, S. Sarsa, B. Reeves, P. Denny, J. Prather,
openai.com/docs/guides/function-calling
and B. A. Becker, “Using Large Language Models to Enhance Pro-
gramming Error Messages,” Proceedings of the 54th ACM Technical [34] HelmanCNC, “CNC Mill Program Example Outer Contour Cutting
SymposiumonComputerScienceEducationV.1,pp.563–569,2023. with Drilling and Counterbore,” Jun 2014. [Online]. Available:
https://www.helmancnc.com/
[15] J.Chen,X.Lu,M.Rejtig,D.Du,R.Bagley,M.S.Horn,andU.J.
[35] F.Joublin,A.Ceravola,P.Smirnov,F.Ocker,J.Deigmoeller,A.Belar-
Wilensky,“LearningAgent-basedModelingwithLLMCompanions:
dinelli,C.Wang,S.Hasler,D.Tanneberg,andM.Gienger,“CoPAL:
Experiences of Novices and Experts Using ChatGPT & NetLogo
Chat,”arXivpreprintarXiv:2401.17163,2024. CorrectivePlanningofRobotActionswithLargeLanguageModels,”
arXivpreprintarXiv:2310.07263,2023.