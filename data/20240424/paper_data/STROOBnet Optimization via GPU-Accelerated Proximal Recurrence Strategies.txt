STROOBnet Optimization via GPU-Accelerated
Proximal Recurrence Strategies
(Ted) Edward Holmberg Mahdi Abdelguerfi Elias Ioup
Department of Computer Science Cannizaro-Livingston Gulf States Center for Geospatial Sciences
University of New Orleans Center for Environmental Informatics Naval Research Laboratory,
New Orleans, LA, USA New Orleans, LA, USA Stennis Space Center
eholmber@uno.edu mahdi@cs.uno.edu Mississippi, USA.
elias.ioup@nrlssc.navy.mil
Abstract—Spatiotemporalnetworks’observationalcapabilities the research contrasts our Spatiotemporal Ranged Observer-
are crucial for accurate data gathering and informed decisions Observable clustering technique with alternative approaches,
acrossmultiplesectors.ThisstudyfocusesontheSpatiotemporal
suchasKmeans[9],DBSCAN[6],andtimeseriesanalysisvia
Ranged Observer-Observable Bipartite Network (STROOBnet),
statistical mode [10]. Additionally, our approach, focusing on linkingobservationalnodes(e.g.,surveillancecameras)toevents
within defined geographical regions, enabling efficient monitor- GPU-accelerated computation, ensures scalable and efficient
ing.UsingdatafromReal-TimeCrimeCamera(RTCC)systems data processing across large datasets [4].
and Calls for Service (CFS) in New Orleans, where RTCC
combatsrisingcrimeamidstreducedpolicepresence,weaddress II. BACKGROUND
the network’s initial observational imbalances. Aiming for uni-
formobservationalefficacy,weproposetheProximalRecurrence This section outlines the key datasets and mathematical
approach.Itoutperformedtraditionalclusteringmethodslikek- concepts foundational to our exploration of spatiotemporal
means and DBSCAN by offering holistic event frequency and clustering in crime and surveillance data.
spatial consideration, enhancing observational coverage.
Index Terms—Bipartite Networks, Spatiotemporal Networks, A. Dataset:CrimeDynamicsandSurveillanceinNewOrleans
Observer-observable Relationships, Proximal Recurrence, Net-
work Optimization This subsection introduces two datasets used to construct
the STROOBnet.
1) Real-Time Crime Camera (RTCC) Systems: The RTCC
I. INTRODUCTION
system, set up by the New Orleans Office of Homeland
In response to escalating crime and a diminished police Security in 2017, uses 965 cameras to monitor, respond to,
presence [1], New Orleans—besieged by over 250,000 Calls and investigate criminal activity in the city. Of these cameras,
for Service (CFS) in 2022, of which over 13,000 were vi- 555 are owned by the city and 420 are privately owned [5].
olent—has adopted Real-Time Crime Camera (RTCC) sys- 2) Calls for Service (CFS): The New Orleans Police De-
tems as a strategic countermeasure [2]. The RTCC, with partment’s (NOPD) Computer-Aided Dispatch (CAD) system
965 cameras saved over 2,000 hours of investigative work logs Calls for Service (CFS). These include all requests for
in its inaugural year [3]. However, a significant challenge NOPD services and cover both calls initiated by citizens and
persists: optimizing these systems to maximize their efficacy officers [2].
and coverage amidst the city’s staggering crime rate.
B. Mathematical Background
Thisresearchfocusesonthemathematicalmodelofthisis-
suethroughthelensofgraphtheory,exploringSpatiotemporal Utilizing the datasets introduced, our analysis hinges upon
Ranged Observer-Observable Bipartite Networks (STROOB- several mathematical and network principles, each playing a
nets). While the immediate application is crime surveillance, crucial role in interpreting the spatial and temporal dynamics
theprinciplesandmethodologiesdevelopedhereinholdappli- ofcrimeandsurveillanceinNewOrleans,Louisiana(NOLA).
cability to various observer-type networks, including environ-
1) Bipartite Networks: Bipartite networks consist of two
mental monitoring systems.
discrete sets of nodes with edges connecting nodes from
The objectives are threefold: identify the most influen-
separate sets. They effectively portray observer-observable
tial nodes, evaluate network efficacy, and enhance network
relationships by defining the relationship between the two
performance through targeted node insertions. Employing a
types.
centrality measure, the methodology optimizes observer node
Mathematically, a bipartite graph (or network) G =
placements in a spatial bipartite network. Through modeling
(U,V,E) is defined by two disjoint sets of vertices U and
relationships between service calls, violent events, and crime
V,andasetofedgesE suchthateachedgeconnectsavertex
camera locations in New Orleans using knowledge graphs,
in U with a vertex in V. Formally, if e=(u,v) is an edge in
E, then u∈U and v ∈V. This ensures that nodes within the
Acceptedversion.©2023IEEE.Personaluseofthismaterialispermitted.
PermissionfromIEEEmustbeobtainedforallotheruses.
DOI10.1109/BigData59044.2023.10386774
4202
rpA
22
]GL.sc[
1v88341.4042:viXrasamesetarenotadjacentandthatedgesonlyconnectvertices A. K-means Clustering
from different sets [11].
K-means clustering segregates datasets into k clusters,
minimizing intra-cluster discrepancies [9]. However, K-means
2) Centrality: Degree Centrality measures a node’s influ-
poses challenges when applied to spatiotemporal data. It
ence based on its edge count and is crucial for identifying
requires pre-specification of k, which might not always be
critical nodes within a network [12]. In bipartite networks,
intuitive. The method’s insistence on categorizing every data
suchasthosemodelinginteractionsbetweensurveillancecam-
point can obfuscate pivotal spatial-temporal patterns. This
eras (observers) and crime incidents (observables), centrality
can misrepresent genuine structures in observer-observable
is vital for evaluating and optimizing camera positioning to
networks. Furthermore, K-means’ inability to set a maximum
ensureeffectiveincidentmonitoring.Consequently,thedegree
cluster radius or diameter means it doesn’t consider enti-
centrality of the observer nodes is of particular concern.
ties’ observational range in the network, such as surveillance
3) Spatiotemporal Networks: Spatiotemporal networks cameras. This hinders its usage where spatial influence is
(STNs) model entities and interactions that are both spa- paramount, necessitating alternative clustering strategies that
tially and temporally situated. These networks can effectively accommodate spatial limitations [8].
represent geolocated events and observers by establishing
connections based on spatiotemporal conditions. B. DBSCAN
A Spatiotemporal Network (STN) is defined as a sequence DBSCAN clusters based on density proximity and doesn’t
of graphs representing spatial relationships among objects at require specifying cluster numbers upfront [6], [7]. However,
discrete time points: in bipartite spatiotemporal networks, DBSCAN can conflate
adjacent clusters, forming larger, potentially sparser clusters.
(cid:16) (cid:17)
STN = G , G , ..., G (1) This can lead to misinterpretations of genuine data patterns.
t1 t2 tn
Additionally,DBSCAN’slackofgeneratedcentroidsforclus-
where each graph G is defined as: ters limits its potential for strategizing node placements, par-
ticularly where centroids represent efficient insertion points.
(cid:16) (cid:17)
G = N , E (2)
ti ti ti
C. Mode Clustering
and represents the network at time t with N and E The statistical mode pinpoints recurrent instances in
i ti ti
denoting the set of nodes and edges at that time, respectively. datasets, offering insights on frequent occurrences [10]. How-
[14] ever,itsinherentlimitationliesinoverlookingspatialrelation-
In the context of this research, STNs are utilized to model ships. By focusing solely on frequency, mode clustering can
relationships between crime cameras (observer nodes) and neglectspatialclustersthat,whilenotbeingthemostfrequent,
violent events (observable nodes) across New Orleans. Nodes play a critical role in the network. This oversight can lead
represent objects, whereas edges depict spatiotemporal re- to ineffective strategies for node placements, undermining the
lationships, connecting observer nodes to observable nodes utilization of spatial-temporal patterns.
based on spatial proximity and temporal occurrence. The
analysis of STNs allows for the extraction of insightful pat-
IV. APPROACH
terns, aiding in understanding and potentially mitigating the A. Problem Definition
progression and spread of events throughout space and time.
Let matrices representing observer nodes O and observ-
able events E be defined, with their respective longitudinal
4) Spatiotemporal Clustering: Spatiotemporal clustering
(O ,E ) and latitudinal (O ,E ) coordinates. The objec-
groups spatially and temporally proximate nodes to identify lon lon lat lat
tive is to formulate a framework that:
regionsandperiodsofsignificantactivitywithinanetwork.In
the context of spatiotemporal networks, clusters might reveal • Computes distances between observers and events.
hotspots of activity or periods of unusual event concentration. • Assesses the centrality of observer nodes.
[13] Techniques for spatiotemporal clustering must consider • Classifies events according to their observability.
both spatial and temporal proximity, ensuring that nodes are • Clusters unobserved points utilizing spatial proximity.
similarinboththeirlocationandtheirtimeofoccurrence[17]. • Adds new observers to improve network performance.
B. Objectives
III. RELATEDWORK
1) Maximize Current Network Observability: Optimize
Thissectionassessesprevalentclusteringtechniques,under- the placement or utilization of existing observer nodes to
scoring their drawbacks when applied to bipartite networks, ensure a maximum number of events are observed.
especially in our context. The subsequent results section will 2) IdentifyandTargetKeyUnobservedClusters:Analyze
contrast these methods with our proposed approach, empha- unobserved events to identify significant clusters and
sizing their performance in bipartite spatiotemporal networks understand their characteristics to inform future observer
scenarios. node placements.3) Strategize Future Observer Node Placement: Develop • Temporal Dynamics: Accounting for the temporal dy-
strategies for placing new observer nodes to address namics within the data, ensuring that the models and
unobserved clusters and prevent similar clusters from algorithms are robust enough to handle variations and
forming in the future. fluctuations in the event occurrences over time.
C. Rationale V. METHODS
The limitations identified within existing methodologies, as This section provides a detailed account of the approaches
discussed in the Related Work section, underscore the need and algorithms used to establish spatiotemporal relationships
for an innovative approach to optimizing bipartite networks, between observer nodes and observable events. The ensuing
particularly in the context of spatiotemporal data. Traditional subsections systematically unfold the mathematical and algo-
clustering methodologies, such as K-means and DBSCAN, rithmic strategies employed in various processes: calculating
present challenges in terms of accommodating spatial con- distances using the Haversine formula, determining centrality
straints, managing computational complexity, and providing and generating links, constructing bipartite and unipartite
actionable insights for node insertions. Whereas non-spatial distancematrices,classifyingevents,initializingSTROOBnet,
methodslikestatisticalmodelackthecapacitytotrulyharness andclusteringdisconnectedevents.Eachsubsectionintroduces
the spatial-temporal patterns within the data, often leading to relevant notations, explains the method through mathematical
suboptimal strategies for node insertions. expressions,andoutlinestheproceduralstepsoftherespective
Therefore, our approach hinges on creating a bipartite algorithm.
distance matrix to systematically evaluate the spatial rela-
tionships between observer nodes and events. Following this,
clustering algorithms are implemented to group disconnected
points, providing an understanding of the spatial dimensions BIPARTITEDISTANCEMATRIX
of our data. This methodology evaluates the existing observer
Constructing a bipartite distance matrix is pivotal in cap-
networkanddeliversstrategic,data-driveninsightstoenhance
turing the spatial relationships between observer nodes and
future network configurations.
events.
• Distance Matrix Calculation: Utilizing geographical Notations:
data to calculate distances between observer nodes and
• O: Matrix representing observer nodes with coordinates
events, with particular attention to ensuring all possible
as its elements, where O denotes the j-th coordinate of
ij
combinations of nodes and events are considered, is
the i-th observer. Example:
paramount to understanding spatial relationships within
the network.  x y 
1 1
• Effectiveness Evaluation: The centrality and effective- O =x 2 y 2
ness of observer nodes are crucial metrics that inform us  . . 
. .
. .
about the current status of the network in terms of its
observational capabilities.
• E: Matrix representing observable events with coordi-
• Event Classification: Classifying events into observed nates as its elements, where E denotes the j-th coordi-
ij
and unobserved categories helps in understanding the
nate of the i-th event. Example:
coverage of the observer network and identifying poten-
tial areas of improvement.  x′ y′
1 1
• Clustering of Unobserved Points: Identifying clusters E =x′ 2 y 2′ 
amongstunobservedpointsguidesthestrategicplacement  . . . . 
. .
of new observer nodes, ensuring they are positioned
where they can maximize their observational impact. • DM: Distance Matrix, where DM ij represents the dis-
tance between the i-th observer and the j-th event.
D. Challenges Assuming there are m observers and n events, DM will
• Computational Complexity: Given the potentially large be an m×n matrix. Example:
number of observer nodes and events, computational  
d d ... d
complexity is a pertinent challenge, especially when cal- 11 12 1n
c cu lula stt ein rig ngth ae lgb oi rp ia thrt mite s.distance matrix and implementing DM = 

d 2 .
.
.1 d 2 .
.
.2 . .. ..
.
d 2 .
.
.n 
 
• SpatialConstraints:Ensuringthattheplacementofnew d m1 d m2 ... d mn
observer nodes adheres to geographical and logistical
where each element d represents the distance between
constraints while still maximizing their observational ij
the coordinates of the i-th observer and the j-th event.
impact. The range of each observer node is a major
consideration for any event clustering. Methodology:1) Haversine Distance Calculation: Compute the Haversine 1) NumberofObservationsCalculation:Calculatethenum-
distances for all combinations of observer-event pairs, ber of observations for each event.
populating the distance matrix DM. Specifically,
|O|
(cid:88)
num (e)= I(DM ≤r)∀e∈E
DM =haversine(O ,E ) observations ie
ij i j
i=1
where O i and E j are the coordinates of the i-th observer where I istheindicator functionthatis1if thecondition
and j-th event. The Haversine formula calculates the inside is true and 0 otherwise, and |O| is the number of
shortest distance between two points on the surface of observers.
asphere,giventheirlatitudeandlongitude.Theresulting 2) DetermineObservedandUnobservedPoints:Classifythe
distances in DM are given in kilometers, assuming the eventsintoobservedandunobservedbasedonthenumber
Earth’s mean radius to be 6371 km. [15], [16] of observations.
2) CentralityCalculation:Thecentralityofeachobserveris OE ={e|num (e)>0, e∈E}
observations
calculatedasthecountofeventswithinaspecifiedradius
UE ={e|num (e)=0, e∈E}
observations
r. This is mathematically expressed as:
Algorithm Overview:
(cid:88)
Centrality(o)= I(DM ≤r)
oe 1) Calculate the number of observations for each event.
e∈E 2) Classify events into observed (set OE) and unobserved
Inthisequation,Irepresentstheindicatorfunction,which (set UE).
is defined as:
(cid:40) INITIALIZESTROOBNET
1 if P is true
I(P)=
0 if P is false Notations:
• O and E: Sets of RTCC (observers) and CFS (events).
Hence, I(DM oe ≤ r) is 1 if the distance between • L: Set of Links between observers and events.
observer o and event e, denoted as DM oe, is less than or • r: Radius threshold, consistent with prior sections.
equal to r, and 0 otherwise. The centrality thus provides • OE andUE:Setsofindicesofobservedandunobserved
a count of events that are within the radius r of each events, maintaining consistency with the ”Event Classi-
observer. fier” section.
3) Link Generation: Identify and create links between ob- Methodology:
servers and observables that are within radius r of each 1) Bipartite Distance Calculation: Compute the distances
other, forming a set L of pairs (o,e) such that among RTCC nodes and CFS nodes.
L={(o,e)|DM oe ≤r} DM,L=Bipartite Distance Matrix(O,E,r)
where each pair represents a link connecting observer o 2) Determine Observed and Unobserved Points: Identify
and event e in the bipartite graph, constrained by the which events are observed and which are not.
specified radius.
OE,UE =Event Classifier(E,DM,r)
Algorithm Overview:
1) ComputeHaversineDistancesforallobserver-eventpairs. Algorithm Overview:
2) Determine centrality of each observer based on events 1) Calculate distances among RTCC nodes and CFS nodes.
within radius r. 2) Determine which events are observed and unobserved.
3) Generate links between observers and events within ra-
dius r.
UNIPARTITEDISTANCEMATRIX
Notations:
EVENTCLASSIFIER
• UE = {e 1,e 2,...,e m} be a set of unobserved event
Notations:
nodes.
• E:Matrixrepresentingevents,asdefinedinthe”Bipartite • DM is a distance matrix, where DM ij represents the
Distance Matrix” section. distance between nodes e and e .
i j
• DM: Distance Matrix, as defined in the ”Bipartite Dis- • r is a radius threshold.
tance Matrix” section.
Methodology:
• r: Radius threshold.
1) Point Extraction: Extract the longitudinal (x) and latitu-
• OE andUE:Setsofindicesofobservedandunobserved
dinal (y) coordinates of unobserved nodes.
events.
Methodology: P ={x ,x ,...,x }, P ={y ,y ,...,y }
x 1 2 m y 1 2 m2) Combination of Nodes: Compute all possible combina- 2) Form clusters based on node proximity.
tions of nodes from UE. 3) Sort clusters by density.
4) Identify maximal dense clusters.
C ={(e ,e ):e ,e ∈UE,i̸=j}
i j i j 5) Select top n clusters.
3) Haversine Distance Calculation: Compute the haversine
distanceforeachcombinationofnodesinC andconstruct
ADDNEWOBSERVERS
the distance matrix DM. Notations:
• UE: Set of unobserved event nodes.
DM =haversine(e ,e ) ∀(e ,e )∈C
ij i j i j • r: Radius threshold, consistent with prior sections.
where haversine(e ,e ) calculates the haversine distance • n: Number of clusters to identify.
i j
between nodes e and e . • DM: Distance matrix among unobserved nodes.
i j
4) Distance Matrix Construction: Create a matrix, DM, of • C: Set representing the densest clusters.
size m×m, where each element, DM , represents the Methodology and Algorithm Overview:
ij
haversine distance between nodes e and e . 1) Unobserved Distances: Compute the pairwise distances
i j
Algorithm Overview: among all unobserved event nodes within a given radius
r and represent them in a distance matrix DM.
1) Extract coordinates of unobserved nodes.
2) Compute node combinations. DM =unipartite distance matrix(UE,r)
3) Calculate haversine distance for all node pairs.
where unipartite distance matrix(·,·) is a function that
4) Construct the distance matrix.
returns a distance matrix, calculating the pairwise dis-
tances between all points in set UE within radius r.
CLUSTERDISCONNECTEDEVENTS
2) RetrieveDensestClusters:Identifythendensestclusters
Notations: among the unobserved event nodes UE, utilizing the
• UE = {e 1,e 2,...,e m} be a set of unobserved event precomputed distance matrix DM and within the radius
nodes. r.
• DM is a distance matrix, where DM ij represents the C =cluster disconnected(DM,UE,r,n)
distance between nodes e and e .
i j where cluster disconnected(·,·,·,·) is a function that
• r is a radius threshold. returnsthendensestclustersfromtheunobservedevents
• n is the desired number of densest clusters to return. nodes UE, using the precomputed distance matrix DM
Methodology:
and within radius r.
1) Identifying Nodes within Radius: Determine the nodes
VI. DATASETS
within radius r of each other using the distance matrix
DM. ThisresearchrevolvesaroundconstructingaSTROOBnetto
modelrelationshipsbetweeneventsfromCFSthatareviolent,
N(i)={j :DM ≤r}
ij
and the location of crime cameras in New Orleans. This
2) Creating Clusters: Form clusters, C, based on the prox- STROOBnet comprises observer nodes (symbolizing crime
imity defined above. cameras) and observable nodes (representing violent event
locations). Edges in the STROOBnet are created by pairing
C ={e :j ∈N(i)}
i j eachCFSeventnodewiththeclosestcrimecameranodebased
3) Sorting Clusters by Density: Sort clusters based on their on spatial range.
size (density) in ascending order.
A. Observer Node Set
C =sort(C,key=|C |) The observer node set comprises RTCC camera nodes
sorted i
utilized to monitor events in New Orleans. These nodes are
4) Identifying Densest Clusters: Identify the densest clus-
either stationary or discretely mobile, meaning their location
ters, ensuring that a denser cluster does not contain the
might instantaneously change between snapshots. Each ob-
centroid of a less dense cluster. Let D be the set of
C server node is characterized by the following properties:
densest clusters:
• id: Unique identifier number for each node.
D C ={C i ∈C sorted :C i is maximal dense} • membership:IndicatesifthenodeisaCity-ownedasset
or a Private-owned asset.
where ”maximal dense” means that there is no denser
• data source: Entity that operates the RTCC camera.
cluster that contains the centroid of C .
i • mobility: Specifies if the node is stationary or mobile.
5) Selecting Top n Clusters: Select the top n clusters from
• address:ProvidesthestreetaddressoftheRTCCcamera.
D .
C • geolocation: Indicates the latitude and longitude of the
Algorithm Overview: platform.
1) Identify nodes within radius r. • x,y: Represents the location in EPSG: 3452.B. Observable Node Set
CFS events, reported to the NOPD, serve as the observable
nodes in the STROOBnet, indicating violent event locations.
These events undergo specific filtering based on type and
location, ensuring that the observable nodes represent violent
events such as homicides, non-fatal shootings, armed rob-
beries,andaggravatedassaultswithinthetargetedregion.Each
CFS event node possesses several properties:
• Identification:Eacheventisuniquelyidentifiedusingthe
“NOPD Item”.
• Nature of Crime: The “Type” and “Type Text” denote
the nature of the CFS event.
• Geospatial Information: The event’s location is deter-
mined by “MapX” and “MapY” coordinates, supple-
mented by the “Geolocation” (latitude and longitude),
“Block Address”, “Zip”, and “Police District”.
Fig.1. Histogramofeffectivenessscores(nodedegrees)forobservernodes
• Temporal Information: Key timestamps associated with in the initial STROOBnet, demonstrating a power-law distribution. The x-
the event include “Time Create” (creation time in CAD), axisrepresentsthedegreecount,signifyingtheabilityofanobservernodeto
detect events within a specified radius, while the y-axis shows the count of
“Time Dispatch” (NOPD dispatch time), “Time Arrive”
nodesforeachdegree.
(NOPDarrivaltime),and“TimeClosed”(closuretimein
CAD).
• Priority: Events are prioritized as “Priority” and “Initial
Priority”, ranging from 3 (highest) to 0 (none).
• Disposition: The outcome or status of the event is cap-
tured by “Disposition” and its descriptive counterpart,
“DispositionText”.
• Location Details: The event’s specific location within
the Parish is designated by “Beat”, which indicates the
district, zone, and subzone.
VII. EXPERIMENTALSETUP
Reproducibility and accessibility are paramount in our ex-
perimental approach. Thus, experiments were conducted on
Google Colaboratory, chosen for its combination of repro-
ducibility—via easily shareable, browser-based Python note-
books—and computational robustness through GPU access,
particularly employing a Tesla T4 GPU to leverage CUDA-
Fig. 2. Heatmap of observer node effectiveness scores in the initial
compliant libraries. The software environment, anchored in
STROOBnet.Nodespatiallocationsareplottedwithcolorintensityindicating
Ubuntu 20.04 LTS and Python 3.10, utilized modules such degree centrality and a gradient from blue (low effectiveness) to red (high
as cuDF, Dask cuDF, cuML, cuGraph, cuSpatial, and CuPy effectiveness).
to ensure computations were not only GPU-optimized but
also efficient. The availability of code and results is ensured
B. Proposed Method Results: Proximal Recurrence
through the platform, promoting transparent and repeatable
research practices. The integration of 100 new nodes into the STROOBnet
usingtheproximalrecurrencestrategy(withaspecifiedradius
VIII. RESULTS
of0.2)producedbothvisualandquantitativeoutcomes,which
The insights from the research, visualized through graphs, are depicted and summarized in the following figures.
heatmaps, and network diagrams, delineate the foundational
attributes and effectiveness of the STROOBnet, providing a C. Comparison with Existing Methods
baseline for analyses and comparison with state-of-the-art
approaches. This subsection presents the results of other techniques like
k-means, mode, average, binning, and DBSCAN.
A. Initial STROOBnet
The initial state of the STROOBnet, before any methods 1) DBScan: TheDBScanclusteringapproachanditsresul-
wereapplied,ischaracterizedusingvariousvisualizationtech- tant effectiveness are visualized and analyzed below through
niques as described below. various graphical representations and histograms.Fig.5. Histogramofnodedegreedistributionforthenewnodesintroduced
through the proximal recurrence strategy. Axes represent degree and node
count,respectively.
Fig. 3. Spatial distribution and observational coverage of events in the
initialSTROOBnet.Eventlocationsarecolor-codedtoindicateobservational
coverage:deepgreenformultipleobservers,greenforasingleobserver,varied
colorsfornear-observers,andredforunobservedevents.
Fig.6. AggregatenodedegreedistributionoftheupdatedSTROOBnet,with
originalnodesinblueandnewnodessuperimposedinred.
Fig. 4. STROOBnet visualization post proximal recurrence integration.
New nodes are represented in blue, directly observed nodes in green, and
unobservednodesinred,withedgesindicatingobservationalrelationships.
2) K-means: The effectiveness of the K-means clustering
method is illustrated through a series of visualizations and
histograms.
3) Mode Clustering: The mode clustering technique is
demonstrated using various graphical representations and data
distribution plots.
IX. DISCUSSION Fig.7. CentroidsandassociatedeventsdeterminedusingDBSCANclustering
on unwitnessed events within the STROOBnet. Centroids (blue), clustered
A. Evaluating Effectiveness nodes(green),andunclusterednodes(red)aredepicted,withedgesconnecting
centroidsandrespectivenodes.
1) DegreeCentrality: Utilizingabipartitebehavior,thenet-
work connects observers to observable events through edges.
The centrality of a node quantifies its efficacy in witnessing into the network’s capability to capture events through its
events. The distribution of node degrees provides insights observers.Fig. 8. Node insertions based on DBSCAN clustering, emphasizing new Fig.11. VisualizationusingK-meansclusteringonunwitnessedeventswithin
DBSCANnodesandfilteringouteventsandnodesnotwithinthecentroid’s theSTROOBnet.Centroidsareinblue,clusterednodesingreen,andtheyare
spatialrange. interconnectedwithedges.
Fig. 9. Distribution of node degrees for new nodes in the STROOBnet via
theDBScanalgorithm,withaxesrepresentingdegreeandnodequantity.
Fig.12. Centroid-basednodeinsertionsusingK-meansclustering,focusing
onnewnodeswhilefilteringthoseoutofthespatialrangeofthecentroid.
Fig. 10. Overall node degree distribution in the updated STROOBnet,
showcasingtheoriginaldistribution(blue)andthenewDBScannodes(red).
2) Desired Transformations in Degree Centrality Distribu- Fig.13. Histogramshowingthedistributionofnodedegreesfornodesadded
throughtheK-meansmethod.
tions: The network initially exhibits a power-law distribution
in degree centrality, where few nodes are highly effective and
mostarenot.AnobjectiveistoshiftthistoaskewedGaussianFig.14. Combinedhistogramindicatingthenodedegreedistributioninthe Fig.17. HistogramofnodedegreedistributionintheSTROOBnet,illustrating
updated STROOBnet, distinguishing between original (blue) and K-means bothoriginal(blue)andStandardModeaddednodes(red).
addednodes(red).
as a metric for evaluating this shift. A rightward histogram
shift,visibleintheresults,indicatesenhancednetworkperfor-
mance due to the inclusion of new nodes with higher degree
centrality. This transformation and the resulting outcomes set
a benchmark for evaluating different clustering strategies in
subsequent sections.
B. Comparative Analysis of Clustering Approaches
1) Limitations of Conventional Clustering Strategies: Con-
ventionalstrategieslikek-meansandDBSCANmanifestlimi-
tationsincontrollingclusterdiameterandcentroidassignment,
which can obscure genuine data patterns and hinder the
transitionfromapower-lawtoaskewedGaussiandistribution
upon the addition of new nodes. The proximal recurrence
approach offers improved control and contextually relevant
centroid assignment, addressing these issues.
2) The Challenge of Centroid Averaging: In domains such
Fig. 15. STROOBnet utilizing the Mode-adjusted variant of K-means as crime analysis, centroid averaging, or calculating a point
approach, featuring new nodes (blue), directly observed nodes (green), and
that represents the mean position of all cluster points, can
remainingunobservednodes(red).
misrepresent actual incident locations in spatially significant
contexts. Traditional centroid assignment can produce mis-
placedcentroids,leadingtoinaccurateanalysesandstrategies,
such as incorrectly identifying crime hot spots. The proximal
recurrence method ensures accurate data representation by
managing centroid assignments and controlling cluster diame-
ters,particularlyincontextsrequiringprecisespatialdatapoint
accuracy.
C. Inadequacies of Mode-Based Analysis
1) Neglect of Spatial Clustering: Mode-based analysis ef-
fectively identifies high-recurrence points but neglects the
spatial clustering of nearby values. This oversight can miss
opportunities to place observer nodes in locations where a
cluster of neighboring points within a specific range might
Fig.16. Histogramindicatingthedistributionofnodedegreesfornodesadded
viatheStandardModestrategy. yieldhighereffectivenessthanasingularhigh-incidencepoint.
2) Lack of Comprehensive Insights: While mode-based
analysis hones in on recurrence, it disregards insights from
distribution by introducing new nodes, thereby redistributing consideringspatialandneighboringdata,identifyinglocations
node effectiveness and enhancing network performance. The withhighincidentsbutfailingtodefineaclustershape.Conse-
combined histogram of original and new node centrality acts quently, it misses locations near points of interest, potentiallyomitting optimal node identification. The approach discussed was to understand the implications of different strategies on
counters some of these deficiencies by incorporating both the network’s performance, particularly regarding the efficacy
recurrence and proximate incidents into its analysis, offering of observer nodes in event detection. From an initial power-
a more balanced view. law distribution in node degree centrality, the study sought
strategies that could enhance uniformity and event detection
D. Advantages of Proximal Recurrence Approach
across STROOBnet.
1) Harmonizing Recurrence and Spatiality: The proximal
A. Key Takeaways
recurrence approach integrates incident recurrence and spatial
1) Degree Centrality Transformation: By integrating new
analysis, ensuring a comprehensive data perspective. It does
nodes through various strategies, node degree centrality
not only identify high-incident locations but also accounts for
evolved towards a skewed Gaussian distribution, signify-
spatial contexts and neighboring events, safeguarding against
inganenhancednetwork-wideeventdetectioncapability.
isolated data interpretation and enhancing the analysis’s com-
2) Effectiveness of Clustering Techniques: Traditional
prehensiveness.
methods like k-means had limitations, while the prox-
2) A Middle Ground: Specificity vs. Generalization: The
imal recurrence approach emerged superior in centroid
approach balances specificity and generalization by identify-
assignment and optimizing cluster dimensions.
ing incident points and considering their spatial contexts. It
3) Mode-Based Insights: The standard mode approach
prevents the dilution of specific data points in generalized
was proficient in pinpointing high-recurrence points but
clustering and avoids omitting relevant neighboring data in
lackedinspatialclusteringcomprehension,oftenmissing
specificpointanalysis.Ittherebyensurestheanalysisremains
optimal node placements.
accurate and prevents omission of pivotal data points.
4) Excellence of Proximal Recurrence: This approach
3) Defined Constraints for Enhanced Performance: The
effectively identified high-incident areas and emphasized
integration of defined constraints, such as a predetermined
the spatial context, ensuring comprehensive and relevant
cluster diameter, optimizes performance and ensures contex-
data analysis.
tually relevant insights. By adhering to predefined limits, the
approach maintains a balanced analysis, ensuring insights are B. Implications
precise and applicable to real-world scenarios.
Theresultsemphasizetheimportanceofaholisticclustering
strategy.Thisstrategyshoulddiscernoptimalnodeplacements,
E. Comparison with Histogram Approach
acknowledge spatial dynamics, and represent data with preci-
1) Hyperparameter Tuning and Large Datasets: His-
sion, especially in fields demanding high spatial accuracy.
tograms require tuning of the bin number, a task that can
be particularly intricate for large datasets due to its impact REFERENCES
on analysis and result quality. Conversely, the proximal recur- [1] J.Simerman,J.Adelson,Times-Picayune/NewOrleansAdvocate,Feb.
rence approach demands no hyperparameter tuning, providing 12,2022.[Online].Available:http://www.nola.com.
[2] City of New Orleans, ”Calls for Service 2022”, 2022. [Online].
straightforward applicability without iterative refinement.
Available: https://data.nola.gov/Public-Safety-and-Preparedness/Calls-
2) Accuracy, Precision, and Flexibility: Histograms may for-Service-2022/nci8-thrr/data.
lose fine data structures by aggregating data into bins. In [3] Genetec Inc, “NOHSEP,” 2019. [Online]. Available:
https://www.genetec.com/binaries/content/assets/genetec/case-
contrast, the proximal recurrence approach evaluates points
studies/en-genetec-new-orleans-real-time-crime-center-case-study.pdf.
on actual distances, capturing accurate clustering patterns and [4] RAPIDS,2023.[Online].Available:https://rapids.ai.
enabling identification of non-rectangular clusters, thereby [5] M.I.Stein,C.Sinders,W.Yoe,TheLensNewOrleans,Oct.21,2021.
[Online].Available:https://surveillance.thelensnola.org/.
providing a more realistic data pattern representation.
[6] E.Schubertetal.,ACMTrans.DatabaseSyst.,42(3),Article19,2017.
3) AdaptabilityandRelationshipConsideration: Whilehis- [7] D.Birant,A.Kut,Data&Knowl.Eng.,60(1),208–221,2007.
tograms use uniform bin sizes, potentially misrepresenting [8] O. Dorabiala et al., Dept. Appl. Math. & Elect. Comp. Eng., Univ.
Washington,AWSCentralEcon.Team,Seattle,WA,Nov.11,2022.
datasets with varied density regions, the proximal recurrence
[9] B.Wu,2021IEEECSAIEE,SC,USA,pp.55-59.
approachadaptstodifferentdensitiesbyevaluatingproximity, [10] T.Hastieetal.,”TheElementsofStatisticalLearning”,Springer,2001.
not a fixed grid, and utilizes explicit pairwise distances, [11] A.S. Asratian et al., ”Bipartite Graphs and their Apps.”, Cambridge
TractsMath.,131,CambridgeUniv.Press,1998.
ensuring direct measurement of point relationships.
[12] V. Nicosia et al., ”Graph Metrics for Temporal Networks”, Springer,
4) Customizability and Consistency: While histograms of- 2013,pp.15–40.
fer bin size as the primary customizable parameter, the proxi- [13] T. Holmberg et al., 2nd Workshop Knowl. Graphs & Big Data, 2022
IEEEConf.BigData,OnlineWorkshop,Dec.2022.
malrecurrenceapproachprovidesparameters,suchasdistance
[14] P.Holme,J.Saramaki,Phys.Rep.,519(3),97-125,Oct.2012.
thresholds,fortuningbasedondataandproblemspecifics,and [15] M. Chung et al., ”GIDS - Succeeding with Object Databases”, John
ensures consistent results, unaffected by alignment considera- Wiley&Sons,NewYork,2001.
[16] Wilson,R.,Cobb,M.,McCreedy,F.,Ladner,R.,Olivier,D.,Lovitt,T.,
tions. Shaw, K., Petry, F., Abdelguerfi, M., Geographical Data Interchange
UsingXML-EnabledTechnologywithintheGIDBSystem,in:XMLData
X. CONCLUSION Management,AkmalB.Chaudhri,ed.,JohnWiley&Sons,2003.
[17] Ladner, R., Shaw, K., Abdelguerfi, M., Mining Spatio-Temporal Infor-
ThisstudydelvedintotheintricaciesofSTROOBnet,focus-
mationSystems,editedmanuscript,KluwerAcademicPublishers,ISBN
ing on node insertions and clustering methodologies. The aim #1-4020-7170-1,August2002.