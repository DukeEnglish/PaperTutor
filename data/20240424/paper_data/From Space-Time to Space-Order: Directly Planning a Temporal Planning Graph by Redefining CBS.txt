From Space-Time to Space-Order: Directly Planning a Temporal Planning Graph
by Redefining CBS
YuWu,RishiVeerapaneni,JiaoyangLi,MaximLikhachev
CarnegieMellonUniversity
{yuwu3,rveerapa}@andrew.cmu.edu,{jiaoyanl,maxim}@cs.cmu.edu
Abstract
The majority of multi-agent path finding (MAPF) meth-
ods compute collision-free space-time paths which require
agents to be at a specific location at a specific discretized
timestep.However,executingthesespace-timepathsdirectly
on robotic systems is infeasible due to real-time execution
differences(e.g.delays)whichcanleadtocollisions.Tocom-
batthis,currentmethodstranslatethespace-timepathsinto
a temporal plan graph (TPG) that only requires that agents
observe the order in which they navigate through locations
wheretheirpathscross.However,planningspace-timepaths
and then post-processing them into a TPG does not reduce
Figure1:TPGsontherandom-32-32map.Eachrowcorre-
therequiredagent-to-agentcoordination,whichisfixedonce
spondstoanagent’spathwitheachbluedotbeingalocation
thespace-timepathsarecomputed.Tothatend,wepropose
onthepath.RedarrowsareType-2TPGedgesbetweendif-
anovelalgorithmSpace-OrderCBSthatcandirectlyplana
TPG and explicitly minimize coordination. Our main theo- ferentagents,indicatingcoordinationandpotentialwaiting.
reticalinsightisournovelperspectiveonviewingaTPGas Our method significantly decreases the number of Type-2
asetofspace-visitationorderpathswhereagentsvisitloca- edges in the resultant TPG and is more robust to scenarios
tions in relative orders (e.g. 1st vs 2nd) as opposed to spe- withdelays.Note“real”TPGsfromactualMAPFplanshave
cifictimesteps.Weredefineuniqueconflictsandconstraints neverbeenvisualizedbefore.
for adapting CBS for space-order planning. We experimen-
tallyvalidatehowSpace-OrderCBScanreturnTPGswhich
the same “temporal precedence ordering” (i.e. relative se-
significantly reduce coordination, thus subsequently reduc-
ingtheamountofagent-agentcommunicationandleadingto quence)astheirspace-timepaths.Forexample,ifthereare3
morerobustnesstodelaysduringexecution. agentsA,B,Cwhichhavespace-timepathsthatcrosssome
locationsattimesteps32,14,35respectively,weremovethe
time dependency and just require them to visit s in the rel-
1 Introduction
ativeorderB,A,C.Real-worldagentscannowtravelmore
Multi-agent systems were originally constrained to com- robust to delays or faster velocities, and only need to wait
puter games and simulations. However, with the rise of and coordinate at these overlapped locations. The current
cheap and scalable robotics, there are increasing numbers pipeline to plan for a real-world multi-agent planning sys-
of real-world multi-agent systems, in particular in drone temisthentoplanspace-timepathsandthenpost-processit
swarms,roboticwarehouses,andsearchandrescuesystems. intoaTPG,whichthereal-worldrobotscanflexiblyfollow.
Multi-AgentPathFinding(MAPF)triestofindcollision- However,thistwo-stepprocessmeansthatwecannotrea-
freetrajectoriesthatusuallyminimizethenettraveltimeof son about the coordination required in the TPG that the
alltheagents.Typically,MAPFmethodsfind“space-time” agents follow, as once the space-time paths are computed,
pathswhichrequireagentstobeatspecificlocationsatspe- theTPGpost-processingisfixed.Priorwork(Wagner,Veer-
cifictimesteps.Additionally,thesemethodstypicallydonot apaneni,andLikhachev2022)showsthattheindependently
reason about velocity or kinematic constraints and require computed space-time paths can have high congestion and
theagentstotraverseexactlyoneuniteverytimestep.Thus, result in TPGs that require large coordination. Instead, if
these space-time paths are impossible to directly follow on we could directly plan a TPG that agents could follow,
realsystemsanddonotallowagentstomoveflexibly. we could directly reason about and minimize the amount
The current state-of-the-art method to allow agents to of coordination that the agents require. Reducing coordi-
flexibly follow these space-time paths is to convert these nationminimizestheamountofinter-agentcommunication
space-time paths to a temporal plan graph (TPG) (Ho¨nig needed which is a constraint in real-world multi-agent sys-
et al. 2016). The main idea is that agents can travel at ar- tems(Gielis,Shankar,andProrok2022)andcanpotentially
bitraryspeedsaslongastheyvisitoverlappinglocationsin improverobustnesstodelays.
4202
rpA
32
]AM.sc[
1v73151.4042:viXraOurcoretheoreticalinsightisthatwecanviewanagent’s space-time paths (Atzmon et al. 2018), but are at the end
path in a TPG as a set of spaces with relative visitation or- of the day still planning space-time paths. (Okumura et al.
ders (e.g. visiting s first vs visiting s second). A TPG then 2022a) introduces a new variant of MAPF problem where
consistsofasetofthesespace-visitationorderpathswhich agents must find paths such that they can be traversed re-
satisfycertaincriteria.Armedwiththisknowledge,wecan gardlessofhowagentsarescheduled.Thisisover-restrictive
thenadaptthegeneralConflict-BasedSearch(CBS)frame- inpracticeasitassumesagentscannotcoordinateatallwith
work to create Space-Order CBS by defining unique con- each other, e.g. this problem setting will never allow two
straints.SO-CBScancomputespace-orderpathsthatsatisfy agentstocrossacorridoratdifferenttimestepsandwillfail
thesecriteriaandproducesavalidTPGdirectly. ifthisisnecessary.
Themainpotentialpracticalbenefitofthismethodisthat The closest method which inspired our work is Space-
we now have the ability to plan paths that explicitly rea- Level Conflict-Based Search (SL-CBS) (Wagner, Veerapa-
sonaboutcoordinatingwithotheragents.Specifically,when neni,andLikhachev2022).SL-CBSplansin“space-levels”
planningasingleagent’spathintheTPG,weknowexactly andfrom(s,l)canchoosetoremaininthesamelevel(s′,l)
howmanyagentswearewaitingforateachlocation.There- orincreaseonelevelto(s,l+1).Withineachlevell,agents
fore,insteadofpossiblywaitingformanyagentsataloca- have collision-free path segments that are independent of
tion, we can find a different path that reduces the number eachotherandcanmovearbitrarilyfastorslowwithoutco-
of agents we need to wait for. This allows us to plan paths ordination.Thusagentsonlyrequirecoordinatingattransi-
whilesimultaneouslyminimizingcoordinationwhichisnot tions between different levels. However, SL-CBS does not
possible when planning in space-time and post-processing reason about the number of agents at each coordination in-
afterward.Succinctly,ourmaincontributionsare: stance and instead requires each agent to wait on all other
agents.ByplanningaTPG,wecanreasonaboutwhichspe-
1. Reinterpreting a TPG in a new perspective as a set of
cificagentstowaitonratherthanwaitingonallofthem.
space-orderpathsthatsatisfycertaincriteria.
2. DesigningSpace-OrderCBS,whichadaptstheConflict- 3 Preliminaries
BasedSearchframeworkanddefinesuniqueconstraints
whilemaintainingcompleteness,todirectlyplanaTPG. 3.1 Space-TimeMAPFPlan
3. Reasoningaboutper-agentcoordinationduringtheplan- InaMAPFscenariowithatotalofK agents,aspace-time
ning process, and demonstrating how this can produce MAPF plan is a set of K paths {P |j = 0,1,...,K −1}.
j
robustTPGswithsignificantlylesscoordination. EachpathP foragentj isdefinedasanorderedsequence
j
of space-time vertex P = [v0,v1,...,vτ,...,vT], where τ
j j j j j
2 RelatedWork istheindexofvertexvτ inthepathsequence,T isthelast
j
indexinthepath.Eachvertexcanberepresentedasaspace-
There are many MAPF works that plan space-time paths
time tuple (s,t), where s denotes the space (i.e. location)
such as EECBS (Li, Ruml, and Koenig 2021), BCP (Lam
and t denotes the time step. In the space-time framework,
etal.2022),andMAPF-LNS2(Lietal.2022).Thesemeth-
agentsτ =t.Weexplicitlydiscriminatebetweenpathindex
odsallassumeagentstravelatunitvelocitiesandduringexe-
and time for reasons that will be clear when we introduce
cutionexactlyfollowtheirspace-timepaths.Itisinitiallyun-
space-orderpathsinSection4.1.Theverticesinapathfol-
clearhowtoadaptthesespace-timepathstobeusedbyreal
low the transition rule that given a vertex vτ = (s,t), the
robotswhichcanincurexecutionchanges/delaysinpractice j
(e.g.arobottemporarilybreakingdown). next vertex is vτ+1 = (s′,t + 1), where s′ can either be
j
MAPF-POST(Ho¨nigetal.2016)solvesthisproblemby a neighboring location of s or s itself. Such a space-time
introducing the concept of a temporal plan graph (TPG). MAPF plan is a valid solution to a MAPF scenario if it is
At its core, given a set of space-time paths, MAPF-POST collision-freeandallpathsstartandendatdesiredlocations.
constructsaTPGbyremovingthetemporalcomponentand
justmaintainingtherelativeprecedenceorder(i.e.sequence) 3.2 Edge-PerspectiveTPG
of agents visiting overlapping locations. During execution,
Ho¨nig et al. (2016) describes how to construct a TPG
agents are allowed to run arbitrarily fast or slow as long as
with“Type-1”and“Type-2”edgesgivenavalidspace-time
theymaintaintheirrelativeorderasdemonstratedinFigure
MAPFplandefinedabove.Conceptually,aTPGisadepen-
2.Ourkeycontributionisshowingthatinsteadofplanning
dencygraphthatdefinesrelativesequenceofactionsagents
space-time paths and post-processing to a TPG, we can di-
mustfollow.Eachvertexvτ definestheeventofagentjvis-
rectlyplanaTPGbyviewingitfromauniqueperspective. j
itingitsτth-indexlocations(j,τ).Eachedgedenotesade-
Explicitly reasoning about possible coordination in
pendency, e.g. the edge v2 → v3 represents how agent j
MAPF has generally been underexplored. MCP (Ma, Ku- j j
mar, and Koenig 2016) post-processes a given TPG to re- mustfirstvisitits2nd locationbeforeits3rd one.“Type-1”
duce communication requirements. Concurrent work intro- edgesaredefinedalonganagent’spathrepresentinghowit
duces a Bidirectional TPG (Su, Veerapaneni, and Li 2024) musttravelitspathsequentially.Thus,eachagenthasacor-
whichalsopost-processesagivenTPGtoreducecommuni- respondingsetofverticesandType-1edgesbasedonitspath
cationrequirements.Theseworksareorthogonalofourob- withwaitsremoved,asdepictedbytheblueandredrowsin
jectiveoftryingtodirectlycomputeaTPGwithlesscoordi- Figure2(c).
nationinsteadofpost-processingthem.Afewworksexplic- Thesecondrelativesequenceofactionsoccurswhentwo
itlyreasonaboutKtimestepdelaysbyplanning“K-Robust” agentsj ̸= k traversethesamelocationsatdifferenttimesFigure2:GivenaMAPFproblemwithtwoagents(a),existingmethodscomputenon-conflictingspace-timepathsthatrequire
agents to be at a specific location at a specific time (b). (a) shows how space-time paths may require agents to wait (e.g. the
blueagentwaitingat(4,2)),andhavespatialoverlapsintheirpaths(denotedbythepurpleregion).Toallowagentstohandle
delays or move at arbitrary velocities, the output space-time paths can be post-processed into a Temporal Plan Graph which
removeswaitsanddefinesaprecedenceorder(c).TheTPGconsistsofverticesst representingagentjatlocationsattimestep
j
t, and edges denoting dependencies. Cross edges (gray) in the TPG from st → st′, define possible coordination instances
j k
whereagentkneedstowaitforagentjtotraverselocationsfirst.Theseoccuratoverlappingregions(e.g.purplein(a))which
requirecoordinationtoavoidcollisionsifwewantagentstomoveindependentlyandnottimestepaligned.Forexamplein(c),
(3,2)2 → (3,2)3 means that agent 1 needs to wait for agent 2 to leave (3,2) before it can enter. In this paper, we show that
2 1
byredefiningverticestospace-visitationorder(s,r)verticesrepresentingtherth agenttovisitlocations,aTPGinMAPFis
equivalenttotheagentshavingasetofnon-interestingspace-visitationorderpaths(d).Thisequivalenceallowsustodirectly
planaTPG.
t < t .Theyadda“Type-2”edgefrom(s,t ) → (s,t ), toindextheagent,andsuperscriptsofr todenotedifferent
j k j k
denotinghowthesecondagentkmustwaitforthefirstagent locations.
j tocrosssfirst. A vertex-perspective TPG is then a set of space-order
Note that Type-2 edges disallow following. If the first paths {P } that satisfy specific criteria. Each path is a se-
j
ta hg een st eck ol ne dav ae gs el no tc jati co an ns ona lt yti em ne test rep loct e ax tic od nu srin stg are tx ine gcu ft ri oo mn, quenceofspace-orderverticesP j = [v j0,v j1,...,v jτ,...,v jT],
where vτ = (s,r). The vertices in a path follow the tran-
t +1. Figure 2(c) shows two examples of these Type-2 j
exc sition that given a vertex vτ = (s,r), the next vertex is
edges which define where agent-agent coordination is re- j
quired to prevent collisions. Agents maintaining the TPG vτ+1 = (s′,r′), where s′ must be a neighboring location
j
dependencies are guaranteed to reach their targets without ofs,r′couldbegreaterthan,lessthan,orequaltor.
deadlockorcollision. Akeydifferencebetweenspace-orderpathscomparedto
space-time paths is the transition rules. In the space-time
4 Space-OrderPerspectiveofaTPG case,thetimestepofverticesincreasesataconstantrate,im-
This sectionformally shows how aTPG can be interpreted plyingthattheorderthatagentsvisiteachlocationisdeter-
as a set of space-visitation order paths that satisfy specific minedsolelybythepathlength.Incomparison,thereisno
criteria.Afterwards,weformallydefinecoordinationinthe restrictiononthetransitionoforderr inspace-orderpaths.
TPGcontextandrelateittospace-visitationorder. This flexibility enables us to explore different possible vis-
itationordersateachlocationduringplanning.Inaddition,
4.1 Vertex-PerspectiveTPG unlikespace-timepathsthatexplicitlycontainawaitingac-
tion,waitingactionisnotcontainedinthespace-ordertran-
InsteadofviewingaTPGfroman“edge”perspectiveas is
sition rule, as it is modeled implicitly by the coordination
doneinHo¨nigetal.(2016),wechoosetoredefineitsvertices
betweenagents.Figure2(d)showshowtheTPGin(c)can
and view it from a vertex perspective. Instead of a vertex
bereinterpretedas(s,r)vertices.
vτ = (s,t), we define vertices vτ = (s,r), where r rep-
j j A valid TPG is a TPG that ensures all agents can reach
resents the visitation order. For example, vτ = (s,r = 0)
j their target locations without any collision or deadlock. To
means agent j is the first agent that visits s; r = 1 cor-
formalize the conditions of a valid TPG, we define the fol-
responds to the second agent to visit, and so on. An agent
lowing criteria. Firstly, the most obvious condition is that
withahigherordermustwaitforallotheragentswhohave
twodistinctagentscannotsharethesameorderatthesame
a lower order at the same location. For example, if agent j
location. Otherwise, they might reach that location at the
andk visitsatorderr andr respectively,r < r would
j k j k sametimeduringexecutionandcollide.
implyagentk mustwaitforagentj tocrosssbeforeitcan
enter s. Throughout the paper, we will use subscripts of r Definition 1 (Vertex Criteria). Agents must have uniquey Order y
Agent 2 Agent 2 . . . ((1,4),0) ((2,4),1) ((4,2),0) ((4,1),0)
Agent 1
A B
Ag 2 Ag 1
. . .
((5,2),0) ((4,2),1) ((2,4),0) ((2,5),0)
Ag 1 Ag 2 Agent 1 Agent 2
Agent 1 Location A Location B 1 2 3 4 5 x
1 2 3 4 5 x (3, 4) (4, 4)
Figure 4: Example deadlock cycle. The left subplot shows
Order Order
thespace-orderpathsoftwoagents.Allverticesinthepaths
Allowed Allowed havedefaultorder0,exceptthatverticesmarkedwithacol-
ored square represent the corresponding agent has order 1
at that location. e.g. at (2,4) agent 1 has order 1 and agent
2 has order 0. The right subplot shows the corresponding Ag 1 Ag 2
TPG.ColorededgesareType-1edges.Greycross-edgesare
Type-2 edges specifying dependency at overlapping loca-
Ag 1 Constrained Constrained Ag 2 tions.Thereexistsacycle((2,4),1) → ... → ((4,2),0) →
((4,2),1)→...→((2,4),0)→((2,4),1)whichwehigh-
Location A Location B Location A Location B
lightinorange.ThecycleconsistsoftwoType-2edgesand
(3, 4) (4, 4) (3, 4) (4, 4)
two sequences of Type-1 edges. The cycle implies a dead-
Figure3:Exampleedgeconflict.Agent1(blue)andagent2 lock.Agent1willstuckwaitingtoenter(2,4),whileagent
(red)needtocrossacorridorinthesamedirection.Thetop- 2willstuckwaitingtoenter(4,2).
left subplot shows the paths of two agents. Solid line seg-
ments represent the corresponding agent hold order r = 0 where agent 1 and agent 2 traverse the same edge A → B
at the location; dashed line segments represent the corre- inthesamedirection.Agent2(red)startswithahigheror-
sponding agent hold order r = 1. In the first half of the der than Agent 1, and is thus following it, up till location
corridor,agent2hasahigherorderandmustfollowagent1. A. However at B, all of a sudden Agent 1 starts following
However, the relative order of two agents swap at the edge 2. This is physically impossible as this means that Agent 2
(3,4)→(4,4).WelabelthemaslocationAandlocationB. overtookAgent1betweenAandB,butthereexistsnoin-
Thetop-rightsubplotshowsthespace-orderverticesatthat termediatelocation(sincetheyareconsecutivelocations)for
particularedge.Thisedgehasanedgeconflictasduringex- thisovertaketotakeplace.Duetothisoccurringfromtran-
ecutionagent1waitatlocationAforagent2tovisitB,but sitionsbetweentwoconsecutivelocations(A,B),wedefine
agent2would bestuckbehindagent 1beforeA;thusboth thefollowingEdgecriteriawhichavalidTPGmusthaveto
agentswouldwaitforever.Thebottomrowshowstwoedge avoidsuchscenarios.
constraintstoresolvethisconflict.Thedashededgesarefor-
Definition4(EdgeCriteria). Case1:Ifbothagentsj,ktra-
biddenwhilethesolidedgesareallowed.Ifbothendsofan
verses,s′ consecutively,i.e.j has(s,r ) → (s′,r′)andk
arrowarewithintheshadedarea,thecorrespondingedgeis j j
has(s,r ) → (s′,r′),theirrelativeorderatsands′ must
disallowed. k k
be the same, i.e. sgn(r − r ) must equal sgn(r′ − r′).
j k j k
(s,r)verticesintheirpaths. Case 2: Similarly, if two agents swapping consecutive lo-
cations, i.e. j has (s,r ) → (s′,r′) and k has (s′,r′) →
Since each agent starts at their start location, they must j j k
(s,r ) (note s,s′ swapped), then sgn(r −r ) must equal
hold the lowest order of their start locations. For similar k j k
sgn(r′ −r′).
reasons, each agent j should also hold the highest order at j k
their goal location where they rest indefinitely. Otherwise, Deadlockscouldhappenatnon-neighboringlocationsas
thismeansthereisanotheragentk thatvisitsthegoalloca- well. Existing work (Berndt et al. 2020) proves cycles in
tionafterjrestsatit,whichisacontradiction.ThusaTPG’s TPG lead to deadlocks. Consider the space-order paths of
space-orderpathsmustsatisfythefollowingStartandTarget two agents. Agent 1 needs to wait for agent 2 at location
Criteria: (2,4), while agent 2 must wait for agent 1 at (4,2). How-
Definition 2 (Start Criteria). An agent j must be the first ever, agent 1 cannot reach (4,2) to resolve the waiting for
agent to occupy it’s start location sstart compared to all agent2.Thesameappliestoagent2,leadingtobothagents
j
otheragentsk.Thusr <r ,∀k ̸=j. being stuck in a deadlock. The fundamental reason is that
j k
thereexistsacycleintheTPG.SinceanedgeinTPGrepre-
Definition3(TargetCriteria). Anagentj restingatitsgoal
sents dependency between vertices it connects, all vertices
locationsgoalmustbethelastagenttoreachtherecompared
j inside the cycle represent an event that is a pre-requisite
toallotheragentsk.Thusr j >r k,∀k ̸=j. of itself. Those events can never happen by the definition
Now we consider possible deadlock situations. Consider of TPG, implying a deadlock. Such deadlocks can involve
the example depicted in the top-left subplot of Figure 3, morethantwoagents.Weformallydefineitas:
2
1
0
5
4
3
2
1
2
1
0
2
1
0
5
4
3
2
1Definition5(CycleCriteria). AdeadlockcycleofN agents Definition 8 (Unique Coordination). For agent j’s path
consistsofN Type-2edges(i.e.coordination)atN different P , unique coordination C (P ) is the number of
j unique j
locations. Let S = {sn|n = 0,1,...N −1} be a set of n other agents whose paths overlap with P at least
j
distinct locations and A = {a |n = 0,...N −1} a set of once. The unique coordination of a TPG is C =
n unique
distinctagents.IndexnisinmoduleN.Letrn betheorder (cid:80) C (P ).
m j unique j
of agent a at location sn. Sets S and A form a deadlock
m
cycleif In the example shown in Figure 2, C total = 2 while
C = 1. In the rest of the paper, we represent coor-
1. ∀n, agents a ,a visit sn and rn > rn . That is, unique
n n−1 n n−1 dination as C in general, while C can be either C or
agenta nmustwaitforagenta n−1toenterlocationsi. C unique. total
2. ∀n,agenta visitssnthensn+1.Combinedwiththepre-
n
viouscondition,thisimpliesagenta mustfirstwaitfor
n 5 Space-OrderCBS
agenta ,thenentersn,andfinallyvisitsn+1.
n−1
Bycondition1,agenta mustwaitfora toleave WehaveshownthatwecanviewtheTPGasasetofspace-
N−1 N−2
sN−1 before it can enter due to the Type-2 edge. By con- order paths which satisfy certain criteria and we have de-
dition 2, a must first visit sN−2 before going through finedcoordinationinaTPG.Insteadofplanningspace-time
N−2
sN−1 so that a moves on. However, by condition 1, pathsandpost-processingtogetthe(s,r)TPGvertices,our
N−1
a mustwaitfora atsN−2.Similarlyapplyingcon- objective is to directly plan a set of space-order paths that
N−2 N−3
dition2and1iteratively,a mustwaitfora atsN−3, represent a valid TPG. During planning, we can minimize
N−3 N−4 coordination by reasoning about C or C . To that
etc.Thischainofwaitinggoesonandeventuallyleadstoa total unique
0
waiting for a at s0, but remember a is stuck wait- end,wedesignedSpace-OrderConflict-BasedSearch (SO-
N−1 N−1
CBS).
ing from the beginning! This forms a cycle of agents stuck
waitingforeachotheratlocationsS. Conflict-BasedSearchisapopularweaklycompleteand
Ifanagenthas(s,r =1),itisthe2ndagenttovisitsand optimalspace-timeMAPFplanner(Sharonetal.2015).The
there must be a different agent k which visited s first and CBS framework employs a high-level constraint tree (CT)
occupies (s,r = 0). Intuitively, a space-order TPG should thatsearchesoverconflictsinabest-firstmanner,andalow-
notcontainany“emptyslots”. levelA*searchthatsearchesindividualpathswhilerespect-
ing constraints. Our method, Space-Order CBS, redefines
Definition6(RelativeCriteria). Ifanagentj hasanorder
theCBSframeworktoplanaTPGbyplanningconflict-free
r > 0 at some location s, there must be another agent k
j space-orderpathsinsteadofspace-timetrajectories.Follow-
withorderr −1atlocations.
j ingCBS’sframework,weplanpathsforagentsindividually
Altogether, from this vertex perspective, a valid space- and resolve conflicts (i.e. violations of Definition 1-6) by
order TPG consists of (location, visitation order) vertices addingconstraints.Wedesignnovelspace-orderconstraints
that start and end at desired locations, and satisfy all cri- thatmaintaincompleteness.Thissectiondiscussesthenec-
teria.Noteregularspace-timeplanninghasasimilarvertex essarycomponentsforSpace-OrderCBS.
andtargetcriteria,butthattheothersareuniquetoTPGs.
5.1 Low-LevelPlanner
4.2 CoordinationinTPG
Coordination between agents is required when multiple Our low-level planner must search for a valid space-order
agentsvisitalocation.Ifagentj visitsvertex(s,r),itneed path.Allagentsareinitializedattheirstartlocationwithr =
towaitfor,orcoordinatewithragentsatlocations.Onenat- 0.Unlikespace-timewhere(s,t)edgesgoto({s,s′},t+1),
uralobjectiveistominimizethetotalnumberofthesepossi- space-order can go from (s,r) to (s′,r′) where r′ can be
blewaitinteractions.Intheedge-perspectiveTPGproposed >,<,=torands′ ̸= s.Wedeterminepossibler′ bycom-
by (Ho¨nig et al. 2016), each wait interaction is represented puting R′ , the maximum order at s′ among all existing
max
by a Type-2 edge. Therefore, this objective is equivalent to pathsofotheragents.Theplannerinsertsallunconstrained
optimizethetotalnumberofType-2edgesinTPG.Forex- (s′,r′),r′ ∈ {0,1,...,R′ +1}.Noteifs′ isthestartlo-
max
ampleFigure2(c)containstwosuchinstances,requiringthat cationofanotheragentj,weomit(s′,r = 0)sincej must
theredagentmusttraverse(2,2)and(3,2)firstbeforethe start at (s′,0). Since each vertex can transit to multiple or-
blueagent. ders for the same neighbor, space-order search has a larger
actionspacethanspace-timesearch.
Definition 7 (Total Coordination). Given a single space-
order vertex vτ = (s,r), its total coordination is The low-level planner finds the minimum-cost path for
j agentk fromstarttogoallocationthatsatisfiestheapplied
C (vτ) = r. The total coordination of a TPG is the
total j CT constraints defined in the next section. Section 4.2 de-
sumofthecoordinationofallverticesinallagents’paths:
C =(cid:80) (cid:80) C (vτ). fines the coordination cost C k which the low-level planner
total j τ total j couldminimize.However,thiscansignificantlyincreasethe
Thisobjectivecouldbeover-penalizingcertaincoordina- pathlengthandthusoverallplanexecutiontime.Therefore,
tion, though. For example, if agent j and k shares a long weminimizew∗C(P )+(1−w)∗|P |,aweightedsum
k k
segmentofspatialpathoflengthL,C willpenalizethis of coordination C(P ) and path length |P |. The hyper-
total k k
situationbyL.Thiscouldbeunnecessary.Thereforewepro- parameter w trades off the two with w = 1 representing
poseuniquecoordinationasanalternativeobjective,which purely minimizing coordination while w = 0 represents
willonlypenalizetheabovesituationbyavalueof1. solelyminimizingpathlength.5.2 Criteria,Conflicts,&Constraints Definition 12 (Cycle Constraints). Given a deadlock cy-
cle in 5 involving N Type-2 edges: (sn,rn ) → (sn,rn)
Conflict-Based Search works by detecting conflicts that re- n−1 n
wheren = 0,1,2,...,N −1andrn < rn,wecanbreak
sult in invalid paths and defining and applying constraints n−1 n
the cycle if any of the edges is broken. So we add 2 con-
that resolve these conflicts. Section 4.1 defines the criteria
straintsforeachi:(a)Agentn−1cannotgoto(sn,r <rn)
thatspace-orderpathsneedtosatisfytodefineavalidTPG;a n
ifitenterlocationsn−1 beforesn.(b)Agentncannotgoto
conflictoccurswhenanyofthesecriteriaareviolated.Each
(sn,r ≥rn).
criterion thus defines a conflict and requires the following n
constraints to resolve. We do not have a constraint for the There are 2N possible constraints, resulting in 2N CT
start criterion as we implicitly enforce it by initialization nodes.Comparingregularconflictswithabranching factor
specifiedinSection5.1. of 2 in CBS, deadlock conflicts of N agents lead to a 2N
branchingfactor,whichisveryexpensivetoresolve.
Definition 9 (Vertex Constraint). This occurs when two
Definition13(RelativeConstraint). FollowingDefinition6,
agents j,k share the same (s,r) location, violating Defini-
arelativeconflictoccurswhenagentj occupies(s,r ),but
tion1.Weaddaconstraintonj toavoid(s,r)foronechild j
thereisnoagentat(s,r−1)(e.g.dashedcirclesinFigure
node,andaconstraintonk likewise(similartoresolvinga
3). We must either constrain j to avoid all (s,r ≥ r ), or
regularspace-timevertexconflict). j
constrainanotheragentktouse(s,r −1)initspath.
j
Definition 10 (Target Constraint). This occurs when agent
Maintainingtherelativecriteriaishardastherelativecon-
k passesoveragentj restingatitsgoallocation(sgoal,r )
j j straintneedstoenforcesomeunknownagentkmustoccupy
violatingDefinition3.Wethenconstrainj toreachandrest (s,r −1).ResolvingthisfailedcriteriaforMAPFwithK
j
at (sgoal,r ≤ r ) and have no other agent (including j) agents requires generating K constraints and children for
j j
with (sgoal,r > r ), or constrain j to reach and rest at the CT node, which would be computationally infeasible.
j j Therefore, we ignore this criterion and allow an agent at
(sg joal,r >r j). (s,r) while no other agent is at (s,r −1). This TPG will
still maintain a valid precedence order but the possible un-
Nowlet’sreturntotheexampleinthetop-rightsubplotof
used(s,r)makesthecoordinationcostC nolongerac-
Figure 3. As we discussed in Definition 4, the main prob- total
curate. Thus even though an optimal Space-Order CBS ex-
lem of an edge conflict is that two agents have different
ists,apracticalonecannothavetheseN children.
relative priorities on two consecutive locations. To resolve
it, our contraints should disallow swapping order. To that Theorem 1 (Completeness). Space-Order CBS is weakly
end, our constraint should encourage rA to increase and complete(willeventuallyfindasolutionifitexists).
1
rB to decrease. So we disallow agent 1 to traverse edge
1 Proof. Space-Order CBS’s main proof of completeness
(s1,r ≤ 2) → (s2,r ≥ 2)(bottom-rightofFigure3).Rea-
comes by proving that if a solution exists in a CT node,
soning for agent 2 is similar. These constraints would still
for each conflict resolved via constraints, a solution exists
allow some edge conflicts to occur at the same locations,
in at least one child node. The proof for Vertex and Target
which would be resolved by a finite number of future con-
Constraintsfollowsregularspace-timeCBS.Theproofsfor
straints.Thisisnecessaryforthecompletenessofthesearch
Edge and Deadlock Constraints are shown to retain a so-
(see Theorem 1 and Appendix for details). In general, we
lution in at least one of their child nodes in the appendix.
defineedgeconstraintasthefollowing:
Thus Space-Order CBS will always contain the solution in
Definition 11 (Edge Constraint). In the case of Definition the CT as the root allows the solution (no constraints) and
4.1,twoagentsj,kswaprelativeordersinconsecutiveloca- applyingconstraintsretainsasolutionthatexistsinatleast
tionsinthesamedirection,e.g.(s,r ) → (s′,r′),(s,r > onechildnode.SinceSpace-OrderCBShigh-levelandlow-
j j k
r )→(s′,r′ <r′),violatingDefinition4.Instead,weadd levelsearchesarebestfirstwithrespecttoanincreasingcost
j k j
function, and a valid TPG has a finite cost, the search will
thefollowingchildconstraints:(a)Constrainj toavoidthe
setofedges(s,r ≤ r ) → (s′,r ≥ r′).(b)Constraink to eventuallyexaminethatsolution.
j k
avoid set of edges (s,r ≥ r ) → (s′,r ≤ r′). The analo-
j k Were-emphasizethatSO-CBSisalsonotoptimaldueto
gouscaseinDefinition4wheretwoagentstravelinopposite
the relative constraints (Section 5.2). Nevertheless, we still
directionsfollowswithoutlossofgenerality.
use the CBS framework as it allows for fine-grained con-
Intuitively,adeadlockcyclecanberesolvedbybreaking flict resolution and is still complete and therefore searches
anyoftheedgesinthecycle.IntheexampleinFigure4,we throughmorepaths.ThusSO-CBSproducesbettersolutions
canresolvethecyclebyreversingthevisitationorderatany than greedier/incomplete alternatives like prioritized plan-
ofthecoordinationplaces.i.e.ifagent1mustwaitforagent ningwhichproducelongerpaths.
2atboth(4,2)and(2,4),orviceversa,therewillnotbea
5.3 High-LevelPlanner
deadlock.Thisisequivalenttoreversingthedirectionofone
oftheType-2edgesAlternatively,wecanbreakthesequence The high-level planner chooses the minimum cost set of
ofType-1edges((2,4),1)→...→((4,2),0),i.e.disallow paths, detects conflicts (Section 4.1), applies constraints
agent1tofirstvisit(2,4)thenvisit(4,2).Thisalsoresolves (Section5.2),andgenerateschildnodesbycallingthelow-
deadlock.Thesameappliestoagent2.Moregenerally,we levelplanner(previousparagraph&Section5.1).Similarto
define constraints to resolve deadlock cycle with N agents thelow-levelplanner,thehigh-levelplannercouldminimize
as: justcoordinationbutrunsintothesameissuesoflongpathlengths.Thereforeitprioritizesthesameweightedobjective Changing Focal Queue Penalty In order to avoid inver-
(cid:80)
w∗C+(1−w)∗ |P |. sions,foreachlow-levelnode,wemodifieditscostinSpace-
k k
OrderCBS’slow-levelfocalqueuetof =n +P∗n ,
focal c inv
5.4 ModifyingSpace-TimeCBSImprovements where n is the number of conflicts on the path up to that
c
node, n is the number of inversions, P is a constant
We adapt the following CBS improvements out-of-the-box inv
penalty.Empirically,wefoundthatsettingP toalargevalue
forSpace-OrderCBStospeedupthesearch.
of1000ismosteffectiveinpractice.
EnhancedCBSspeedsupsearchbyfindingw >1sub-
so
optimal solutions by using focal searches (Pearl and Kim
6.2 NegativeOrders
1982)inboththehigh-levelandlow-levelplannerstoselect
nodes with fewer conflicts (Barer et al. 2014). We use this The behavior of SO-CBS could depends on the order that
techniquewithoutmodificationsinSpace-OrderCBS. itplanspathsforagents.Sincethelow-levelsearchtriesto
Bypassingconflictsisatechniquethattriestoreducethe minimize the order, an agent j will visit order 0 by default
branchingfactoroftheCT(Boyraskyetal.2015).Whenex- if no other agents visit the same location s. However later
pandingaCTnode,thebypasstechniquereplacesthenode when another agent k needs to visit s, it will have to visit
withachildnodeinsteadofgeneratingtwobranchesiffthe at a higher order r > 0 or conflict with agent j at (s,0).
followingconditionsaretrue:(1)costdoesnotincrease(2) There is no way for agent k to have a lower order than j,
numberofconflictsdecreases.Insuboptimalsearch,thefirst duetotheplanningorder.Thisproblembecomessignificant
conditionisreplacedbycostofthechildnodebeingwithin when we incorporate the inversion penalty as the low-level
thesuboptimalbound.Thistechniqueeffectivelyreducesthe searchforkwouldpenalizer >0ifitleadstoaninversion.
sizeofCTandthusspeedsupthesearch.Thislogiccanbe Thus instead the search would prioritize finding a longer
directlyappliedtoSO-CBSwithoutmodifications. pathtoavoidsorinsteadconflictwithjatorder0,resulting
Targetreasoningspeedsupresolvingconflictsatgoallo- in longer paths or significantly more conflicts and slowing
cations by avoiding multiple expansions on conflicts at the downthesearch.
samegoallocation(Lietal.2021).Wehavedirectlyincor- Tosolvethisissue,weallowagentstovisit“negativeor-
porateditinDefinitions3and10. ders”,sothatagentscanobtainthefirstprioritywithoutin-
curringaconflicteveniforder0isoccupied.Thisimplieswe
6 ImprovingSO-CBS
needtore-interpretorderrinarelativeratherthananabso-
lutesense.Practically,thisrequiresmodificationstoboththe
It is not clear a priori that Space-Order CBS will be par- low-leveltransitionrulesandthecomputationofC .
total
ticularly slow, but when running it we found that it strug-
glesforsmallnumbersofagents.Additionally,theproduced RelativeOrder Withnegativevaluesforr,thedefinition
TPGsareinefficientandcontainmanyunnecessarywaiting. ofr = 0asthe1-stagenttovisitdoesnotmakesenseany-
Therefore,weproposetwoimprovementstothealgorithm: more. Rather, we will interpret r in a relative manner. At a
avoidinginversionsandintroducingnegativeorder. certainlocation,theagents’visitationprioritywillbesorted
bytheirrvalue,withlowerrvaluerepresentinghigherpri-
6.1 AvoidingInversions ority.Therelativerelationshipisunchanged:anagentwitha
higherordermustwaitforallotheragentswhohavealower
Simply optimizing the coordination objectives and path
orderatthesamelocation.
lengths does not guarantee to produce efficient TPG. Sup-
pose agent j,k visit location s at space-order vertex vτj = Low-Level Transitions with Negative Orders In Sec-
j
(s,r )andvτk = (s,r ),respectively.Assumeτ < τ but tion 5.1, in a vertex trainsition from (s,r) to (s′,r′), the
r >j r . r k > r imk plies agent j must wait foj r agek nt k. low-level planner inserts all unconstrained (s′,r′),r′ ∈
j k j k
However,τ j <τ k meansagentj travelslessdistancetoen- {0,1,...,R m′ ax + 1}. We only need to change that to in-
tersthanagentk.Agentj islikelytoarrivesbeforeagent serting all r′ ∈ {R m′ in −1,...,0,1,...,R m′ ax +1}, where
kandneedtowaitforkforalongtime!Wedefinesuchsit- R m′ axandR m′ inarethemaximumandminimumorderats′
uationsasinversions.Theyareinefficientandleadtolonger amongallexistingpathsofotheragents.Also,weinitialize
executiontimesofourTPG. agentsattheirstartlocationswithr =R start,whereR start
isalargenegativevalueandistheminimumpossibleorder.
Definition14(Inversion). Supposeagentj,k visitlocation
s at space-order vertex vτj = (s,r ) and vτk = (s,r ). ChangingC Calculation Nowthattheabsolutevalue
j j k k total
Theyconstituteaninversionifbooleanvalueτ < τ does of r does not have concrete meaning, we cannot compute
j k
notequaltor j <r k. C total as the sum of r over all vertices as in Definition 7.
Luckily, C is equivalent to the total number of Type-2
Additionally, these inversions happen to be necessary total
edgesintheTPG.Wecaneasilycomputeitbycountingthe
componentsofadeadlockconflicts.Adeadlockconflictofn
Type-2edgesateachvertexandtakingsummation.
agentscontainsninversionsandrequirescreating2nhigh-
levelnodeswhichisveryslow.Albeitunderadifferentprob- Definition 15 (Total Coordination). Given a single space-
lem, (Okumura et al. 2022a) also observed that cycle de- order vertex v jτ = (s,r j), its total coordination C total(v jτ)
tection and resolution is a significant bottleneck during the is the number of other agents k visiting (s,r ) with lower
k
search in their method. Therefore, avoiding inversions can orderr <r .ThetotalcoordinationofaTPGisthesumof
k j
significantly reduce the execution time of TPG as well as thecoordinationofallverticesinallagents’paths:C =
total
theplanningtime. (cid:80) (cid:80) C (vτ).
j τ total jStillComplete Sincewearenotchanginganyofthecon- amountofpotentiallyunnecessaryoverlap.Figure1visual-
straints, we can reuse the same proof of completeness and izesthisdifferenceintwoTPGs.
retainidenticalcompletenessguarantees. Themainpracticalbenefitofreducingcoordinationisde-
creasingcommunicationbetweenagents.Communicationis
7 ExperimentalEvaluation aconstraintthatreal-worldmulti-agentsystemsmusthandle
andisnon-trivialinpracticewithrobotswithlimitedband-
WeexperimentallyshowthatSO-CBSproducesvalidTPGs
widthandrange(Gielis,Shankar,andProrok2022).Agents
thathavelesscoordinationbetweenagentsandarerobustto
following TPGs require communication between agents to
random delays during execution. We test our methods on
check if Type-2 edges are satisfied. Thus SO-CBS’s reduc-
6 different maps from (Stern et al. 2019). For all experi-
tionofC directlydecreasesthecommunicationburden
ments and methods, we use suboptimality w = 1.2 and total
so for the MAPF system. We would like to highlight in con-
a timeout of 2 minutes. Due to the very poor performance
versations with two real-world warehouse companies, un-
oftheabsoluteorderversionofSO-CBS(inabilitytoscale),
reliable communication (e.g. spotty Wifi) was an issue that
weonlyshowresultsofourrelativeorderSO-CBS.Wetest
negativelyimpactedtheirperformance.Thus,decreasingthe
using C and C objectives with coordination cost
total unique communicationloadwouldlikelyhelpalleviatethisissue.
weight w ∈ {0.1,0.2,0.3,0.4,0.5}. We only show results
We can trade off coordination for runtime and path
for w ∈ {0.1,0.3,0.5} in Figure 5 for visual clarity. The
lengthbymanipulatingw.Table1containsresultsformap
trendappliestow ∈{0.2,0.4}aswell.
Paris 1 256whosetrendsareapplicabletoothermaps.Asw
Our main baseline ECBS-POST is ECBS with post-
increasesfrom0.1to0.5withC ,SO-CBSfocusesmore
processingfortheTPG.WealsoincludeSL-CBSandpost- total
onreducingcoordinationwiththeimprovementoverECBS-
processingtheirspace-levelpathstoaTPGasasecondbase-
POSTincreasingfrom70%to85%,whiletheaveragepath
line.Thepost-processingTPGconstructiontimeisomitted
length increases only less than 5%, implying that SO-CBS
asitsruntimeisnegligible.WerunECBSwithbypasscon-
can avoid coordination by planning around. However, this
flicts and target reasoning enabled for a fair runtime com-
abilitycomesatacomputationalcost.AsshowninSection
parison.ForSL-CBS,wesettheircostweightw = 0.4,as
5.1, inlow-level search,our method hasa branching factor
abalancedtrade-offbetweencoordinationandruntimeeffi-
that is 3-10 times higher. With a larger search space, SO-
ciencywhichwasthebestbalancetheyreported.
CBSrequiressignificantlylongerplanningtime.Increasing
To test robustness with delays, we simulated execution
walsoincreasestheruntimeastheplannerneedstoexplore
with 5% of the agents having 20% random delays, with
morepathstofindsolutionswithlowercoordination.
each delay having a duration of 100 timesteps. Agents are
requiredtofollowtheirTPGexecutionpolicyandweevalu-
7.2 MoreRobusttoDelaysduringExecution
atethewaittimeduetocoordinationandthetotalexecution
timesummedoverallagents.Allresultspresentedareaver-
Due to imperfect execution or kinematic constraints (e.g.
ages across 10 random agent scenarios and 100 simulation
rotating), agents can be delayed while executing the TPG
seeds for sampling delays (thus each point averages 1000
plan. Individual delays can propagate to other agents that
runs). We compare SO-CBS and the ECBS-POST baseline
coordinate and wait for the delayed agents, incurring addi-
on three representative maps in Figure 5. The SO-CBS re-
tional waiting. We experimentally show that SO-CBS pro-
sultsareshown withtwodifferentobjectivesandthree dif-
duces TPGs that are more robust to such delays by com-
ferent cost weights. Results on all five maps are shown in
paring the waiting and execution time as seen in the third
the appendix. The SL-CBS baseline consistently performs
and fourth columns in Figure 5. By having less coordina-
worsethanSO-CBSandishenceomittedfromFigure5but
tion, SO-CBS reduces the wait time in most cases, which
includedinTable1.
leadstoanimprovementintheoverallexecutiontime.Com-
paring the third and the last column, improvements in exe-
7.1 ReducingCoordination
cutiontimepreservethetrendinimprovementsinwaittime,
We evaluate two metrics for coordination in the TPG: the with values scaled down by about 30% to 60% depending
numberofType-2edges(firstcolumninFigure5),andthe onthecontributionofwaittimetothetotalexecutiontime.
number of unique pairs of agents that coordinate (second Overall, the C unique objective performs better than C total
column). Figure 5 highlights how Space-Order CBS sig- andachievesanaverageof16.2%reductioninwaittimeand
nificantly improves on both metrics of coordination across 9.1%reductioninexecutiontimeatw =0.5.SO-CBSwith
all maps compared to the ECBS-POST baseline. Optimiz- C unique hasatotalexecutiontimelowerthanECBS-POST
ing C reduces the total number of Type-2 edges by over 90% of the time. EBCS-POST is an extremely strong
total
30-90% with large maps having better improvements. Op- state-of-the-artbaseline(weranitonaverylowsuboptimal-
timizing C also helps in this metric although not to ityandittimedoutonloweroneswetried).Thusimproving
unique
the same degree. For both objectives, increasing w gener- on average by 9.1% is non-trivial. However as mentioned
ally improves both coordination metrics. The coordination earlier,thiscomesatacomputationalandscalabilitycost.
reduction also generally decreases as the number of agents Interestingly, we observe a clear positive correlation be-
increases across all maps. These observations provide evi- tweenthereductionofwaitingtimeandC .Thissup-
unique
dencethatSO-CBSfullyutilizesfreespacetoavoidcoordi- portsourhopethatwithlowerC ,eachagenthasfewer
unique
natingbetweenagents,andthatinmorecongestedmapshas uniquedependentagents.Subsequently,theprobabilitythat
less flexibility to do so. The surprisingly large 80% reduc- delays propagate onto dependent agents would be reduced.
tionsadditionallyimplyexistingmethodpathshavealarge Ontheflipside,althoughthereductionvaluesofC are
totalFigure5:WecompareSO-CBSwithourtotalanduniqueobjectivesacrossdifferentwwithECBS-POST.ECBS-POSTplans
space-timepathsusingECBSandthenpost-processesitintoaTPGwhileourmethoddirectlyproducesaTPG.w tradesoff
minimizingcoordination(↑w)versuspathlength(↓w).OurmethodssubstantiallydecreasecoordinationcomparedtoECBS-
POST(firsttwocolumns).ThelasttwocolumnsshowSO-CBSismorerobustunderrandomdelaysbycomparingwaittime
andexecutiontimewithECBS-POST.#Agents 50 100 150 50 100 150 50 100 150 50 100 150
Method ExecutionTime #Type-2Edges Runtime(sec) PathLength
ECBS-POSTsub1.05 777 1287 1374 59.7 115 143 0.07 0.22 0.45 190 191 181
ECBS-POSTsub1.2 776 1295 1367 58.8 115 146 0.07 0.22 0.45 190 191 181
SL-CBSw0.4 1052 1795 2151 41.3 81.9 108 0.39 1.49 3.48 190 191 181
C w0.1 708 1241 1333 13.4 30.3 43.9 1.08 7.16 48.6 190 193 185
total
C w0.3 712 1248 1337 10.4 26.3 37.6 1.31 12.1 92.9 191 194 186
total
C w0.5 696 1245 1339 9.10 24.7 35.7 1.51 23.1 112 192 197 190
total
C w0.1 726 1253 1346 33.1 62.2 77.6 1.03 6.43 36.1 191 194 186
unique
C w0.3 706 1241 1319 33.6 61.5 76.0 1.10 6.46 45.9 191 194 186
unique
C w0.5 709 1234 1280 32.2 59.7 76.1 1.26 9.24 77.1 191 194 185
unique
Table1:WecompareaveragestatisticsofourSO-CBSmethodsagainstourbaselinesonParis 1 256acrossdifferentnumbers
ofagents(toprow).Asw increases,wereduceaveragecoordination(#Type-2edges)byplanningslightlylongerpaths.This
leadstoanimprovedexecutiontime(lower)inthefaceofdelays,butattheexpenseofalongerplanningtimeduetoSO-CBS’s
largersearchspace.
muchhigher,itdoesnotalignwithwaitingtime.Thissup-
portsthehypothesisthatrepeatedcoordinationbetweenthe
same pair of agents is over-penalized in C and does
total
not contribute to a higher probability of delay propagation
thansinglecoordination.ThusweconcludethatC is
unique
a better metric that measures coordination with respect to
thepropagationofdelayscausingadditionalwaitactions.
TofurtherinvestigatehowSO-CBSrespondstodifferent
delaysettings,werunsimulationswithvaryingratiosofde-
layed agents α and delay duration t . Figure 6 shows exe-
d
cution time reduction on empty 48 48 map with 50 agents
with SO-CBS using C and cost weight 0.5. We ex-
unique
pectwhent increases,therewillbemoredelayspropagated
d
through coordination. Thus, the contribution of waiting to Figure6:empty 48 48 mapwith50agents:Wevarythera-
execution time will increase and enable more opportuni- tioofdelayedagents(colors)anddelayduration(x-axis)and
tiesforimprovementofSO-CBSoverthebaseline.Indeed, showthereductionofexecutiontime(y-axis).Thereduction
Figure6confirmsourexpectation,showingaconsistentin- inexecutiontimeincreasesasthedelaydurationincreases.
creaseinreductioninexecutiontimeast increases.How-
d
ever,thecontraryhappenswhentheratioofdelayedagents Inparticular,PIBTscaleswellinregularMAPF(Okumura
αincreases,especiallywhent islarge.Thislikelyoccursas et al. 2022b) but requires modifications to satisfy space-
d
delayedagentsareequallyslowinexpectationandarethere- orderconflictsandcoordinationobjectives.Additionallyus-
forelesslikelytopropagatedelaysontoeachother.Butwith ing more advanced TPG post-processing techniques like
fewdelayedagents,delayswouldalmostcertainlymakeall MCP(Ma,Kumar,andKoenig2016)orBTPG(Su,Veera-
dependent agents that are not delayed wait. Nevertheless, paneni,andLi2024)withintheplanningprocesscouldfur-
SO-CBS is more robust across various settings of random ther decrease communication associated with coordination
delays. Its advantage is more significant as delay duration andincreaserobustnesstodelays.
increasesandtheratioofdelayedagentsdecreases,withthe
executiontimeimprovementashighas30%insomecases. References
Atzmon, D.; Stern, R.; Felner, A.; Wagner, G.; Barta´k, R.;
8 Conclusion andZhou,N.-F.2018. Robustmulti-agentpathfinding. In
EleventhAnnualSymposiumonCombinatorialSearch.
Our work is an initial investigation into directly planning
Barer,M.;Sharon,G.;Stern,R.;andFelner,A.2014. Sub-
a TPG using space-visitation order planning. We first in-
optimal variants of the conflict-based search algorithm for
troducedourmaintheoreticalcontributionofreinterpreting
the multi-agent pathfinding problem. In Seventh Annual
TPGsasspace-orderpathsthatsatisfycertainproperties.We
SymposiumonCombinatorialSearch.
then designed unique constraints for Space-Order CBS to
planvalidspace-orderpaths,anddescribedtwovariants(ab- Berndt,A.;Duijkeren,N.V.;Palmieri,L.;andKeviczky,T.
soluteorderandrelativeorder)withrelativeorderSO-CBS 2020. A Feedback Scheme to Reorder a Multi-Agent Ex-
performingconvincinglybetter.Weexperimentallydemon- ecution Schedule by Persistently Optimizing a Switchable
strate how SO-CBS can substantially reduce coordination ActionDependencyGraph. arXiv:2010.05254.
andleadtoTPGsmorerobusttoavarietyofdelays. Boyrasky, E.; Felner, A.; Sharon, G.; and Stern, R. 2015.
Futureworkshouldexploredifferentwaysofcomputing Don’t Split, Try To Work It Out: Bypassing Conflicts in
aTPGaswellasincorporateTPGpost-processingmethods. Multi-Agent Pathfinding. Proceedings of the InternationalConferenceonAutomatedPlanningandScheduling,25(1):
47–51.
Gielis,J.;Shankar,A.;andProrok,A.2022. ACriticalRe-
view of Communications in Multi-Robot Systems. CoRR,
abs/2206.09484.
Ho¨nig, W.; Kumar, T. S.; Cohen, L.; Ma, H.; Xu, H.; Aya-
nian,N.;andKoenig,S.2016.Multi-agentpathfindingwith
kinematicconstraints.InTwenty-SixthInternationalConfer-
enceonAutomatedPlanningandScheduling.
Lam, E.; Le Bodic, P.; Harabor, D.; and Stuckey, P. J.
2022. Branch-and-cut-and-price for multi-agent path find-
ing. Computers&OperationsResearch,144:105809.
Li,J.;Chen,Z.;Harabor,D.;Stuckey,P.J.;andKoenig,S.
2022. MAPF-LNS2: Fast Repairing for Multi-Agent Path
FindingviaLargeNeighborhoodSearch.Proceedingsofthe
AAAI Conference on Artificial Intelligence, 36(9): 10256–
10265.
Li,J.;Harabor,D.;Stuckey,P.J.;andKoenig,S.2021. Pair-
wise Symmetry Reasoning for Multi-Agent Path Finding
Search. CoRR,abs/2103.07116.
Li,J.;Ruml,W.;andKoenig,S.2021. Eecbs:Abounded-
suboptimal search for multi-agent path finding. In Pro-
ceedings of the AAAI Conference on Artificial Intelligence
(AAAI),12353–12362.
Ma,H.;Kumar,T.K.S.;andKoenig,S.2016. Multi-Agent
PathFindingwithDelayProbabilities. arXiv:1612.05309.
Okumura,K.;Bonnet,F.;Tamura,Y.;andDe´fago,X.2022a.
Offline Time-Independent Multi-Agent Path Planning. In
Proceedings of the Thirty-First International Joint Confer-
ence on Artificial Intelligence. International Joint Confer-
encesonArtificialIntelligenceOrganization.
Okumura, K.; Machida, M.; De´fago, X.; and Tamura, Y.
2022b. Priority inheritance with backtracking for itera-
tive multi-agent path finding. Artificial Intelligence, 310:
103752.
Pearl,J.;andKim,J.H.1982. StudiesinSemi-Admissible
Heuristics. IEEETransactionsonPatternAnalysisandMa-
chineIntelligence,PAMI-4(4):392–399.
Sharon,G.;Stern,R.;Felner,A.;andSturtevant,N.R.2015.
Conflict-based search for optimal multi-agent pathfinding.
ArtificialIntelligence,219:40–66.
Stern,R.;Sturtevant,N.R.;Felner,A.;Koenig,S.;Ma,H.;
Walker,T.T.;Li,J.;Atzmon,D.;Cohen,L.;Kumar,T.K.S.;
Boyarski,E.;andBartak,R.2019.Multi-AgentPathfinding:
Definitions,Variants,andBenchmarks.SymposiumonCom-
binatorialSearch(SoCS),151–158.
Su,Y.;Veerapaneni,R.;andLi,J.2024. BidirectionalTem-
poral Plan Graph: Enabling Switchable Passing Orders for
More Efficient Multi-Agent Path Finding Plan Execution.
AAAI Conference on Artificial Intelligence (AAAI), 38(16):
17559–17566.
Wagner,A.;Veerapaneni,R.;andLikhachev,M.2022.Min-
imizingCoordinationinMulti-AgentPathFindingwithDy-
namic Execution. Proceedings of the AAAI Conference on
ArtificialIntelligenceandInteractiveDigitalEntertainment,
18(1):61–69.A ProvingSpace-OrderCBSisComplete Note:Thisconstraint/proofisidenticaltotargetreasoning
We more thoroughly prove Theorem 1 that Space-Order forspace-timeCBS(Lietal.2021).
CBS is weakly complete (will find a solution if one exists Definition 11 (Edge Constraint). In the case of Definition
givenenoughtimeandmemory).Asmentionedintheproof 4.1,twoagentsj,kswaprelativeordersinconsecutiveloca-
sketch, we must first approach verifying completeness in tionsinthesamedirection,e.g.(s,r ) → (s′,r′),(s,r >
j j k
CBS’sframeworkbyprovingthatwhenresolvingaconflict r )→(s′,r′ <r′),violatingDefinition4.Instead,weadd
throughmultipleconstraints,ifasolutionexistedintheorig- j k j
thefollowingchildconstraints:(a)Constrainj toavoidthe
inalCTnodethenasolutionexistsinatleastonesuccessor
setofedges(s,r ≤ r ) → (s′,r ≥ r′).(b)Constraink to
CTnodebranch(i.e.theconstraintsare“complete”).Since j k
avoid set of edges (s,r ≥ r ) → (s′,r ≤ r′). The analo-
therootnodetriviallyallowsasolution(astherearenocon- j k
gouscaseinDefinition4wheretwoagentstravelinopposite
straints), this means that each time we resolve a conflict in
directionsfollowswithoutlossofgenerality.
anodethatallowsasolution,asolutionwillstillbeallowed
(notconstrained)inatleastonesuccessorCTnode.Wethus Proofofcompleteness. For the first edge conflict, suppose
needtoprovethatourconstraintsforresolvingVertex,Edge, the optimal solution violates both constraints. From violat-
Target,andDeadlockConflictsviatheircorrespondingcon- ing the first constraint, we have j going (s,r > r ) →
j
straintseachsatisfythecompletenessproperty.Thisverifies (s′,r < r′).Fromviolatingthesecondconstraint,wehave
k
thatthereexistsabranchintheCTthatcontainsasolution. kgoing(s,r <r )→(s′,r >r′).
j k
Thesecondpartoftheproofistojustifythatthelow-level This results in a violation of Definition 4. Thus the op-
andhigh-levelsearchwilleventuallyexpandallthenodesin timal solution cannot lie outside both constraints and must
thebranchcontainingthesolutionuntilthesolutionisfound beinoneofthesuccessorCTnodes.Thesamelogicholds
(i.e.thesearchesarecomplete). when applied to the second conflict with agents moving in
oppositedirections.
A.1 ProvingCompletenessofConstraints
Acommonwaytoprovethatthesolutionhastoexistinat Note:A“regular”edgeconstraintlikeinspace-timeCBS
least one successor CT node is to prove the contrapositive; is possible and maintains completeness using the normal
showthatifasolutiondoesnotexistinanynode,itisnota completeness logic. However, we found that it performed
valid solution. If a solution does not exist in any node, this poorlyandourcurrentedgeconstraintsboostedperformance
means it violates the constraints of each (and therefore all) (asitisamuchstrongerconstraintavoidingmultipleedges).
successor node. Thus we approach the proof of complete- Definition 12 (Cycle Constraints). Given a deadlock cycle
nessforeachconflictandsetofconstraintsbyassumingthe in 5 involving n Type-2 edges: (si,ri ) → (si,ri) where
i−1 i
solutionviolatesallconstraintsandshowinghowthiscannot
i = 0,1,2,...,n−1andri < ri,wecanbreakthecycle
leadtoavalidsolution.Werepeattheconstraintswiththeir i−1 i
ifanyoftheType-2edgesisbroken.Soweadd2constraints
proofofcompleteness.
foreachi:(a)Agenti−1cannotgoto(si,r <ri)ifitenter
i
Definition 9 (Vertex Constraint). Vertex constraints occur locationsi−1beforesi.(b)Agenticannotgoto(si,r ≥ri).
whentwoagentsj,k sharethesame(s,r)location,violat- i
ingDefinition1.Weaddaconstraintonjtoavoid(s,r)for
one child node, and a constraint on k likewise (similar to Proofofcompleteness. Assumeforcontradictionasolution
resolvingaregularspace-timevertexconflict). exists that violates all 2n constraints. In this solution with
n agents i = 0,1,...,n−1, each agent i must have order
Proofofcompleteness. Suppose the solution violates both r ≥ ri, while agent i−1 have order r < ri, i.e. agent i
constraints. Then by violating the first constraint, j is at i i
mustwaitfori−1.Additionallyeachagentimustfirstvisit
(s,r). By violating the second, k is at (s,r) as well. This
s , then s . We observe that these conditions reduce to
violates the vertex criteria (Definition 1) of a valid MAPF i i+1
the exact same condition in Definition 5, implying that the
TPG.
samedeadlockexistsinthissolutionthatviolatesallthecon-
Note:ThisisidenticaltotheproofforregularCBSvertex straints, which is a contradiction as a solution cannot have
constraints. anydeadlockcycles.Thusour2nconstraintsandbranching
processfordeadlockiscomplete.
Definition 10 (Target Constraint). This occurs when agent
k passesoveragentj restingatitsgoallocation(sg joal,r j) A.2 ProvingWeakCompletenessofSearch
violatingDefinition3.Wethenconstrainhtoreachandrest
From the completeness of constraints, we know that a so-
at (sg joal,r ≤ r j) and have no other agent (including j) lution exists in the root node and will exist in at least one
with (sgoal,r > r ), or constrain j to reach and rest at branchoftheCTwhenapplyingconstraintstogeneratesuc-
j j
cessorCTnodes.Bydefinition,avalidsolutionhasafinite
(sgoal,r >r ).
j j set of constraints and thus will be found if we expand the
Proofofcompleteness. Violating the first constraint results branch fully. We thus need to prove that the searches will
insomeotheragentk at(sgoal,r > r ).Violatingthesec- eventually find the solution as opposed to something like
j j DFSingarbitrarilybadbranches.
ond constraint means j occupies (sg joal,r ̸> r j). This re- First, we observe that since the low-level search is best
sultsinaviolationofDefinition3wherej willconflictwith first in respect to the (weighted sum) objective, the cost of
krestingatitsgoal. every successor node must be at least as large as the costthis edge case in the main paper because it is technically
involved. Now we discuss the edge case and present a for-
maldefinitionofdeadlockcriteriathatcoversallcases.The
edge case derives from the fact that TPG disallows follow-
ing between agents. That is, if agent 1 waits for agent 2 at
location s and agent 2 leave s at time t during execution,
agent 1 can only enter s after t, i.e. starting from the next
timestept+1.NowconsidertheexampledepictedinFig-
ureA1,followingthenotationinDefinition5,asetoffour
agentsA = {a |n = 0,1,2,3}eachoccupiesalocationin
n
FigureA1:Anexampleofadeadlockcycleasagentsrotat- a2×2gridandtheytrytorotatearoundthegrid.Thesetof
ing in place is not allowed according to the definition of a locations is S = {sn|n = 0,1,2,3}. In vertex-perspective
Type-2edge(Ho¨nigetal.2016).Theleftsubplotshowsthe TPG,theyhavepathsa 0 : (s1,0) → (s0,1),a 1 : (s2,0) →
edge perspective TPG for the scenario, with Type-1 edges (s1,1), a 2 : (s3,0) → (s2,1) and a 3 : (s0,0) → (s3,1).
denoted in color and Type-2 edges denoted in grey edges. SinceTPGrequiresagentscanonlymovetoorder1afterthe
The right subplot shows the same scenario depicted in the agentwhoholdsorder0leaves,agenta 3 isstuckat(s0,0)
space-order3Dspace.Theblue,red,purple,andgreentra- waitingforagenta 2 toleaves3,whoisstuckats3 waiting
jectory show the space-order paths for agent 0, 1, 2, and for agent a 1, who waits for a 0 and eventually the waiting
3 respectively. The grey vertical dotted lines represent co- propagate to a 3 itself. Therefore, the 4 agents in the above
ordination at the same location, corresponding to the grey situationsareinadeadlock.
Type-2 edges in the left subplot. There are different paired Let r mn be the order of agent a m at location sn. In the
shapes at the coordinated points on the paths. The same above situation, for i = 0,1,2,3, r nn = 1,r nn −1 = 0, so
shapeswithdifferentcolorsrepresenttwoagentscoordinat- r nn > r nn −1, satisfying condition 1 in Definition 5. How-
ing at the same location in different orders. All agents will ever,observethatagenta visitss1 thens0,whichviolates
0
bestuckatthesecondnodeintheirpaths,asallofthemhave condition 2 in Definition 5. Note that in this situation, all
order1inthenextnodeandarecyclicallydependent.Con- agentsa visitssn+1thenimmediatelyvisitssn.Therefore,
n
cretely, green needs to wait on purple, which waits on red, wegeneralizeDefinition5asfollows:
whichwaitsonblue,whichinturnwaitsforpurple,leading
Definition12(CompleteCycleCriteria). Adeadlockcycle
todeadlock.
of N agents consists of N Type-2 edges (i.e. coordination)
atN differentlocations.LetS ={sn|n=0,1,...N−1}be
of the parent node. This occurs as adding a constraint only
asetofN distinctlocationsandA={a |n=0,...N −1}
reducesthesearchspaceforthelow-levelsearch. n
a set of distinct agents. Index n is in module N. Let rn be
Second,avalidsolutionmusthaveafinitecost.Therefore m
the visitation order of agent a at location sn. Sets S and
starting from the root CT node, our high-level search will m
Aformadeadlockcyclewhen
expand all nodes whose costs are less then this finite cost
until it expands the solution node. Thus, Space-Order CBS 1. ∀n, agents a n,a n−1 visit sn with r nn > r nn −1. That is,
will return a solution if one exists. However, if there is no agenta nmustwaitforagenta n−1toenterlocationsn.
solution,Space-OrderCBS(likeregularCBS),willkeepon 2. ∀n,agenta nsatisfyoneofthefollowing:
searchinginfinitelyandneverreturnnosolution,andisthus (a) a visitssnthensn+1
n
onlyweaklycomplete. (b) a visitssn+1andthenimmediatelyvisitssn
n
WenotethatGCBS,ECBS,EECBSandothervariantsof
Thisformsacycleofagentsstuckwaitingforeachotherat
CBS employ this same proof given different search objec-
theType-2edges.
tives(e.g.ECBSminimizingconflictsthencosts)ratherthan
minimizing just the cost. Therefore our above Space-Order Notethatwhileintheaboveexample,allagentfallsinto
logicfollowsidenticallydespitethedifferentweightedsum the edge case, it is possible for a deadlock to have part of
objective. agents in A satisfy condition 2(a) while the others satisfy
2(b).Followingthecompletedefinitionofdeadlockcriteria,
B DetailsonDeadlockConflicts wegeneralizeDefinition13asfollows:
Definition13(CompleteCycleConstraints). Givenadead-
In Definition 5, we define deadlock criteria with a set of n
lock cycle in 5 involving n Type-2 edges: (sn,rn ) →
agentsAandasetofN locationsS,whichsatisfytwocon- n−1
(sn,rn) where n = 0,1,2,...,N −1 and rn < rn, we
ditions. The first condition states that each agent a ∈ A n n−1 n
n can break the cycle if any of the edges is broken. So we
needs to wait for the previous agent a at a location
sn ∈S.Thesecondconditionstatesthaten a− ch1 agenta must add 2 constraints for each n: (a) Agent n − 1 cannot go
wait for the previous agent a at sn before they cn an en- to(sn,r < r nn)ifitvisitlocationsn−1 thenvisitsn orifit
terandleavesn+1
toresolven th− e1
waitingforthenextagent
visitsn thenimmediatelyvisitsn−1.(b)Agentncannotgo
to(sn,r ≥rn).
a . If both conditions are satisfied, agents in A form a n
n+1
deadlockandwillbestuckwaitingforeachother. The proof for completeness follows identically as done
Thiscriteriacoversmostofthepossibledeadlocks.How- previously.
ever,thereisoneadditionalsubtleedgecaseofdeadlockthat
does not fall under the above criteria. We avoid discussing