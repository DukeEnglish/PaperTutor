Concurrency Model of BDI Programming Frameworks:
Why Should We Control It?
ExtendedAbstract
MartinaBaiardi SamueleBurattini Giovanni Ciatto
UniversityofBologna UniversityofBologna UniversityofBologna
Cesena,Italy Cesena,Italy Cesena,Italy
m.baiardi@unibo.it samuele.burattini@unibo.it giovanni.ciatto@unibo.it
DaniloPianini Andrea Omicini AlessandroRicci
UniversityofBologna UniversityofBologna UniversityofBologna
Cesena,Italy Cesena,Italy Cesena,Italy
danilo.pianini@unibo.it andrea.omicini@unibo.it a.ricci@unibo.it
ABSTRACT Adoptingtherightconcurrencymodelisessential,asitdeeply
WeprovideataxonomyofconcurrencymodelsforBDIframeworks, impactsmanyaspectsoftheagentprogrammingframeworkand
elicited by analysing state-of-the-art technologies, and aimed at thedynamicsofallMASsleveraging it.Inparticular,theconcur-
helping both BDI designers and developers in making informed rencymodelaffectswhether,andtowhatextent,multipleagents
decisions.ComparisonamongBDItechnologiesw.r.t.concurrency can runat the same time, impacting performance and efficiency
modelsrevealsheterogeneoussupport,andlowcustomisability. ofMASs;opposedly,parallelismaswellasthedeterminismofthe
overallMASdynamics, isastrictrequirement inapplicationsre-
KEYWORDS quiringreproducibility,suchasmulti-agentbasedsimulation[2].
Dealingwithconcurrencyiscommonlyacknowledgedaserror-
Agent-OrientedProgramming;Concurrency;BDIAgents;Threads
proneandchallenging.Thus,mainstreamprogrammingplatforms
ACMReferenceFormat: providededicatedlibrariesandlanguageconstructsshieldingde-
MartinaBaiardi,SamueleBurattini,GiovanniCiatto,DaniloPianini,An- velopersfromtheintricaciesofconcurrency.Similarly,Agent-Oriented
dreaOmicini,andAlessandroRicci.2024.ConcurrencyModelofBDIPro- Programming(AOP)toolsandframeworkscomewiththeirown
grammingFrameworks:WhyShouldWeControlIt?:ExtendedAbstract.In concurrencymodel,oftenhiddenunderthehood.
Proc.ofthe23rdInternationalConferenceonAutonomousAgentsandMul-
Although hiding concurrency details is helpful to reduce the
tiagentSystems(AAMAS2024),Auckland,NewZealand,May6–10,2024,
learning curve, experienced developers unaware of the nuances
IFAAMAS,3pages.
oftheframeworktheyarerelyinguponmayhavereducedcontrol
overtheexecutionoftheirMASsandthetrade-offsthatcomewith
1 INTRODUCTION
it.ThisisparticularlytrueforBDIagenttechnologies,wherethe
By construction,Belief-Desire-Intention (BDI)agents are ableto semanticsofintentionschedulingcanberealisedinmanydifferent
carryonmultipleintentionsatanygiventime[13],andmanyre- ways.Arguably,BDItechnologiesshouldratherletMASsdevelop-
searchandsoftware-developmenteffortshavebeendevotedtothe erschooseorconfigure theconcurrency modeloftheir systems,
definition of BDI architectures and programming languages giv- inordertotunetheexecutionoftheMAStothespecificneedsof
ing precise semantics to the concurrent execution of such inten- theirapplicationandexecutionenvironment.
tions[3]. Inthisstudy,weprovideataxonomyoftheconcurrencymod-
As computational entities, agents are autonomous if they en- elsavailableforBDIagenttechnologies,andclassifyseveralwidely
capsulate their own control flow [9]. Control-flow encapsulation usedframeworksaccordingly.ThecurrentliteratureonBDIagents
iscommonlyreferred toascomputational autonomy[10],and it and concurrency (e.g., [5, 6, 14–16]) focuses on agents’ internal
isconsideredanecessarypre-requisiteforautonomyinsoftware concurrency—roughly,howcontrolloopsinterleaveintentions.Con-
agents.Onmainstreamprogrammingplatforms,autonomyisachieved versely, we focusonexternal concurrency, i.e., thewaymultiple
by mapping each agent onto ad-hoc control-flow-related primi- agentsaremappedontotheunderlying(threads,processes,event
tives,suchasthreads,processes,oreventloops;providingdifferent loops,executors)concurrency abstractions.Finally, weelaborate
trade-offsintermsofefficiency,determinism,andreproducibility ontheimportanceofcustomisableMASsexecution,recommend-
oftheMulti-AgentSystems(MASs)builtontopofthem. ingframeworkdesignerstopromoteaneatseparationoftheMAS
specificationfromitsactualruntimeconcurrencymodel.
ThisworkislicensedunderaCreativeCommonsAttributionInternational4.0License.
2 CONCURRENCYMODELSFORBDI
SYSTEMS
Proc.ofthe23rdInternationalConferenceonAutonomousAgentsandMultiagentSys-
tems(AAMAS2024),N.Alechina,V.Dignum,M.Dastani,J.S.Sichman(eds.),May6–
Mostmodernprogramminglanguagessupportconcurrencythrough
10,2024,Auckland,NewZealand.©2024InternationalFoundationforAutonomous
AgentsandMultiagentSystems(www.ifaamas.org). one or more of the following abstractions: (i) threads, the basic
4202
rpA
61
]AM.sc[
1v12401.4042:viXraunitsofconcurrency[7],i.e.,theexecutorsofsequentialprograms;(ii)pro-Table1:BDItechnologiesandconcurrencymodels.Meaning
cesses,i.e.,containersofthreadssharingmemory;(iii)eventloops,
ofsymbols:“X”–supportedoutofthebox;“∗”–supports
i.e.,individualthreadscarryingoutsequentialprograms(tasks)en- customizations;“∼” – we were unable to conclusively con-
queuedbyusers;and(iv)executors,i.e.,eventloopswithapossibly firmorruleoutsupport.
configurableunboundthreadcount.
Asintroduced,externalconcurrencymodelsmapMASsconcepts Model→ 1A1T AA1T AA1EL AA1E AA1E 1A1P
ontotheseabstractions;concretely,theydifferinthewaythecon- Tech.↓ fixed variable
trolloopofeachagentismappedontothem.Differentmodelpro- Jason[3] X X∗ X X X∗ X∗
videdifferentgranularity: Astra[4] X∗ X∗ X X X ∼
One-Agent-One-Thread(1A1T)–eachagentismappedonto JaKtA[1] X X X X X X∗
Phidias[8] X × × × × X
asinglethread,whichisresponsibleforexecutingitsentirecontrol Spade-BDI[11] × × X × × X
loop.ThecontrolovertheofMASexecutionisabysmal:essentially, Jadex[12] × X × × X ×
developers are delegating control to the Operating System (OS).
Determinismiscompromisedaswell,astheOSschedulermayin-
terleavetheexecutionofdifferentagentsarbitrarily.Theamount
concurrencyabstractionsareused,andtowhatextenttheyarecus-
ofthreadsintheMASisunbound,whichmayleadtorelevantover-
tomisable.
headwhenthenumberofactiveagents(threads)isfargreaterthan
Table 1 summarises the results of our analysis including the
theamountofhardwarecores/processors.
1A1P model, which is the basis for agents not sharing memory,
All-Agents-One-Thread(AA1T)–thewholeMASisexecuted
hence,potentiallydistributable.
onasinglethreadthatinternallyschedulesallagents’execution
inacustomway,followingsome(usuallycooperative)scheduling
4 DISCUSSIONANDCONCLUSION
policy.ThismodelenablesfullydeterministicexecutionofMASs,
Theconcurrencymodelisaparamountdimensiontoconsiderwhen
asparallelismisabsent.Hence,itisdesirablewhenreproducibility
designingorusinga(BDI)MAStechnology.Generally,choiceisde-
is a concern, such as in testing or reproducible simulations, but
sirable,asdifferentapplicationsandexecutionenvironmentsmay
itisunsuitableforperformance-criticalscenarios,whenhardware
benefitfromdifferentconcurrencymodels.
capableofparallelcomputationisavailable.
Fromanapplicationdevelopmentperspective,theconcurrency
All-Agents-One-Event-Loop (AA1EL) – the whole MAS is
modelsimpactprimarilyreproducibilityandperformance.Repro-
executed on a single event loop, which internally schedules all
ducibilityrequiresdeterminism(especiallywhentesting),supported
agents’executionwithafirst-in-first-outqueueoftasks,guaran-
byAA1T;sheerperformanceisusuallybetterwithparallelmodels
teeingfairnessbydesign.AA1ELisequivalent(alsointermsofde-
like1A1Tor,preferably,AA1E.Somescenariosmaybebettertack-
terminismandperformance)toanAA1Tstrategywithfairsched-
led through customconcurrency models, hence, we recommend
uling(e.g.,round-robin).
BDItechnologydesignerstoprovidededicatedAPIs.
All-Agents-One-Executor(AA1E)–eachagent’sactivityis
Wearguethatflexibilityinthechoiceofconcurrencymodelsis
enqueuedastaskonasharedexecutor.However,tasksareexecuted
acentralfeatureforBDItechnologiesThus,werecommendcon-
concurrently(possibly,inparallel).AA1Eisconceptuallyequiva-
sideringthemearlyinBDIframeworkdesign:adoptingaspecific
lentto1A1T,yettechnologicallypreferableas,bycontrollingthe
concurrencymodelearlyonmaycomplicateorpreventchangingit
executor’sthreadcount,providesfinercontrolonthedegreeofpar-
later.Whensupportformultiple(customisable)concurrencymod-
allelism.Twospecialisationsofthismodelarepossible,depending
elsisnotfeasible,earlyanalysiscanstillprovebeneficial.Forin-
onwhetherthealivethreadcountchangeswithtime:fixedthread
stance, despitebeing conceptuallyakin, AA1Eispreferableover
poolsandvariablethreadpools.
1A1T,astheformersupportscontrollingtheoverallthreadcount.
Furthermodelscanbeobtainedby(possiblyhierarchical)com-
Careful design ofthe BDI framework architecture isessential
binations oftheaforementioned ones, obtaining diverse flexibili-
toensureseparationbetweentheMASspecificationanditsactual
ty/controllability trade-offs. For instance, considering that event
runtime concurrency model: the former should be written once,
loops, executors, and threads are hosted into processes, we can
andthelattershouldbeselectedaslateaspossible(ideally,atap-
thinkof:
plicationlaunch). Flexibility enables: (i) controlling reproducibil-
One-Agent-One-Process(1A1P)–eachagentisaprocessus-
ity for debugging or simulation, (ii) maximising performance in
ingthreads,executors,oreventloopsforinternalconcurrency.
production,(iii) comparing and selecting the best model for the
scenarioathand.
3 ANALYSISOFBDITECHNOLOGIES Summarising,externalconcurrencyofBDIagentsisparamount
inMASengineering,Yet,webelievefurtherinvestigationisneeded
Weanalyseaselectionofopen-sourceandactivelymaintainedBDI
toprovideageneralconcurrencyblueprintforBDItechnologies.
programmingtechnologiestoinspecttheirexternal concurrency
model(s).WefocusonJason[3],Astra[4],JaKtA[1],Phidias[8],
Spade-BDI[11],Jadex[12].Inouranalysis,foreachBDItechnol- ACKNOWLEDGMENTS
ogy,wecombinetwoapproaches:wefirstrunabenchmarktore- Thisworkhasbeenpartiallysupportedby:(i)“WOOD4.0”,Emil-
vealhowmanythreadsareinvolvedinaMASexecution;then,we ia-Romagna project, art. 6 L.R. N. 14/2014, call 2022; (ii) “FAIR”,
inspectthesourcecodeanddocumentationtounderstandwhich (PNRR,M4C2,Investimento1.3,Spoke8,P.E.PE00000013);(iii)“2023PhD scholarship co-fundedby NextGenerationEU and AUSL Ro- REFERENCES
magna”(PNRRM4C2,Investimento3.3,D.M.352/2022);and(iv)“EN- [1] Martina Baiardi, Samuele Burattini, Giovanni Ciatto, and Danilo Pianini.
GINES”,(ItalianMURPRIN2022,grant20229ZXBZM). 2023. JaKtA: BDI Agent-Oriented Programming in Pure Kotlin. In Multi-
Agent Systems - 20th European Conference, EUMAS 2023, Naples, Italy,
September 14-15, 2023, Proceedings (Lecture Notes in Computer Science,
Vol. 14282), Vadim Malvone and Aniello Murano (Eds.). Springer, 49–65.
https://doi.org/10.1007/978-3-031-43264-4_4
[2] StefaniaBandini,SaraManzoni,andGiuseppeVizzari.2009.AgentBasedMod-
elingandSimulation:AnInformaticsPerspective. J.Artif.Soc.Soc.Simul.12,4
(2009). http://jasss.soc.surrey.ac.uk/12/4/4.html
[3] Rafael H. Bordini, Jomi F. Hübner, and Michael J. Wooldridge.
2007. Programming Multi-Agent Systems in AgentSpeak us-
ing Jason. John Wiley & Sons, Ltd. XVII, 292 pages.
http://eu.wiley.com/WileyCDA/WileyTitle/productCd-0470029005.html
[4] Rem W. Collier, Sean Edward Russell, and David Lillis. 2015. Reflecting
onAgentProgrammingwithAgentSpeak(L). InPRIMA2015:Principlesand
Practice of Multi-Agent Systems. Springer International Publishing, 351–366.
https://doi.org/10.1007/978-3-319-25524-8_22
[5] Lavindra de Silva. 2020. An Operational Semantics for True Concur-
rency in BDI Agent Systems. In AAAI Conference on Artificial Intelligence.
https://api.semanticscholar.org/CorpusID:214310595
[6] LavindradeSilva,FelipeMeneguzzi,andBrianLogan.2020.BDIAgentArchitec-
tures:ASurvey.InProceedingsoftheTwenty-NinthInternationalJointConference
onArtificialIntelligence,IJCAI2020,ChristianBessiere(Ed.).ijcai.org,4914–4921.
https://doi.org/10.24963/ijcai.2020/684
[7] E.W.Dijkstra.1965.SolutionofaProbleminConcurrentProgrammingControl.
Commun.ACM8,9(sep1965),569. https://doi.org/10.1145/365559.365617
[8] Fabio D’Urso, Carmelo Fabio Longo, and Corrado Santoro. 2019. Pro-
gramming Intelligent IoT Systems with a Python-based Declarative
Tool (CEUR Workshop Proceedings, Vol. 2502), Claudio Savaglio, Giancarlo
Fortino, Giovanni Ciatto, and Andrea Omicini (Eds.). CEUR-WS.org, 68–81.
https://ceur-ws.org/Vol-2502/paper5.pdf
[9] JamesJ.Odell.2002.ObjectsandAgentsCompared.JournalofObjectTechnology
1,1(May–June2002),41–53. http://www.jot.fm/issues/issue_2002_05/column4
[10] AndreaOmicini,AlessandroRicci,andMirkoViroli.2008.ArtifactsintheA&A
Meta-ModelforMulti-AgentSystems.AutonomousAgentsandMulti-AgentSys-
tems17,3(Dec.2008),432–456. https://doi.org/10.1007/s10458-008-9053-xSpe-
cialIssueonFoundations,AdvancedTopicsandIndustrialPerspectivesofMulti-
AgentSystems.
[11] Javier Palanca, Jaime Andres Rincon, Carlos Carrascosa, Vicente Julián,
and Andrés Terrasa. 2022. A Flexible Agent Architecture in SPADE
(Lecture Notes in Computer Science, Vol. 13616). Springer, 320–331.
https://doi.org/10.1007/978-3-031-18192-4_26
[12] AlexanderPokahr,LarsBraubach,andWinfriedLamersdorf.2005.Jadex:ABDI
reasoningengine.149–174. https://doi.org/10.1007/0-387-26350-0_6
[13] Anand S. Rao. 1996. AgentSpeak(L): BDI agents speak out in a logical
computable language. In Agents Breaking Away, Walter Van de Velde and
JohnW.Perram(Eds.).SpringerBerlinHeidelberg,Berlin,Heidelberg,42–55.
https://doi.org/10.1007/BFb0031845
[14] AlessandroRicciandAndrea Santi.2013. ConcurrentObject-OrientedPro-
grammingwithAgent-Oriented Abstractions:TheALOOApproach.In2013
WorkshoponProgrammingBasedonActors,Agents,andDecentralizedControl
(AGERE!2013)(Indianapolis,Indiana,USA).ACM,NewYork,NY,USA,127–138.
https://doi.org/10.1145/2541329.2541333
[15] AlessandroRicciandAndreaSanti.2013.FromActorsandConcurrentObjects
toAgent-OrientedProgramminginsimpAL. InConcurrentObjectsandBeyond
–FestschriftinHonorofAkinoriYonezawa,GulAgha,AtsushiIgarashi,Naoki
Kobayashi,HidehikoMasuhara,SatoshiMatsuoka,EtsuyaShibayama,andKen-
jiroTaura(Eds.).Springer.
[16] MaiconR.Zatelli,AlessandroRicci,andJomiF.Hübner.2015. EvaluatingDif-
ferentConcurrencyConfigurationsforExecutingMulti-AgentSystems.InEngi-
neeringMulti-AgentSystems,MatteoBaldoni,LucianoBaresi,andMehdiDastani
(Eds.).SpringerInternationalPublishing,Cham,212–230.This figure "aamas2024logo.jpeg" is available in "jpeg"(cid:10) format from:
http://arxiv.org/ps/2404.10421v1This figure "thumbnail.jpg" is available in "jpg"(cid:10) format from:
http://arxiv.org/ps/2404.10421v1This figure "thumbnail.png" is available in "png"(cid:10) format from:
http://arxiv.org/ps/2404.10421v1