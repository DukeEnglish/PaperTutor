ReDel: A Toolkit for LLM-Powered Recursive Multi-Agent Systems
AndrewZhu, LiamDugan, ChrisCallison-Burch
UniversityofPennsylvania
{andrz,ldugan,ccb}@seas.upenn.edu
Abstract Help me plan a trip to
Japan visiting 3 cities.
Recently,therehasbeenincreasinginterestin
I'll need to find flights,
usingLargeLanguageModels(LLMs)tocon-
hotels, trains, and food.
structcomplexmulti-agentsystemstoperform
Search for flights to Japan...
taskssuchascompilingliteraturereviews,draft-
FlightSearch[SFO, NRT]
ingconsumerreports,andplanningvacations.
Manytoolsandlibrariesexistforhelpingcreate Find hotels in Tokyo, Osaka, ...
suchsystems,howevernonesupportrecursive Search for a hotel in Tokyo...
multi-agentsystems—wherethemodelsthem- Search for a hotel in Osaka... Delegation Graph
selves flexibly decide when to delegate tasks
andhowtoorganizetheirdelegationstructure. Figure1: ReDelallowsdeveloperstocreatesystemsof
Inthiswork,weintroduceReDel: atoolkitfor recursiveagents,inspecteachagent’sstate,andvisual-
recursivemulti-agentsystemsthatsupportscus- izeasystem’sdelegationgraph(right).Recursiveagents
tomtool-use,delegationschemes,event-based canbeusedtosolvecomplextasks,suchasplanninga
logging, and interactive replay in an easy-to- triptoJapan(left).
usewebinterface. Weshowthat,usingReDel,
weareabletoachievesignificantperformance
gainsonagenticbenchmarksandeasilyidentify a single root agent is given a tool to spawn addi-
potentialareasofimprovementsthroughthevi- tionalagents. Whenfacedwithacomplextask,the
sualizationanddebuggingtools.Ourcode,doc- rootagentcandecomposethetaskintosmallersub-
umentation,andPyPIpackageareopen-source1
tasks, then delegate those tasks to newly-created
andfreetouseundertheMITlicense.
sub-agents. Each sub-agent can then either com-
pletethetaskifitissmallenough,orrecursivelyde-
1 Introduction
composeanddelegatethetaskfurther2 (Khotetal.,
Amulti-agentsystemusesmultiplelargelanguage 2023;LeeandKim,2023;Prasadetal.,2024).
models (LLMs) together to accomplish complex Inthecurrentlandscapeofmulti-agentsystems,
tasksoranswercomplexquestionsbeyondtheca- themajorityoftoolingfocusesonhuman-defined
pabilitiesofasingleLLM.Often,insuchscenar- static systems, and poorly handles dynamic sys-
ios,eachLLMisprovidedwithtools(Parisietal., tems where agents are added to a computation
2022; Schick et al., 2023) that it can use to give graphatruntime. Furthermore,muchofthistool-
it additional capabilities, like searching the inter- ingisunsuitableforacademicpurposes(Zhuetal.,
net for real-time data or interacting with a web 2023)orhiddenbehindpaywallsandproprietary
browser. Inmostcases,thesesystemsaredefined licenses.
manually,withahumanresponsiblefordefininga Inthispaper,wepresentReDel,afully-featured
staticproblem-decompositiongraphanddefining open-sourcetoolkitforrecursivemulti-agentsys-
an agent to handle each subproblem in the graph tems. ReDelmakesiteasytoexperimentbyprovid-
(Hong et al., 2024; Wu et al., 2023; Zhang et al., ingamodularinterfaceforcreatingtools,differ-
2024;Qiaoetal.,2024,interalia). entdelegationmethods,andlogsforlateranalysis.
In a recursive multi-agent system, rather than Thisgranularloggingandacentralevent-driven
a human defining the layout of multiple agents, systemmakesiteasytolistenforsignalsfromany-
1ReDel’s source code is available at https://github. 2Thisiswherethetoolkit’sname,ReDel,comesfrom:it’s
com/zhudotexe/redel. shortforRecursiveDelegation.
1
4202
guA
5
]LC.sc[
1v84220.8042:viXrawhereinasystem,andeveryeventisautomatically
loggedforpost-hocdataanalysis. ReDelalsofea- R L a n L la m M e A u
turesawebinterfacethatallowsuserstointeract e D e l g G ra p a In d e ta G P T to G P T
withaconfiguredsystemdirectlyandviewreplays h x
DynamicSystems
ofsavedruns, makingiteasyforresearchersand
ParallelAgents
developerstobuild,iterateon,andanalyzerecur- Event-Driven
sivemulti-agentsystems. InSection4weuseRe- RunReplay
WebInterface
Deltorunrecursivemulti-agentsystemsonthree
FullyOpenSource
diverse agentic benchmarks, and in Section 5 we
demonstratehowthetoolkitcanbeusedtoexplore Table1: AfeaturecomparisonbetweenReDelandcom-
complexbehavioursofthesesystems. peting toolkits. ReDel is the only fully open-source
toolkitthatsupportsdynamicmulti-agentsystemswith
2 RelatedWork arichevent-drivenbaseandwebinterface.
RecursiveMulti-AgentSystems. Recentwork
onrecursivemulti-agentsystemshasbeendoneby ofeachstateofthesystem. Mostdonotprovidea
LeeandKim(2023),Khotetal.(2023),andPrasad visualizationinterface,withonlyAutoGPTprovid-
et al. (2024). These works introduce the method ingasimplechat-basedUI.Unlessonesubscribes
offine-tuningorfew-shotpromptingLLMstode- toapaidservice, LangGraph’sreplayscannotbe
compose complex tasks and using sub-agents to viewed visually, and are instead presented as the
solveeachpart(oftencalledrecursiveorhierarchi- rawdataofeachstate. Finally,onlyAutoGPTand
caldecomposition). Theyshowthatastasksgrow MetaGPTarefullyopen-source,withLangGraph
morecomplex,recursivemulti-agentsystems’per- and LlamaIndex utilizing proprietary code to of-
formance pulls away from single-agent systems. fer more “premium” features beyond what their
ReDelbuildsuponthemethodsintroducedinthese open-sourcelibrariesoffer.
worksbytakingadvantageofmodernmodels’na- Incomparison,ReDelallowsdeveloperstocus-
tivetoolusecapability(Schicketal.,2023)tode- tomizetheiragents’delegationstrategiesandbuild
composeanddelegatetaskszero-shot(i.e.,without multi-leveldynamicsystemswhileprovidingallof
human-writtenexamplesinprompt)insteadofus- these features out of the box and remaining fully
ingfew-shotpromptingorfine-tuning. Asaframe- free and open source. It is the only such toolkit
work,weprovideanextensibleinterfacetoapply to provide first-class support for recursive multi-
theseapproachestoadditionaltasksanddomains. agentsystemswithbest-in-classsupportforsystem
visualizationandmodernLLMswithtoolusage.
Multi-Agent System Frameworks. Although
thereareotherLLM-poweredmulti-agentsystem 3 SystemDesign
frameworks, each have various weaknesses that
make them poorly suited for recursive systems ReDelconsistsoftwomainparts: aPythonpack-
and/oracademicpurposes. InTable1,wecompare age to define recursive delegation systems, log
LangGraph(Camposetal.,2023),LlamaIndex(Liu events,andrunexperiments,andawebinterfaceto
etal.,2022),MetaGPT(Hongetal.,2024),andAu- quicklyandinteractivelyiterateondefinedsystems
toGPT(SignificantGravitas,2023)toReDel,our oranalyzeexperimentlogs. Inthefollowingsec-
system. Most are built around static multi-agent tions,wediscussthesecomponentsinmoredetail.
systems, with only AutoGPT supporting a single
3.1 ToolUsage
levelofdelegation. OnlyLangGraphandLlamaIn-
dexallowagentstoruninparallelasynchronously, InReDel,a“tool”isagroupoffunctions,written
whereasMetaGPTandAutoGPTrunoneagentat inPython,thatisexposedtoanagent. Theagent
a time in a synchronous fashion. To log events maygeneraterequeststocallappropriatefunctions
deepwithinthesystem,onlyLlamaIndexprovides fromthistool,whichinteractwiththeenvironment
arigorousinstrumentationsuitetodevelopersthat (e.g. searchingtheInternet).
allows them to emit events at any point while a Developers can define tools in any Python file,
system is running. Most do not allow develop- and a tool’s methods can be implemented by any
ers to replay a system run from a log, with only Pythoncode. ReDelisimplementedinpurePython,
LangGraphallowingreplaysbytakingsnapshots and method bodies will not be sent to an agent’s
2class MyHTTPTool(ToolBase): # define a custom event
@ai_function() class CustomToolEvent(BaseEvent):
def get(self, url: str): type: Literal["custom_event"] = "custom_event"
"""Get the contents of a webpage, id: str # the ID of the dispatching agent
and return the raw HTML.""" foo: str # some other data
resp = requests.get(url)
return resp.text # define a tool that dispatches the event
class MyTool(ToolBase):
@ai_function()
Figure2: AnexampleofasimpleReDeltoolthatex- def my_cool_function(self):
poses an HTTP GET function to any agent equipped self.app.dispatch(
withthetool. CustomToolEvent(id=self.kani.id, foo="bar")
)
# other behaviour here ...
underlying language model, so there is no limit
to a tool’s implementation complexity or length.
Figure 3: Using ReDel to define a custom event and
Similarly, a tool can use functionality defined in
dispatch it from a tool. Custom events can be used
anyotherexternallibrary,allowingdevelopersto
toaddobservabilitydeepwithinasystemandcanbe
utilize existing application code. An example of
queriedpost-hocforrichdataanalysis.
a basic tool that provides a function for making
HTTPrequestsisinFigure2.
prompt_toks = Counter()
ReDelcomesbundledwithawebbrowsingtool out_toks = Counter()
andemailtoolasexamples,andweencouragede-
velopers to implement domain-specific tools for for event in read_jsonl("/path/to/events.jsonl"):
theirownpurposes. if event["type"] == "tokens_used":
eid = event["id"]
3.2 DelegationSchemes prompt_toks[eid] += event["prompt_tokens"]
out_toks[eid] += event["completion_tokens"]
A delegation scheme is the strategy used by an
agenttosendtaskstosub-agents. InReDel,dele-
gationschemesareimplementedasaspecialtype Figure 4: Every event in a ReDel system, builtin or
oftoolthatanLLMagent(the“parent”)cancall custom,isloggedtoaJSONLfile. Developerscanuse
with task instructions as an argument. These in- dataanalysistoolsoftheirchoicetoanalyzeeventlogs
structionsaresenttoanewsub-agent(the“child”), post-hoc. Thisexampledemonstratestokencounting.
whichcaneithercompletethemiftheyaresimple
enough, or break them up into smaller parts and
drawbackisthatthisrunstheriskofcreatingzom-
recursivelydelegateagain.
bie agents if the parent agent never retrieves the
Takinginspirationfromcommonprocessman- resultsofaparticularchildagent.3 Asfarasweare
agement paradigms found in operating systems, aware,ReDelisthefirstsystemtoimplementthis
ReDelcomeswithtwodelegationschemes: typeofdeferreddelegationscheme.
Developerscanalsoimplementtheirowndele-
• DelegateOne: Blockparentagent’sexecution
gation schemes modularly in a fashion similar to
untilchildagentreturnsitsresult.
definingtoolswhichcanenablemorecomplexbe-
• DelegateWait: Do not block parent agent’s
haviourlikemulti-turndelegation. Weincludean
execution. Instead, provide a separate func-
exampleofhowtodefineadelegationschemein
tiontoretrievetheresultofaparticularchild.
AppendixA.
TheDelegateOneschemeiswell-suitedforLLMs
3.3 Events&Logging
withparallelfunctioncallingasitallowsReDelto
ReDeloperatesasanevent-drivenframework,with
letagroupofspawnedchildagentsruninparallel,
comprehensive built-in events and the ability to
andreturntheirresultsoncetheyallcomplete.
In contrast, the DelegateWait scheme is well- definecustomevents. Aneventcanbedefinedas
anything from the creation of a sub-agent to the
suitedforLLMswithoutparallelfunctioncalling,
usageofaparticulartool. WheneverReDelcatches
as it lets these models spawn multiple agents be-
foredecidingtowaitonanyoneagent’sresult. The 3Fromourtesting,thisisafairlyrareoccurrence.
3Root node message history.
Computation graph. Click a node to
A running node. view its
Start a new empty session with the configured ReDel system. Waiting on children. message history
A finished node. in the selected
Load a saved session in the replay viewer. The selected node. node view.
Interactive The root node.
sessions you've
started appear
here.
Read more about ReDel.
Send new messages to the root node.
Start a new session with the configured ReDel
system by sending the first message. Selected node message history view.
(a)ThehomepageoftheReDelwebinterface. (b)ReDel’sinteractiveviewallowsuserstoquicklyiterate
onpromptsandtooldesign,andtestend-to-endperformance.
Root node message history. Computation graph. Click a node to
A running node. view its
Sort saves by edit time, Waiting on children. message history
The current directory (relative to the save roots). name, or event count. A finished node. in the selected
The selected node. node view.
Search all save titles for keywords. The root node.
The save's title.
Jump to:
Previous/next event
Previous/next message (selected node)
The number of events in the save. Previous/next message (root) Event count.
The date and time the save was last modified. Selected node message history view.
Seek (click & drag)
(c)Thesavebrowserdisplayslogsfoundinconfigureddirec- (d)ReDel’sreplayviewallowsdeveloperstoreplaysaved
toriesonthefilesystem.Itallowsdeveloperstosearchforand runsofReDelsystems,givingeventstemporalcontextwhen
reviewpreviousrunsofReDelsystems. analyzingordebuggingasystem’sperformance.
Figure5: ThefourviewsoftheReDelwebinterface: Home(a),Interactive(b),SaveBrowser(c),andReplay(d).
anevent,itlogstheeventtoaJSONLfile. Thisfile newsessions,orloadsavedreplays.
essentiallyactsasanexecutiontraceforasystem
runanduserscanusestandarddataanalysistools InteractiveView. Intheinteractiveview(Figure
to inspect this trace and debug their runs. Figure 5b), users can send messages to the root node to
4showshowabasicPythonscriptcanbeusedto interactwiththesystem. Whilethesystemisrun-
countasystem’stokenusagepost-hoc. ning, the top right panel contains the delegation
Furthermore,usingjustthebuilt-inevents,Re- graph: avisualrepresentationofeachagentinthe
Delisabletointeractivelyplaybackanyresponse system, their parent and children, and what their
throughourwebinterfacefor extravisualdebug- currentstatusis: running(green),waiting(yellow),
gingaid(seeSection3.4). InSection4weshowa ordone(grey). Userscanfurtherinspecteachnode
casestudyofhowthiscanbeusedtodebugcom- in the delegation graph by clicking it, which dis-
plexqueryfailures. Weprovidethesetofbuilt-in plays its full message history in the bottom right
default events in Appendix B and an example of panel. ReDelsupportsstreaming,andLLMgener-
definingacustomeventinFigure3. ationsappearinreal-timeforeveryagent.
3.4 WebInterface SaveBrowser. Thesavebrowser(Figure5c)al-
lowsuserstoselectreplaystoviewfromthelistof
Thewebinterfaceconsistsoffourmainviews:
previoussessions. Thisallowsresearcherstorun
Home Page. The home page (Figure 5a) is the experimentsinbatcheswhilesavingtheirlogs,and
defaultviewwhenstartingtheinterfaceforthefirst usetheinterfacetoreviewthesystem’sbehaviour
time. Users can transition to the interactive view atalaterdate. Thesavelistcontainsallthesaves
by sending a message in the chat bar, or use the that the ReDel server found in the provided save
provided buttons to load a saved replay or read directories,theirtitles,numberofevents,andwhen
more about ReDel. The sidebar lets users switch they were last edited. Users can search for key-
betweeninteractivesessionstheyhavestarted,start words in a save’s title and can also sort saves by
4FanOutQA TravelPlanner WebArena
System Loose ModelJudge CS-Micro H-Micro Final SR SR(AC) SR(UA)
ReDel(GPT-4o) 0.687 0.494 67.49 9.52 2.78 0.203 0.179 0.643
ReDel(GPT-3.5-turbo) 0.300 0.087 54.58 0 0 0.092 0.066 0.571
Baseline(GPT-4o) 0.650 0.394 50.83 18.81 0 0.162 0.128 0.786
Baseline(GPT-3.5-turbo) 0.275 0.077 48.75 0.24 0 0.085 0.058 0.571
PublishedSotA 0.580 0.365 61.1 15.2 1.11 0.358 — —
Table2: Systems’performanceonFanOutQA,TravelPlanner,andWebArena. TheSotAmodelsareGPT-4oon
FanOutQA,GPT-4-turbo/GeminiProonTravelPlanner,andStePonWebArena. WeseethatReDeloutperformsthe
correspondingsingle-agentbaselinesacrossallbenchmarksandimprovesoverpublishedSotAintwoofthree.
name, edit time, or number of events – the latter Duetocostconstraintswelimitedourevaluationto
allowinguserstoquicklyfindoutliersataglance. roughly100-300examplesfromeachbenchmark
(seeAppendixC).
ReplayView. Withjustthebuilt-indefaultevents
(seeAppendixB)ReDelsavesenoughinformation
aboutasessiontofullyrecreateitinareplaysetting. Models. For our main two ReDel systems we
Thus,thereplayview(Figure5d)allowsusersto usedGPT-4o(OpenAI,2024)andGPT-3.5-turbo
stepthrougheveryevent(bothbuilt-inandcustom) (OpenAI, 2022) as the underlying models. In all
dispatchedbythesystemduringaparticularsession setups,rootnodesarenotgiventoolusagecapabil-
andvisualizeeachevent’simpactonthesystem. itiesandusetheDelegateOnedelegationscheme.
Thelayoutofthereplayviewisvirtuallyidenti- Forthetwobaselinesystems,weusedtheGPT-
caltotheinteractiveviewexceptwiththemessage 4o and GPT-3.5-turbo models as-is. All models
bar replaced by replay controls. Users can use were given equal access to all tools and no few-
these controls to jump between messages in the shotpromptingorfine-tuningwasperformed.
rootnode,selectednodeinthedelegationgraph,or
seekeventsusingtheslider. Themessagehistory
4.2 Results
anddelegationgraphupdateinrealtimeasusers
seekthroughthereplay.
InTable2wereporttheresultsofourevaluation.
Weseethat,acrossallbenchmarks,ourrecursive
4 Evaluation&CaseStudy
delegationsystemsignificantlyoutperformsitscor-
ToevaluateReDel,wecompareitsperformanceto respondingsingle-agentbaseline. Weevenpresent
abaselinesingle-agentsystemandtothepublished animprovementoverthepreviousstateoftheart
state-of-the-art system on three different bench- systemsinbothFanOutQAandTravelPlanner.
marks. Weincludethelogsandsourcecodeforall
Furthermore,weseethatthegapbetweenReDel
experimentsinourcoderelease.
andthebaselinesystemgetslargerasthecapabili-
tiesoftheunderlyingmodelimproves. Webelieve
4.1 ExperimentalSetup
thatthisbodeswellfortheapplicationofsuchtech-
Benchmarks. To properly evaluate ReDel we
niquestofuture,morepowerfulmodels.
had to choose only datasets that contained suffi-
In the few cases where ReDel fails, namely H-
ciently complex tasks. For our benchmarks we
Micro on TravelPlanner and SR on WebArena,
thereforechosethefollowing:
theseareattributabletometricfailuresandunequal
1. FanOutQA:(Zhuetal.,2024)Agentsmust comparisons. IntheTravelPlannercase,onfurther
compiledatafrommanyWikipediaarticlesto inspection,wefindthatrecursivesystemstendto
answercomplexinformation-seekingqueries. make more commonsense inputs for meals (e.g.
2. TravelPlanner: (Xie et al., 2024) Agents “ontheflight”or“packedlunch”)–whichcauses
mustcreatetravelplansusingtoolstosearch theTravelPlannerevaluationscripttogiveascore
flights,restaurant,andattractiondatabases. of0ontheHardConstraintmetric. AsfortheWe-
3. WebArena: (Zhouetal.,2024)Agentsmust bArenaresult,thepublishedSotAStePmodeluses
docomplexwebtaskssuchasaddingproducts few-shot,chain-of-thoughtprompting,whereasour
toashoppingcartorcommentingonGitLab. systemsallusezero-shotprompting.
55 UsingReDelforErrorAnalysis FOQA TP WA
System OC UC OC UC OC UC
Forourerroranalysis,wetookthesavedlogfiles
RD(4o) 22.7 11.3 41.1 0.5 31.3 44.8
foreachbenchmarkandmanuallyinvestigatedthe RD(3.5-t) 40.8 1.1 96.7 0 54.6 17.7
logsofboththesuccessfulrunsaswellasthefailed
runs through the replay view of the ReDel web Table 3: The overcommitment (OC) and undercom-
interface. Throughthisinvestigationweobserved mitment (UC) rates, in percent, of the two recursive
multi-agentsystemswetested,bybenchmark.
twocommonfailurecasesinrecursivemulti-agent
systems. Thesecasesareasfollows:
• Overcommitment: The agent attempts to
completeanoverly-complextaskitself.
• Undercommitment: Theagentperformsno
workandre-delegatesthetaskitwasgiven.
We find that overcommitment commonly occurs
whenanagentperformsmultipletoolcallsandfills
itscontextwindowwithretrievedinformation. This
often, but not always, leads to failures due to the
retrieved information truncating the original task
fromitscontext. IntheReDelwebinterface,this
Figure6: Recursivesystemsexhibitingundercommit-
manifestsasanabnormallysmalldelegationgraph,
ment produce long chains of agents (blue boxes), as
oftenconsistingofonlytwonodes: therootnode,
seenintheReDeldelegationgraph.
andasinglechildwhichtherootdelegatestoand
whichsubsequentlyovercommits.
Whileimplementingsuchimprovementsisbe-
Incontrast,wefindthatundercommitmentcom-
yond the scope of this paper, we believe that this
monlyhappenswhenthemodelincorrectlydecides
casestudyhelpstodemonstratethestrengthsofthe
thatitdoesnothavethenecessarytoolstosolvethe
ReDelsystem. Usingthedelegationgraphview,it
problemandinsteadassumesthatitsfuturechild
iseasytoidentifyandcharacterizeerrorsinrecur-
will possess the required tools to solve the prob-
sivemulti-agentsystemsandwehopethatthrough
lem. Inallthreebenchmarks,thisledtofailureas
ReDelmoreresearchcanbedonetofurtherrefine
agentsenteredaninfiniteloopofdelegationuntil
suchsystemsformaximumutility.
theyreachedaconfigureddepthlimitortimedout.
In the web interface, this manifests as a line of
6 Conclusion
nodesinthedelegationgraph(Figure6).
InTable3wetabulatetheover-andundercom- WepresentReDel,anoveltoolkitforworkingwith
mitmentratesofReDelwithbothGPT-4oandGPT- recursivemulti-agentsystems. ReDelallowsaca-
3.5-turboforeachbenchmark. Wedidthisheuristi- demicdeveloperstoquicklybuild,iterateon,and
callybycountinganydelegationgraphwithtwoor run experiments involving dynamic multi-agent
feweragentsasovercommittedandanydelegation systems. It offers a modular interface to create
graphwithachainofthreeormoreagentswithex- tools for agents to use, an event framework to in-
actlyzerooronechildrenasundercommitted. We strumentexperimentsforlateranalysis,andafree
seethatasmodelsgetstrongertheyhaveastronger andopen-sourcewebinterfacetointeractwithand
propensitytodelegate. However,thatpropensityto explore developer-defined systems. We use Re-
delegatemayleadtoundercommitment. Deltodemonstraterecursivemulti-agentsystems’
Giventheprevalenceofthesetwoissues,wehy- performanceonthreediversebenchmarks,andwe
pothesizethatrecursivemulti-agentsystemsmay includethefulllogsoftheserunsinourdemore-
stillseefurtherimprovementstoperformancefrom
leaseforreproducibilityandfurtherexploration4.
interventions that target these behaviors. For ex- ReDelopensthedoorforanewparadigmofrecur-
ample,onecouldfine-tuneorpromptagentswith sivemulti-agentsystems,andweareexcitedtosee
domain-specific instructions that detail when the howdeveloperscanutilizeoursysteminthefuture.
modelsshoulddelegateandwhentheyshouldper-
4https://datasets.mechanus.zhu.codes/
formtasksontheirown. redel-dist.zip
6References Qingyun Wu, Gagan Bansal, Jieyu Zhang, Yiran
Wu, Beibin Li, Erkang Zhu, Li Jiang, Xiaoyun
NunoCampos,WilliamFH,VadymBarda,andHarrison Zhang, Shaokun Zhang, Jiale Liu, Ahmed Hassan
Chase.2023. LangGraph. Awadallah, Ryen W White, Doug Burger, and Chi
Wang. 2023. AutoGen: enabling next-gen llm ap-
SiruiHong,MingchenZhuge,JonathanChen,Xiawu plications via multi-agent conversation. Preprint,
Zheng,YuhengCheng,JinlinWang,CeyaoZhang, arXiv:2308.08155.
ZiliWang,StevenKaShingYau,ZijuanLin,Liyang
Zhou, Chenyu Ran, Lingfeng Xiao, Chenglin Wu, JianXie,KaiZhang,JiangjieChen,TinghuiZhu,Renze
andJürgenSchmidhuber.2024. MetaGPT:Metapro- Lou,YuandongTian,YanghuaXiao,andYuSu.2024.
grammingforamulti-agentcollaborativeframework. TravelPlanner: Abenchmarkforreal-worldplanning
InTheTwelfthInternationalConferenceonLearning with language agents. In Forty-first International
Representations. ConferenceonMachineLearning.
TusharKhot,HarshTrivedi,MatthewFinlayson,Yao Ceyao Zhang, Kaijie Yang, Siyi Hu, Zihao Wang,
Fu,KyleRichardson,PeterClark,andAshishSab- Guanghe Li, Yihang Sun, Cheng Zhang, Zhaowei
harwal.2023. Decomposedprompting: Amodular Zhang, AnjiLiu, Song-ChunZhu, XiaojunChang,
approachforsolvingcomplextasks. InTheEleventh JungeZhang,FengYin,YitaoLiang,andYaodong
International Conference on Learning Representa- Yang.2024. Proagent: Buildingproactivecoopera-
tions. tiveagentswithlargelanguagemodels. Proceedings
of the AAAI Conference on Artificial Intelligence,
Soochan Lee and Gunhee Kim. 2023. Recursion of 38(16):17591–17599.
thought: A divide-and-conquer approach to multi-
Shuyan Zhou, Frank F. Xu, Hao Zhu, Xuhui Zhou,
context reasoning with language models. In Find-
RobertLo,AbishekSridhar,XianyiCheng,Tianyue
ingsoftheAssociationforComputationalLinguis-
Ou,YonatanBisk,DanielFried,UriAlon,andGra-
tics: ACL 2023, pages 623–658, Toronto, Canada.
hamNeubig.2024. Webarena: Arealisticweben-
AssociationforComputationalLinguistics.
vironmentforbuildingautonomousagents. InThe
TwelfthInternationalConferenceonLearningRepre-
JerryLiu,Logan,andSimonSiu.2022. LlamaIndex.
sentations.
OpenAI.2022. ChatGPT:OptimizingLanguageMod-
AndrewZhu,LiamDugan,AlyssaHwang,andChris
elsforDialogue.
Callison-Burch. 2023. Kani: A lightweight and
highly hackable framework for building language
OpenAI.2024. HelloGPT-4o.
modelapplications. InProceedingsofthe3rdWork-
shopforNaturalLanguageProcessingOpenSource
Aaron Parisi, Yao Zhao, and Noah Fiedel. 2022.
Software(NLP-OSS2023),pages65–77,Singapore.
TALM:toolaugmentedlanguagemodels. Preprint,
AssociationforComputationalLinguistics.
arXiv:2205.12255.
AndrewZhu,AlyssaHwang,LiamDugan,andChris
ArchikiPrasad,AlexanderKoller,MareikeHartmann, Callison-Burch. 2024. FanOutQA: a multi-hop,
PeterClark, AshishSabharwal, MohitBansal, and multi-documentquestionansweringbenchmarkfor
Tushar Khot. 2024. ADaPT: As-needed decompo- largelanguagemodels. InProceedingsofthe62nd
sitionandplanningwithlanguagemodels. InFind- AnnualMeetingoftheAssociationforComputational
ingsoftheAssociationforComputationalLinguis- Linguistics(ACL2024),Bangkok,Thailand.Associ-
tics: NAACL2024,pages4226–4252,MexicoCity, ationforComputationalLinguistics.
Mexico.AssociationforComputationalLinguistics.
ShuofeiQiao,NingyuZhang,RunnanFang,YujieLuo,
WangchunshuZhou,YuchenEleanorJiang,Chengfei
Lv, and Huajun Chen. 2024. AutoAct: automatic
agentlearningfromscratchforqaviaself-planning.
InProceedingsofthe62ndAnnualMeetingoftheAs-
sociationforComputationalLinguistics(ACL2024),
Bangkok,Thailand.AssociationforComputational
Linguistics.
TimoSchick,JaneDwivedi-Yu,RobertoDessi,Roberta
Raileanu,MariaLomeli,EricHambro,LukeZettle-
moyer,NicolaCancedda,andThomasScialom.2023.
Toolformer: Languagemodelscanteachthemselves
tousetools. InThirty-seventhConferenceonNeural
InformationProcessingSystems.
SignificantGravitas.2023. AutoGPT.
7A CustomDelegationScheme
ThefollowingannotatedcodesnippetshowshowtousetheReDelPythonpackagetodefineadelegation
scheme–thedelegationschemehereisareproductionofthebundledDelegateOnescheme.
class DelegateOne(DelegationBase):
@ai_function()
async def delegate(instructions: str):
"""(Insert your prompt for the model here.)"""
# request a new agent instance from the system
subagent = await self.create_delegate_kani(instructions)
# set the state of the delegator agent to be waiting on the delegate
with self.kani.run_state(RunState.WAITING):
# buffer the delegate's response as a list of strings, filtering for ASSISTANT messages
# use full_round_stream so that the app automatically dispatches streaming events
result = []
async for stream in subagent.full_round_stream(instructions):
msg = await stream.message()
if msg.role == ChatRole.ASSISTANT and msg.content:
result.append(msg.content)
# clean up any of the delegate's ephemeral state and return result to caller
await subagent.cleanup()
return "\n".join(result)
Figure7: UsingReDeltodefineacustomdelegationscheme. Delegationtoolsareresponsibleforthelifecycleof
anyagenttheycreate.
B ApplicationEvents
Thefollowingtableliststhebuilt-indefaulteventsthatwillbeemittedoneveryrunofaReDelsystem.
Eacheventhasatypekeywhichisusedtodeterminewhatkindofeventitis,andatimestampkey.
EventName Key Description
AgentSpawned kani_spawn Anewagentwasspawned.Thedataattachedtotheeventcontainsthefullstate
oftheagentatthetimeitwasspawned,whichincludesitsID,relationstoother
agents,adescriptionoftheLLMpoweringit,thetoolsithasaccessto,andany
systemprompts.
AgentStateChange kani_state_change Therunningstateofanagentchanged(e.g. fromRUNNINGtoWAITING).
ContainstheIDoftheagentanditsnewstate.
TokensUsed tokens_used Anagentmadeacalltothelanguagemodelpoweringit.ContainstheIDofthe
agent,thenumberoftokensinthepromptitsent,andthenumberoftokensin
thecompletiontheLLMreturned.
AgentMessage kani_message Anagentaddedanewmessagetoitschathistory.ContainstheIDoftheagent
andthemessage’srole(e.g.USERorASSISTANT)andcontent.
RootMessage root_message SimilartoAgentMessage,butonlyfiresformessagesintherootnode.Thisis
firedinadditiontoanAgentMessageevent.
RoundComplete round_complete Firedwhentherootnodecompletesafullchatround(i.e.therearenorunning
childrenandithasgeneratedaresponsetoauserquery).
Table4: Alistofeventsbuilt-intotheReDeltoolkit.
C BenchmarkComparison
Here,wetabulateeachofthebenchmarkstestedinourexperiments.
8Benchmark Split # Example Metrics
FanOutQA dev 310 Whatisthetotalnum- Loose:Theaverageproportionofreferencestringsfoundin
(Zhuetal.,2024) ber of employees in thegeneratedanswer.
thefivelargestbanks ModelJudge:Whetherthereferenceanswerandgenerated
intheworld? answerareequivalent,judgedbyGPT-4(gpt-4-0613).
TravelPlanner val 180 Please help me plan CS-Micro:Theproportionofelementsinageneratedtravel
(Xieetal.,2024) a trip from St. Pe- planthatdonotdemonstrateacommonsenseerror(e.g.visit-
tersburgtoRockford ingthesameattractiontwice).
spanning3daysfrom H-Micro: Theproportionofelementsinageneratedtravel
March16thtoMarch planthatdonotviolateaconstraintsetbytheuseroraphysi-
18th,2022.Thetravel calconstraint(e.g.budgetoverruns,non-existentrestaurants).
shouldbeplannedfor Final:Theproportionofgeneratedtravelplansinwhichthere
asinglepersonwitha arenoexhibitedcommonsenseerrorsandallconstraintsare
budgetof$1,700. met(i.e.,validtravelplans).
WebArena test 271 Show me the er- SR:Whetherthetaskissuccessfullycompletedorcorrectly
(Zhouetal.,2024) gonomic chair with markedasunachievable.
thebestrating SR(AC):Whetherthetaskissuccessfullycompleted,only
amongtasksthatareachievable.
SR(UA):Whetherthetaskiscorrectlymarkedasunachiev-
able,onlyamongtasksthatareunachievable.
Table5: Thedatasetsplit,numberofqueries,andexamplequeriesfromeachofthebenchmarkswetest.
D AdditionalDesignNotes
D.1 Prompts
In this section, we provide the prompts used for each benchmark. We use zero-shot prompts for each
benchmark,andprovidethenecessarytoolsasdefinedineachbenchmark’spaper.
Prompt
FanOutQA USER: {question}
(Zhuetal.,2024)
TravelPlanner SYSTEM: Based on the user’s query, make the best travel plan for the user and save
(Xieetal.,2024) it. Do not ask follow-up questions.
USER: {question}
WebArena SYSTEM: You are an autonomous intelligent agent tasked with navigating a web browser.
(Zhouetal.,2024) You will be given web-based tasks. These tasks will be accomplished through the
use of specific functions you can call.
Here’s the information you’ll have:
The user’s objective: This is the task you’re trying to complete.
The current web page’s accessibility tree: This is a simplified representation of
the webpage, providing key information.
The current web page’s URL: This is the page you’re currently navigating.
The open tabs: These are the tabs you have open.
Homepage: If you want to visit other websites, check out the homepage at
http://homepage.com. It has a list of websites you can visit.
USER: BROWSER STATE: {observation}
URL: {url}
OBJECTIVE: {objective}
Table6: Thepromptsusedforeachbenchmarkinourevaluation.
D.2 IdenticalDelegationPrevention
Bydefault,thedelegationschemesbundledinReDelwillpreventanagentfromdelegatinginstructions
thatarethesameastheinstructionsthatweregiventoit. Ifanagentattemptstodoso,thedelegation
functionreturnsamessageinstructingtheagenttoeitherattemptthetaskitselforbreakitintosmaller
piecesbeforedelegatingagain. Weimplementedthisasanearlymitigationforundercommitment,but
someundercommitmentstilloccurs.
9