MULTI-ROBOT MOTION PLANNING WITH DIFFUSION
MODELS
YoraiShaoul∗, ItamarMishani∗, ShivamVats∗, JiaoyangLi&MaximLikhachev.
RoboticsInstitute,SchoolofComputerScience,CarnegieMellonUniversity.
{yshaoul,imishani,svats,jiaoyanl,maxim}@cs.cmu.edu
ABSTRACT
Diffusion models have recently been successfully applied to a wide range of
robotics applications for learning complex multi-modal behaviors from data.
However,priorworkshavemostlybeenconfinedtosingle-robotandsmall-scale
environments due to the high sample complexity of learning multi-robot diffu-
sion models. In this paper, we propose a method for generating collision-free
multi-robot trajectories that conform to underlying data distributions while us-
ing only single-robot data. Our algorithm, Multi-robot Multi-model planning
Diffusion (MMD), does so by combining learned diffusion models with clas-
sical search-based techniques—generating data-driven motions under collision
constraints. Scaling further, we show how to compose multiple diffusion mod-
els to plan in large environments where a single diffusion model fails to gen-
eralize well. We demonstrate the effectiveness of our approach in planning for
dozens of robots in a variety of simulated scenarios motivated by logistics en-
vironments. View video demonstrations in our supplementary material, and our
codeat: https://github.com/yoraish/mmd.
1 INTRODUCTION
Multi-robotmotionplanning(MRMP)isafundamentalchallengeinmanyreal-worldapplications
where teams of robots have to work in close proximity to each other to complete their tasks. In
automated warehouses, for example, hundreds of mobile robots and robotic manipulators need to
coordinatewitheachothertotransportandexchangeitemswhileavoidingcollisions. Learningmo-
tions from demonstrations can oftentimes allow robots to complete tasks they couldn’t otherwise,
like navigating a region in a pattern frequently followed by human workers; however, it is un-
clearhowtobestincorporatedemonstrationsinMRMP.Infact,MRMPatitssimplestform,where
robots are only concerned with finding short trajectories between start and goal configurations, is
alreadyknowntobecomputationallyintractable(Hopcroft&Wilfong,1986)—significantlyharder
than single-agent motion planning due to the complexity of mutual interactions between robots.
Attempting to simplify the problem, various approximate formulations have been proposed in the
literature. Forexample,apopularapproachistoformulatetheproblemasamulti-agentpathfind-
ing problem (MAPF) (Stern et al., 2019) by discretizing space and time. While the latest MAPF
planners(Lietal.,2021;Okumura,2024)cancomputenear-optimalplansandscaletohundredsof
agents, they make strong assumptions, such as constant velocities and rectilinear movements that
limit their real-world application and reduce their ability to generate complex behaviors learned
fromdemonstrations.
∗Equalcontribution.
1
4202
tcO
4
]OR.sc[
1v27030.0142:viXraInsingle-agentmotionplanning,methodsthatlearntoplanfromdata(Xiaoetal.,2022)havebeen
widelyusedtocircumventsimilarlimitationsresultingfrominaccuratemodels(Vemulaetal.,2021),
partialobservability(Choudhuryetal.,2018)andslowplanning(Sohnetal.,2015;Qureshietal.,
2020). Morerecently, diffusionmodels(DM)haveemergedasthegenerativemodelofchoicefor
learning visuomotor manipulation policies from demonstrations (Chi et al., 2024), motion plan-
ning (Carvalho et al., 2023), and reinforcement learning (Janner et al., 2022). However, there has
beenrelativelylittleworkonextendingtheseideastomulti-robotmotionplanning. Thisisdueto
thetwinchallengesofgeneratinghighqualitymulti-agentdataandthecurseofdimensionality,i.e.,
significantlyhighersamplecomplexityoflearningmulti-robotmodels.
In this paper, we propose a data-efficient and scalable multi-robot diffusion planning algorithm,
Multi-robotMulti-modelplanningDiffusion(MMD),thataddressesboththesechallengesbycom-
bining constraint-based MAPF planners with diffusion models. Importantly, our approach calls
for learning only single-robot diffusion models, which does away with the difficulty of obtaining
multi-robotinteractiondataandbreaksthecurseofdimensionality. MMDgeneratescollision-free
trajectoriesbyconstrainingsingle-robotdiffusionmodelsusingournovelspatio-temporalguiding
functionsandchoosingconstraintplacementviastrategiesinspiredbyMAPFalgorithms. Ourcon-
tributionsinthispaperarethreefold:
• We propose a data-efficient framework for multi-robot diffusion planning inspired by
constraint-basedsearchalgorithms.
• WeprovideacomparativeanalysisoftheperformanceoffiveMMDalgorithms,eachbased
onadifferentMAPFalgorithm,sheddinglightontheirapplicabilitytocoordinatingrobots
leveragingdiffusionmodelsforplanning.
• Weshowthatwecanscaleourapproachtoarbitrarilylargeanddiversemapsbylearning
andcomposingmultiplediffusionmodelsforeachrobot.
Our experimental results from varied motion planning problems in simulated scenarios motivated
bylogisticsenvironmentssuggestthatourapproachscalesfavorablywithboththenumberofagents
andthesizeoftheenvironmentwhencomparedtoalternatives.
2 PRELIMINARY
InthissectionwedefinetheMRMPproblemandproviderelevantbackgroundonconstraint-based
MAPF algorithms and on planning with diffusion models. Sec. 3 elaborates on how we combine
theseconceptstocoordinatenumerousrobotsthatplanwithdiffusionmodels.
2.1 MULTI-ROBOTMOTIONPLANNING(MRMP)
GivennrobotsR ,MRMPseeksasetofcollision-freetrajectories,oneforeachrobot,thatoptimize
i
agivenobjectivefunction. LetSibethestatespaceofasinglerobotandastatebesi :=[qi,q˙i]⊺ ∈
Si where qi and q˙i are the configuration and velocity of the robot. Each robot has an assigned
start state si ∈ Si and binary termination (goal) condition Ti : Si → {0,1}. An MRMP
start
solution is a multi-robot trajectory τ = {τ1,···τn}, where τi : [0,Ti] → Si represents the
trajectory of robot R over the time interval [0,Ti], with Ti being the terminal time. In practice,
i
weuniformlydiscretizethetimehorizonintoH timestepsandoptimizeoverasequenceofstates
τi = {si,si,...,si }. Subscripts, e.g., τi, indicate indexing into a trajectory. Each trajectory τi
1 2 H t
mustavoidcollisionsbetweenrobotsandwithobstaclesintheenvironment.InMRMP,robotsshare
aworkspaceW (i.e.,W ⊆R3 forgeneralrobotsandW ⊆R2 forrobotsontheplane)andoccupy
somevolumeorareawithinW,whichwedenoteasR (qi)⊆W forrobotR inconfigurationqi.
i i
The usual MRMP objective is to minimize the sum of the single-robot costs (e.g., the cumulative
motion) across all robots. General cost functions can be defined on the trajectories, and the ob-
jective then becomes J(τ) = 1 (cid:80)n cost(τi). When learning from data, we are interested in
n i=1
dataadherence,i.e.,thetrajectoriesshouldmatchtheunderlyingtrajectorydistribution. Wedefine
cost (τ) = 1 (cid:80)n cost (τi) to quantify how well, on average, trajectories in τ follow their
data n i=1 data
underlyingdatadistribution. Thismetricistask-specific;weprovidesomeexamplesinSec. 4.
22.2 MULTI-AGENTPATHFINDING(MAPF)
The MAPF problem, a simpler form of MRMP, seeks the shortest collision-free paths Π =
{π1,π2,···πn}fornagentsonagraph. Thisgraphapproximatestheirconfigurationspace,with
verticescorrespondingtoconfigurationsandedgestotransitions. Eachpathπi ={qi,···qi }isa
1 H
trajectorywithoutvelocitythatneednotbedynamicallyfeasible.InMAPFstudies,constraint-based
algorithmshavebecomepopularduetotheirsimplicityandscalability. Thesealgorithmsareeffec-
tive,inpart,becausetheyavoidthecomplexityofthemulti-agentconfigurationspacebydelegating
planningtosingle-agentplannersandavoidcollisionviaconstraints. Forinstance,ifaconfiguration
qiforR leadstoacollisionattime(orinterval)t,thiscanbepreventedbyapplyingtheconstraint
i
setC = {⟨R ,qi,t⟩}tothepathπi, therebypreventingtheconfigurationfrombeingusedatthat
i
time. Several MAPF algorithms, including Prioritized Planning (PP) (Erdmann & Lozano-Perez,
1987)andConflict-BasedSearch(CBS)(Sharonetal.,2015), usethismechanismtoforcesingle-
agentplanningqueriestoavoidstatesthatwouldleadtocollisions. WedetailthesemethodsinSec.
3 and explain how, despite traditionally being used for MAPF, their principles can be applied to
coordinatingrobotsincontinuousspacethatgeneratedata-driventrajectoriesviadiffusionmodels.
2.3 PLANNINGWITHDIFFUSIONMODELS
Motion planning diffusion models are generative models that learn a denoising process to recover
a dynamically-feasible trajectory from noise (Carvalho et al., 2023; Janner et al., 2022). Given a
dataset of multi-modal trajectories, diffusion models aim to generate new trajectories that follow
theunderlyingdistributionofthedata. Additionally,thesetrajectoriesmaybeconditionedonatask
objectiveO,forexample,goalconditionandcollisionavoidance.Specifically,givenataskobjective
O,motionplanningdiffusionmodelsaimtosamplefromtheposteriordistributionoftrajectories:
argmaxlogp(τi|O)=argmax(cid:0) logp(O|τi)+logp(τi)(cid:1)
τi τi
(1)
=argmin(cid:0) −logp(O|τi)−logp(τi)(cid:1) =argmin(cid:0) J(τi)−logp(τi)(cid:1)
τi τi
The first term of the objective, J(τi), can be interpreted as a standard motion planning objective
(Carvalho et al., 2023), in which we try to minimize a cost function (or, equivalently, maximize
a reward function). The second term, logp(τi), is the prior corresponding to the data adherence
discussedinSec. 2.1.
Diffusionmodelsareatypeofscore-basedmodel(Songetal.,2021),wherethefocusisonlearn-
ing the score function (the gradient of the data distribution’s log-probability) rather than learning
theprobabilitydistributiondirectly. Thescorefunctionislearnedusingdenoisingscorematching,
a technique for learning to estimate the score by gradually denoising noisy samples. The diffu-
sioninferenceprocessconsistsofaK-stepdenoisingprocessthattakesanoisytrajectoryKτi and
recovers a feasible trajectory 0τi, which also follows the data distribution. We use the notation
0τi,1τi,··· ,Kτi todenotetheevolutionofthetrajectoryinthediffusionprocess. Togeneratea
trajectory 0τi from a noise trajectory Kτi ∼ N(0,I), we use Langevin dynamics sampling (Ho
et al., 2020), an iterative process that is a type of Markov Chain Monte Carlo method. At each
denoisingstepk ∈{K,...,1},atrajectory-spacemeanµi issampledfromthenetworkµ :
k−1 θ
µi =µ (kτi) (2)
k−1 θ
Now, with the variance prescribed by a deterministic schedule {β | k ∈ {K,··· ,1}}, the next
k
trajectoryinthedenoisingsequenceissampledfromthefollowingdistribution:
k−1τi ∼N(cid:0) µi +ηβ ∇ J(µi ),β (cid:1) (3)
k−1 k−1 τ k−1 k−1
(cid:124) (cid:123)(cid:122) (cid:125)
Guidance
The term ∇ J(µi ) is the gradient of additional trajectory-space objectives (described in Eq.
τ k−1
1) imposed on the generation process. This term, also called guidance, can include multiple
weighted cost components, each optimizing for a different objective. For instance, we can have
J =λ J +λ J topenalizetrajectoriesincollisionwithobjectsviaJ andtoencour-
obj obj smooth smooth obj
agethetrajectorytobedynamicallyfeasibleviaJ .Wedenotethetrajectorygenerationprocess
smooth
queriedwithastartstatesi ,goalconditionTi,andcostraintsetC (Sec. 3.1)asfi(si ,Ti,C).
start θ start
3Algorithm 1: MMD-CBS sketch. Colored lines
areonlyinMMD-PP,MMD-ECBS
Input:Starts,goalconditions,andsingle-robot
diffusionmodels(cid:8) si ,Ti,fi(cid:9)n
Output:Trajectoriesτ
=(cid:8)st τart i(cid:9)n θ i=1 ( ga e) nT erw ao ter do sb io nt gs lea -im robto ots tw rai jt ec ch top ro is ei sti co on ls l. idB e.lindly
i=1
N ←newCTnode;N .Ci ←∅∀i∈{1,···n}
root root
fori∈{1,··· ,n}do
C si trong,C wi eak ←∅,∅ //Emptyconstraintsset.
C si trong ←{⟨R i,N root.τ⟩} //Avoidotherrobots.
C wi eak ←{⟨R i,N root.τ⟩} //Penalizecollisions.
N .τi ←fi(si ,Ti,Ci ∪Ci )
root θ start strong weak
end
returnN .τ
root
CT←{N root} //InitializeCT.
whileCT̸=∅do
N ←argminnumConflicts(N′.τ)
N′∈CT
RemoveN fromCT (b) The diffusion denoising process for
ifN.τ conflict-freethen the left robot in (a), under a temporally-
returnN.τ //Returnifcollisionfree. activated constraint (in red), yields multi-
end modaltrajectories.
p,t,R i,R
j
←getOneConflict(N.τ)
fork∈{i,j} //SplitN;constrainconflictingrobots.do
N′ ←N.copy
N′.Ck ←Ck∪{⟨R ,S (p),t⟩}
k r
C wk eak ←{R k,⟨N′.τ⟩} //Penalizecollisions. (c)Collision-freesolution.
N′.τk ←fk(sk ,Tk,N′.Ck∪Ck )
θ start weak
CT←CT∪{N′} Figure 1: An illustration of how MMD-
end CBS generates collision-free trajectories
end withconstraineddiffusionmodels.
3 METHOD
WepresentMulti-robotMulti-modelplanningDiffusion(MMD),analgorithmforflexiblyscaling
diffusion planning to multiple robots and long horizons using only single-robot data. MMD im-
posesconstraintsondiffusionmodelstogeneratecollision-freetrajectories, addressingthreemain
questions: how, when, and where to impose them. First, we discuss integrating spatio-temporal
constraintsintothediffusiondenoisingprocessthroughguidingfunctions. Next,weintroducefive
MMDalgorithms,eachinspiredbyaMAPFalgorithmregardingconstraintplacementandtiming.
Finally,wedemonstratehowtosequencemultiplemodelsforlong-horizonplanning.
3.1 CONSTRAINTSINDIFFUSIONMODELS
Anintuitiveandeffectiveconstraintformulti-robotmotionplanninginroboticsisthespherecon-
straint 1 (Lietal.,2019;Shaouletal.,2024b). Itisdefinedbyapointp ∈ W andrestrictsrobots
frombeingclosertopthanaradiusr ∈Ratacertaintimeranget:=[t−∆t,t+∆t]. Thesphere
constraintcanbeimposedasasoft-constraintonadiffusionmodelbyincorporatingitinitsguiding
functionJ(·). ThiscanbedonebyaddingacosttermJ thatrepelstherobotsfromthesphere’s
c
centerpointp. Letkτi bethegeneratedtrajectoryforR atstepk ofthediffusiondenoisingpro-
i
cess,and⟨R ,S (p),t⟩beasphereconstraintcenteredatpwithradiusrovertimeintervalt. The
i r
guidancecosttermforR canbedefinedas:
i
J
(kτi):=(cid:88) max(cid:0) ϵ·r−d(cid:0)
R
(kτi),p(cid:1)
,
0(cid:1)
(4)
c t i t
t∈t
withd(cid:0) R (kτi),p(cid:1) asthedistancefrompointptoR atkτi,andϵ≥1apaddingfactor.
i t i t
1The sphere constraint generalizes the MAPF vertex constraint, as it constrains robots from visiting the
point of collision itself instead of a single colliding configuration corresponding to a vertex in a graph. In
MAPF,thepointofcollisionandthegraphvertexcoincide.
43.2 CONSTRAININGSTRATEGIES
To determine when and where to apply constraints on diffusion models, MMD draws on MAPF
strategieslikeCBSandPP.WeproposefiveMMDvariants,eachinspiredbyastate-of-the-artsearch
algorithm. Alg. 1providesasummaryofthesemethodsandweelaborateuponthemhere.
MMD-PP. Prioritized Planning sequentially plans paths for robots R ∀ i ∈ {1,...n}. This or-
i
dering of robots is treated as a priority ordering in that, on each call, robot R must generate a
i
pathπi thatavoidsallR thatpreviouslyplanned. RobotR doessobyrespectingtheconstraints
j i
C := {⟨R ,qi,t⟩ | R (qi)∩R (πj) ̸= ∅ ∀t}. To translate this approach to trajectory gener-
i i j t
ation with diffusion models, MMD-PP represents robot volumes using spheres, as is common in
robotics, and uses the sphere representation of higher-priority robots as sphere soft-constraints for
lower-priority robots. Specifically, let a high-priority robot R be modeled with M spheres and
j j
pj and rj be the position and radius of the mth sphere at time t. Then, lower-priority robot R
m m i
generatesatrajectoryundertheconstraintset{⟨R ,S (pj ),t⟩ | m ∈ {1,···M },j ≺ i},where
i rmj m j
≺indicatespriorityprecedence. InAlg. 1,⟨R ,τ⟩meansthatalltrajectoriesofR inτ mustbe
i j̸=i
similarlyavoided.
MMD-CBS. CBS is a popular MAPF solver that combines “low-level” planners for individual
agentswitha“high-level”constrainttree(CT)toresolveconflicts(i.e., collisions). Thealgorithm
initiatesbycreatingtherootnodeN intheCT,planningpathsforeachagentindependently,and
root
storingthesepathsinN .Π. CBSrepeatedlyextractsnodesN fromtheCTandinspectsN.Πfor
root
conflicts. Ifnoconflictsexist, thealgorithmterminates, returningN.Π. Otherwise, CBSselectsa
conflicttimetwhereagentsR andR collideatpositionsqi =πiandqj =πj inN.Π.CBSthen
i j t t
splits node N into two new CT nodes, N and N , each inheriting the (initially empty) constraint
i j
set N.C and paths N.Π from N, and incorporating a new constraint for preventing the respective
agentfromoccupyingtheconflictpositionattimet. Forexample,N .C ←N.C∪{⟨R ,qi,t⟩}for
i i
R . PathsforR andR arethenreplannedusinglow-levelplannersundertheupdatedconstraints
i i j
in N .C and N .C. The new CT nodes, with updated paths in N .Π and N .Π, are added to the
i j i j
CT.MMD-CBSfollowsthegeneralCBSstructure. ItkeepsaCTofnodesN,eachwithtrajectories
N.τ, andusesmotionplanningdiffusionmodelsaslow-levelplanners. Thealgorithmidentifiesa
collisionpoint pforeachconflictandresolvesitbyimposingspheresoft-constraintscenteredatp
onaffectedrobots(seeFig. 1foranillustrationandSec. A.4forparametervalues).
MMD-ECBS. Enhanced-CBS (ECBS) (Barer et al., 2014) informs CBS low-level planners of the
pathsofotherrobotsinthesameCTnodeandsteersthesearchtowardssolutionsthataremorelikely
tobecollision-free. Toemulatethisindiffusion-basedtrajectorygeneration,MMD-ECBSimposes
twotypesofsoftconstraints: “weak”and“strong.” ForeachrobotR withatrajectoryintheCT
j
nodeN,aweaksoft-constraintthatforbidsR fromcollidingwithanyotherR withτj ∈N.τ is
i j
imposed. ThisisdoneinasimilarwaytoMMD-PPbutwithalowerpenaltyvalue(Sec. A.4). The
strongconstraintsarethesameasthoseinMMD-CBS,resolvingpreviouslyobservedconflicts.
ReusingExperienceinCBS.Recentstudiesindicatethatleveragingprevioussingle-robotsolutions
toguidereplanningenhancestheefficiencyofCBS(Shaouletal.,2024a). Thisisprimarilybecause
themotionplanningproblembetweenaCTnodeanditssuccessorsisnearlyidentical,withtheonly
differencebeingasingleconstraint,makingplanningfromscratchwasteful. Thiscanbeutilizedin
MMDreplanningbyinitiallyaddingnoisetothestoredtrajectoryforalimitednumberofsteps(3in
ourexperiments;regularinferenceuses25steps)andthendenoisingwiththenewsoft-constraints.
This approach, in the context of single-robot planning, was first proposed in Janner et al. (2022)
andfurtherrefinedinZhouetal.(2024). AddingthisfunctionalitytoMMD-CBSandMMD-ECBS
yields our two final MMD algorithms, MMD-xCBS and MMD-xECBS, respectively. Both reuse
previoussolutionstoinformreplanningandareotherwiseunchanged.
3.3 SEQUENCINGDIFFUSIONMODELSFORLONGHORIZONPLANNING
Diffusionmodelshaveshownnotablesuccessinlearningtrajectorydistributionswithinspecificcon-
texts. However,theyfacechallengesinmodelingcomplextrajectorydistributionsandgeneralizing
to diverse contexts (e.g., significantly different obstacle layouts). To tackle this issue, we propose
utilizinganensembleoflocaldiffusionmodelsratherthanasinglemodelforasinglerobot. Each
local model is trained to capture the trajectory distribution of a particular motion pattern within
5(a)Emptymap. (b) Data adherence in the (c)Highwaysmap. (d) Data adherence in the
Emptymap. Highwaysmap.
Figure2: AcomparisonbetweenMMDand“composite”diffusionmodelsthatgeneratetrajectories
forallagentsatonce. WeobservedconsistentperformancefromMMDbutasharpdecreaseforthe
baseline, unable to produce valid solutions for 9 agents (denoted as zero adherence score). Since
MMDusesthesamesingle-agentmodelforallrobotsintheseexperiments,itisstraightforwardto
keepincreasingthenumberofagentswithoutneedinganyretrainingornewdatasets.
a local map segment, and we combine multiple models sequentially for long-horizon single-robot
planning. This approach offers three advantages: (1) Easier learning with simple, demonstrable
motion patterns. (2) Better generalization across different contexts. (3) Effective scaling for large
maps,aidinglong-termplanning.
During online planning, given a specific single-robot task Oi (which includes the start state and
theterminationcondition),wecanquerythetask-relevantlocaldiffusionmodelstogenerateafull-
horizon motion plan. Motivated by Mishra et al. (2023), this is done by sampling from the local
modelsinparallel,whileincorporatingacross-conditioningtermthatconstrainsthelocaltrajectories
toconnectseamlessly. Letτi,lbealocaltrajectorysampledfromalocalprobabilitydistributionpl.
Thegoalofthesingle-robotplanneristosamplefromtheposteriordistributionoftrajectories:
argmax logp(τi|O)= argmax logp(τi,1,...,τi,L|O) (5a)
τi τi,1,...,τi,L
subjectto τi,l =τi,l−1,∀l=1,...,L (5b)
1 Hl−1
FollowingEq. 1,thenewobjectivebecomes:
(cid:32) L (cid:33)
(cid:88)
argmin J(τi,1,...,τi,L)− logp(τi,l) (6)
τi,1,...,τi,L
l=1
In practice, MMD ensures proper sequencing of the L local diffusion models by introducing con-
straintsrequiringthelaststateofthetrajectoryfrommodelltobeequaltothefirststatefrommodel
l+1(seeEq. 5b)andtreatinggenerationoflocaltrajectoriesasinpainting(Lugmayretal.,2022). 2
4 EXPERIMENTAL ANALYSIS
WetestedMMD’sefficacyinlearningmulti-robottrajectoriesonincreasinglycomplexmapswith
varying numbers of holonomic ground robots in a simulated warehouse, modeling robots as 2D
disks. Ourgoalswereto(i)compareourapproachwithcommonmethodsforintegratingdatainto
multi-robottrajectorygeneration,(ii)identifythemosteffectiveconstrainingstrategieswithMMD,
and (iii) evaluate MMD’s scalability. Each experiment with n robots begins by randomly picking
start and goal states on a map for various algorithms to compute valid trajectories τ (or MAPF
paths Π) between. We evaluated the methods by success rate, the percentage of problems solved
with no collision within a time limit, and data adherence, the average alignment of τi ∈ τ with
thedatasetmotionpatterns. Dataadherenceusesamap-specificfunctioncost (τi),scoring1for
data
perfectconformityandlowerotherwise. Ourevaluationmaps,datasets,andadherencefunctionsare
summarizedherewithsimpleillustrationsandmoredetailsareintheappendix.
2Anotheroptionistoaddaguidancetermpenalizingdiscontinuity.Thisapproachismoreflexibleasitcan
optimizeforconnectionpointsthatarelearnedaswell(e.g.,viaclassifierguidanceontheconnectionitself).
6Drop-Regionmap(Fig. 3c)simulatespackagedrop-offchutes. Motiondemonstra-
tions are trajectories between random states that include a pause at one of sixteen
drop-off regions—next to any chute edge midpoint. Adherence is met for τi, i.e.,
cost (τi)=1,ifitincludessuchapause. Otherwise,itiszero.
data
Conveyor map (Fig. 3b) features narrow passages with directional motion require-
ments. Demonstrations connect random states with trajectories that pass along the
top corridor to the left, or through the bottom corridor to the right. Trajectory τi
adherestodataifitsimilarlypassesthrougheithercorridorbeforereachingitsgoal.
Highways map (Fig. 3a), requires counter-clockwise movement around a central
obstacle—apatternshowninitsassociateddata. Thismapcanbeseenasamodular
building block for larger multi-robot environments with its required motion pattern
promoting easier coordination. Adherence is met for τi if its cumulative motion
withinthemapiscounter-clockwise.
Empty map (Fig. 2a) is our simplest. Robots are scored highly if they move in
straight lines and gradually worse the more they deviate. Demonstrations are of
straightlinemotions.
Larger Maps (Fig. 5). In our larger scale experiments (Sec. 4.3) trajectories are
computedwithin2×2and3×3mapscomposedofsmaller,localmaps. Required
motionsaredictatedbyspannedlocalmaps,andtheoveralladherenceistheaverage
adherenceperlocalmap.
4.1 DECOUPLINGSCALESMULTI-ROBOTDIFFUSIONPLANNING
An appealing approach for learning multi-robot trajectory generation is by obtaining multi-robot
trajectorydatasetsandtrainingasinglemodeltojointlygeneratetrajectoriesforallrobots. Totest
this approach, we evaluated MPD-Composite, a state-of-the-art motion planning diffusion model
(MPD)(Carvalhoetal.,2023)thatwetrainedonmulti-robotdatawecollectedintwomaps: Empty
and Highways. We created three models: for 3, 6, and 9 robots. Each model was also given an
additional guidance term that penalized collisions between robots. Across 300 tests, 50 for each
map and group size, we compared MPD-Composite to MMD-xECBS (referred to as MMD). See
Fig. 2 for results. The composite model achieved perfect success rates and high data adherence
scores with 3 robots but struggled as the number of robots increased to 6. No valid trajectories
were generated in any test with 9 agents using MPD-Composite in either map. In contrast, MMD
solvedall300problemssuccessfullyandfurtherscaledto40agentsinadditionalrandomtests,also
producingtrajectorieswithhighdataadherencescoresandnocollisions.
4.2 MMDOUTPERFORMSMAPFWITHLEARNEDCOSTMAPS
Fromasearch-basedplanningviewpoint,acompellingwaytointegratemotiondataintomulti-agent
planning is by reducing MRMP to MAPF and forming cost maps to direct algorithms like ECBS
(Cohenetal.,2016). Thissacrificesdynamicfeasibility,limitingsolutionstoafixedgraph,butcan
stillofferadesirablehomotopyclassandbeassessedfordatacompliance. Oursecondexperiment
set evaluates this method’s potential to produce data-compliant motions (see Fig. 3). We created
180motionplanningproblems,10pergroupsizeacrossthreemaps,andassessedtwosearch-based
methods: A*Data-ECBS and A*-ECBS. The former plans single-robot paths with A* using map-
specificstatisticalcostmaps,whereedgeshavelowercostsifthosearevisitedmorefrequentlyby
themap’sdatasettrajectories(discretizedtomapcells). Thelatterusesuniformcosts(i.e., hasno
knowledgeofthedata)andisreportedonlytoprovidecontextforA*Data-ECBS’sperformance.
Wefindthatintegratingmotiondataintostatisticalcostmapsyieldsmixedoutcomes: itenhances
adherenceintheHighwaysmapbyaround35%comparedtoA*-ECBSbutdecreasessuccessrates.
Inothermaps,thisapproachfindscollision-freepaths,butfallsshortinmanagingcomplexmotion
distributions. In contrast, our results for running MMD methods for the same planning problems
showthatthosecansolvecomplextrajectorygenerationtaskswithhighdataadherencescoresacross
allmethods,andforsome,withhighsuccessratestoo.
7(a)Highwaysmap.
(b)Conveyormap.
(c)Drop-Regionmap.
Figure 3: Analysis of success rates and data adherence scores in randomly generated planning
queries. We report on all five MMD instantiations, each influenced by a constraint-based search
algorithm, and a MAPF method with and without a learned cost map. The left column shows our
testmaps,themiddlecolumncomparessuccessratesacross10trialsperrobotcount,andtheright
columnpresentstheaveragedataadherencescores. Sec. 4discussestheexperimentsandresults.
Analyzing MMD Constraining Strategies. Further analysis reveals a trend familiar from the
MAPF literature. MMD-CBS struggles with scalability, reaching the time limit with more than
9robots. MMD-ECBSsignificantlyoutperformsMMD-CBS,andacceleratedversionsfurtherim-
proveperformance. MMD-PPfindsefficiencyinrequiringonlyoneinferencepassperrobot,how-
ever, because the constraints on diffusion models are soft, trajectory generation queries are not
guaranteed to completely avoid higher-priority robots, and as such MMD-PP may fail to produce
collision-free solutions. This is reflected in lower success rates in congested maps. In contrast,
CBS-based MMD methods only failed by exceeding our 60-second runtime limit. MMD-xECBS
outperformdotherMMDalgorithmsinsuccessratesandmatchedMMD-ECBSindataadherence.
TotestMMD’sMRMPsolvingabilitywithoutregardtodataadherence,wecreatedtwofree-space
experimentsfocusingonrobotinteractions(Fig. 4). Inthecirclesetup,robotsmovebetweenoppo-
sitepointsonacircle,likelycollidingatthecenter. Intheweavesetup(inspiredbyTajbakhshetal.
(2024)), robots begin on opposite points of a square, aiming to switch places. CBS-based meth-
odswerechallengedincirclesinceincrementallyconstrainingthecenterregionistimeconsuming.
MMD-PP’sstrongerconstraintsnavigatedaroundcongestionandsolvedmoreproblems,however,
occasionally failed to produce valid solutions. In weave, where navigating around congestion is
moredifficult,CBS-basedmethodsgeneratedcollision-freetrajectoriesmoreeffectively.
4.3 SEQUENCEDDIFFUSIONMODELSFORLONG-HORIZONPLANNING
WepresentafeasibilitystudyonexpandingMMDalgorithmstolargermapsusingthesequencing
methoddescribedinSec. 3.3. Thistechniqueassemblessmallerlocalmaps,eachassociatedwitha
diffusionmodel,tocollectivelygeneratelong-horizon,data-driventrajectories. Inourexperiments,
8(a)Circlesetup.
(b)Weavesetup.
Figure 4: Scalability tests for our five MMD methods in free-space MRMP. Starts and goals were
chosentoinducerobotcollisions. Thetoprowshowsthecirclesetup,whererobotsswappositions
betweenoppositepointsontheperimeter.Theweavesetupresultsarebelow,withrobotsexchanging
positionsalonguniformlyspacedboundarypoints. Lengthiszeroforfailedproblems(inMMD-PP,
causedbyyieldinginvalidsolutions,andintherest,bycomputingforlongerthan240seconds).
(a)2×2map.
(b)3×3map.
Figure5: ExperimentalsetupandresultsforscalingMMDtolargerenvironmentsandlongerplan-
ning horizons. MMD still relies on single agent data in small, local maps and does not require
trainingofnewnetworksforthisscale-up. WeevaluatethreeMMDvariantsacrosstwolargemaps
madeoftiledlocalmapstocoverasignificantlylargerarea.
we tested three MMD methods—MMD-PP, MMD-ECBS, and MMD-xECBS—in 120 trajectory
generation tests, allowing a relaxed 240-second time frame. A standout feature of the sequencing
methodisitsabilitytocreatetrajectoriesthatfollowatask-skeleton:passingthroughaseriesoflocal
mapswithinthelargerglobalmap. Forthispurpose,ourexperimentsassignarandomsequenceof
three tasksper robot (asequence of localmaps), and randomlyselects start andgoal states within
thefirstandlastlocalmapsinthesequence.Theresults(Fig.5)showMMD-xECBSscalingtolong
planning horizons without compromising data adherence. This demonstrates MMD’s capability
to efficiently produce multi-robot trajectories in large environments by utilizing diffusion models
trainedwitheasilygathereddatafromsmall,localmaps.
95 RELATED WORK
Multi-Robot Motion Planning. Due to the PSPACE-hardness of MRMP (Hopcroft & Wilfong,
1986),mostpracticalalgorithmsmakevariousapproximationstorelaxtheplanningproblem. Some
of the most successful MRMP methods reduce the problem to a multi-agent path finding prob-
lem (MAPF) (Stern et al., 2019) by discretizing state and time and assuming zero-volume shapes,
constant velocities and rectilinear movements (Chen et al., 2021). However, this introduces a gap
betweentheMAPFformulationandMRMPwhichisproblematicinmanydomains.Torelaxthere-
strictionofplanningonagrid,recentworks(Solisetal.,2021;Ho¨nigetal.,2018)havegeneralized
MAPFalgorithmstocontinuousstatespacesbyusingsampling-basedmotionplannerstoconstruct
probabilisticroadmaps(PRM) (Kavrakietal.,1996)forrobots.
Moregenerally,coupledMRMPalgorithms,likeSanchez&Latombe(2002);Soloveyetal.(2016)
apply sampling-based planners like PRM and RRT (Karaman & Frazzoli, 2011) to the composite
configurationspaceofalltherobots. Thisapproachguaranteescompletenessbutstrugglestoscale
withthenumberofrobotsastheconfigurationspacegrowsexponentially.Conversely,decoupledal-
gorithmslikeprioritizedplanning(Erdmann&Lozano-Perez,1987)andLeroyetal.(1999)generate
robotmotionsoneafteranother,fixingeachplanandregardingthemasdynamicobstaclesinsub-
sequentplanningiterations. Thisallowsthemtoquicklyfindsolutionsforlargenumbersofrobots,
butsometimesfailtofindanysolutionevenifoneexists,i.e.,theyareoftenincomplete. Seekingto
balancetheoreticalguaranteeswithpracticalefficiency,hybrid algorithmslikeCBS(Sharonetal.,
2015)planindependentlyforeveryrobotandlooselycouplethemtoresolveconflicts.
Planning with Diffusion Models. Lately, there has been a surge of interest in applying diffusion
models(Sohl-Dicksteinetal.,2015)tosolvesequentialdecisionmakingtasks,includingplanning
andreinforcementlearning(Ubukataetal.,2024). Diffuser(Janneretal.,2022)firstproposedthe
idea of using diffusion models for trajectory planning and showed how classifier-guided sampling
and image inpainting can be used for adaptation at test time. Recent works have used diffusion
modelsaspriorsforsingle-robotmotionplanning(Carvalhoetal.,2023), forlearningvisuomotor
policies(Chietal.,2024),andforofflinedecision-making(Ajayetal.,2023). Mostoftheseworks
havebeenlimitedtosingle-agentplanningwithtwonotableexceptions. Jiangetal.(2023)learna
jointmotiondistributionformulti-agentmotionpredictionusingadiffusionmodel. Bycontrast,we
focusongeneratingkinodynamicallyfeasibleandcollision-freetrajectorieswithouthavingtolearn
a joint distribution. Concurrent work by Mishra et al. (2024) uses spatial-temporal factor graphs
to compose modular generative models for solving long-horizon bimanual coordination tasks. By
contrast,ourapproachcanscalediffusionmodelstodozensofrobotsandcomplexenvironmentsby
leveragingmulti-agentsearchalgorithms.
6 CONCLUSION
Inthispaper,wepresentMulti-robotMulti-modelplanningDiffusion(MMD),amulti-robotmotion
plannerthatlearnstogeneratesmoothcollision-freetrajectoriesfordozensofrobotsincomplexen-
vironments. Ourkeycontributionisshowinghowsinglerobotdiffusionmodelscanbeeffectively
combined with state-of-the-art multi-agent search algorithms to generate data-driven multi-robot
trajectories. Bylearningonlysingle-robotdiffusionmodels,MMDsimplifiesdatarequirementsand
breaksthecurseofdimensionalityplaguingapproachesthatlearnfrommulti-robotdata. Addition-
ally,bylearninggenerativemodelsofrobottrajectories,MMDovercomesmanyofthelimitations
of popular model-based MAPF algorithms, such as state discretization, known cost function, and
constantvelocities. WebelieveMMDopensupexcitingavenuesforfutureworkoncombiningthe
strengthsofsearchalgorithmsanddiffusionplanning.
Limitations. WeareexcitedaboutthepotentialofMMDtopushforwardmulti-robotcoordination
andcollaborationandofferafewavenuesforfuturework. Firstisallowingformoreflexibilityin
MMD’splanninghorizon. Asitstands,MMDgeneratestrajectoriesoffixedduration—alimitation
it inherits from diffusion planning. Sequencing models helps extend the time horizon but still, it
mustbedeterminedapriori. Second,webelievethattheCBS-basedMMDmethodscanbegreatly
accelerated,mostlythroughparallelizationofthehigh-levelsearch. Finally,webelievethefrontier
ofMRMPliesincollaboration.Currently,MMDfocusesoncoordinatingrobots,seekingtoproduce
collision-freedata-driventrajectories. Carryingoutcollaborativetasksisaninterestingnextstep.
107 REPRODUCIBILITY
WeaspireforMMDtobeeasilyusedandextendedbyresearchersandpractitioners. Tothisend,we
makeoursourcecodeforallMMDalgorithms,scriptsfordatageneration,training,andevaluation,
andevaluationmapspubliclyavailableathttps://github.com/yoraish/mmd. Thiscode,
alongwiththeparametervaluesdetailedinSec. A.4,issufficientforreproducingtheexperiments
andresultspresentedinthispaper. Torunourcode“outofthebox,”withoutdatasetgenerationor
training,weprovidepre-trainedmodelsanddatasetsdetailedinSec.4withdetailedinstructions.For
hardwareandsoftwaredependencies,wespecifytheexactversionsoflibrariesandtoolsrequiredin
ourrepositoryandalsodetailourhardwaresetupinSec. A.4.
ACKNOWLEDGMENTS
TheworkwassupportedbytheNationalScienceFoundationunderGrantIIS-2328671andtheCMU
ManufacturingFuturesInstitute,madepossiblebytheRichardKingMellonFoundation. Wethank
MohitSharmaandIlanMitnikovforfruitfuldiscussions.
REFERENCES
AnuragAjay,YilunDu,AbhiGupta,JoshuaB.Tenenbaum,TommiS.Jaakkola,andPulkitAgrawal.
Isconditionalgenerativemodelingallyouneedfordecisionmaking? InTheEleventhInterna-
tional Conference on Learning Representations, ICLR 2023, Kigali, Rwanda, May 1-5, 2023.
OpenReview.net,2023. URLhttps://openreview.net/forum?id=sP1fo2K9DFG.
Max Barer, Guni Sharon, Roni Stern, and Ariel Felner. Suboptimal variants of the conflict-based
searchalgorithmforthemulti-agentpathfindingproblem. InInternationalSymposiumonCom-
binatorialSearch,pp.19–27,2014.
JoaoCarvalho,AnTLe,MarkBaierl,DorotheaKoert,andJanPeters. Motionplanningdiffusion:
Learningand planningof robotmotions withdiffusion models. In InternationalConference on
IntelligentRobotsandSystems.IEEE,2023.
Jingkai Chen, Jiaoyang Li, Chuchu Fan, and Brian C Williams. Scalable and safe multi-agent
motionplanningwithnonlineardynamicsandboundeddisturbances. InProceedingsoftheAAAI
conferenceonartificialintelligence,volume35,pp.11237–11245,2021.
ChengChi,ZhenjiaXu,SiyuanFeng,EricCousineau,YilunDu,BenjaminBurchfiel,RussTedrake,
andShuranSong. Diffusionpolicy: Visuomotorpolicylearningviaactiondiffusion. TheInter-
nationalJournalofRoboticsResearch,2024.
SanjibanChoudhury,MohakBhardwaj,SankalpArora,AshishKapoor,GireejaRanade,Sebastian
Scherer, and Debadeepta Dey. Data-driven planning via imitation learning. The International
JournalofRoboticsResearch,37(13-14):1632–1672,2018.
LironCohen,TanselUras,TKSatishKumar,HongXu,NoraAyanian,andSvenKoenig. Improved
solversforbounded-suboptimalmulti-agentpathfinding. InIJCAI,2016.
MichaelErdmannandTomasLozano-Perez. Onmultiplemovingobjects. Algorithmica,pp.477–
521,1987.
Jonathan Ho, Ajay Jain, and Pieter Abbeel. Denoising diffusion probabilistic models. In
H. Larochelle, M. Ranzato, R. Hadsell, M.F. Balcan, and H. Lin (eds.), Advances in Neu-
ral Information Processing Systems, volume 33, pp. 6840–6851. Curran Associates, Inc.,
2020. URL https://proceedings.neurips.cc/paper_files/paper/2020/
file/4c5bcfec8584af0d967f1ab10179ca4b-Paper.pdf.
WolfgangHo¨nig,JamesAPreiss,TKSatishKumar,GauravSSukhatme,andNoraAyanian. Tra-
jectoryplanningforquadrotorswarms. IEEETransactionsonRobotics,34(4):856–869,2018.
JohnEHopcroftandGordonT.Wilfong.Reducingmultipleobjectmotionplanningtographsearch-
ing. SIAMJournalonComputing,15(3):768–785,1986.
11Michael Janner, Yilun Du, Joshua Tenenbaum, and Sergey Levine. Planning with diffusion for
flexiblebehaviorsynthesis. InInternationalConferenceonMachineLearning.PMLR,2022.
ChiyuJiang,AndreCornman,CheolhoPark,BenjaminSapp,YinZhou,DragomirAnguelov,etal.
Motiondiffuser: Controllable multi-agent motion prediction using diffusion. In Proceedings of
theIEEE/CVFConferenceonComputerVisionandPatternRecognition,pp.9644–9653,2023.
SertacKaramanandEmilioFrazzoli. Sampling-basedalgorithmsforoptimalmotionplanning. The
InternationalJournalofRoboticsResearch,pp.846–894,2011.
Lydia E Kavraki, Petr Svestka, J-C Latombe, and Mark H Overmars. Probabilistic roadmaps for
pathplanninginhigh-dimensionalconfigurationspaces. IEEEtransactionsonRoboticsandAu-
tomation,12(4):566–580,1996.
Stephane Leroy, Jean-Paul Laumond, and Thierry Sime´on. Multiple path coordination for mobile
robots: Ageometricalgorithm. InIJCAI,volume99,pp.1118–1123,1999.
Jiaoyang Li, Pavel Surynek, Ariel Felner, Hang Ma, TK Satish Kumar, and Sven Koenig. Multi-
agentpathfindingforlargeagents. InAAAIConferenceonArtificialIntelligence,pp.7627–7634,
2019.
JiaoyangLi,WheelerRuml,andSvenKoenig.Eecbs:Abounded-suboptimalsearchformulti-agent
pathfinding. InAAAIConferenceonArtificialIntelligence,pp.12353–12362,2021.
Andreas Lugmayr, Martin Danelljan, Andres Romero, Fisher Yu, Radu Timofte, and Luc Van
Gool. Repaint: Inpaintingusingdenoisingdiffusionprobabilisticmodels,2022. URLhttps:
//arxiv.org/abs/2201.09865.
Utkarsh Aashu Mishra, Shangjie Xue, Yongxin Chen, and Danfei Xu. Generative skill chaining:
Long-horizon skill planning with diffusion models. In Conference on Robot Learning, 2023.
URLhttps://openreview.net/forum?id=HtJE9ly5dT.
Utkarsh Aashu Mishra, Yongxin Chen, and Danfei Xu. Generative factor chaining: Coordinated
manipulation with diffusion-based factor graph. In 8th Annual Conference on Robot Learning,
2024. URLhttps://openreview.net/forum?id=p6Wq6TjjHH.
Keisuke Okumura. Engineering lacam*: Towards real-time, large-scale, and near-optimal multi-
agentpathfinding. In23rdInternationalConferenceonAutonomousAgentsandMultiagentSys-
tems,2024.
JudeaPearlandJinH.Kim. Studiesinsemi-admissibleheuristics. IEEETransactionsonPattern
AnalysisandMachineIntelligence,pp.392–399,1982.
Ahmed Hussain Qureshi, Yinglong Miao, Anthony Simeonov, and Michael C Yip. Motion plan-
ning networks: Bridging the gap between learning-based and classical motion planners. IEEE
TransactionsonRobotics,37(1):48–66,2020.
Gildardo Sanchez and J-C Latombe. Using a prm planner to compare centralized and decoupled
planningformulti-robotsystems.InProceedings2002IEEEinternationalconferenceonrobotics
andautomation(Cat.No.02CH37292),volume2,pp.2112–2119.IEEE,2002.
YoraiShaoul,ItamarMishani,MaximLikhachev,andJiaoyangLi. Acceleratingsearch-basedplan-
ning for multi-robot manipulation by leveraging online-generated experiences. In International
ConferenceonAutomatedPlanningandScheduling,2024a.
YoraiShaoul,RishiVeerapaneni,MaximLikhachev,andJiaoyangLi. Unconstrainingmulti-robot
manipulation: Enabling arbitrary constraints in ecbs with bounded sub-optimality. In Interna-
tionalSymposiumonCombinatorialSearch,2024b.
GuniSharon,RoniStern,ArielFelner,andNathanRSturtevant. Conflict-basedsearchforoptimal
multi-agentpathfinding. ArtificialIntelligence,pp.40–66,2015.
JaschaSohl-Dickstein,EricWeiss,NiruMaheswaranathan,andSuryaGanguli. Deepunsupervised
learning using nonequilibrium thermodynamics. In International conference on machine learn-
ing,pp.2256–2265.PMLR,2015.
12KihyukSohn,HonglakLee,andXinchenYan.Learningstructuredoutputrepresentationusingdeep
conditionalgenerativemodels. Advancesinneuralinformationprocessingsystems,28,2015.
IrvingSolis, JamesMotes, ReadSandstro¨m, andNancyMAmato. Representation-optimalmulti-
robot motion planning using conflict-based search. IEEE Robotics and Automation Letters, pp.
4608–4615,2021.
KirilSolovey,OrenSalzman,andDanHalperin. Findinganeedleinanexponentialhaystack: Dis-
creterrtforexplorationofimplicitroadmapsinmulti-robotmotionplanning. TheInternational
JournalofRoboticsResearch,35(5):501–513,2016.
Yang Song, Jascha Sohl-Dickstein, Diederik P. Kingma, Abhishek Kumar, Stefano Ermon, and
Ben Poole. Score-based generative modeling through stochastic differential equations. In
9th International Conference on Learning Representations, ICLR 2021, Virtual Event, Austria,
May 3-7, 2021. OpenReview.net, 2021. URL https://openreview.net/forum?id=
PxTIG12RRHS.
RoniStern,NathanSturtevant,ArielFelner,SvenKoenig,HangMa,ThayneWalker,JiaoyangLi,
DorAtzmon,LironCohen,TKKumar,etal. Multi-agentpathfinding: Definitions,variants,and
benchmarks. InInternationalSymposiumonCombinatorialSearch,pp.151–158,2019.
ArdalanTajbakhsh,LorenzTBiegler,andAaronMJohnson. Conflict-basedmodelpredictivecon-
trolforscalablemulti-robotmotionplanning. InIEEEInternationalConferenceonRoboticsand
Automation.IEEE,2024.
ToshihideUbukata,JialongLi,andKenjiTei. Diffusionmodelforplanning: Asystematicliterature
review. arXivpreprintarXiv:2408.10266,2024.
Anirudh Vemula, J Andrew Bagnell, and Maxim Likhachev. Cmax++: Leveraging experience in
planning and execution using inaccurate models. In Proceedings of the AAAI Conference on
ArtificialIntelligence,volume35,pp.6147–6155,2021.
Xuesu Xiao, Bo Liu, Garrett Warnell, and Peter Stone. Motion planning and control for mobile
robotnavigationusingmachinelearning: asurvey. AutonomousRobots,46(5):569–597,2022.
Siyuan Zhou, Yilun Du, Shun Zhang, Mengdi Xu, Yikang Shen, Wei Xiao, Dit-Yan Yeung, and
ChuangGan. Adaptiveonlinereplanningwithdiffusionmodels. AdvancesinNeuralInformation
ProcessingSystems,2024.
13A APPENDIX
Theseadditionalmaterialscometoaddauxiliarydetailsonouralgorithmsandtheirimplementation,
alongside providing further experimental evidence that we omitted from the main text. We begin
withanadditionaldiscussiononouralgorithmicframework,moveontoprovideadditionalresults,
andconcludewithimplementationandbaselinedetails.
A.1 ADDITIONALALGORITHMICDISCUSSION
Inthissection,weexpandonafewkeywaysinwhichMMD-PPandMMD-CBSimproveontheir
classical counterparts. These were lightly touched on in the main text. We outline them in more
detailhere.
CT Node Ordering in CBS. Traditionally, MAPF algorithms aim to find the shortest paths from
starts to goals. Therefore, in CBS, the high-level nodes N popped from the CT are the ones of
leastcost. Inourcase,wherethedata-drivenobjectivefunctionscoringtrajectoriesisgenerallynot
availableinpractice,weinsteadaimtoquicklyfindsolutionsthatarecollision-free,delegatingthe
taskoffindinghigh-qualitysolutionstothediffusionmodels. Tothisend,theMMDCBSstrategies
chooseCTnodeswiththeleastnumberofconflictstoexplorefirst,astheyaremorelikelytolead
tocollision-freesolutionsquickly. ThisissimilartothealgorithmGCBS-HoutlinedinBareretal.
(2014). Resemblingtheiroutcomes, wealsoobservedasignificantruntimeimprovementbetween
prioritizingCTnodesbasedontheirgeometricqualityandtheircollisioncount.
BatchTrajectoryGeneration. Planningwithdiffusionmodelshastheaddedbenefitofbeingable
to generate a diverse set of solutions with a single inference pass (Carvalho et al., 2023). MMD
makesuseofthisproperty. IncontrasttotheoriginalCBS,whereCTnodesN storeasinglepath
foreachrobotwithinN.Π,MMDstorestrajectorybatchesforeachrobotR withinN.τ. Thatis,
i
N.τi maybeasetofB ∈Z>0 trajectories,withB beingabatchsize. MMD-PPfollowssimilarly,
storing a batch of trajectories for each robot. When planning for R , MMD generates a batch of
i
trajectoriesunderthecurrentlyactiveconstraintsetN.Ci (seeFig. 1). Oncethebatchisgenerated,
MMDiteratesoverthenewresultingtrajectoriesN.τi andmarkstheonewiththeleastcollisions
astherepresentativetrajectoryforR . InMMD-PPthistrajectoryisusedtodefinetheplacement
i
of soft-constraints in following iterations and will be part of the solution. In MMD-ECBS, weak
soft-constraintswillsimilarlybeadded. AllMMDCBS-basedalgorithmsuserepresentativetrajec-
toriestocomputethenumberofconflictswithinCTnodes. Whenaconflict-freeCTnodeisfound
(e.g., there are no collisions between representative trajectories), MMD returns the representative
trajectoriesofN.τ asthesolution.
A.2 EXPERIMENTALEVALUATION: ADDITIONALRESULTS
Weprovideadditionalquantitativeandqualitativeresultsforourfirsttwoexperimentsets,outlined
inTable1,Table2,andFig. 6. Discussionsoftheseexperimentalresultsareincluded.
A.2.1 ADDITIONALQUANTITATIVERESUTLS
Our manuscript mainly evaluated algorithms based on their performance in terms of success rate
anddataadherence(Fig. 2,Fig. 3,andFig. 5). WhilethesemetricsaresufficienttocaptureMMD’s
ability to consistently produce trajectories that follow an underlying motion data distribution, one
mayalsobeinterestedinsolutions’smoothnessandthewall-clocktimeittakestogeneratethose.
Tothisend,weincluderesultsfortheaverageaccelerationperrobot(columnAinTable1andTable
2),asaproxyforsmoothness,andtheruntimefortrajectorygeneration(columnT).
Average Acceleration Per Robot. Despite showing little information, since the composite base-
line quickly failed to produce valid trajectories, Table 1 offers valuable insights nonetheless. The
Acolumnprovidesaglanceintothereasonforcomposite-model’sfailure. Consistentwithourob-
servations,wenoticethattheaverageaccelerationperrobotinthe6-robotcaseisdrasticallyhigher
forthecompositemodelthanforMMD.Thisbehavior,visually,translatestotrajectoriesincluding
smallloopsandsharpturns.SeeFig.6foranexample.WehavetrainedMPD-Compositetoconver-
genceusingourdatasets(Sec.A.6)andperformedadditionaltuning,however,itsgeneratedmotions
struggledtocapturethesmooth,dynamicallyfeasibletransitionsasthenumberofrobotsgrewto9.
14EmptyMap HighwaysMap
n Method S↑ D↑ T↓ A↓ n Method S↑ D↑ T↓ A↓
MMD 100% 0.999 3.4 0.002 MMD 100% 0.96 3.3 0.042
3 3
MPD-C 100% 1.000 2.1 0.010 MPD-C 100% 0.98 2.1 0.032
MMD 100% 0.995 7.0 0.002 MMD 98% 0.97 6.9 0.045
6 6
MPD-C 62% 0.331 2.2 0.142 MPD-C 0% - - -
MMD 100% 0.991 11.1 0.002 MMD 96% 0.97 10.7 0.043
9 9
MPD-C 0% - - - MPD-C 0% - - -
Table 1: Comparison of methods by number of agents in the Empty environment (left) and the
Highwaysenvironment(right). Sisthesuccessrate(%),Dthedataadherencescore(seeSec. 4),T
istheaverageplanningtime(seconds),andAisaverageacceleration(lengthunits/s2),aproxyfor
smoothness. Despitebeingcomputationallyefficient,thecompositebaselinestrugglestomaintain
highdataadherencescores. Here,MMDisMMD-xECBS.
HighwaysMap ConveyorMap Drop-RegionMap
n Method S↑ D↑ T↓ A↓ S↑ D↑ T↓ A↓ S↑ D↑ T↓ A↓
MMD-xECBS 100% 0.93 3.6 0.04 100% 0.87 3.9 0.10 100% 1.00 3.7 0.05
MMD-ECBS 100% 0.93 3.5 0.04 100% 0.87 4.5 0.09 100% 1.00 3.8 0.05
MMD-PP 100% 0.93 4.3 0.04 100% 0.80 4.2 0.09 100% 0.97 4.2 0.05
3 MMD-CBS 100% 0.93 4.0 0.04 100% 0.93 5.7 0.10 100% 1.00 6.7 0.06
MMD-xCBS 100% 0.93 3.6 0.04 100% 0.93 4.3 0.11 100% 1.00 4.5 0.07
A*Data-ECBS 100% 0.87 3.4 - 100% 0.03 0.2 - 100% 0.27 0.2 -
A*-ECBS 100% 0.57 0.1 - 100% 0.00 0.5 - 100% 0.27 0.2 -
MMD-xECBS 100% 1.00 7.0 0.05 100% 0.95 9.3 0.11 100% 0.90 7.7 0.06
MMD-ECBS 100% 1.00 7.3 0.05 100% 0.92 13.2 0.09 100% 0.95 8.4 0.05
MMD-PP 100% 0.98 8.9 0.04 70% 0.90 8.7 0.09 100% 0.93 8.4 0.05
6 MMD-CBS 100% 1.00 14.2 0.05 100% 0.93 18.9 0.10 100% 1.00 16.7 0.06
MMD-xCBS 100% 1.00 10.2 0.05 100% 0.95 11.0 0.14 100% 0.97 12.1 0.08
A*Data-ECBS 100% 0.88 4.5 - 100% 0.17 1.1 - 100% 0.13 0.9 -
A*-ECBS 100% 0.55 0.7 - 100% 0.05 2.4 - 100% 0.12 1.1 -
MMD-xECBS 100% 0.97 12.7 0.05 100% 0.93 14.6 0.11 100% 0.94 12.9 0.06
MMD-ECBS 100% 0.97 15.0 0.05 100% 0.92 19.6 0.09 100% 0.96 15.5 0.06
MMD-PP 90% 0.96 13.5 0.05 30% 1.00 12.4 0.10 60% 0.93 12.3 0.06
9 MMD-CBS 100% 0.96 43.8 0.05 60% 0.94 46.6 0.11 50% 0.93 47.5 0.08
MMD-xCBS 100% 0.96 29.8 0.05 100% 0.94 32.8 0.20 70% 0.92 39.1 0.11
A*Data-ECBS 100% 0.88 14.0 - 100% 0.10 2.7 - 100% 0.22 1.3 -
A*-ECBS 100% 0.51 3.4 - 100% 0.06 3.4 - 100% 0.19 0.8 -
MMD-xECBS 100% 0.99 15.8 0.04 100% 0.94 23.1 0.13 100% 0.87 22.9 0.07
MMD-ECBS 100% 0.99 17.6 0.04 100% 0.95 28.4 0.10 100% 0.88 29.6 0.06
MMD-PP 80% 0.99 18.4 0.05 30% 0.86 16.9 0.10 0% - - -
12 MMD-CBS 0% - - - 0% - - - 0% - - -
MMD-xCBS 30% 0.97 54.6 0.05 10% 1.00 53.5 0.19 0% - - -
A*Data-ECBS 80% 0.83 19.7 - 100% 0.14 3.8 - 100% 0.22 4.0 -
A*-ECBS 100% 0.52 6.0 - 100% 0.03 4.0 - 100% 0.23 4.4 -
MMD-xECBS 100% 0.97 24.3 0.05 90% 0.96 38.3 0.14 100% 0.80 35.7 0.07
MMD-ECBS 100% 0.97 29.3 0.05 80% 0.97 43.7 0.10 60% 0.86 43.0 0.06
MMD-PP 60% 0.99 23.2 0.05 0% - - - 0% - - -
15 MMD-CBS 0% - - - 0% - - - 0% - - -
MMD-xCBS 0% - - - 0% - - - 0% - - -
A*Data-ECBS 50% 0.85 32.0 - 100% 0.11 14.4 - 100% 0.24 7.7 -
A*-ECBS 100% 0.47 10.5 - 100% 0.04 13.4 - 100% 0.21 9.3 -
MMD-xECBS 100% 0.96 46.1 0.05 0% - - - 0% - - -
MMD-ECBS 60% 0.97 51.8 0.05 0% - - - 0% - - -
MMD-PP 0% - - - 0% - - - 0% - - -
20 MMD-CBS 0% - - - 0% - - - 0% - - -
MMD-xCBS 0% - - - 0% - - - 0% - - -
A*Data-ECBS 22% 0.82 43.5 - 100% 0.11 15.6 - 100% 0.23 15.7 -
A*-ECBS 80% 0.46 21.6 - 100% 0.05 21.0 - 100% 0.22 16.5 -
Table 2: Additional results for a subset of our MMD and MAPF evaluation. Table columns are
similar to Table 1. We omit acceleration information from the MAPF methods as those plan on a
gridgraphandassumeconstantvelocities.
MMD,however,producedbetterandlarger-scaletrajectories. Table1showsMMDkeepinglowav-
erageaccelerationsperrobot.Inlargerteamsofrobots,wenoticetheaccelerationremainingmostly
constantwithineachmapevenwhenthenumberofrobotsgrows. Thisshowsthatrobotsproduce
similarmotionswithineachmapregardlessofcongestionlevels—asignofconsistencythatweseek
asthenumberofrobotsscales.
15TrajectoryGenerationRuntime.Whilethecompositemodelsenjoyaninvariancetothenumberof
robots,asthoseonlyrequireasingleinferencepassformulti-robottrajectorygeneration,thisisnot
thecaseforMMD.Foronce,allMMDalgorithmsbeginwiththesequentialprocessofgenerating
trajectoriesforallrobotsoneatatime. Thetimeforthisoperation, ofcourse, scaleslinearlywith
thenumberofrobots. Asmentionedinourconclusion,theMMDCBS-basedmethodsarenaturally
parallelized.SincetheruntimeofthesemethodsistightlyrelatedtothenumberofCTnodescreated,
which could be evaluated in parallel, doing so may drastically reduce runtimes. We leave this to
futurework.
MAPFBaselineRuntime. ThetrendsofourtimingresultsfortheMAPFbaselinesshowninTable
2areinconsistentacrossmaps. Interestingly,theplanningtimeforA*Data-ECBSintheHighways
mapwassignificantlyhigherthanthatofA*-ECBS.Thiscomeswiththeaddedbenefitofthepro-
ducedpathsbetteradheringtodata. Intheothertwomaps,whichhavemorechallengingunderlying
motion data distributions, the difference between A*Data-ECBS and A*-ECBS was insignificant,
thoughsowerethedataadherencescores. Itisuncleartoushowtoeffectivelyincorporatedemon-
strationsfromdataintoMAPFsolverswithoutcompromisingtheirabilitytoscale.
MMD-xECBS MMD-PP MPD-Composite A*Data-ECBS
Fail
Figure6: VisualexamplesoftrajectoriesgeneratedbyMMD-xECBS,MMD-PP,MPD-Composite,
andA*Data-ECBSintestswithintheEmptyandHighwaysmaps. Thetoptworowsshowtestcases
with3robots,andthebottomtworowswith6. Allplanningproblemsfollowthecirclesetup(Sec.
4.2)withradius0.6fortheHighwaysmapand0.8fortheEmptymap.
16
3ytpmE
3syawhgiH
6ytpmE
6syawhgiHA.3 ADDITIONALQUALITATIVERESULTS
To better capture the behavior of the various trajectory generators discussed in this paper, Fig. 6
showsaseriesofimagesofgeneratedtrajectoriesintwoproblems. Wekeepthenumberofrobots
lowforclarity. Videosareavailableinoursupplementarymaterialsaswell.
A.4 IMPLEMENTATIONDETAILS
We implemented all of our algorithms in Python and ran our experiments on a laptop with an In-
tel Core i9-12900H CPU, 32GB RAM (5.2GHz), and Nvidia GeForce RTX 3080Ti Laptop GPU
(16 GB). We based our diffusion planning implementation on the official code of Carvalho et al.
(2023)andusedanexponentialvarianceschedule. Theguidancefunctioncostcomponentsweused
wereJ toencouragedynamicallyfeasibletrajectorygenerationwithGPMP,J forobstacle
smooth obj
avoidance(bothfromCarvalhoetal.(2023)),andJ forconstraintsatisfaction. Wesettheweights
c
λ = 8e−2,λ = 2e−2,andλ = 2e−1forstrongsoft-constraintsandλ = 2e−2forweak
smooth obj c c
soft-constraints.
Inourexperiments,thesizeofeachlocalmapwas2×2units,andthediameterofeachdiskrobot
was 0.1 units. The radius for CBS sphere constraints was the disk robot radius multiplied by a
margin,resultinginaradiusvalueof0.12units,andthetimeinterval∆twas0.08seconds(2time
steps).
A.5 EXPERIMENTALEVALUATION: ADDITIONALDETAILS
Thissectionprovidesdetailsaboutourexperimentalsetup,namelythedataadherencescoringfunc-
tioncost (τi)thatweusedtoevaluatetrajectoriesτiineachmap. Wealsoincludedetailsonour
data
baselineimplementations.
A.5.1 DATAADHERENCEFUNCTIONS
AsdiscussedinSec. 4,eachofourlocalmapshasanassociatedmotionpatternforrobotstofollow
whenthosemovewithinit. Thismotionpatternisreflectedinthetrajectorydatasetassociatedwith
eachmap. Sec. 4brieflyoutlinedthedataadherencescorefunctionsforeachmap,andweprovide
morespecificdefinitionshere.
Drop-Region map (Fig. 3c) simulates package drop-off chutes. Adherence is met for τi, i.e.,
cost (τi) = 1, ifthetrajectoryspendsatleast25%ofitsduration, consecutively, inaregionof
data
radius0.15centered0.15unitsoffthemidpointofeachofthe16chutes.
Conveyormap(Fig. 3b)featuresnarrowpassageswithdirectionalmotionrequirements. Trajectory
τiadherestodataifitincludesasectionthatentersthetopcorridorfromtherightandleavesitfrom
theleft,orviceversaforthebottomcorridor. Thereisnorestrictiononrobotstransitioningthrough
the corridors in reverse, and no restriction on start or goal states being within the corridors. This
requiresrobotstoreasonabouttraversalordering.
Highways map (Fig. 3a), requires counter-clockwise movement around a central obstacle. The
originofthemapisatthemiddleofthecenteralobstacle. Foreachstatetransitionofatrajectory
τi, from τi to τi , the angle between the vectors pointing from the origin to qi and to qi is
t t+1 t+1 t
computed. qi is the associated configuration at τi. We define adherence to be met for τi if its
t t
cumulativeangleispositive,i.e.,counter-clockwise.
Emptymap(Fig. 2a)isoursimplest. Trajectoriesτi, whichhaveH timesteps, arescoredbased
onthefractionoftheirstepsthatliewithinamarginofastraight-lineinterpolationbetweenainitial
and final configurations qi,qi in τi. Specifically, let l be the distance between the first and last
1 H
configurationsinτi,andletmbethenumberoftrajectoryconfigurationswhosedistancetotheline
qi −qi islessthan l . Wedefinecost (τi):= m.
H 1 10 data H
17A.5.2 LARGESCALEEXPERIMENTS
Tomimicreal-worldscenarios,wehavestaggeredthestarttimesofrobotsinourlargescaleexperi-
mentsinSec. 4.3. There,robotsbeganmoving10timestepsapart. Robotsinmotionwererequired
toavoidstaticrobots,whichmaybestoppedinhigh-densityregions.
A.6 BASELINEDETAILS
Our experiments include two families of baselines: composite models and MAPF methods. Both
baselinesattempttoproducetrajectories(orpaths)thatdistributeaccordingtoanunderlyingmotion
patternthatisreflectedinadataset. Thissectioncomestoprovideadditionaldetailsregardingthese
baselinemethods.
Composite Models. Training composite models requires two components. The first is a dataset
of multi-robot motions, and the second is a model that can be trained to generate trajectories that
resemblethoseinthedata. Giventhatobtainingmulti-robotmotiondatasetsisgenerallyintractable
asitrequiressolvinganMRMPproblemforeachdatapoint,inthispaperwefocusonsingle-robot
dataandconstructourmulti-robotdatasetsfromcollision-freesubsetsofoursingle-robotdatasets.
It is worth noting that given that our multi-robot datasets were composed of single-robot data, the
conclusions from our results is that it is difficult to learn multi-robot trajectory generation from
composedsingle-robotdata, andnotthatitisauniquelychallengingtaskinthegeneralcase. See
Sec. 4.1foradescriptionofourcompositemodels.
MAPF Baselines. Our MAPF baselines, termed A*Data-ECBS and A*-ECBS, are both similar
algorithmically and only differ in the edge costs they use for single-robot graphs. We will start
withdescribingthealgorithmsandthengiveadditionaldetailsforcostmapcreation. Thelow-level
plannersusedinthesebaselinesareA*withafocallistmechanism,alsoknownasA∗(Pearl&Kim,
ϵ
1982). Wesetthefocallistboundto1.5anddidnotallowforre-expansionsinourimplementation.
Onthehigh-levelsearch,weprioritizedCTnodesstrictlybasedontheirconflictcounttomatchthe
strategyinMMD.Allrobotsinourexperimentstravelledona4-connectedregulargridgraphwith
stepsizeof0.1,andwereallowedtomoveup,down,left,right,orwaitoneachtimestep,witheach
action incurring a unit cost in A*-ECBS. It is worth noting that the robots in our experiments are
notpoint-robots, andsorobot-robotcollisioncheckingisneededtofindconflicts(e.g., tworobots
traversingdifferentedgesbetweentandt′ maystillcauseanedgeconflict). Thisaffectedruntime.
ToencodedatasetdemonstrationsinA*Data-ECBS,wecreatedcostmapsforeachevaluationmap
asdiscussedinSec. 4.2. Todosoinagivenmap,weiterateoverallitsdatasetentries,andfollow
each trajectory, keeping track of which discretized cells (centered at states s) it visited. For each
cellthatthetrajectoryvisited,wefindthefirsttrajectorystateoutsideofitscenters,callits′,and
incrementacountfortheoutgoinggraph(directed)edgefromsthatalignsbestwiththelinebetween
sands′.Eventually,weassigndirectededgecostsof1+10 withmbeingthenumberoftrajectories
m
thatincrementedthisedgeor1ifnonehave.OurA*Data-ECBSandA*-ECBSimplementationwas
doneinPython.
18