Planetariumü™ê: A Rigorous Benchmark for
Translating Text to Structured Planning Languages
MaxZuo‚àó FranciscoPiedrahitaVelez‚àó XiaochenLi
MichaelL.Littman StephenH.Bach
DepartmentofComputerScience
BrownUniversity
{zuo, francisco, xiaochen_li, mlittman, sbach}@cs.brown.edu
Abstract
Manyrecentworkshaveexploredusinglanguagemodelsforplanningproblems.
Onelineofresearchfocusesontranslatingnaturallanguagedescriptionsofplan-
ningtasksintostructuredplanninglanguages,suchastheplanningdomaindefini-
tionlanguage(PDDL).Whilethisapproachispromising,accuratelymeasuring
thequalityofgeneratedPDDLcodecontinuestoposesignificantchallenges. First,
generatedPDDLcodeistypicallyevaluatedusingplanningvalidatorsthatcheck
whether the problem can be solved with a planner. This method is insufficient
becausealanguagemodelmightgeneratevalidPDDLcodethatdoesnotalign
withthenaturallanguagedescriptionofthetask. Second,existingevaluationsets
oftenhavenaturallanguagedescriptionsoftheplanningtaskthatcloselyresemble
thegroundtruthPDDL,reducingthechallengeofthetask. Tobridgethisgap,we
introducePlanetarium,abenchmarkdesignedtoevaluatelanguagemodels‚Äôability
togeneratePDDLcodefromnaturallanguagedescriptionsofplanningtasks. We
begin by creating a PDDL equivalence algorithm that rigorously evaluates the
correctnessofPDDLcodegeneratedbylanguagemodelsbyflexiblycomparingit
againstagroundtruthPDDL.Then,wepresentadatasetof132,037text-to-PDDL
pairsacross13differenttasks,withvaryinglevelsofdifficulty. Finally,weeval-
uateseveralAPI-accessandopen-weightlanguagemodelsthatrevealthistask‚Äôs
complexity. For example, 87.6% of the PDDL problem descriptions generated
byGPT-4oaresyntacticallyparseable,82.2%arevalid,solve-ableproblems,but
only 35.1% are semantically correct, highlighting the need for a more rigorous
benchmarkforthisproblem.
1 Introduction
Recently,therehasbeengrowinginterestinusinglargelanguagemodels(LLMs)tosolveplanning
problems. Some research has focused on generating plans directly with LLMs Valmeekam et al.
[2023a,2022,2023b],Silveretal.[2022,2023]. However,thisapproachhasshownlimitedsuccess;
GPT-4onlyachieves35%accuracyonsimpleplanningproblemsValmeekametal.[2023a]. Another
lineofresearchusesLLMstoconvertnaturallanguagepromptsintostructuredplanninglanguages,
suchastheplanningdomaindefinitionlanguage(PDDL)Liuetal.[2023],Xieetal.[2023b],Guan
etal.[2023],Chalvatzakietal.[2023],Yangetal.[2023b]. Earlyevidencesuggeststhismethod
performsbetterthangeneratingplansdirectlywithLLMsLiuetal.[2023]. Despiteitspromise,there
isalackofrigoroustechniquesandbenchmarksforevaluatingthetranslationofnaturallanguage
planningdescriptionstoPDDL.
‚àóEqualcontribution.
Preprint.Underreview.
4202
luJ
3
]LC.sc[
1v12330.7042:viXraInitial Goal
State State
BLOCK
BLOCK BLOCK BLOCK
(:objects a b) (:objects a b) (:objects a b) (:objects a b)
(:init (clear a) (:init (clear a) (:init (clear a) (:init (clear a)
(clear b) (clear b) (clear b) (clear b)
(on-table a) (on-table a) (on-table a) (on-table a)
(on-table b) (on-table b) (on-table b) (on-table b)
(arm-empty)) (arm-empty)) (arm-empty)) (arm-empty))
(:goal (and (on a b) (:goal (and (on a b) (:goal (and (on a b) (:goal (and (on a b)
(on-table b) (on-table b) (on-table b) (on-table b)
(clear a) (clear a) (clear a) (clear a)
(arm-empty))) (arm-empty))) (arm-empty))) (arm-empty)))
Figure1: AnillustrationofhowmultiplePDDLproblemdescriptionscandescribethesameplanning
problem. AllfourPDDLproblemdescriptionsrepresenttheplanningproblemofstackingoneblock
ontoanother.
TranslatingnaturallanguagetoPDDLenablesahybrid,best-of-both-worldsapproach. TheLLM
isresponsibleforinterpretingnaturallanguage,andtheresultingPDDLcanbegiventotraditional,
symbolicplannersthathavebeendevelopedoverdecadesFikesandNilsson[1971],McDermottetal.
[1998],Helmert[2006],Baieretal.[2009],VidalandGeffner[2006]. Thesetraditionalplannersare
efficientandensurethecorrectnessoftheirsolutions. Incontrast,leavingtheplanningtoLLMsdoes
notguaranteecorrectness,makingthemunreliableforcriticalapplications. Despitethisshortcoming,
LLMsareanenticingapproach,asusingtraditionalplannersrequiresdomainexpertiseandexpertise
inmodelingplanningproblems. ByusingLLMstotranslatenaturallanguageintoPDDL,wecan
betterleveragethestrengthsofexistingplanners.
UsingLLMstotranslatenaturallanguagetoPDDLisaninstanceofacodegenerationtask.Evaluating
codegenerationtasksingeneralishighlychallenging. Somebenchmarksforcodegenerationuse
match-basedmetricsthatlookforsegmentsthatoverlapwithgroundtruthcodePapinenietal.[2002],
Lin[2004],Renetal.[2020], butmatch-basedmetricscannotcoverthevastspaceofequivalent
programsChenetal.[2021]. Therefore,benchmarksoftentestfunctionalcorrectnessusingasuiteof
unittestsRoziereetal.[2020],Kulaletal.[2019]. Forplanningproblems,existingworksuse‚Äúplan
validators‚ÄùtocheckifthegeneratedcodecanbesolvedwithatraditionalplannerLiuetal.[2023],
Silveretal.[2022,2023],Guanetal.[2023]. Wearguethatthesevalidatorsaloneareinsufficientto
determineifPDDLgenerationiscorrect. ThisisbecausetheLLMcangeneratevalidPDDLthathas
nothingtodowiththeuser‚Äôsinstructionsandstillbeconsideredcorrect.
ArigorousevaluationofLLMsasgeneratorsofstructuredplanninglanguagesrequiresaprecise
definition of what it means for generated code to be correct, and an efficient, automatic way of
checking it. This requirement is hard because many instances of PDDL can represent the same
planningproblem,butitisnotalwaysobviouswhentheyareequivalent(Figure1). Properlychecking
PDDLequivalencerequiressymbolicinterpretation.
Toaddressthischallenge,weintroducePlanetarium,abenchmarktoevaluateLLMsontranslating
naturallanguagedescriptionsofplanningproblemsintoPDDL.Ourcontributionsareasfollows:
‚Ä¢ Rigorous Evaluation of PDDL Equivalence. We formally define planning problem
equivalence and create an algorithm for checking whether two PDDL problems satisfy
this definition. This algorithm transforms the PDDL code into scene graphs, computes
anexpansionofthegoalstatesforbothPDDLproblems,andthenperformsisomorphism
checksbetweenthegraphs. OurmethodensurestwoPDDLproblemsmatchifandonly
iftheyrepresentthesameunderlyingplanningproblem. Further,weshowhowtomake
thisalgorithmpracticallyefficientfortwodomains: BlocksWorldandGripperMcDermott
[2000](AppendixC).
‚Ä¢ BenchmarkDataforPDDLGeneration. WepresentadatasetbasedontheInternational
PlanningCompetition(IPC)McDermott[2000],Vallatietal.[2015],Taitleretal.[2024],
Seippetal.[2022],crafting132,037groundtruthPDDLproblemsandcorrespondingtext
2descriptionscapturingarangeofplanningproblems. Eachtaskvariesintwodimensionsto
assessthedifficultyofthePDDLgenerationtask: abstractionandsize.
‚Ä¢ Broad Evaluation of Current LLMs. Finally, we evaluate a range of API-access and
open-accessLLMsonPlanetarium. Weevaluateinbothazero-shotsettingandafterfine-
tuning. Wefindthatthistaskisverychallenging. GPT-4oinazero-shotsettinggetsonly
35.1%correct. Instanceswithabstractdescriptionsormanypropositionsareparticularly
challenging. Planetariumcanthereforeserveasabenchmarkofprogressonthisimportant
problem. ToenablefuturedevelopmentandevaluationofLLMswereleaseallthecodeand
dataforPlanetariumathttps://github.com/BatsResearch/planetarium.
2 RelatedWork
LLMs as Planners. There is growing interest in using LLMs for solving planning problems.
SeveralworkshavedemonstratedthepotentialofusingLLMsfordecisionmakingprocessesSharma
etal.[2022],Renetal.[2023],Ichteretal.[2022],Singhetal.[2022]. Sometechniquesthatenable
theuseofLLMsasplannersinvolvedecomposingabstracttasksintoconcrete,atomicexecutable
actions for an agent to perform Huang et al. [2022b,a], Sharma et al. [2022]. Other approaches
generateplanactionsbyscoringthepossiblenextstepsinasequenceofactionsIchteretal.[2022],
Renetal.[2023]. WhenusingLLMstogenerateplansdirectly,theLLMisgivenanaturallanguage
representationofaplanningproblemwiththegoalofgeneratingaplan. Werefertothislineofwork
as‚ÄúLLMsasplanners.‚Äù OneofthemainfindingsisthatLLMshavelimitedabilitytogenerateand
validateplansontheirown,evenforsimpleplanningtasksValmeekametal.[2022],Silveretal.
[2022],Valmeekametal.[2023b].
Planner-AugmentedLLMs. GivenLLMs‚ÄôpoorperformanceinclassicalplanningtasksValmeekam
etal.[2023a,2022],Silveretal.[2022],newapproachesextendLLMsbyincorporatingclassical
planningtechniquesLiuetal.[2023],Guanetal.[2023]. Sometechniquesframetheproblemas
amachinetranslationtask,transforminganaturallanguagetextdescriptionofaplanningproblem
intoPDDLtousewithclassicalplannersLiuetal.[2023],Guanetal.[2023],Xieetal.[2023a]. We
refertothislineofworkas‚ÄúPlanner-AugmentedLLMs.‚Äù Othersimilarapproachestranslatenatural
languageintoalternativerepresentationsoftheplanningproblem,suchasfinitestateautomataYang
etal.[2023a]orlogicprogrammingYangetal.[2023b],tosolvethem.
BenchmarkingLLMsonPlanningTasks.Significanteffortshavebeenmadetodevelopbenchmarks
toassesstheuseof‚ÄúLLMsasPlanners.‚Äù PlanBenchValmeekametal.[2023a]evaluatesLLMson
variousplanning-relatedtasks,includingplangeneration,cost-optimalplanning,planverification,
and other properties. Their work focuses on evaluating LLMs on their ability to generate plans.
In contrast Planetarium focuses on evaluating ‚ÄúPlanner-Augmented LLMs‚Äù. Here, the goal is to
determineifanLLMcansuccessfullytranslatenaturallanguagedescriptionsofplanningproblems
intothecorrectPDDLrepresentationsofthoseproblems.
3 Preliminaries
TopresentPlanetarium,wefirstintroduceplanning,PDDL,andscenegraphs.
3.1 ClassicalPlanningProblems
In a classical planning problem, states are fully observable, there is a finite set of actions, and
transitionsaredeterministic. Thegoalistotransitionfromtheinitialstatetothegoalstatefollowing
atransitionfunction. Weusetheset-theoreticdefinitionofclassicalplanningproblemsGhallabetal.
[2004].
Definition1. AplanningproblemP isdenotedbythetuple(L,S,A,Œ≥,s ,g),where:
i
‚Ä¢ Lisafinitesetofpropositionsymbolsrepresentingdifferentfactsabouttheworld.
‚Ä¢ S ‚äÜ2Lisasetofstates. Eachstates‚äÜListhesetoftruepropositionsinthatstate.
3‚Ä¢ Arepresentsthesetofactions,whereeachactionaconsistsofasetofpreconditionsthat
mustholdforittobeapplicableandasetofeffectsthatmodifythepropositionsthatare
trueafteritsexecution.
‚Ä¢ ThetransitionfunctionŒ≥ :S√óA‚Üí2S modelshowtheworldchangesbyanaction.
‚Ä¢ s istheinitialstateoftheworldfromwhichtheproblembegins.
i
‚Ä¢ g ‚äÜ Lrepresentsthegoalpropositions,indicatingwhichpropositionsmustbetruefora
statetobeconsideredagoalstate. ThesetofgoalstatesisS ={s‚ààS |g ‚äÜs}.
g
AplanœÄ =<a ,a ,...,a >isasequenceofactionsthatleadsfroms toanystateinS following
1 n n i g
Œ≥. ThisplanisthesolutiontoaplanningproblemP.
3.2 PlanningDomainDefinitionLanguage
ThePlanningDomainDefinitionLanguage(PDDL)isaspecializedlanguagedesignedtoprovide
aunifiedwaytorepresentplanningproblems. Itcanrepresentvarioustypesofplanningproblems,
including classical planning problems McDermott [2000], Gerevini and Long [2006]. A PDDL
planningproblemconsistsoftwofiles: thedomainfile,whichdescribestheconstantpartsofthe
worldmodel,andaproblemfile,whichspecifiesparticularplanningscenariosusingtheworldmodel
outlinedinthedomainfile.
Inthedomainfile,wespecifythesetofpossibleactionsAandtheirpreconditionsandeffects,which
collectivelydefinethetransitionfunctionŒ≥. Theproblemfiledefinestheinitialstates andthegoal
i
propositionsg. Finally,thesetofpropositionsymbolsLiscreatedbycombiningthepredicatesfrom
thedomainfilewiththeobjectsdefinedintheproblemfile.
PlanetariumfocusesonclassicalplanningproblemswithintheSTRIPSsubsetofPDDLMcDermott
etal.[1998],FikesandNilsson[1971]. STRIPSprovidesthebasicgrammarfordescribingactions
byspecifyingasetofpreconditionsthatmustbemetforanactiontobeapplicableandasetofeffects
thatmodifythepropositionsthataretrueaftertheaction‚Äôsexecution. Theexpressivenessofproblems
definedinSTRIPSisequivalenttothosecharacterizedbytheset-theoreticdefinition(Definition1)of
classicalplanningproblemsGhallabetal.[2004].
3.3 SceneGraphs
Tocomparedifferentplanningproblems, weusescenegraphs. Ascenegraphisadatastructure
commonlyusedinfieldssuchascomputervisionandgraphicsJohnsonetal.[2015],Changetal.
[2023],rearrangementRamachandrunietal.[2023],andplanningtorepresentobjects,theirattributes,
andtherelationshipsamongthem. Inourwork,wedefinescenegraphsasdirectedgraphswithtypes
andattributesforbothnodesandedges. WerepresentaPDDLproblemfilewithscenegraphsas
follows. Wecreateonescenegraph(theinitialscene)fortheinitialstateandanotherforthesetof
goalpropositions(thegoalscene). Foreveryobject,wecreateanodewithanobjecttype. Thenfor
everypropositionthatislistedintheproblemfile,wecreateanodewithapropositiontype. That
nodeisgivenanattributewiththenameofitspredicate. Then,foreachargumenttothepredicate
inthatproposition,weaddanedgefromthepropositionnodetothecorrespondingobject. Each
suchedgeisgiventhreeattributes: thenameofthepredicate, thepositionoftheargument(first,
second,etc.),andwhetheritisdefinedintheinitialstateorthegoalpropositions. Ascenegraph
is thus ({O‚à™P},E), where O is the set of nodes with object type, P is the set of nodes with
Propositiontype,andE isthesetofedges.
We further define a problem graph as the combination of an initial scene and goal scene. Given
SceneGraph = ({O ‚à™P },E ) and SceneGraph = ({O ‚à™P },E ), then a
init init init goal goal goal
problemgraphmergesthescenegraphssuchthatProblemGraph=({O‚à™P ‚à™P },{E ‚à™
init goal init
E }). We define graph isomorphism on any of these graphs as an edge and type-preserving
goal
bijectionbetweennodes,meaningthattwographsshareaconnectivitystructurewherealltypesand
attributesmatch. SeeAppendixBfordiagramsofsceneandproblemgraphs.
44 EvaluationFramework
Inthissection,wedescribethedesignofPlanetarium. Ourgoalistosystematicallyevaluatehow
wellLLMscantranslatenaturallanguagedescriptionsofplanningtasksintostructuredplanning
languages. Planetariumconsistsoftwocomponents: analgorithmthatvalidateswhetheraground
truthPDDLproblemfileandanLLM-generatedPDDLproblemfileareequivalent,andacurated
datasetofplanningtasksagainstwhichanLLMcanbeevaluated.
4.1 PlanningProblemEquivalence
ThefirststeptobenchmarkingPDDLgenerationisdetermininghowtodecidewhetherthegenerated
codematchesgroundtruthcode. OnemightassumethatcheckingiftwoPDDLproblemfilesare
equivalentisstraightforward. However,thesameinitialstate,goalstatepaircouldberepresentedby
manyPDDLproblemfiles,asshowninFigure1.
Giventhesedifficulties,weproposeadefinitionofequivalenceintermsofclassicalplanningproblems.
ThemainideaistofindabijectivefunctionbetweenthesetsofpropositionsymbolsLofeachproblem,
suchthatwhenappliedtotheotherelements,thisfunctionmakesbothproblemsequal.Thisdefinition
assumesthatthesetofactionsAandthetransitionfunctionŒ≥ aresharedbetweenthetwoproblems.
Ourformaldefinitionofequivalencebetweentwoplanningproblemsis:
Definition2. TwoplanningproblemsP = (L1,S1,A,Œ≥,s1,g1)andP = (L2,S2,A,Œ≥,s2,g2)
1 i 2 i
withthesameactionsAandtransitionfunctionŒ≥ areequivalentifthereexistsabijectivefunction
f :L1 ‚ÜíL2suchthat:
1. S2 ={{f(p):p ‚ààs}:s‚ààS1}
2. s2 ={f(p):p‚ààs1}
i i
3. S ={{f(p):p ‚ààs}:s‚ààS }
g2 g1
ThisdefinitionisnotdirectlyusableforcheckingequivalencebetweentwoPDDLproblemfiles. This
isbecauseourdefinitionreliesonfindingabijectionbetweenthesetsLofeachproblem,andPDDL
doesnotdefinethesesetsdirectly. TobuildthesetLwithPDDL,oneneedstousethepredicates
inthedomainfileandtheobjectsintheproblemfile,instantiatingeachpredicatewithallpossible
objectstheymighttake. SincethesetofactionsAandthetransitionfunctionŒ≥ aredefinedinthe
PDDLdomainfile,andsincetheequivalencedefinitionassumestheyareshared,wecanassume
theentirePDDLdomainisshared. Thisfactentailsthatthepredicateswillbeshared, makingit
necessarytolookforbijectivefunctionsforPDDLonlyovertheobjects. Thechallengeisthateach
PDDLproblemfilecancorrespondtomanypairsofinitialandgoalstatesbecausethesetofgoal
propositionsmakesanopen-worldassumption. Thatsetcanleaveimplicittrivialpropositionsthat
arenecessarilytrueandthereforedonotchangetheunderlyingplanningproblem. Wemusttherefore
fullyspecifythegoal,meaningthatweidentifyallpropositionsthataretrueinallreachablegoal
stateswhenstartingfromtheinitialstate.
OuralgorithmforcheckingequivalenceissummarizedinAlgorithm1. First,wetransformeachset
ofinitialstateandgoalstatepropositionsintoscenegraphs. Second,wefullyspecifythegoalscene
graphsbyaddingalltriviallytrueedges. Finally,wejointheinitialstatescenegraphwitheachgoal
stategraphtocreateproblemgraphsandlookforabijectionbetweenobjectssuchthattheproblem
graphsareisomorphic. Wenowdiscussthesecomponentsinmoredetail.
TransformtoSceneGraphs. FromeachPDDLproblemfile,wegeneratetwoscenegraphs: one
for the initial state and another for the goal state (lines 2‚Äì3). For each transformation, we first
createanobjectnodeforeachobject. Then, foreachpropositioninthecollection, wecreatea
newpropositionnodeandcreateedgesbetweenthepropositionnodeandtheobjectsittakesas
arguments. Edgeattributesdenoteargumentorder,predicatetype,andwhetherthepropositionisin
aninitialorgoalscene. SeeSection3.3forfurtherdetails.
CheckEasyCases. Forspeed,wecheckseveralcasesandreturnearlyifwecan(lines5‚Äì7). First,if
thenumberofobjectnodesineachgraphisnotequal,theproblemscannotbeequivalent.Second,if
theinitialscenesarenotisomorphic,thentheproblemscannotbeequivalent. Finally,iftheproblem
graphs,composedoftheinitialandgoalscenes,areisomorphic,thentheproblemsareequivalent.
5Algorithm1PlanningProblemEquivalence
1: functionISEQUIVALENT(P a,P b,isPlaceholder)
2: s i,a,g
a
‚ÜêtoSceneGraph(P a)
3: s i,a,g
a
‚ÜêtoSceneGraph(P b)
4:
5: ifcanFastEquivalence(s i,a,g a,s i,b,g b)then
6: returnfastEquivalence(s i,b,g a,s i,a,g b)
7: endif
8:
9: g‚ãÜ
a
‚ÜêfullySpecify(s i,a,g a)
10: g‚ãÜ
b
‚ÜêfullySpecify(s i,b,g b)
11:
12: ifisPlaceholderthen
13: returnisIsomorphic(s i,a,s i,b)‚àßisIsomorphic(g‚ãÜ a,g‚ãÜ b)
14: else
15: p
a
‚Üêjoin(s i,a,g‚ãÜ a)
16: p
b
‚Üêjoin(s i,b,g‚ãÜ b)
17:
18: returnisIsomorphic(p ,p )
a b
19: endif
20: endfunction
Fully Specify the Goal Scenes. If the input is not an easy case, then we have to reason about
the sets of goal states defined by the goal scenes. Condition 3 of Definition 2 requires that the
sets of goal states that are consistent with the given goal propositions be equal after substituting
matchingpropositions. SincePDDLusestheopen-worldassumptionforgoals,wehavetoidentify
allpropositionsthataretrueinallreachablegoalstateswhenstartingfromtheinitialstateforeach
problem. ThefunctionfullySpecifyfindsallsuchpropositionsandaddsthemtothegoalscenesas
additionalpropositionnodeswiththecorrespondingedgesandattributes(lines9‚Äì10). Weshow
howtoimplementfullySpecifyefficientlyforBlocksWorldandGripperinAppendixC.
PDDLwithoutObjectIdentity. Ouralgorithmrunsintwomodes,dependingonthetypeofproblem
wearechecking. SometimeswewanttocompareageneratedPDDLproblemfilewithmanyground
truthproblemfilesandseeifthegeneratedfilematchesanyoneofthem. Forexample,ifthenatural
languagedescriptionsaysto‚Äúmakeatowerofheight3,‚Äùthespecificblockstouseareunspecified,and
anypermutationofblocksthatbuildsatowerofheight3shouldbeconsideredcorrect. Concretely,
wewanttotreattheobjectsinthePDDLgoalstatesasplaceholdersandacceptanypermutationof
them. WecheckthisconditionwhenisPlaceholderisTrue(determinedbytheproblemtype)simply
bycheckingisomorphismbetweeninitialandgoalscenesseparatelyratherthancombiningtheminto
problemgraphs(line13).
PDDLwithObjectIdentity. IfisPlaceholderisFalsethenwewanttocheckwhethertheproblem
filesarepreciselyequivalentunderDefintion2,meaningthattheobjectsintheinitialscenescorre-
spondtothesameobjectsinthegoalscenesaswell. Wefirstjointhecorrespondinginitialandscene
graphsintoproblemgraphsasdescribedinSection3.3(lines15‚Äì16). Thenwecheckwhetherthe
twoproblemgraphsareisomorphic(line18).
WeillustrateAlgorithm1withexamplesinAppendixB.Wealsoformallystateitscorrectness,with
theproofinAppendixA.
Theorem1. isEquivalent(P ,P ,False)returnsTrueifandonlyifthePDDLproblemfilesP and
a b a
P representequivalentplanningproblemsunderDefinition2. isEquivalent(P ,P ,True)returns
b a b
TrueifandonlyifP representsaplanningproblemthatisequivalenttosomeplanningproblem
a
representedbyP afterapermutationoftheobjectsinitsgoalstate.
b
4.2 TheDataset
The Planetarium dataset includes 132,037 text-to-PDDL pairs across 13 tasks, derived from the
BlocksWorldandGripperdomainsSeippetal.[2022],McDermott[2000].
6Table1: AbreakdownofthePlanetariumdatasetbythelevelofabstractnessofthetextdescription
andnumberofpropositionsinthegroundtruthPDDLproblem(size). Eachinstanceisagroundtruth
PDDLproblemdescriptionandtextdescriptionpair.
Abstractness Num.ofGroundTruthPropositions(Size)
Domain Total
Explicitto Abstractto
Explicit Abstract Explicit Abstract 1-20 21-40 41-60 61-80 >80
BlocksWorld 92,350 23,033 23,087 23,086 23,144 1,012 10,765 50,793 26,316 3,464
Gripper 39,687 10,632 9,518 10,313 9,224 379 2,112 9,412 25,346 2,438
DatasetConstruction. Wefocusonthesetwodomainsastheyarecommonlyusedinotherworks
Valmeekametal.[2023a],Liuetal.[2023],butareneverthelesschallenging. Eachtext-to-PDDL
pairconsistsofapromptdetailingtheinitialandgoalstates,alongwiththecorrespondingground
truthPDDL.(SeeAppendixDforexamples.) Table1showsabreakdownofthePlanetariumdata
bytextdescriptionabstractnessandnumberofpropositions. EachinstanceisagroundtruthPDDL
problemdescriptionandtextdescriptionpair.
Wevarythedataalongtwodimensions: abstractness(explicitvsabstract)andsize. Explicitplanning
problem text descriptions correspond directly to propositions found in the problem PDDL (e.g.,
‚Äúblock1isonblock2‚Äù). Abstracttextdescriptionsinsteadsummarizeastate(e.g.,‚Äúallblocksareina
singletower‚Äù). Sinceourtextdescriptionsdescribebothinitialandgoalstates,eachcanbeeither
anabstractorexplicitdescription,leadingtofourpossiblecategories: explicittoexplicit,explicit
toabstract,abstracttoexplicit,andabstracttoabstract. Wemeasurethesizeofaproblembythe
numberofpropositionslistedinthegroundtruthproblemPDDL.Largerproblemstypicallypose
greaterchallengesforLLMs.
To obtain interesting problems for each domain, we crafted a set of tasks instead of randomly
generatinginstances. Belowaredescriptionsofeachdomainandtheircorrespondingtasks.
BlocksWorld. Thisdomaininvolvesusingarobotichandtomanipulateasetofblocksarrangedin
variousconfigurationsonatable. Wehavedesignedthefollowingtasksforthisdomain:
‚Ä¢ Stack: Arrangealltheblocksintoasingletower.
‚Ä¢ Unstack: Dismantleanytowersothatallblocksareseparatelyplacedonthetable.
‚Ä¢ HoldingaBlock: Similartounstacking,butoneblockremainsheldbytherobot.
‚Ä¢ Staircase: Createstacksofincreasingsizesfromoneupwardsuntilnoblocksareleft.
‚Ä¢ EqualTowers: Arrangetheblocksintotowersofequalheight.
‚Ä¢ Swap: Withtwotowers,swapthebaseblocksandleavetherestofthestructureunchanged.
‚Ä¢ Invert: Inverteachstacksotheentiresequenceofblocksisreversed.
‚Ä¢ Towers: Buildtowerstomatchaspecifiedlistofheights.
Gripper. Thisdomainfeaturesarobotequippedwithgrippers,taskedwithtransportingballsfrom
oneroomtoanother. Wehavedesignedthefollowingtasksforthisdomain:
‚Ä¢ SingleRoom: Moveallballstooneroom.
‚Ä¢ EvenlyDistribute: Positiontheballssoeachroomhasthesamenumberofballs.
‚Ä¢ Arbitrarily Distribute: Move the balls according to a predefined list that specifies the
numberofballsperroom.
‚Ä¢ SwapRooms: Exchangetheballsbetweentworooms.
‚Ä¢ MovetoMax: Moveallballstotheroomcurrentlycontainingthemostballs.
‚Ä¢ MovetoMin: Moveallballstotheroomwiththeleastnumberofballs.
5 EvaluatingLLMsonPlanetarium
Asaninitialsnapshotofthefield‚Äôscurrentstate,weevaluateseveralAPI-accessandopen-weight
language models on Planetarium in both zero-shot and fine-tuned settings. We find that while
7powerfulmodelslikeGPT-4ocanoftengeneratevalidPDDLproblems(inthesensethatsomeplan
solvesthem),theyarerarelycorrect. ThisresultunderscorestheneedforPlanetarium‚Äôsrigorous
approachtoevaluationofPDDLgeneration. Thecodetorecreatetheentireevaluationisavailableat
https://github.com/BatsResearch/planetarium.
Models. WeevaluateoneAPI-accessmodel(GPT-4o)andthreeopen-weightmodels(Mistralv0.3
7BInstructJiangetal.[2023],andGemma1.1IT2B&7BTeametal.[2024]).
EvaluationProtocol.
WeevaluatemodelsonthePlanetariumtestset,whichwebuiltbyrandomlysplittingthePlanetarium
datasetwithan80/20train/testsplit. Modelsarepromptedwiththenaturallanguagedescription
of the task along with the respective domain PDDL. We measure three metrics: the number of
syntacticallyparseableproblemsgenerated,thenumberofsolve-ableproblems,andthenumberof
semanticallycorrectproblems. WesayamodeloutputisparseableifaPDDLparsersupporting
:stripscanparseavalidPDDLproblemfromasubstringintheoutputandifitcanbeconverted
intoourgraphrepresentation. Aproblemissolve-ableifitisparseableandthereexistsaplanthatcan
beappliedtotheinitialscenethatresultsinthegoalscene. Duetothesizeandcomplexityofsome
oftheproblemsinourdataset,ageneralizedclassicalplannercannotalwaysreliablyandquickly
returnsolutions. Therefore,wewritespecializedplannersthatworkforallproblemsinourdataset,
andgenerally,allvalidlydefinedblocksworldandgripperdomainproblems,exceptafewinvalid
edgecases(e.g.,oneblockontopoftwoblocksatatime,holdingtwoblocks,etc.). Toevaluatethe
correctnessofmodeloutputs,theymustbefirstparseableandsolve-able. Then,weuseourPDDL
equivalencealgorithmtoverifyequivalencetoourgroundtruthPDDL.Wefoundourequivalence
algorithmtotakeonaverage12msperexampletocomputeonanM2AppleSiliconlaptopwithbatch
parallelization.
Fine-Tuning. Wefine-tunedtheopen-weightmodelsusingQLoRAwitharankof16,adheringto
thehyperparameterrecommendationsforsmallmodelsprovidedbytheoriginalauthorsDettmers
et al. [2023]. Models were loaded in 4-bit precision and were trained over the training set for a
singleepoch. Fine-tuningforeachmodelusedeithertwoNVIDIAGeForceRTX3090GPUsortwo
NVIDIAA6000GPUs,operatingwithdataparallelizationforapproximately15hours. Wetruncate
thelongest5%ofourtrainingdatasetduetoGPUmemoryconstraints. Experimentswereconducted
usingaGPUclusterattheCenterforComputationandVisualization,BrownUniversity. Additional
experimentdetailsareprovidedinAppendixF.
Results. TheperformanceofGPT-4o,Mistralv0.37BInstruct,andGemma1.1IT2B&7Bon
thePlanetariumtestsetisshowninFigure2. Wereportthepercentageofgeneratedplansthatwere
parseableandcorrectandreportresultsfromzero-shotandfine-tunedsettings.
AnalysisandDiscussion. Allmodelsexhibitedpoorzero-shotperformance,withGPT-4oachieving
thehighestaccuracy. AbreakdownofGPT-4o‚Äôszero-shotperformance,theonlymodeltoachieve
significantzero-shotperformance,showsabstracttaskdescriptionsarehardertotranslatethanexplicit
ones,andfullyexplicittaskdescriptionsmakegeneratingparseablePDDLcodeeasier(Figure3).
100%
75%
50%
25%
0%
Zero-shot Fine-tuned Zero-shot Fine-tuned Zero-shot Fine-tuned Zero-shot
Gemma 1.1 IT 2B Gemma 1.1 IT 7B Mistral v0.3 Instruct 7B GPT-4o
Parseable Solve-able* Correct
Figure2: PerformanceofvariousmodelsonthePlanetariumtestset.
8
)%(
smelborP
%0 %0 %0
%83.99 %04.89 %12.49
%62.2
%10.0
<
%0
%37.99 %22.99 %97.89
%08.0 %25.0
%10.0
<
%98.99 %93.99 %00.99 %41.98
%22.28
%21.53Fine-tuningimprovedperformanceacrossallopen-weightmodels, withMistralv0.37BInstruct
achievingthehighestaccuracy. MoreexperimentsandanalysesareshowninAppendixG.
6 Conclusion,Limitations,andFutureWork
Planetarium is a new benchmark for assessing the ability of LLMs to translate natural language
descriptionsofplanningproblemsintoPDDL.Apotentialsocietalimpactofthisresearchisensuring
thecorrectnessoftranslatingnaturallanguageintostructuredplanninglanguages. Ifthistranslation
methodbecomeswidespreadbutitsevaluationremainsinaccurate,systemscouldproducemisleading
ormisalignedresultsthatcouldcauseharmifactedupon. Planetariumhighlightstheimportanceof
assessingthecorrectnessoftranslations. WeachievethisbyreasoningaboutPDDLsemanticsand
theinherentstructureofclassicalplanningproblems.
Planetariumhasafewimportantlimitations: PlanetariumcurrentlyonlysupportstheBlocksWorld
andGripperdomains. WhilethesedomainshavebeenpopularforstudyingLLMsandtheirrelation
toplanning,incorporatingmoreexpressivedomainsinthefuturewillwidenthescopeofPlanetarium.
ThisbenchmarkisalsocurrentlyrestrictedtotheSTRIPSsubsetofPDDL.Extendingittosupport
more expressive subsets of PDDL will allow us to evaluate more complex, real-world planning
problemssuchasnon-deterministic,temporal,andnumericdomains. Ourworkrevealsgenerating
semanticallycorrectstructuredplanninglanguagedescriptionstobeachallengingtaskforlanguage
models,withmodelslikeGPT-4oachieving35.1%zero-shotaccuracybutproducingvalid,seemingly
correct descriptions 82.2% of the time. We hope that Planetarium will drive progress on hybrid
approachescombiningLLMsandclassicplanners,settingastandardfortheevaluationofsuchtasks.
AcknowledgmentsandDisclosureofFunding
ThisresearchissupportedinpartbytheOfficeofNavalResearch(ONR)awardN00014-20-1-2115.
WegratefullyacknowledgesupportfromCisco,Cognex,andtheBrownComputerScienceFaculty
InnovatorsFund. Disclosure: StephenBachisanadvisortoSnorkelAI,acompanythatprovides
softwareandservicesfordata-centricartificialintelligence.
References
JorgeA.Baier,FahiemBacchus,andSheilaA.McIlraith. Aheuristicsearchapproachtoplanning
withtemporallyextendedpreferences. ArtificialIntelligence,173(5):593‚Äì618,2009. ISSN0004-
3702. doi: https://doi.org/10.1016/j.artint.2008.11.011. URLhttps://www.sciencedirect.
com/science/article/pii/S0004370208001975. AdvancesinAutomatedPlanGeneration.
GeorgiaChalvatzaki, AliYounes, DaljeetNandha, AnThaiLe, LeonardoFRRibeiro, andIryna
Gurevych. Learningtoreasonoverscenegraphs: acasestudyoffinetuninggpt-2intoarobot
languagemodelforgroundedtaskplanning. FrontiersinRoboticsandAI,10,2023.
100%
75%
50%
25%
0%
Abstract Initial Scene Explicit Initial Scene Abstract Initial Scene Explicit Initial Scene
to to
Abstract Goal Scene Explicit Goal Scene
Parseable Solve-able* Correct
Figure3: BreakdownofGPT-4ozero-shotperformanceatvaryinglevelsofabstraction.
9
)%(
smelborP %51.38 %88.57
%48.91
%33.47
%44.36
%54.72 %08.99 %13.49 %17.03 %89.99 %80.69
%82.36XiaojunChang,PengzhenRen,PengfeiXu,ZhihuiLi,XiaojiangChen,andAlexHauptmann. A
comprehensivesurveyofscenegraphs: Generationandapplication. IEEETransactionsonPattern
AnalysisandMachineIntelligence,45(1):1‚Äì26,2023. doi: 10.1109/TPAMI.2021.3137605.
Mark Chen, Jerry Tworek, Heewoo Jun, Qiming Yuan, Henrique Pond√© de Oliveira Pinto, Jared
Kaplan,HarrisonEdwards,YuriBurda,NicholasJoseph,GregBrockman,AlexRay,RaulPuri,
GretchenKrueger,MichaelPetrov,HeidyKhlaaf,GirishSastry,PamelaMishkin,BrookeChan,
ScottGray,NickRyder,MikhailPavlov,AletheaPower,LukaszKaiser,MohammadBavarian,
ClemensWinter,PhilippeTillet,FelipePetroskiSuch,DaveCummings,MatthiasPlappert,Fotios
Chantzis,ElizabethBarnes,ArielHerbert-Voss,WilliamHebgenGuss,AlexNichol,AlexPaino,
Nikolas Tezak, Jie Tang, Igor Babuschkin, Suchir Balaji, Shantanu Jain, William Saunders,
ChristopherHesse,AndrewN.Carr,JanLeike,JoshuaAchiam,VedantMisra,EvanMorikawa,
AlecRadford,MatthewKnight,MilesBrundage,MiraMurati,KatieMayer,PeterWelinder,Bob
McGrew,DarioAmodei,SamMcCandlish,IlyaSutskever,andWojciechZaremba. Evaluating
largelanguagemodelstrainedoncode. CoRR,abs/2107.03374,2021. URLhttps://arxiv.
org/abs/2107.03374.
TimDettmers,ArtidoroPagnoni,AriHoltzman,andLukeZettlemoyer. Qlora: Efficientfinetuning
ofquantizedllms,2023.
RichardE.FikesandNilsJ.Nilsson. Strips: Anewapproachtotheapplicationoftheoremproving
to problem solving. Artificial Intelligence, 2(3):189‚Äì208, 1971. ISSN 0004-3702. doi: https:
//doi.org/10.1016/0004-3702(71)90010-5.URLhttps://www.sciencedirect.com/science/
article/pii/0004370271900105.
A.GereviniandD.Long. Planconstraintsandpreferencesinpddl3. InICAPSWorkshoponSoft
ConstraintsandPreferencesinPlanning,2006.
MalikGhallab,DanaNau,andPaoloTraverso. Automatedplanning. TheMorganKaufmannSeries
inArtificialIntelligence.MorganKaufmann,Oxford,England,2004.
LinGuan,KarthikValmeekam,SarathSreedharan,andSubbaraoKambhampati. Leveragingpre-
trainedlargelanguagemodelstoconstructandutilizeworldmodelsformodel-basedtaskplanning.
arXivpreprintarXiv:2305.14909,2023.
MalteHelmert. Thefastdownwardplanningsystem. J.Artif.Int.Res.,26(1):191‚Äì246,jul2006.
ISSN1076-9757.
Wenlong Huang, Pieter Abbeel, Deepak Pathak, and Igor Mordatch. Language models as zero-
shot planners: Extracting actionable knowledge for embodied agents, 2022a. URL https:
//openreview.net/forum?id=6NT1a56mNim.
WenlongHuang,FeiXia,TedXiao,HarrisChan,JackyLiang,PeteFlorence,AndyZeng,Jonathan
Tompson,IgorMordatch,YevgenChebotar,PierreSermanet,TomasJackson,NoahBrown,Linda
Luu,SergeyLevine,KarolHausman,andbrianichter. Innermonologue: Embodiedreasoning
throughplanningwithlanguagemodels. In6thAnnualConferenceonRobotLearning,2022b.
URLhttps://openreview.net/forum?id=3R3Pz5i0tye.
BrianIchter,AnthonyBrohan,YevgenChebotar,ChelseaFinn,KarolHausman,AlexanderHerzog,
DanielHo,JulianIbarz,AlexIrpan,EricJang,RyanJulian,DmitryKalashnikov,SergeyLevine,
YaoLu,CarolinaParada,KanishkaRao,PierreSermanet,AlexanderToshev,VincentVanhoucke,
FeiXia,TedXiao,PengXu,MengyuanYan,NoahBrown,MichaelAhn,OmarCortes,Nicolas
Sievers, Clayton Tan, Sichun Xu, Diego Reyes, Jarek Rettinghouse, Jornell Quiambao, Peter
Pastor,LindaLuu,Kuang-HueiLee,YuhengKuang,SallyJesmonth,NikhilJ.Joshi,KyleJeffrey,
RosarioJaureguiRuano,JasmineHsu,KeerthanaGopalakrishnan,ByronDavid,AndyZeng,and
ChuyuanKellyFu. Doasican,notasisay: Groundinglanguageinroboticaffordances. InCoRL,
pages287‚Äì318,2022. URLhttps://proceedings.mlr.press/v205/ichter23a.html.
AlbertQJiang,AlexandreSablayrolles,ArthurMensch,ChrisBamford,DevendraSinghChaplot,
DiegodelasCasas,FlorianBressand,GiannaLengyel,GuillaumeLample,LucileSaulnier,etal.
Mistral7b. arXivpreprintarXiv:2310.06825,2023.
10JustinJohnson,RanjayKrishna,MichaelStark,Li-JiaLi,DavidA.Shamma,MichaelS.Bernstein,
andLiFei-Fei. Imageretrievalusingscenegraphs. In2015IEEEConferenceonComputerVision
andPatternRecognition(CVPR),pages3668‚Äì3678,2015. doi: 10.1109/CVPR.2015.7298990.
SumithKulal,PanupongPasupat,KartikChandra,MinaLee,OdedPadon,AlexAiken,andPercyS
Liang. Spoc: Search-basedpseudocodetocode. InH.Wallach,H.Larochelle,A.Beygelzimer,
F. d'Alch√©-Buc, E. Fox, and R. Garnett, editors, Advances in Neural Information Processing
Systems,volume32.CurranAssociates,Inc.,2019. URLhttps://proceedings.neurips.cc/
paper_files/paper/2019/file/7298332f04ac004a0ca44cc69ecf6f6b-Paper.pdf.
Chin-YewLin. ROUGE:Apackageforautomaticevaluationofsummaries. InTextSummariza-
tion Branches Out, pages 74‚Äì81, Barcelona, Spain, July 2004. Association for Computational
Linguistics. URLhttps://aclanthology.org/W04-1013.
BoLiu,YuqianJiang,XiaohanZhang,QiangLiu,ShiqiZhang,JoydeepBiswas,andPeterStone.
Llm+p: Empoweringlargelanguagemodelswithoptimalplanningproficiency. arXivpreprint
arXiv:2304.11477,2023.
DrewMcDermott,MalikGhallab,AdeleHowe,CraigKnoblock,AshwinRam,ManuelaVeloso,
DanielWeld,andDavidWilkins. Pddl-theplanningdomaindefinitionlanguage. TechnicalReport,
Tech.Rep.,1998.
Drew M. McDermott. The 1998 ai planning systems competition. AI Magazine, 21(2):35, Jun.
2000. doi: 10.1609/aimag.v21i2.1506. URL https://ojs.aaai.org/aimagazine/index.
php/aimagazine/article/view/1506.
Kishore Papineni, Salim Roukos, Todd Ward, and Wei-Jing Zhu. Bleu: a method for automatic
evaluationofmachinetranslation. InProceedingsofthe40thannualmeetingoftheAssociationfor
ComputationalLinguistics,ACL‚Äô02,page311‚Äì318,USA,2002.AssociationforComputational
Linguistics. doi: 10.3115/1073083.1073135. URL https://doi.org/10.3115/1073083.
1073135.
KartikRamachandruni,MaxZuo,andSoniaChernova. Consor: Acontext-awaresemanticobject
rearrangementframeworkforpartiallyarrangedscenes,2023.
AllenZ.Ren,AnushriDixit,AlexandraBodrova,SumeetSingh,StephenTu,NoahBrown,Peng
Xu,LeilaTakayama,FeiXia,JakeVarley,ZhenjiaXu,DorsaSadigh,AndyZeng,andAnirudha
Majumdar. Robotsthataskforhelp: Uncertaintyalignmentforlargelanguagemodelplanners. In
7thAnnualConferenceonRobotLearning,2023. URLhttps://openreview.net/forum?id=
4ZK8ODNyFXx.
ShuoRen,DayaGuo,ShuaiLu,LongZhou,ShujieLiu,DuyuTang,NeelSundaresan,MingZhou,
AmbrosioBlanco,andShuaiMa. Codebleu: amethodforautomaticevaluationofcodesynthesis,
2020.
BaptisteRoziere,Marie-AnneLachaux,LowikChanussot,andGuillaumeLample. Unsupervised
translationofprogramminglanguages. InProceedingsofthe34thInternationalConferenceon
NeuralInformationProcessingSystems,NIPS‚Äô20,RedHook,NY,USA,2020.CurranAssociates
Inc. ISBN9781713829546.
Jendrik Seipp, √Ålvaro Torralba, and J√∂rg Hoffmann. PDDL generators. https://doi.org/10.
5281/zenodo.6382173,2022.
PratyushaSharma,AntonioTorralba,andJacobAndreas. Skillinductionandplanningwithlatent
language. InSmarandaMuresan,PreslavNakov,andAlineVillavicencio,editors,Proceedingsof
the60thAnnualMeetingoftheAssociationforComputationalLinguistics(Volume1:LongPapers),
pages1713‚Äì1726,Dublin,Ireland,May2022.AssociationforComputationalLinguistics. doi:
10.18653/v1/2022.acl-long.120. URLhttps://aclanthology.org/2022.acl-long.120.
TomSilver,VarunHariprasad,ReeceSShuttleworth,NishanthKumar,Tom√°sLozano-P√©rez,and
LesliePackKaelbling. Pddlplanningwithpretrainedlargelanguagemodels. InNeurIPS2022
FoundationModelsforDecisionMakingWorkshop, 2022. URLhttps://openreview.net/
forum?id=1QMMUB4zfl.
11TomSilver,SohamDan,KavithaSrinivas,JoshuaB.Tenenbaum,LesliePackKaelbling,andMichael
Katz. Generalized planning in pddl domains with pretrained large language models. In PRL
WorkshopSeries‚ÄìBridgingtheGapBetweenAIPlanningandReinforcementLearning,2023.
URLhttps://openreview.net/forum?id=ilHDGs2clY.
IshikaSingh,ValtsBlukis,ArsalanMousavian,AnkitGoyal,DanfeiXu,JonathanTremblay,Dieter
Fox,JesseThomason,andAnimeshGarg. Progprompt: Generatingsituatedrobottaskplansusing
large language models. CoRR, abs/2209.11302, 2022. URL https://doi.org/10.48550/
arXiv.2209.11302.
AyalTaitler,RonAlford,JoanEspasa,GregorBehnke,DanielFi≈°er,MichaelGimelfarb,Florian
Pommerening,ScottSanner,EnricoScala,DominikSchreiber,JavierSegovia-Aguas,andJendrik
Seipp. The2023internationalplanningcompetition. AIMagazine,April2024. ISSN2371-9621.
doi: 10.1002/aaai.12169. URLhttp://dx.doi.org/10.1002/aaai.12169.
GemmaTeam,ThomasMesnard,CassidyHardin,RobertDadashi,SuryaBhupatiraju,ShreyaPathak,
LaurentSifre,MorganeRivi√®re,MihirSanjayKale,JulietteLove,etal. Gemma: Openmodels
basedongeminiresearchandtechnology. arXivpreprintarXiv:2403.08295,2024.
MauroVallati,LukasChrpa,MarekGrzes¬¥,ThomasLeoMcCluskey,MarkRoberts,ScottSanner,
and Managing Editor. The 2014 international planning competition: Progress and trends. AI
Magazine,36(3):90‚Äì98,Sep.2015. doi: 10.1609/aimag.v36i3.2571. URLhttps://ojs.aaai.
org/aimagazine/index.php/aimagazine/article/view/2571.
KarthikValmeekam,AlbertoOlmo,SarathSreedharan,andSubbaraoKambhampati. Largelanguage
modelsstillcan‚Äôtplan(abenchmarkforllmsonplanningandreasoningaboutchange). arXiv
preprintarXiv:2206.10498,2022.
KarthikValmeekam,MatthewMarquez,AlbertoOlmo,SarathSreedharan,andSubbaraoKamb-
hampati. Planbench: Anextensiblebenchmarkforevaluatinglargelanguagemodelsonplanning
and reasoning about change. In Thirty-seventh Conference on Neural Information Processing
SystemsDatasetsandBenchmarksTrack,2023a. URLhttps://openreview.net/forum?id=
YXogl4uQUO.
KarthikValmeekam,MatthewMarquez,SarathSreedharan,andSubbaraoKambhampati. Onthe
planningabilitiesoflargelanguagemodels-acriticalinvestigation. InThirty-seventhConference
onNeuralInformationProcessingSystems,2023b. URLhttps://openreview.net/forum?
id=X6dEqXIsEW.
VincentVidalandH√©ctorGeffner. Branchingandpruning: Anoptimaltemporalpoclplannerbased
on constraint programming. Artificial Intelligence, 170(3):298‚Äì335, 2006. ISSN 0004-3702.
doi: https://doi.org/10.1016/j.artint.2005.08.004. URL https://www.sciencedirect.com/
science/article/pii/S0004370205001281.
YaqiXie,ChenYu,TongyaoZhu,JinbinBai,ZeGong,andHaroldSoh. Translatingnaturallanguage
toplanninggoalswithlarge-languagemodels. arXivpreprintarXiv:2302.05128,2023a.
YaqiXie,ChenYu,TongyaoZhu,JinbinBai,ZeGong,andHaroldSoh. Translatingnaturallanguage
toplanninggoalswithlarge-languagemodels. arXivpreprintarXiv:2302.05128,2023b.
YunhaoYang,Jean-RaphaelGaglione,CyrusNeary,andufuktopcu. Largelanguagemodelsfor
verifiablesequentialdecision-makinginautonomoussystems. In2ndWorkshoponLanguageand
RobotLearning: LanguageasGrounding,2023a. URLhttps://openreview.net/forum?id=
3IDdNlRbwk.
ZhunYang,AdamIshay,andJoohyungLee.Couplinglargelanguagemodelswithlogicprogramming
forrobustandgeneralreasoningfromtext. arXivpreprintarXiv:2307.07696,2023b.
12A ProofofTheorem1
Proposition1. isEquivalent(P ,P ,False)returnsTrueifandonlyifthePDDLproblemfiles
a b
P andP representequivalentplanningproblemsunderDefinition2.
a b
Proof. Toprovethisproposition,weneedtoproveeachdirectionofthebiconditional. First,wewill
provetheforwardimplication. TherearetwopossiblewaysthealgorithmcanreturnTrue: Eitherin
theisIsomorphiccheck(line18)orinfastEquivalence(line6).
Case1: WhenisIsomorphic(p ,p )returnsTrue,weknowthatthereexistsabijectionœÜfrom
a b
verticesV toverticesV . SinceœÜisatype-preservingbijection,itmeansthetwographs
pa pb
shareaconnectivitystructurewherealltypesandattributesmatch.
ByusingLemma1,wecanbuildanewbijectionf fromœÜ. Insteadofmappingverticesin
thescenegraph,f mapspropositionsfromLa inplanningproblemP topropositionsin
a
LbinplanningproblemP . GiventhatœÜisatype-preservingbijection,weknowthatthe
b
bijectionf derivedfromœÜalsomapsobjectstoobjects,predicatestopredicates,verticesin
theinitialscenes toverticesins ,andverticesinthegoalsceneg‚àótoverticesing‚àó.
i,a i,b a b
To prove Property 1, we can build the set La for each planning problem by taking each
predicateinthePDDLdomainandinstantiatingitwithallpossiblecombinationsofobjects
fromtheproblemPDDLP . Then, wecanconstructthesetofallpossiblestatesofthe
a
problembytakingthepowersetSa =2La. Foreachpropositionp ‚ààsineachstates‚ààSa,
weapplythebijectionf toshowthatwegetSb.
S ={{f(p):p ‚ààs}:s‚ààSa} (1)
S ={{‚ü®œÜ(qa),œÜ(oa),œÜ(oa),...,œÜ(oa)‚ü©:p ‚ààs}:s‚ààSa} (2)
1 2 k
S ={{‚ü®qb,ob,ob,...ob‚ü©:p ‚ààs}:s‚ààSa} (3)
1 2 k
S ={{p :p ‚ààs}:s‚ààSa} (4)
b
S =Sb (5)
ToproveProperty2,wegothrougheachpropositionpintheinitialstatesaoftheproblem
i
PDDLP ,andapplythebijectionf toshowthatwegetsb.
a i
s ={f(p ):p ‚ààsa} (6)
i a a i
s ={‚ü®œÜ(qa),œÜ(oa),œÜ(oa),...,œÜ(oa)‚ü©:p ‚ààsa} (7)
i 1 2 k a i
s ={‚ü®qb,ob,ob,...ob‚ü©:p ‚ààsa} (8)
i 1 2 k a i
s ={p :p ‚ààsa} (9)
i b a i
s =sb (10)
i i
ToproveProperty3, wefirstobservethatthefullySpecifyfunctionaddsallpossible
trivialpropositionstothegoalscenegraph. Bydefinition,trivialpropositionsarethosethat
areknownnottochangetheunderlyingplanningproblemwhenaddedorremoved. Wecan
usethesamebijectionf constructedfromœÜ. Wedon‚Äôtneedtoaddorremovenon-trivial
predicates,asdoingsowouldchangetheplanningproblembydefinition. Thisimpliesthat
theaugmentedgoalstaterepresentsanyotherpossiblegoalstateinS . Withthis,wecan
g
usethebijectionf builtfromœÜtoapplyittoanystateinS andshowthatwegetS .
ga gb
S ={{f(p):p ‚ààs}:s‚ààS } (11)
g ga
S ={{‚ü®œÜ(qa),œÜ(oa),œÜ(oa),...,œÜ(oa)‚ü©:p ‚ààs}:s‚ààS } (12)
g 1 2 k ga
S ={‚ü®qb,ob,ob,...ob‚ü©:p ‚ààs}:s‚ààS } (13)
g 1 2 k ga
S ={{p :p ‚ààs}:s‚ààS } (14)
g b ga
S =S (15)
g gb
13Case2: We can use the same arguments from Case A with one slight modification. Here,
fastEquivalence returns True only if isIsomorphic(join(s ,g ), join(s ,g ))
i,a a i,b b
returns True. The difference with Case 1 is that we join the initial states with the goal
propositionsscenegraphginsteadofthefullyspecifiedscenegraphg‚ãÜ.
In Case 1 we have proven that when isIsomorphic(p , p ) returns True, the planning
a b
problemsP andP areequivalentunderthebijectionf. Sincep =join(s ,g‚ãÜ)and
a b a i,a a
p =join(s ,g‚ãÜ),wecanletg‚ãÜ =g andg‚ãÜ =g . Thisisbecause,bydefinition,trivial
b i,b b a a b b
propositionsdonotchangetheunderlyingplanningproblemwhenaddedorremoved,and
inthiscase,weareonlyremovingtrivialpropositions. Hence,bytheproofofCaseAwe
concludethatthiscasehasalsotobetrue.
Now,wewillprovethebackwardimplication.Inthiscase,wewillassumethatthereexistsabijection
f thatfollowsproperties1,2,and3ofDefinition2. ByLemma1,weknowthatf comesfromœÜ,
andsincebotharebijections,wecanrecoverœÜbydoingtheinverseprocess. Weneedtoprovethat
theseconditionsleadtoisIsomorphic(line18)orfastEquivalence(line6)returningTrue.
Since there exists a bijection œÜ that comes from f, the number of objects must be the same for
planningproblemsP andP ,asstatedinProperty1. WithProperty2,weknowthatthisbijection
a b
œÜmustalsomaketheinitialscenesisomorphic. Assumethatthesetsofgoalpropositionshavethe
samesize. ByusingProperty3,weknowthatthebijectionœÜwouldmakefastEquivalence(line
6)returnTrue.
Conversely, assume that the sets of goal propositions have different sizes. In this case,
canFastEquivalence would not allow fastEquivalence to execute. In the case of
isIsomorphic (line 18), we know that p = join(s g‚ãÜ) and p = join(s ,g‚ãÜ). Since
a i,a a b i,b b
we know that we can construct the bijection œÜ that maps vertices from the bijection f, we also
knowthatsinceœÜcomesfromf,thisbijectionrespectsinitialstates(Property2)andgoalstates
(Property3). Therefore,isIsomorphic(p ,p )mustreturnTrue.
a b
Withthis,wehaveproventhatiftwoproblemsareequivalentunderDefinition2,thentheequivalence
algorithmmustreturnTrue.
Sincewehaveprovenbothdirectionsofthebiconditional,Proposition1istrue.
Proposition 2. isEquivalent(P , P , True) returns True if and only if P represents a planning
a b a
problemthatisequivalent(underDefinition2)tosomeplanningproblemrepresentedbyP aftera
b
permutationoftheobjectsinitsgoalstate.
Proof. Toprovethisproposition,weneedtoproveeachdirectionofthebiconditional. First,wewill
provetheforwardimplication. TherearetwopossiblewaysthealgorithmcanreturnTrue: Eitherin
fastEquivalence(line6)orinisIsomorphic(s ,s )‚àßisIsomorphic(g‚ãÜ,g‚ãÜ).
i,a i,b a b
ToprovethecasewherefastEquivalence(line6)returnsTrue,wecanusethesameargumentas
inCaseAoftheforwardimplicationintheproofofProposition1. Thisisbecausetheplaceholder
beingTruedoesnotaffectthefastEquivalencefunction.
Now, assumethatisIsomorphic(s , s )‚àßisIsomorphic(g‚ãÜ, g‚ãÜ)isTrue. Thisimpliesthat
i,a i,b a b
thereexisttwobijections: oneœÜontheverticesV toV ,andanotherœàbetweenverticesV
si,a si,b g a‚ãÜ
to V g‚ãÜ. Now, by using Lemma 1, we can build two new bijections, f and h, that map between
propob sitionsinLinsteadofnodesinthescenegraph,asœÜandœàdo.
Sincetheunderlyingmappingsoff andhcanbedifferent,weneedawaytocombinethemintoa
singlebijection. Onewaytoconstructthisbijectionistopermutethemappingsoff untiltheyfitthe
mappingsofh. Thisimpliesthattherearemanypairsoff andh,andeachpaircanbecombined
intoaglobalbijectionusingfunctioncompositionf ‚ó¶h. Foreachofthesepermutations,wecan
thenusetheargumentsinCaseAoftheproofofProposition1toshowthatthesepairsholdallthree
propertiesofDefinition2.
Now,wewillprovethebackwardimplication. First,sincefastEquivalenceremainsthesame,we
donotneedtoproveanythingnewaboutit;wecansimplyreusethepreviousresults.
AssumeP representsaplanningproblemthatisequivalenttosomeplanningproblemrepresentedby
a
P afterapermutationoftheobjectsinitsgoalstate. Thisimpliesthatthereareseveralbijectionsf
b
14fromthepredicatesinP tothepredicatesinP . Foreachofthesebijectionsf,wecanuseLemma1
a b
totransformitintoœÜ. SinceweknowbyProperty2thatœÜmapsinitialstates,thereisanisomorphism
betweentheinitialstates. ByProperty3,weknowthatœÜmapsanygoalstateofP toanyother
a
possiblestateinP . Hence, s‚ãÜ hastobeisomorphicwiths‚ãÜ sinceœÜisabijectionbetweentheir
b a b
nodes.
SincewehaveprovenbothdirectionsofProposition2,weknowitistrue.
ProofofTheorem1. HavingtheproofofProposition1andtheproofofProposition2,weknowthat
thetheorem,whichisjusttheconjunctionofthesepropositions,mustbetrue.
Lemma1. LetœÜbeanisomorphicbijectionbetweennodesintwoscenegraphs(propositionsor
objects). Thereexistsabijectionf overthepropositionsinLsuchthatforanypropositionp ‚ààL,
f(p)=‚ü®œÜ(q),œÜ(o ),œÜ(o ),...,œÜ(o )‚ü©,whereqisthepredicateandO ={o ,o ,...,o }isaset
1 2 k 1 2 k
ofobjects.
Proof. Take any proposition p ‚àà L and identify its predicate q and the ordered set of objects it
acts on, O = ‚ü®o ,o ,...,o ‚ü©. Then, we can transform the proposition p into the ordered tuple
1 2 k
p = ‚ü®q,o ,o ,...,o ‚ü©. Finally,wecanbuildf(p) = ‚ü®œÜ(q),œÜ(o ),œÜ(o ),...,œÜ(o )‚ü©,whichisa
1 2 k 1 2 k
bijectionoverthepropositionsinL.
B ExamplesofAlgorithm1
Problem Definition 1 Placeholder Equivalence
PDDL Scene Graph* P1 Init P1 Init P2 Init
( (: :o ib nj ie tc (t cs la e ab r) a) clear clear clear clear
(clear b) Check
( ( (o o an n r- - mt t -a a eb b ml l pe e t ya b )) ) ) B A B A B A isomorphism E D
B A
aarrmm ttaabbllee arm table arm table arm table
&
( : g o a l ( a (n od n a b) clear P1 Goal clear P1 Goal clear P2 Goal clear
( (c al re ma -r e ma p) t y))) A A Fully Specify A A isomC oh re pc hk i sm D
B B B B E
?
arm table arm table arm table arm table
Problem Definition 2 Non-Placeholder (Strict) Equivalence
PDDL Scene Graph* P2 Init P1 Init P2 Init
(:objects d e) clear clear clear
(:init (clear d) clear
(clear e)
(on-table d)
(on-table e) E D B A E D
(arm-empty)) E D
E D arm table arm table arm table
arm table Check
isomorphism
( : g o a l ( a (n od n d e))) clear P2 Goal clear P1 Goal clear P2 Goal clear
? D Fully Specify D A D
D
? E E E B E
? arm table arm table arm table arm table
*Simplified graph representation used for clarity
Figure4:AnillustrationofthealgorithmtocheckiftwoPDDLproblemsareequivalent.Itshowseach
ofthestagesofthealgorithm: transformingtoscenegraphs,fullyspecifyingthegoalpropositions,
andcheckingforgraphisomorphism.
C ImplementationoffullySpecify
ThefullySpecifyfunctionaddstrivialedges(edgesthatmustexistbutarenotcurrentlypresent)to
ourscenegraphs. WebuildthefullySpecifyfunctionusingourdomainknowledgeoftheBlocks
WorldandGripperdomains.
15BlocksWorld ThefollowinghelpfulfactsaretrueaboutBlocksWorld:
‚Ä¢ Ifallblockshaveitsbehavioraboveitdefined(theyareeitherclear,havesomethingon
topofit,orisbeingheld),thenanyblockthatdoesnothaveitsbottombehaviorspecified,
mustbeonthetable(on-table).
‚Ä¢ Ifallblockshaveitsbehaviorbeneathitdefined(theyareeitherontopofsomethingelse,are
onthetable(on-table),orarebeingheld),thenanyblockthatdoesnothaveitsbehavior
aboveitdefinedmustbeclear.
‚Ä¢ Followingthelasttwofacts: ifthereisablockAwhichhasitsbehavioraboveitunspecified
andblockBwhichhasitsbehaviorbelowitunspecified,thentheonlywaythat(on B A)
canexistisifthereisn‚ÄôtalreadyachainofpredicatesthatleadsAtoBorviceversa. If
therealreadyexistsachainconnectingthesetwoblocks,thatmeansAandBarealready
connectedbybeinginthesametower,andthattheyarethetopandbottomofthetowerthey
areapartof.
‚Ä¢ Ifthereareno‚Äúfloating‚Äùblocks(blocksthathavebothitstopandbottombehaviordefined),
andthearm‚Äôsbehaviorisundefined(neitherarm-emptynorholding)ispresent,thenthe
armmustbeempty. Thisisbecausethereisnoblockthatthearmcouldpossiblyholdhere.
Usingtheserules, wecanaddallpossibletrivialedges, untilnomoretrivialedgescanbefound.
Further,thesefactswilldiscoverallpossibletrivialedgesinBlocksWorld,meaningthefullyspecified
scenegraphwillbeinitscanonicalformafterfullySpecify.
Gripper Similarly,wecanbuildasetoffactsthatoperateontheGripperdomain:
‚Ä¢ Ifallballsareassignedaroom(at ball room),thenallunassignedgrippers(no(free
gripper)or(carry ball gripper))mustbefree.
‚Ä¢ Ifthereisonlyoneroom,andifallgrippersarealreadyspecified(either(free)or(carry
ball gripper)),thenanyunspecifiedballsmustbeintheonlyroomthatexists.
‚Ä¢ Ifthereisonlyoneroom,therobbymustbeinit(at-robby onlyRoom).
Thesearetheonlyruleswecanfind. Thisisbecause,ifaball‚Äôspositionisunspecified,itcanalways
beassignedtoanyarbitraryroom. Iftherobbyisunspecified(noat-robby),thenittoo,canalways
bespecifiedtoanyarbitraryroom.
16D Text-to-PDDLPairExample
BLOCKSWORLD
GroundTruthPDDL
(define (problem equal_towers_to_equal_towers_5)
(:domain blocksworld)
(: requirements : strips )
(: objects b1 b2 b3 b4 b5)
(: init (arm‚àíempty)
( clear b5)
(on b2 b1)
(on b3 b2)
(on b4 b3)
(on b5 b4)
(on‚àítable b1))
(: goal (and (arm‚àíempty)
(on‚àítable b1)
(on b2 b1)
(on b3 b2)
(on b4 b3)
(on b5 b4)
( clear b5)))
)
NaturalLanguageDescription
(objects: Youhave5blocks,b1throughb5,stackedinto1towersofequalheights,andyour
armisempty. ) (abstractinit: stackedinto1towersofequalheights,andyourarmisempty. |
explicitinit: Yourarmisempty. b1isonthetable. b2isonb1. b3isonb2. b4isonb3. b5is
onb4. b5isclear. ) Yourgoalistohavethefollowing: (abstractgoal: stacktheblocksinto1
towersofequalheights. |explicitgoal: Yourarmshouldbeempty. b1shouldbeonthetable.
b2shouldbeonb1. b3shouldbeonb2. b4shouldbeonb3. b5shouldbeonb4. b5should
beclear. )
E LicenseInformation
ThedataforPlanetariumisavailableathttps://huggingface.co/datasets/BatsResearch/planetarium
and released under a Creative Commons CC-BY-4.0 license. In addition, all
code to create the dataset and evaluate models on the benchmark is available at
https://github.com/BatsResearch/planetarium and released under a BSD 3 license.
Theauthorsareresponsibleforthecontentofthedataset.
In our study, we use the Blocksworld and Gripper domains, both of which are sourced from
the IPC McDermott [2000]. The specific domain files used in our research are obtained from
pddl-generators Seippetal.[2022],whichisdistributedundertheGNUGeneralPublicLicense.
F AdditionalExperimentDetails
Table2displaysthethehyperparametersusedforfine-tuningacrossallmodels. Inaddition,models
areloadedusing4-bitNF4quantizationwithdoublequantizationtoreducetheaveragememory
footprint. Wealsousebfloat16computedatatypeforfastertraining.
17Hyperparameters Value
Optimizer adamw_torch
Learningrate 2e-5
BatchSize 1
Betas (0.9,0.999)
Epsilon 1e-8
WeightDecay 0.01
MaxSequenceLength 1500
LoRArank 16
LoRAalpha 32
LoRADropout 0.05
Table2: Traininghyperparameterswhenfine-tuningallmodelsincludedinthepaper. Thehyperpa-
rametersareseperatedinthreeparts: supervisedfine-tuningrelated,generationrelated,andLoRA
related.
G AdditionalExperimentsandAnalysis
100%
75%
50%
25%
0%
Invert Focus (max) Focus (min) Invert Focus (max) Focus (min)
Random Split Heldout Split
Parseable Solve-able* Correct
Figure5: (Left)Gemma1.1IT2B,fine-tunedontherandomtrainsplitandevaluatedoncertain
tasks. Mosttasksareperformedextremelywell. (evaluatedtaskswereseenduringtraining). (Right)
Gemma1.1IT2B,fine-tunedonallexamplesexceptforthetaskslistedabove,alongwithone_room
intheinitialstateandn_room_distributedintheinitialstate. (tasksnotseenduringtraining)
H DatasetDocumentation
Toseethemostup-to-datedocumentation,gotothefollowingURL:
https://datanutrition.org/labels/v3/?id=f2b30848-2b93-4f2d-b7e0-926604a02c12
I MaintenancePlan
TheBATSresearchgroupatBrownUniversity,willmaintainthePlanetariumdatasetandbenchmark
withanopenGitHubrepositoryandissuesubmissionsystem,andthedatasethostedonHuggingFace.
The maintenance plan includes regular issue tracking, with reviews and categorization of issues,
aimingtoresolvehigh-priorityissueswithinaweekandschedulingminorupdatesquarterly. Com-
prehensivedocumentationandautomatedtestingwillensurequalityandcompatibility. Francisco
PiedrahitaVelezandMaxZuowillleadthemaintenanceefforts,supportedbytheBATSresearch
group.
18
)%(
smelborP %001 %07.99 %22.79 %001 %001 %30.59 %001 %001 %26.39 %98.99
%69.27
%02.5
%97.99 %95.59
%45.64
%25.99
%36.87
%03.34