Team Coordination on Graphs: Problem, Analysis, and Algorithms
Manshi Limbu, Yanlin Zhou, Gregory Stein, Xuan Wang, Daigo Shishika, and Xuesu Xiao
Abstract—Team Coordination on Graphs with Risky Edges still assuring solution optimality. Reinforcement Learning
(TCGRE) is a recently emerged problem, in which a robot (RL) has been utilized [12] to reduce the time complexity
team collectively reduces graph traversal cost through support
andscalethesolutiontoalargegroupofrobotsandthesize
from one robot to another when the latter traverses a risky
of the graph, but at the cost of sacrificing optimality.
edge. Resembling the traditional Multi-Agent Path Finding
(MAPF) problem, both classical and learning-based methods Toacquiretheoreticalinsightsintothisproblem,werefor-
have been proposed to solve TCGRE, however, they lacked mulate TCGRE in a constrained optimization framework and
either computation efficiency or optimality assurance. In this present rigorous mathematical analysis of this reformulated
paper, we reformulate TCGRE as a constrained optimization problem. We prove the NP-hardness of TCGRE by reduction
and perform rigorous mathematical analysis. Our theoretical
from the Maximum 3D Matching problem. We further show analysis shows the NP-hardness of TCGRE by reduction from
the Maximum 3D Matching problem and that efficient de- that such a difficult combinatorial optimization problem
composition is a key to tackle this combinatorial optimization can be effectively addressed by efficient decomposition. In
problem.Furthermore,wedesignthreeclassesofalgorithmsto addition to providing a theoretical explanation for previous
solve TCGRE, i.e., Joint State Graph (JSG) based, coordination
algorithms, we further introduce three distinct classes of
based,andreceding-horizonsub-teambasedsolutions.Eachof
these proposed algorithms enjoy different provable optimality methods to solve the TCGRE problem: (1) Based on the idea
and efficiency characteristics that are demonstrated in our of JSG,weintroducenewsearchalgorithmsthatdonotneed
extensive experiments. to fully construct the JSG in advance and can be guided
by a new admissible heuristic, while guaranteeing optimal
I. INTRODUCTION
solutions;(2)InspiredbytheConflict-BasedSearch[13],the
Multi-Agent Path Finding (MAPF) is a trending problem
second class of algorithms is based on coordination and we
in robotics [1]–[6], as it lies in the core of many robotic
design a Coordination-Exhaustive Search (CES) algorithm.
applications, e.g., drone swarm control [2], autonomous
CES startswithindividualoptimalpathsandfindsthelowest
delivery[7],andpublictransportationscheduling[1].Adding
cost among every possible coordination for every robot to
the possibility of team coordination [8] between robots
achieve the optimal solution within polynomial time with
to MAPF makes the problem more difficult. The need of respecttothenumberofrobots,undertheassumptionthatthe
coordination behaviors on large-scale multi-robot planning
coordination between every pair of support node and risky
problems may exceed the computation capability of a cen-
edge is only necessary for a limited number of times; (3)
tralizedplanner[9],givingrisetodecentralizedplanningthat
Motivated by CES’s assumption, we also propose a class of
distributes the computation into each robot [10]. However,
receding-horizonsub-teamsolutionsthatfurtherdecomposes
despite the efficiency, dexterity, and responsiveness, the
the order of coordination by only looking at sub-team coor-
distribution itself may induce certain performance degrada-
dinations in a local region. We design a Receding-Horizon
tion and lead to suboptimal team coordination behaviors.
Optimistic Cooperative A* (RHOC-A*) search, in order to
Therefore, some centralized pre-planning is still crucial for
reduce the time complexity without much performance loss.
multi-robot planning, especially for large-scale problems.
Extensive experiment results are presented and discussed to
Team Coordination on Graphs with Risky Edges
inform best ways to solve different TCGRE problems.
(TCGRE) [11] is such a centralized planning problem in
an environment represented as a graph—multiple robots II. RELATEDWORK
travel from their start to goal nodes with possible support
We first review related work on the classical MAPF prob-
from some nodes to reduce the cost of traversing certain
lem and common classes of algorithms. We then review
riskyedges,requiringteamcoordinationbehaviorstoreduce
previous approaches to solve the TCGRE problem.
the total cost of team graph traversal. By converting the
environment graph to a Joint State Graph (JSG), optimal A. MAPF and Classes of Algorithms
coordinationcanbesolvedusingDijkstra’ssearchalgorithm
MAPF is a specific type of multi-agent planning problem
on the JSG [11]. However, the conversion to JSG does not with a key constraint that no agents can collide with one
scale well with large environment graphs and number of
another [14]. A feasible solution to the problem is a joint
robots.Toaddressthecurseofdimensionality,aCriticalJoint
plan that allows all agents to reach their goals from their
State Graph (CJSG) approach has been proposed for large
starts. Two common objectives are makespan and total cost.
graphswithasmallamountofsupportwithuptotworobots,
Classical MAPF problem may include extra assumptions,
suchasnovertexconflict,noedgeconflict,nocycleconflict,
GeorgeMasonUniversity{klimbu2, yzhou30, gjstein, xwang64,
dshishik, xiao}@gmu.edu. and no swapping conflict [15], [16].
4202
raM
32
]AM.sc[
1v64951.3042:viXraAlgorithms to solve MAPF include A*-based search also induces some cost for the supporter, denoted by c′. A
with exponential space and time compelexity [15], [17], central planner needs to schedule the paths of all agents and
conflict-based search [13] by decomposing into many con- coordination on their ways.
strained single-agent problems, reduction-based approaches
A. Action & Cost Model
to SAT [18], [19], ILP [20], ASP [21], or CSP [22], [23],
rule-basedalgorithmsbasedonKornhauser’salgorithm[24], Without coordination, at each time step t, a robot n can
Push-and-Rotate [25], or BIBOX [26], and suboptimal solu- choose to stay where it is, or move to its neighbor (V i
tions [27], [28] to sacrifice optimality for efficiency. is the neighbor of V j if e ij ∈ E). Its movement can be
MAPF is NP-hard [29], and no optimal solutions can be denoted by M nt = (l nt,l nt+1) ∈ E, where l nt,l nt+1 ∈ V
found in polynomial time. The time complexity of all above indicate its current and next location and l nt+1 is a neighbor
optimalalgorithms[13],[15],[17]–[23]isexponentialtothe of l nt. Specially, the robot stays at its current location if
number of agents. Similarly, we prove in this paper that our l nt+1 =l nt with zero cost, i.e., c ii =0,∀i. The movement set
TCGREproblemthatutilizes,insteadofavoiding,interactions can thus be denoted by M = {M nt|∀n,∀t}. Moreover, the
between agents in the form of support is also NP-hard. movement decision M nt can be rewritten as an 0/1 variable
Mnt, where Mnt = 1 represents edge e is selected by
ij ij ij
B. TeamCoordinationonGraphswithRiskyEdges(TCGRE) robot n at time t, and 0 otherwise. A robot can only move
TCGRE [11] is a recently proposed problem, in which a once at each time step to a neighbor node or not at all,
t ae na dm alo sf or so ub po pts ort tra ev ae cr hse ota heg rra wph hilf ero tm ravt eh re si ir ngsta cr et rs tat io
n
g rio sa kl ys Ni.e., (cid:80) =∀ {e (i lj t∈ ,N ltlt n+1M )|i ∀n j (t lt= ,lt1 +1&
)
∈(cid:80) E∀ }ei .j∈ T/N helt
n
mM oi vn j et m= en0 t, sew th ce ar ne
l nt n n n n
(high-cost) edges to reduce overall cost. Instead of focusing thus be denoted by M={Mnt|∀i,j,∀n,∀t}.
ij
on collision-free paths in the traditional MAPF, the TCGRE Whenacoordinationbehaviorisavailable—whenrobotn
problempursuesteamcoordination.Tosolve TCGRE,Limbu isgoingtotraverseariskyedge,anotherrobotmhappensto
et al. [11] have proposed JSG and CJSG, both of which con- beatoneofthesupportnodesoftheriskyedgeorviceversa,
structasingle-agentjoint-stategraph.Aftertheconstruction, i.e., Mt ∈E′ and lt ∈S , or Mt ∈E′ and lt ∈S —
n m M nt m n M mt
the original team coordination problem can be solved using the robot pair needs to decide whether to provide/receive
Dijkstra’s algorithm to solve a shortest path problem with support. Denote the coordination decision of agent n at time
optimality guarantee. The CJSG construction deals with the t as st . It is clear that agent n’s coordination decision is
nm
team coordination problem more efficiently, although it can dependent on its movement decision, so the cost is twofold:
only solve problems with two agents. To scale up TCGRE, (1)Whenagentnhasnocoordinationopportunity(theabove
RL [11] has been utilized to handle many nodes and robots, coordination behavior is not available for any other robot
but at the cost of optimality. m), i.e., ∀m, lt ∈/ S and lt ∈/ S , its cost Ct is only
m M nt n M mt n
In this work, we reformulate the TCGRE in a constrained decided by its movement, i.e., C nt =c ij, where M in jt =1.
optimization framework and conduct mathematical analysis (2)Whencoordinationispossibleforagentn,i.e.,∃m,lt ∈
m
of this problem. We prove its NP-hardness and point out the S or lt ∈S , the cost Ct can be represented as
M nt n M mt  n
n pe roc bes les mity
.
o Wf eef ffi uc rti hen ert d pe rec so em np to ts hi rt eio en ct lo ase seff sec ot fiv ae ll gy os ro itl hv me sth ti os c ij, if st
nm
= 0;
Ct = c˜ if st = 1; (1)
solve TCGRE from different perspectives. n ci ′,j
if
sn tm
=−1.
nm
III. PROBLEMFORMULATION
where st = 1 means agent n decides to receive support
nm
Assuming a team of N homogeneous robots traverse an fromm,st =−1indicatesagentndecidestooffersupport
undirectedgraphG=(V,E),whereVisthesetofnodesthe
to m,
andn sm
t = 0 stands for no coordination between the
robots can traverse to and E is the set of edges connecting robot pair nn am nd m at t. Specially, no coordination happens
the nodes, i.e., E ⊂ V × V. The team of robots traverse for one single robot, i.e., st =0,∀n,∀t, or when n and m
i V an sg st oh ⊂ ce iaVg ter da vp wih a itf e hr do agm e cs ot sh i tne cir iE j. ,st dEa er at pc ehn no ded ide ngs geV oe n0 ij i⊂ ts= lV e( nV gto i t, hV ,g cjo ) oa nl ∈ dn io tE id oe niss
,
c a aa n sn d Sn lo =ntt ∈/s {u sSp tMpo mt |r ∀t . nTe ,a h mc eh ,c ∀o o tt o }h r .e dr Ii, nnn i an a. te di. o d, n is tit n d om e nc ,i= asi co0 on oi s rf det i∀ ncm aa tn, iol b nmt e d∈ ew/ cr iS i stM it oen nnt
nm
traffic, obstacles, etc. Specially, some edges with high costs ismadeforapair,sost +st =0foreverypairofrobots.
nm mn
are difficult to traverse through, denoted as risky edges Furthermore, the robots can wait now (no movement) for
E′ ⊂ E, but with the support from a teammate from a future coordination, but there is no point for all robots to
supporting node, their costs can be significantly reduced to stay still at the same time, i.e., (cid:80) (cid:80) Mnt ̸=0.
∀n ∀i̸=j ij
c˜ . In this problem, we only consider such coordination
ij
B. Problem Definition
behaviors betweentwo robots.In onecoordination behavior,
one receiving robot receives support while traversing a risky Given the node set V, the edge set E, support nodes
edge,andanothersupportingrobotofferssupportfromsome for each edge S , cost of each edge without and with
eij
(nearby) location, called support node. Note that each risky coordinationc ,c˜ ,N robotswiththeirstartsV andgoals
ij ij 0
edge e ∈E′ corresponds to certain support node(s) S ⊂ V , optimize the movement and coordination decisions M
ij eij g
V (S = ∅ if e ∈/ E′). Additionally, the coordination and S, in order to minimize the total cost for each agent
eij ijX
One Matching
𝑴𝑴={𝑿𝑿1,𝒀𝒀1,𝒁𝒁1, 𝑿𝑿5,𝒀𝒀2,𝒁𝒁2}
Support Pairs (Risky Edges and Support Nodes) RP1 Y Z
Other Edges 𝑅𝑅 𝐺𝐺 Support Pairs (Risky Edges and Support Nodes)
Optimal Path for (1, (6), 4)
Individual Optimal Path for (1,4) 2 Optimal Path for (5, (2,7), 8)
Individual Optimal Path for (5,8) RP2 Optimal Path for (9, (5,2), (3), 12)
Individual Optimal Path for (9,12) 𝑅𝑅 𝐵𝐵 SP1 Order 1
Cost 5 6 Cost with SP1 and SP2:
𝐺𝐺
1 𝐶𝐶0=𝑐𝑐2𝐺𝐺+𝑐𝑐𝐵𝐵+𝑐𝑐𝑅𝑅3 4
𝑐𝑐𝐺𝐺
𝐺𝐺 𝐵𝐵
RP3
2 3
𝐺𝐺 1 2 𝐶𝐶𝐶3 =𝑐𝑐𝐶𝐺𝐺+𝑐𝑐𝐶𝐵𝐵4 +𝑐𝑐 𝑐𝑐𝐶 𝐺𝐺𝑅𝑅
SP2 5 6 7 8
5 6 7 8 RP4 Order 2 𝐵𝐵
𝐵𝐵 𝑐𝑐𝐵𝐵 𝐺𝐺 𝑅𝑅 7 𝑐𝑐𝐵𝐵
9 10 11 12
9 10 11 12 RP5
R𝑅𝑅 obot Icon: https://www.flaticon.com/free-icon/robot_613434𝑐𝑐 6𝑅𝑅 𝐵𝐵 𝑅𝑅 RP6 X Y:: W Wh hi ic ch h SR∅ uo pb po ot rP t a Pi ars i r( sR (P S) P) 𝑅𝑅 Weight 𝑴𝑴 =𝐶𝐶0−𝐶𝐶′ 𝑐𝑐𝑅𝑅
𝐵𝐵 𝐺𝐺 Z: Orders of the Support/Robot Pairs
Fig. 1: Reduction from Maximum 3D Matching (Middle) to TCGRE (Left and Right) and Inspiration for CES.
to traverse from its start to its goal within a time limit T. A. NP-Hardness
Formally, the problem can be represented as Definition 1. Maximum 3D Matching: X,Y,Z are 3 finite
T−1 N sets. T is the subset of X ∗ Y ∗ Z, with triples (x,y,z),
(cid:88)(cid:88)
min C nt. (2) where x ∈ X,y ∈ Y,z ∈ Z. M ⊂ T is a 3D matching if
M,S
t=0 n=1 foranytwodistincttriples(x ,y ,z )and(x ,y ,z )∈M,
(cid:88) 1 1 1 2 2 2
s.t. |st |≤1, we have x ̸= x , y ̸= y , and z ̸= z ; each triple has a
nm 1 2 1 2 1 2
∀m∈{1,2,...,N} weight w(x i,y j,z k). Maximum 3D Matching problem is to
∀n∈{1,2,...,N},∀t∈{0,1,...,T −1}. (3) find a 3D matching with maximum total weight.
st nm,st
mn
∈{−1,0,1},st nm+st
mn
=0, Theorem 1. Maximum 3D Matching reduces to TCGRE.
∀n,m∈{1,2,...,N},∀t∈{0,1,...,T −1}. (4) Proof sketch: Without coordination, we can generate indi-
l0 =V (n),∀n∈{1,2,...,N}. (5) vidual optimal paths for all robots; the cost is C 0 (Fig. 1
n 0
left).Withcoordination,weletsomerobotpairstakedetours
lT =V (n),∀n∈{1,2,...,N}. (6)
n g to the support pairs (i.e., one risky edge and one support
(cid:88) (cid:88)
Mnt =1, Mnt =0, node); the new cost is C′, where the first robot in the pair
ij ij
∀eij∈N lt
n
∀eij∈/N lt
n
traverses the risky edge while the second visits and supports
from the support node (Fig. 1 right). Minimizing total cost
∀n∈{1,2,...,N},∀t∈{0,1,...,T −1}. (7)
is equivalent to maximizing the cost reduction C −C′.
(cid:88) (cid:88) 0
M in jt ̸=0, Consider X contains all robot pairs; Y is the set of all
∀n ∀i̸=j support pairs plus an empty set element; Z is a list of time
∀t∈{0,1,...,T −1}. (8) orders of events (time steps are not necessarily needed, be-
causerobotscanstaystillandwait,Fig.1middle).Consider
Eqn. (2) suggests the goal of the problem is to minimize the
theweightw(x ,y ,z )asthesumofcostreductionthrough
totalcostofallagentsacrossalltimestepswithtwodecision i j k
coordination for robot pair x to detour to support pair y
variables,movementsetMandcoordinationsetS.Eqn.(3) i j
with time order z . The weight of a 3D matching M is the
indicates, at each time step, each robot can participate in k
total cost reduction of all robots, C −C′. Maximum 3D
at most one coordination behavior. Eqn. (4) regulates that, 0
Matching is to find the paths for all robot pairs to achieve
at each time step, one coordination behavior only occurs
maximum total cost reduction from their original without-
between one robot pair. Eqn. (5) and Eqn. (6) set the start
coordination costs, which is a specific case of the general
andthegoalforeachrobot.Eqn.(7)guarantees,ateachtime
step, a robot can only move to a neighbor node or stay still.
TCGREproblemthatonlyneedstouseeachrobotandsupport
Eqn. (8) assures no unnecessary stagnation.
pair once with a smaller solution space than TCGRE.
Since TCGRE reduces from Maximum 3D Matching, a
classical NP-hard problem [30], TCGRE is also NP-hard. We
cannot find an optimal solution in polynomial time.
IV. MATHEMATICALANALYSIS
B. Problem Analysis
Inthissection,weproveourTCGREproblemreducesfrom Because we only care about the total cost of all robots,
the Maximum 3D Matching problem, a NP-hard problem. andeverycoordinationrequiresarobotpair,wecanreassign
Then,westartarigorousanalysisonthemathematicalprob- the coordination cost c′ from the supporter to the receiver in
lem, which suggests decomposition is a promising solution addition to the reduced edge cost c˜ , without changing the
ij
to this combinatorial optimization problem. problem.So, thecost withcoordination inEqn.(1) becomesproblemwithS implicitlyencoded.AsmentionedinSec.IV-
 c ij, if st
nm
= 0; B, 1n )i Js Se Gffe Cc oti nv se tl ry uce tl ii om ni :na Ite nd tf hr eom acM tioin njt mby odbu elild (Sin eg c.th Ie IIJ -S AG ).
,
C nt = cˆ ij, if st nm = 1; (9) we use lt ∈ V to represent robot n’s location at time
0,
if st =−1. t. In a
jon
int state graph, however, one state is the set of
nm
where cˆ
ij
= c˜
ij
+ c′. Therefore, the original objective sa ell
t
r io sb Lots =’ lo Vc Natio an ns dL eat ch= n{ ol d1t e,l 2t L,... ∈,l Nt L}. cT orh re elan te ew
s
tn ood Ne
function (Eqn. (2)) can be rewritten as p
nodes (V ,V ,...,V ) in V. By checking the constraints
T−1 N i1 i2 in
min(cid:88)(cid:88) (cid:88) Mnt[(1−st )c +st cˆ ], (10) in Eqns. (3), (4), (7), and (8), for each pair of joint-states,
M,S ij nm ij nm ij we can form the new edge set M⊂L2. Specially, Eqn. (8)
t=0 n=1∀i̸=j
assures noself-loops inthe JSG. Anaction isthe movefrom
s.t. (3),(4),(5),(6),(7),(8).
current state to next state Mt =(Lt,Lt+1), which can also
Notice that because when st nm =−1, M in jt =0,∀i̸=j, the be written as a 0/1 variable, i.e., Mt pq =(cid:81)N n=1M in jt, where
lastif conditioninEqn.(9)doesnotneedtobeconsideredin e is any edge in the new edge set, and the movement
pq
Eqn. (10). To solve the combinatorial optimization problem, decision set becomes M={Mt|∀t}.
a typical approach is dynamic programming [31], by de- 2) Sub-Problem 1: After the construction of JSG, the
coupling the interdependency among the decision variables. second half of Eqn. (11) is calculating the minimum edge
The ideal case is to break down the problem into two sub- cost for each e ∈ M by optimizing S, which is a
pq
problems: one optimizing the movement decisions M and 0/1 Integer Linear Programming (ILP) problem and can be
the other optimizing the coordination decisions S. solvedbyclassicalmethods,suchasBranchandBound[32].
Based on such a motivation, if we can find a way to 3) Sub-Problem 2: After solving sub-problem 1, we have
eliminate n from M in jt, Eqn. (10) can be rewritten as the cost C
pq
for each edge e
pq
∈ M. Sup-problem 2 is to
T−1 N optimize movement decisions M to minimize the total cost:
(cid:88) (cid:88) (cid:88)
min Mntmin [(1−st )c +st cˆ ]. (11)
ij nm ij nm ij T−1
M S (cid:88) (cid:88)
t=0 ∀i̸=j n=1 min Mt Ct , (12)
(cid:124) (cid:123)(cid:122) (cid:125)(cid:124) (cid:123)(cid:122) (cid:125) M pq pq
Sub-Problem2 Sub-Problem1 t=0 ∀epq∈M
The first half of the function contains only the movement Now it is a single-robot shortest path problem with non-
decisions M, while the second half only has the coordina- negative costs and no self-loops solvable by any shortest
tion decisions S. Then, decomposition is possible and the path algorithms. Instead of using Dijkstra’s algorithm on a
NP-hard TCGRE problem can be solved with significantly fully constructed JSG beforehand [11], we present results
reduced complexity. with Uniform Cost Search (UCS) and A* (guided by an
V. SOLUTIONS admissible heuristics assuming all future risky edges will be
Based on the mathematical analysis, we propose three supported by a teammate) while constructing JSG on the fly,
classesofalgorithmstosolveTCGREfromdifferentperspec- i.e., interleaving partial solutions of the two sub-problems.
tives with different optimality and efficiency characteristics.
B. Coordination-Based Solutions
We first propose a class of JSG-based solutions that utilizes
the decomposition of the original problem and provides SomeJSGedgecostsaresimplythesumofindividualedge
optimalsolutionstothetwosub-problems(Eqn.11).Second, costs of all robots, suggesting possible total cost separation
to reduce the time complexity, we focus on coordination into the costs with and without coordination. Thus, while
(i.e., S) and propose a class of coordination-based solutions minimizing costs without coordination can be simply solved
that decomposes the problem differently. To be specific, we for individual robots, the second class of algorithms focuses
introduce Coordination-Exhaustive Search (CES), which can on coordination. Specifically, we present a Coordination-
achieve optimal solutions under a reasonable assumption Exhaustive Search (CES) algorithm based on a slightly dif-
that each coordination behavior (i.e., support pair composed ferent and interleaving decomposition of Eqn. (10):
of support node and risky edge) is only needed for a CostwithoutCoordination
(cid:122) (cid:125)(cid:124) (cid:123)
constant time in the optimal solution. Finally, when the T−1 N
(cid:88)(cid:88) (cid:88)
same support may need to be repeated many times and the min Mntc − (13)
ij ij
global optimality does not need to be guaranteed, a class of M,S t=0 n=1∀eij∈E
algorithms that focuses only on local sub-team coordination
lt=lt+1∈
n n
behaviors are introduced, for which we develop Receding- (cid:83)N S
Horizon Optimistic Cooperative A* (RHOC-A*).
T (cid:88)−1 (cid:88)N m= (cid:88)1 Mmt 1
Mnt[(1−st )c +(1+st )∆c ].
2 ij nm ij nm ij
A. JSG-Based Solutions
(cid:124)t=0 n=1 ∀eij∈E′or
(cid:123)(cid:122) (cid:125)
JSG-based solutions perform the decomposition into the CostReductionduetoCoordination
two sub-problems by 1) implicitly solving S by calculating where ∆c ij =c ij−cˆ ij. When st nm =1 (receiving support)
the minimum edge cost for each edge in the JSG; and 2) the second part reduces the cost in the first part by ∆c ij;
explicitly solving M by solving a single-robot shortest path When st =−1 (providing support), the cost is reduced to
nmzero. Inspired by Conflict-Based Search, we can start with each support pair to the individual coordination set of the
finding the individual shortest path for each robot without second robot of the robot pair. ICS then contains individual
coordination.Then,wefindthecoordinationbehaviors(with coordination set of all robots. With ICS, we use Alg. 1 to
some detours) that can cause the maximum cost reduction. calculate the shortest paths and minimum total cost of this
While the first half can be solved individually for each assignment in line 19, which is one solution. Last, lines 20-
robot (Fig. 1 left), CES uses an exhaustive search for the 21recordsthebestsolutionwithminimumtotalcost.Tosum
second half. If an optimal solution requires a coordination up, the loop in line 8 decides a subset of support pairs we
behavior between a robot pair, it is equivalent to make the needforcostreduction.Theloopinline10decidesanorder
robot pair detour to the support pair (risky edge and support for the subset. The loop in line 12 selects a robot pair for
node) from their original individual shortest paths, while each support pair in the subset. Iterating through the three
other robots remain on their individual shortest paths (Fig. 1 loops explores every possible solution under the assumption
right). This robot pair’s shortest paths are a combination of that each support pair can be applied for a constant number
two path segments—their shortest paths from their starts to of times, making CES optimal.
thesupportpair,andtheirshortestpathsfromthesupportpair
to their goals. Given certain coordination behaviors, we can Algorithm 1: CostCalculation (G,V ,V ,ICS)
0 g
solve the shortest path and minimum total cost of all robots
for each path segment (Fig. 1 right), as shown in Alg. 1. 1
P=[∅]∗N;
CESisacoordination-basedmethodthroughanexhaustive 2 totalcost=0;
search. Because one support pair may be assigned to the 3 for n=1 to N do
same/different robot pair(s) for infinite times, to conduct an 4 if ICS[n]=∅ then
exhaustive search, we assume each support pair can only 5 P,C =ShortestPath(G,V 0[n],V g[n],c);
occur for a fixed number of times. In our implementation, 6
P[n]=P;
we assume a support pair can only happen once, but it can 7 totalcost=totalcost+C;
be easily expanded to a more general case, by repetitively 8 else
adding the same support pairs to the coordination set. 9 for item∈ICS[n] do
The CES algorithm is shown in Alg. 2: In lines 1-2, 10 start=V 0[n];
using any shortest path algorithm, it generates an individual 11 if item is a risky edge then
optimalpathandcostforeachrobot,withoriginaledgecosts 12 P,C =
c={c |∀e ∈E} and reduced edge costs cˆ={cˆ |∀e ∈
ShortestPath(G,start,item[0],c);
E},
cali lj
ed
pi ej
ssimistic/optimistic paths P /P and
ti oj
tal
i cj
ost 13
P[n].extend(P(cid:83)
item);
1 2
C /C . If C = C , which means no coordination is 14 totalcost=totalcost+C+cˆ item;
1 2 1 2
needed in the optimal solution, then simply return P and 15 start=item[1];
1
C (lines 3-4). Else, it starts the scheduling process. In 16 else if item is a support node then
1
line 5, it generates a coordination set, CS that contains all 17 P,C =
coordination behaviors, and SCS that contains all subsets
ShortestPath(G,start,item,c);
of CS, to decide which coordination behaviors/support pairs 18
P[n].extend(P);
are needed. In line 6, it generates a set of all robot pairs RP 19 totalcost=totalcost+C;
(orderinthepairmatterssinceweneedtodecidewhichrobot 20 start=item;
moves to the support node/risky edge) to determine which 21 P,C =ShortestPath(G,start,V g[n],c);
robot pair should be assigned to each support pair. Now,
22
P[n].extend(P);
it looks like a Maximum 3D Matching problem as stated in 23 totalcost=totalcost+C;
Definition1,exceptthatthematchingproblemhasonemore
assumption that one robot pair can be only assigned once 24 return P,totalcost
as shown in Fig. 1 middle. For all possible sets of support
pairs (line 8), it generates all possible time orders for this
supportpairsetusingpermutation(line9).Noticethatrobots There are total O(2|CS|) subsets in SCS . For each subset,
can wait for one another, so the order of each coordination there are O(|CS|!) permutations. For every permutation,
behavior, not necessarily the exact time step, is sufficient. there are O(N2) possible robot pairs for each support pair,
Then, it iterates through every possible support pair order totally O(N2|CS|) assignments. Therefore, the number of
(line 10). There could be N(N − 1) possible robot pairs possiblesolutionsisO(2|CS|·N2|CS|·|CS|!)=O((2N2)|CS|·
assignedtoeachsupportpair,soaN-FoldCartesianProduct |CS|!). For each solution, we run the shortest path algo-
is applied to generate all possible sets of support robot pairs rithm for O(|CS|) times, each run costs O(|E|log(|V|)).
(line 11). Then, it explores every set (line 12), where each Therefore, the time complexity of CES is O((2N2)|CS| ·
robotpairinSRPisassignedtoeachsupportpairinPSCS |CS|!·|E|log(|V|)), which is not exponential to the number
with the same index. Thus, in lines 13-18, it adds the risky of robots N anymore. Note that the above algorithm is
edge of each support pair to the individual coordination set for directed graphs. For an undirected graph, each edge is
of the first robot of the robot pair, and the support node of actually two directed edges in a directed graph, so after lineAlgorithm 2: CES (G,V 0,V g) Support Pairs Possible K-Step Moves for
Other Edges Possible K-Step Moves for
1 P 1,C 1 =MultipleShortestPath(G,V 0,V g,c); 𝐺𝐺
2
3
P if2 C,C 12 ≤= CM
2
tu hl et nipleShortestPath(G,V 0,V g,cˆ); 𝐺𝐺 R He oc re izd oin ng 𝑙𝑙 𝐺𝐺𝑡𝑡 1 2 3 4𝐵𝐵 𝑔𝑔𝑔𝑔𝑔𝑔𝑙𝑙𝐺𝐺
54 Genr ee rt au tern suP b1 s, eC ts1 S;
CS={SCS|∀SCS⊂CS} of the 𝐵𝐵 𝔾𝔾𝐺𝐺𝐵𝐵
𝑙𝑙𝐵𝐵𝑡𝑡 5 6 7 8𝑔𝑔𝑔𝑔𝑔𝑔𝑙𝑙𝐵𝐵
coordination set CS; (K=1)
9 10 11 12
6 Generate a set of all robot pairs RP; 𝑅𝑅
7 P min,C min ←P 1,C 1;
8
9
for PS SC CS S∈ =S AC lS lPd eo
rmutations(SCS,len(SCS));
Figh h.𝑙𝑙 𝑙𝑙2𝐺𝐺 𝐵𝐵𝑡𝑡 𝑡𝑡:= =RM Mei icn neO Odp pit ti inm mgi is s-t tHi ic cC Coo ors sit tzo𝑙𝑙 𝑙𝑙𝐺𝐺 𝐵𝐵𝑡𝑡 𝑡𝑡n, ,𝑔𝑔 𝑔𝑔𝑔𝑔 𝑔𝑔O𝑔𝑔 𝑔𝑔p𝑙𝑙 𝑙𝑙𝐺𝐺 𝐵𝐵t, ,iĉ ĉmishti𝑙𝑙c𝐺𝐺𝑡𝑡 ,𝑙𝑙C𝐵𝐵𝑡𝑡o=ophe𝑙𝑙r𝐺𝐺𝑡𝑡at+ivhe(𝑙𝑙𝐵𝐵𝑡𝑡A)*.
10 for PSCS∈PSCS do on this small JSG while the cost-to-go on the horizon K is
11
SRP= estimated by the always-available support heuristic. Lines
CartesianProduct(RP,len(PSCS)); 13-18 address the situation where only one robot is on duty,
12 for SRP∈SRP do who has to traverse to its goal alone.
13 ICS=[∅]∗N; ForN robots,generatingallpossiblepairsofrobotscanbe
14 for n=1 to len(PSCS) do done in O(N2) time. RHOC-A*’s time complexity for each
15 SP =PSCS[n]; pair’s search of K steps can be approximated as O(bK),
16 RP =SRP[n]; where b = O( || VE| |) is the effective branching factor in the
17 ICS[RP[0]].append(SP[0]); joint action space. Thus, in K steps, running RHOC-A* for
18 ICS[RP[1]].append(SP[1]); all pairs results in complexity of O(N2( || VE| |)K). There will
be no cycles for any robot, due to graph search. As a result,
19 P,C =
there will be at most O(|V|) steps for each robot, so we
CostCalculation(G,V ,V ,ICS);
0 g need to run the K-step A* search for |V| times for one
20 if C <C min then robot pair. There will be N runs for N rK obots. Therefore,
21 P min,C min ←P,C; thetimecomplexityofthea2 lgorithmisO(N3·|V|·(|E|)K).
K |V|
22 return P min,C min.
Algorithm 3: RHOC-A*(G,V 0,V g, K)
10, there should be an additional loop that iterates through
1 Initialize atGoal n ←False,∀n∈{1,2,...,N}
all possible directions of selected risky edges, which won’t
2 OnDuty={n|∀n,atGoal n =False}
change the time complexity class. 3 Compute optimistic heuristic h(·) for each node in G
C. Receding-Horizon Sub-Team Solutions 4 while len(OnDuty)̸=0 do
TCGRE’s computation complexity arises from two fronts, 5 if len(OnDuty)≥2 then
the largesize of the graphand the team.Therefore, the third 6
RP={{n,m}|∀n,m∈OnDuty}
class of algorithms reduces the complexity from both fronts 7 for each pair {n,m}∈RP do
by planning with a limited horizon and for a sub-team of 8 Initialize a K-step JSG G nm for the pair
{n,m} with start {lt,lt };
all robots at a time, efficiently facilitating local coordination n m
while compromising global optimality. Such sub-team local 9 if not atGoal n,m then
coordination within the receding horizon prioritizes actions 10 A* on G nm for K steps using h(·);
thatyieldthebestshort-termoutcomesandpotentiallyallows 11 Update l nt,l mt , atGoal n,m, and
OnDuty;
dynamicadaptationtochangingcircumstances,e.g.,updated
graphstructurefromrobotperception.Onespecificalgorithm 12 Update individual and total costs;
isReceding-HorizonOptimisticCooperativeA*(RHOC-A*),
which provides flexible and efficient solution by assuring 13 else
optimal robot pair coordination within the horizon while 14 n=OnDuty.pop();
assumingoptimisticcooperationbeyondthehorizon(Fig.2). 15 Initialize K-step graph G n with start l nt;
Alg. 3 presents RHOC-A*. All robots are initially not at 16 A* on G n for K steps using h(·);
their goals and therefore on duty (lines 1-2). We compute 17 Update l nt, atGoal n, and OnDuty;
theheuristicforallnodesassumingalways-availablesupport 18 Update individual and total costs;
(line 3). RHOC-A* iterates until all robots arrive at their 19 return Paths and costs for all robots.
goals (lines 4). If there is still at least one pair of robots
on duty (line 5), RHOC-A* sequentially plans for each robot
pair (lines 6-7). The computation efficiency is enabled by VI. RESULTS
only looking at a small JSG with only two robots, n and m, Weconductexperimentsonavarietyofgraphstoevaluate
withinK steps(lines8-12).Noticethatoptimalityisassured theoptimalityandefficiencyofthethreeclassesofproposed3-20 3-203-203-153-153-10 3-10
3-10 3-15
3-25
3-25 3-25 3-20 3-20 3-15 3-15 3-10 3-10
3-304-103-303-25 3-25 3-20 3-20 3-153-153-103-10 3-20
4-15 4-15 4-10 4-10 3-20 3-20 3-15 3-15 3-10 3-10 3-25
7-20 5-10 7-25
6-6 3- 02 65 - 1 5 74 - 71-2 -5 5 10 - 01 0 7-2 60
- 20
7-10 6-10 6 5- 52 -4 - 25 2- 02 50
5-20 7-20
4-20 4-30 4-10 6-15 5-15 4-25 6-30 7,5,3-30 6-15 4-30 6-10
5-25 6-25 7-25 4-25 7,4 -15 6-20 7,6,5,4-20 7,5-10 4-15 4-10
4-25 5-25 6-30 5-30 7 -25 6 -25 5 -25 7-15 4-25 5-15
7-30 6-370- 350-3 60-30 5-30 4-30 4-10
7-30 7-10 6-10 3-30 5-10
4-15
5-15
6,7,5,4-30 7,6,5,4-25-20 7,6,5,4-15 7,6,5-10 6,7,5,4-30 7,6,5,4-25-20 7,6,5,4-15 7,6,5-10 7-15 6-15
Fig. 3: True and Naive Optimality vs. Time with JSG-UCS, JSG-A*, CES, RHOC-A*, and Naive. Each data point denotes the
result for the experiment with # of Robots–# of Nodes. For visibility, cluttered areas are magnified in the dashed boxes.
algorithms. To be specific, we implement UCS and A* for
JSG-based solutions, CES for coordination-based solutions,
and RHOC-A* for receding-horizon sub-team solutions. We
first conduct a set of large-scale, method-agnostic experi-
ments on a variety of randomly generated graphs and then
present focused experiments to study the pros and cons of
specific methods.
A. Large-Scale Method-Agnostic Experiments
To evaluate each method in an objective manner, we gen-
erate a set of graphs with randomly generated support pairs,
Fig.4:CESPlanningTimeonGraphswithTwoSupportPairs
includingsparse,moderate,anddenseconnectivitiesandfive
differentnumbersofnodes(|V|∈{10,15,20,25,30}),three
B. Focused Experiments
graphs each type, i.e., a total of 45 distinct graphs. A total
1) CES’sInsensitivitytoRobotandNodeNumbers: Fig.4
of 900 trials are conducted with five different team sizes
showcases that, when there are not many support pairs, CES
(N ∈{3,4,5,6,7}) and four methods.
works well with different numbers of robots and different
We evaluate the optimality and runtime of all methods sizes of graphs (polynomial time to both N and |V|).
along with a naive approach, in which each robot executes
However,itsruntimeincreasesdrasticallywiththenumberof
its individual optimal path without coordination. While the
supportpairs,asshowninourmethod-agnosticexperiments,
True Optimality value is defined as the optimal cost divided
which verifies our time complexity analysis (Sec. V-B).
by the actual cost, for scenarios where the optimal cost
2) RHOC-A*’s Sensitivity to Planning Horizon: Fig. 5
cannot be found due to excessive computation, we define
showcases how RHOC-A*’s computation time scales with
NaiveOptimalitytobethenaivecostdividedbyactualcost.
differentplanninghorizons.AlargehorizonK comescloser
If a data point does not exist in Fig. 3, the corresponding
to solving the original TCGRE problem with multiple robot
method cannot produce a solution for the robot and node
pairs, which significantly increases the solution time. While
number.AsshowninFig.3,the JSG-basedsolutionsachieve
the total cost can be reduced with a longer horizon, it is
optimal solutions, but require significant runtime even in
necessarytostrikeabalancebetweenhorizonandefficiency.
small graphs with only a few robots and fail to produce a
solution when the problem becomes larger; CES has better
runtimebutlosessomeperformancebecauseweassumeeach VII. CONCLUSIONSANDDISCUSSIONS
support pair can be applied only once; with a fine-tuned K, We present a systematic problem formulation and math-
surprisingly, RHOC-A* in many cases achieves better results ematical analysis of TCGRE, which proves its NP-hardness
than CES with less runtime. and shows efficient decomposition is the key to solving this[10] J. Capitan, M. T. Spaan, L. Merino, and A. Ollero, “Decentralized
multi-robot cooperation with auctioned pomdps,” The International
JournalofRoboticsResearch,vol.32,no.6,pp.650–671,2013.
[11] M.Limbu,Z.Hu,S.Oughourli,X.Wang,X.Xiao,andD.Shishika,
“Team coordination on graphs with state-dependent edge costs,” in
2023 IEEE/RSJ International Conference on Intelligent Robots and
Systems(IROS),pp.679–684,IEEE,2023.
[12] M. Limbu, Z. Hu, X. Wang, D. Shishika, and X. Xiao, “Team
coordination on graphs with reinforcement learning,” in 2024 IEEE
InternationalConferenceonRoboticsandAutomation(ICRA),IEEE,
2024.
[13] G.Sharon,R.Stern,A.Felner,andN.R.Sturtevant,“Conflict-based
search for optimal multi-agent pathfinding,” Artificial Intelligence,
vol.219,pp.40–66,2015.
[14] R. Stern, “Multi-agent path finding–an overview,” Artificial Intelli-
gence: 5th RAAI Summer School, Dolgoprudny, Russia, July 4–7,
Fig. 5: RHOC-A* Planning Time.
2019,TutorialLectures,pp.96–115,2019.
[15] T. Standley, “Finding optimal solutions to cooperative pathfinding
problem. We propose three classes of solutions with a set of
problems,” in Proceedings of the AAAI Conference on Artificial
implementations and present their experiment results. Intelligence,vol.24-1,pp.173–178,2010.
As given by the analysis in Sec. IV-B, all of the pro- [16] A. Felner, R. Stern, S. Shimony, E. Boyarski, M. Goldenberg,
G.Sharon,N.Sturtevant,G.Wagner,andP.Surynek,“Search-based
posed solutions are trying to solve a form of a decomposed
optimal solvers for the multi-agent pathfinding problem: Summary
problem. For example, JSG-based solutions solve a 0/1 ILP and challenges,” in Proceedings of the International Symposium on
problem [20] and a single-agent shortest path problem, CombinatorialSearch,vol.8-1,pp.29–37,2017.
[17] M. R. Ryan, “Exploiting subgraph structure in multi-robot path
after constructing a JSG; coordination-based solutions, like
planning,”JournalofArtificialIntelligenceResearch,vol.31,pp.497–
CES, deal with a 3D matching problem embedded with 542,2008.
multiple single-agent shortest path problems. By applying [18] P.Surynek,“Towardsoptimalcooperativepathplanninginhardsetups
throughsatisfiabilitysolving,”inPacificRiminternationalconference
some approximation methods to the subproblems—for the
onartificialintelligence,pp.564–576,Springer,2012.
former, forming only a few edges instead of all feasible [19] P. Surynek, “Makespan optimal solving of cooperative path-
edges and calculating approximate edge costs; for the lat- finding via reductions to propositional satisfiability,” arXiv preprint
arXiv:1610.05452,2016.
ter, omitting unpromising matchings—we can significantly
[20] J.YuandS.M.LaValle,“Planningoptimalpathsformultiplerobots
reduce runtime without sacrificing too much performance. ongraphs,”in2013IEEEInternationalConferenceonRoboticsand
RHOC-A*,thoughefficient,doesnotconsidertheorderofthe Automation,pp.3612–3617,IEEE,2013.
[21] E.Erdem,D.Kisa,U.Oztok,andP.Schüller,“Ageneralformalframe-
robotpairselection,withwhichitsperformancecanimprove
workforpathfindingproblemswithmultipleagents,”inProceedings
while still maintaining coordination efficiency. oftheAAAIConferenceonArtificialIntelligence,vol.27-1,pp.290–
296,2013.
[22] P. Surynek, A. Felner, R. Stern, and E. Boyarski, “Efficient sat
REFERENCES
approachtomulti-agentpathfindingunderthesumofcostsobjective,”
inProceedingsofthetwenty-secondeuropeanconferenceonartificial
[1] J.L.AdlerandV.J.Blue,“Acooperativemulti-agenttransportation
intelligence,pp.810–818,2016.
management and route guidance system,” Transportation Research
[23] R.Barták,N.-F.Zhou,R.Stern,E.Boyarski,andP.Surynek,“Mod-
PartC:EmergingTechnologies,vol.10,no.5-6,pp.433–454,2002.
eling and solving the multi-agent pathfinding problem in picat,” in
[2] Y.Hu,M.Chen,W.Saad,H.V.Poor,andS.Cui,“Distributedmulti-
2017 IEEE 29th International Conference on Tools with Artificial
agentmetalearningfortrajectorydesigninwirelessdronenetworks,”
Intelligence(ICTAI),pp.959–966,IEEE,2017.
IEEEJournalonSelectedAreasinCommunications,vol.39,no.10,
[24] D.Kornhauser,G.Miller,andP.Spirakis,“Coordinatingpebblemo-
pp.3177–3192,2021.
tionongraphs,thediameterofpermutationgroups,andapplications,”
[3] C. Yu, A. Velu, E. Vinitsky, J. Gao, Y. Wang, A. Bayen, and
in25thAnnualSymposiumonFoundationsofComputerScience,1984.,
Y. Wu, “The surprising effectiveness of ppo in cooperative, multi-
pp.241–250,1984.
agentgames,”2022.
[25] B. De Wilde, A. W. Ter Mors, and C. Witteveen, “Push and rotate:
[4] P. Surynek, “An optimization variant of multi-robot path planning
a complete multi-agent pathfinding algorithm,” Journal of Artificial
is intractable,” in Proceedings of the AAAI conference on artificial
IntelligenceResearch,vol.51,pp.443–492,2014.
intelligence,vol.24-1,pp.1261–1263,2010.
[26] P. Surynek, “A novel approach to path planning for multiple robots
[5] J.Foerster,N.Nardelli,G.Farquhar,T.Afouras,P.H.Torr,P.Kohli,
in bi-connected graphs,” in 2009 IEEE International Conference on
and S. Whiteson, “Stabilising experience replay for deep multi-
RoboticsandAutomation,pp.3613–3619,IEEE,2009.
agentreinforcementlearning,”inInternationalconferenceonmachine
[27] R. C. Holte, M. B. Perez, R. M. Zimmer, and A. J. MacDonald,
learning,pp.1146–1155,PMLR,2017.
“Hierarchical a*: Searching abstraction hierarchies efficiently,” in
[6] J. K. Gupta, M. Egorov, and M. Kochenderfer, “Cooperative multi-
AAAI/IAAI,Vol.1,pp.530–535,1996.
agent control using deep reinforcement learning,” in Autonomous
[28] R.E.Korf,“Real-timeheuristicsearch,”Artificialintelligence,vol.42,
AgentsandMultiagentSystems:AAMAS2017Workshops,BestPapers,
no.2-3,pp.189–211,1990.
São Paulo, Brazil, May 8-12, 2017, Revised Selected Papers 16,
[29] O. Goldreich, Finding the shortest move-sequence in the graph-
pp.66–83,Springer,2017.
generalized15-puzzleisNP-hard. Springer,2011.
[7] M.Liu,H.Ma,J.Li,andS.Koenig,“Taskandpathplanningformulti-
[30] V. Kann, “Maximum bounded 3-dimensional matching is max snp-
agentpickupanddelivery,”inProceedingsoftheInternationalJoint
complete,”InformationProcessingLetters,vol.37,no.1,pp.27–35,
ConferenceonAutonomousAgentsandMultiagentSystems(AAMAS),
1991.
2019.
[31] R. Bellman, “Dynamic programming,” Science, vol. 153, no. 3731,
[8] Z. Yan, N. Jouandeau, and A. A. Cherif, “A survey and analysis of
pp.34–37,1966.
multi-robotcoordination,”InternationalJournalofAdvancedRobotic
[32] E.L.LawlerandD.E.Wood,“Branch-and-boundmethods:Asurvey,”
Systems,vol.10,no.12,p.399,2013.
Operationsresearch,vol.14,no.4,pp.699–719,1966.
[9] R.LunaandK.E.Bekris,“Efficientandcompletecentralizedmulti-
robotpathplanning,”in2011IEEE/RSJInternationalConferenceon
IntelligentRobotsandSystems,pp.3268–3275,IEEE,2011.