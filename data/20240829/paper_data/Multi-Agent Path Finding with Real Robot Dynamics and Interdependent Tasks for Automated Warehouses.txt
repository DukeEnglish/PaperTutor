August,2024
Multi-Agent Path Finding with Real Robot Dynamics and
Interdependent Tasks for Automated Warehouses
VassilissaLehoux-Lebacque‚òÖ TomiSilander‚òÖ ChristelleLoiodice SeungjoonLee AlbertWang SofiaMichel
NAVERLABS
‚òÖequalcontribution
Abstract
Multi-Agent Path Finding (MAPF) is an important optimization problem underlying the deployment
of robots in automated warehouses and factories. Despite the large body of work on this topic, most
approaches make heavy simplifications, both on the environment and the agents, which make the
resulting algorithms impractical for real-life scenarios. In this paper, we consider a realistic problem
of online order delivery in a warehouse, where a fleet of robots bring the products belonging to each
order from shelves to workstations. This creates a stream of inter-dependent pickup and delivery
tasks and the associated MAPF problem consists of computing realistic collision-free robot trajectories
fulfilling these tasks. To solve this MAPF problem, we propose an extension of the standard Prioritized
Planning algorithm to deal with the inter-dependent tasks (Interleaved Prioritized Planning) and a
novel Via-Point Star (VP*) algorithm to compute an optimal dynamics-compliant robot trajectory to
visit a sequence of goal locations while avoiding moving obstacles. We prove the completeness of our
approach and evaluate it in simulation as well as in a real warehouse.
1. Introduction typicallytakenintoaccountinpreviousworks. Dueto
Multi-AgentPathFinding(MAPF)[22]istheproblem theweightoftherobots,accelerating(ordecelerating)
of planning a set of collision-free paths for a team of tofull(orzero)linearandangularspeedmaytakemany
agents to reach one, or a sequence of goal locations, seconds (and meters). Since transported objects are
withminimaltraveltime. Withtheimpressiveprogress heavy,thespeedandaccelerationdependontheload
of AI and robotics research over the last decade, an oftherobot. Whenpath-findingisplannedonagraph,
increasingnumberofreal-worldapplicationsarebased aheavyrobotcannotnecessarilystopfromafullspeed
onmulti-agentsystemsandrequiresolvingsomeMAPF to the closest node. Furthermore, a large robot also
problem. Examplesincludeautomatedwarehouses[15, oftenoccupiesmultiplegraphnodesandedges. Large
24],videogames[14],UAVtrafficmanagement[10] robotshaveseldomspacetobypasseachotheroreven
and autonomous vehicles [5,16]. While there exists turninplaceinnarrowaisles. Iftherobotcanpickup
quiteextensiveliteratureonMAPF,mostworksconsider anddropoffobjectsonlyfromoneside,theplanshould
asimplifiedsettingwheretheenvironmentismodeled anticipatetheturnssothattherobotsentertheaisles
as a 4-neighbor grid where each agent occupies one withtherightorientationforpickups/drop-offs. This
cellatatime,andateachdiscretetimestep,caneither morerealisticsettingrendersthemajorityofmethods
movetoaneighboringcellorwaitinplace[22]. Even devisedforgrid-basedenvironmentsill-suitedforour
inthissimplifiedsetting,MAPFisalreadyNP-hard[25]. scenario. Simplified assumptions on robot dynamics
alsoyieldtrajectoriesthatcanquicklyleadtocollisions
Wetargetawarehousescenarioinwhichlargerobots
whenexecutedbyrealisticrobots(seeSection 5.1.1).
moveheavyobjectsinaspatiallyconstrainedworkspace.
Additionally, we consider that orders are received Inthispaper,weintroduceaMAPFsolutiontakingthe
throughout the day and each order consists of mul- aforementioned characteristics into account. Our ap-
tiple products that robots need to pick up at specific proach is based on the classical Prioritized Planning
shelvesanddelivertoaworkstation. Eachworkstation (PP) algorithm [20], which consists of ordering the
can process only one order at a time. This creates a agentsinacertainpriorityorder,thencomputingthe
stream of inter-dependent pickup and delivery tasks. shortestpathforeachagent,avoidingthetrajectoriesof
Suchascenario,anditscorrespondinglifelongMAPF thepreviouslyplannedagents(consideredasmovingob-
variant,featuresseveralcharacteristicswhicharenot stacles). PPiswell-suitedtoourcontextastheshortest
pathcomputationisdoneforeachrobotseparatelyand
Thisarticleisanextendedversionofarticle1421oftheECAI
can in principle accommodate kinematic constraints.
2024conference.
Correspondingauthor(s):vassilissa.lehoux@naverlabs.com tomi.silander@naverlabs.com
4202
guA
62
]OR.sc[
1v72541.8042:viXraMulti-AgentPathFindingwithRealRobotDynamicsandInterdependentTasksforAutomatedWarehouses
However,PPisnotadaptedtohandlethecollaboration generally treated as a sequence of MAPF problems.
betweenrobotsthatisneededforourinterdependent There is extensive work on MAPF [6,20,21,22] with
tasks. WeproposeanextensionofPP,calledInterleaved severalworksfocusingonwarehouseapplications(e.g.
Prioritized Planning, where the priorities are dynam- [15,24]). Howeveralltheaboveapproachesusemany
ically assigned throughout the planning process. We simplifyingassumptionsmentionedinSection1.
provethecompletenessofthealgorithmundersimple
assumptions. Moreoverweintroduceanovelshortest
pathalgorithm(namedVP‚àó)tocomputetheoptimal MAPF with realistic assumptions. In order to de-
trajectoryforarobottovisitasequenceofviapoints, ployMAPFsolversforreal-worldscenarios,researchers
whileavoidingmovingobstaclesandsatisfyingthekine- andpractitionershavedevelopedtwomainstrategies.
maticconstraints. SimilarlytoA‚àó algorithms[8],VP‚àó Thefirstoneistoadaptexistingalgorithmstohandle
isagoal-directedtreesearchalgorithmthatreliesex- specific aspects of the real applications. For example,
tensivelyonaheuristicevaluationoftheminimalcost Zhang et al. [26] extend some MAPF algorithms to
ofasubpathtothegoal. Weobtainthisevaluationby explicitlyaccountforturnactionsbutintheusualgrid-
computingtheoptimalrobottrajectorywhenignoring worldenvironmentwithdiscretizedtimesteps.Maetal.
thecollisions. Whilethissimplekinematics-constrained [18]presentanapproachforlifelongMAPDthattakes
shortestpathproblemisgenerallyNP-hard[2],byin- into account the robot‚Äôs translational and rotational
troducingatailoredroutingmulti-graphandfixingthe speedbutassumesinfiniteaccelerationanddecelera-
robots‚Äô speed profiles we obtain a polynomial prob- tion(i.e.,noinertia). Lietal.[13]consideragentsof
lemandthereforeanefficientevaluationheuristicfor arbitraryshape, butagentsstillmoveinunitarytime
VP‚àó. Weevaluateourapproachthroughextensiveex- steps from one vertex to another of the graph, hence
perimentsinsimulationandpreliminarytestsinareal notaccountingfortheagents‚Äôdynamics. Thesecond
warehouse. Thoseexperimentsshowthenecessityof strategyistouseso-calledexecutionframeworkswhich
accountingfortherealdynamicsinoursettingandcon- allowtoexecuteagivenMAPFsolutionandupdateitif
firmtherelevanceofthedifferentcomponentsofour necessary. Theseframeworksaregenerallyagnosticto
method. Inparticular,westudytheimpactofdifferent theunderlyingMAPFsolver. Forexample,Hoenigetal.
layoutconfigurations(moreorlessconstrainedenviron- [11]andH√∂nigetal.[12]proposepost-processingthe
ments)andamorerobustversionofourmethodusing outputofastandardMAPFsolverinordertomakethe
timemargins. trajectoriessatisfythekinematicsconstraints. However
theproducedplansmightnotbeaseffectivesincethese
Insummary,weproposeanovelapproachtoaddress
constraintswerenottakenintoaccountbytheplanning
thelifelongMAPFprobleminarealisticandchalleng-
algorithm.
ingwarehousesetting: withconstrainedspace,interde-
pendenttasksandcomplexrealrobotdynamics. Our
contributionsarethefollowing:
MAPFinuncertainenvironments. Evenwithanac-
‚Ä¢ WeintroducetheInterleavedPrioritizedPlanning curatemodeloftherobots,unexpectedtimevariations
algorithm for MAPF with inter-dependent tasks in robot actions will happen. To mitigate the effect
andproveitscompletenessundersimpleassump- ofthisuncertainty,Atzmonetal.[3]proposeùëò-robust
tions. MAPFthatguaranteesthefeasibilityoftheplaneven
‚Ä¢ WeproposetheVia-PointStar(VP‚àó)algorithmto iftheagentsaredelayedbyuptoùëòsteps. Wepropose
compute a shortest single-robot trajectory, satis- asimilarrobustnessfeaturebyintroducingtimemar-
fying the kinematics constraints, that visits a se- ginsthatensurerobustnessoftheplantoùëòsecondsof
quenceoflocationswhileavoidingmovingobsta- earlinessortardinessoftheagents. Whilehistorically
cles. mostoftheMAPFresearchisevaluatedonsimulators
‚Ä¢ Weevaluateourapproachinsimulationandpro- withsimplisticassumptions,testswithmoreadvanced
videablationsofthemaincomponents. simulators such as ROS Gazebo are becoming more
‚Ä¢ Finallywepresentpreliminaryresultsofapplying common[23]. Forexample,H√∂nigetal.[12]conduct
ourapproachinarealsetting. amixedrealitytestsusingiCreaterobots. However,un-
likeinourcase,robots‚Äôdynamicsdonotdeviatemuch
2. Related Works
fromthesimpleassumptionsunderwhichtheplansare
MAPFandMAPDforautomatedwarehouses. Our createdandthetransferisthusquitesuccessful. Inour
problemiscloselyrelatedtothelifelongMulti-Agent case, applying these simplifying assumptions quickly
Pickup and Delivery (MAPD) problem [17], which is leadtocollisions(seeSection5.1.1).
2Multi-AgentPathFindingwithRealRobotDynamicsandInterdependentTasksforAutomatedWarehouses
3. Lifelong MAPF with Interdependent
Tasks
Inthissection,wedefinemoreformallyoursettingand
theMAPFproblemwewanttoaddress.
Agents. Agents(orrobots)inthisworkrefertodiffer-
ential drive robots that can move forward, backward Figure1: Examplesofwarehouselayoutswiththephys-
and turn in place. Robots are also equipped with a icalwarehousegraph. Shelvesareshowningray,charg-
mechanismtopickup(ordropoff)anobjectatashelf ingstations/waitingareasareshownincyanandthe
orworkstation,whichcanonlybeexecutedwhenrobot workstationsareshowningreen.
isataspecificorientationandzerospeed. Weassume
thatadynamicsmodelfortherobotsisgiven,sothat
thetrajectoryandtraveltimetogofromaninitialstate and must all be finished before a workstation can be
(e.g.,positionandspeed)totargetstate,aswellasthe usedforanotherorder.
times to perform pickups and drop-offs, can be com-
puted.
LifelongMAPFwithInterdependentTasks. Givena
setofagents,awarehousegraphandastreamoforders
Warehouse Graph. We represent the workspace of
the warehouse as a general directed graph ùê∫ ùë§ = withtheirassociatedtasks,thegoalistofindasequence
(ùëâ ùë§,ùê¥ ùë§). The vertices (or nodes) are associated with of collision-free trajectories for the agents to execute
their tasks, such that only one order is handled at a
thephysicallocationswheretherobotcaneitherstop
workstationatatimeandthethroughputismaximized.
topickupanddropoffobjects(infrontofshelvesand
workstations)orturn(incasethereisenoughspace).
4. Interleaved Prioritized Planning with
Thearcs(oredges)representthesegmentstobetrav-
VP*
eledbetweenthevertices. Notethatwedonotmake
thestandardassumptionthatthegraphisaregulargrid, TheLifelongMAPFproblemwithInterdependentTasks
thereforenotimposinganyrestrictiononthewarehouse definedaboveincludestwooptimizationsubproblems:
layoutnorthedistancebetweenvertices. Suchgeneral- (i)TaskAssignment: whichagentshouldexecuteeach
ityleadstocaseswherearobotmayoccupymultiple task, and which workstation should be used for each
verticesandarcssimultaneously. Althoughthisgraphis task(order)? (ii)MAPF:howshouldtheagentsmove
notuseddirectlybyourroutingalgorithm,itrepresents (inspaceandtime)toexecutetheirtasks?
theinputdatausedtobuildthemoresophisticatedrout-
For simplicity we consider these two interdependent
inggraphdescribedinSection4.3.
subproblemsseparately. Inaddition,todealwiththe
streamofonlineorders, wesolvethesubproblemsat
Orders and Tasks. We define an order as a set of regular,user-specified,intervals. SimilarlytoReceding
objectstobepickedupatsomeshelvesanddelivered HorizonControl[4],theideaistocomputeaplanand
toa(single)workstation;orthereverse,severalobjects start executing it; then plan again, given the current
at a workstation that need to be delivered at specific stateofthesystem,includingthenewlyreleasedorders.
shelves. Weassumethatordersarrivethroughoutthe Hencewithoutlossofgenerality,inthefollowing,we
day. Formally,anorderùëú‚àà O withùëòobjectsisdefined focus on one planning iteration and assume that the
as a tuple (ùëüùëú,{(ùëùùëú,ùëëùëú)...,(ùëùùëú,ùëëùëú)}) where ùëüùëú is the ordersareknownandtheobjectiveistominimizethe
1 1 ùëò ùëò
releasedate, ùëùùëúthevertexcorrespondingtothelocation makespan, i.e., the maximum completion time of all
ùëó
oftheshelvewherethe ùëó-thobjectmustbepickedup theknowntasks.
ordeliveredandùëëùëú thedurationofthecorresponding
ùëó In this section, we first present our task assignment
pickup or delivery action. A duration for the action
strategy, and then our MAPF algorithm, Interleaved
(pickupordelivery)performedattheworkstationfor
Prioritized Planning (IPP), that we prove to be com-
eachobjectcanalsobedefined,eitherasworkstation
plete. WethendescribethedetailsoftheVia-PointStar
orobjectspecific. Wedefineataskasanagentpicking
(VP‚àó) algorithm that we use for routing agents with-
upanobjectataninitiallocationanddeliveringitat
outcollision,startingbythegraphmodelandcollision
atargetlocation. Thesetoftasksthatcorrespondtoa
checking mechanisms that enable us to manage the
givenorderaresaidtobeinterdependentbecausethey
robots‚Äôdynamics.
sharethesameworkstationasinitialortargetlocation
3Multi-AgentPathFindingwithRealRobotDynamicsandInterdependentTasksforAutomatedWarehouses
4.1. Task Assignment Heuristic Basedonthetaskassignments,wereinitializetheagent
Tooptimizethetaskassignment,wesolvetheunder- andworkstationstates,andaddtoeachagent‚Äôsstate
lyingidealizedschedulingproblemwhereweassume its assigned sequence of tasks; and for each worksta-
thattherobotsalwaysusetheshortestpaths(i.e.,ig- tion, its assigned sequence of orders. For each order
noringpotentialcollisions). Weusearule-basedheuris- (sorted by the FIFO rule), we consider the subset of
tic, inspired by the classical priority dispatching rule agentsassignedto(thetasksof)thisorder. Theearliest
approaches for scheduling [9]. More precisely, we available agent ùëé gets the priority for path planning.
decompose the system state ùëÜ into the agents‚Äô states Itspathshouldvisitthesequenceofgoallocationsof
ùëÜagents := {(ùúèùëé,ùë£ùëé) :ùëé‚àà A} whereùúèùëé isthetimewhen itsnexttaskùë° and,optionally,finishatitswaitingloca-
agentùëéwillbeavailableand ùë£ùëé itsposition(vertex)at tion. Tocomputeits start time, wetakeintoaccount
ùúèùëé; and the workstations‚Äô statesùëÜws := {ùúèùë§ : ùë§ ‚àà W} theavailabilitytimeoftherelevantworkstation. The
with time ùúèùë§ indicating when the workstation ùë§ will starttimeandlistofgoallocationsaregiventotheVP‚àó
beavailable. Atthebeginningoftheday,agentsareat algorithm(Sec4.5)whichcomputesatrajectorythat
theirinitialpositionandavailabilitytimesarezero. Or- avoidscollisionswithpreviouslyplannedtrajectories.
dersaresortedinaFirstInFirstOut(FIFO)fashion,by Given the trajectory, we update the availability time
increasingreleaseddate. Foreachorder,wefirstassign of the agent and workstation, and remove ùë° from the
theearliestavailableworkstation. Then,foreachtaskof tasks of agent ùëé. We update the previously planned
theorder(correspondingtoapickupanddelivery),we trajectorieswiththecompletetrajectoryinformation,
assigntheearliestavailableagentandupdateitsstate, including the last part of the path (that goes to the
based on the product pickup and drop-off times and waitinglocation). Werepeatuntilallthetasksofthe
theidealtraveltimes. Afterassigningallthetasksofan order are planned and then switch to the next order.
order,weupdatetheavailabilitytimeoftheworksta- Thelastpartofeachpathisoptionalinthesensethat
tion,andswitchtothenextorder. Toavoidcongestion if a robot can directly depart from the delivery loca-
attheworkstations,wecanlimitthenumberofagents tion of its previous task to the pickup location of its
assignedtooneorder. Fromthecompleteschedule,we nexttaskthenwediscardthego-to-waiting-spotpart
extracttheassignmentoftheorderstotheworkstations ofitspath. However,thispartcanbeusedandiskey
andthesequenceoftasksassignedtoeachrobot. toensurethatouralgorithmalwaysreturnsafeasible
solution. Adetailedpseudo-codeforIPPisprovidedin
4.2. InterleavedPrioritizedPlanningAlgorithm Algorithm1.
In the standard Prioritized Planning (PP) algorithm Wenowstatethecompletenessoftheproposedalgo-
[20], agents are given a certain priority order, then rithm.
indescendingpriorityorder,wecomputetheshortest
Theorem 1. Assumethateachrobothasadesignated
path for each agent, avoiding the trajectories of the
waitingplace,whereitcanbeidlewithoutinterferingwith
previouslyplannedagents(consideredasmovingobsta-
otherrobottrajectories. Iftherobotsareattheirwaiting
cles). WhilePPiswell-suitedtoourcontextbecausethe
place at the beginning of the planning, the Interleaved
shortestpathcomputationisdoneforeachrobotsepa-
PrioritizedPlanningalgorithmiscomplete.
ratelyandcanaccommodatethekinematicconstraints,
itisnotadaptedtohandletheinterdependenceoftasks.
Forexample,considerasimplescenariowherewehave Proof. Toshowthatthealgorithmiscomplete,weneed
3 robots, 1 workstation and a sequence of 10 orders, toprovethatitalwaysreturnsafeasiblesolution. There
eachcontaining3products. Toprocessordersasfastas are two constraints to consider: (i) the paths of two
possible,itisnaturaltodividethetasks(products)of robotsmustnotcollideand(ii)allthetasksofanorder
eachorderbetweentherobots. WithPP,afterplanning mustbefinishedonitsworkstationbeforeanynewtask
the10pickupsanddeliveriesofthe1stand2ndrobot, canstartonthatworkstation. Therobotsarestarting
thelastplannedrobotmayincursignificantdelays(due at their waiting place. The planned trajectories con-
tothenumerousmovingobstacles). Inthiscase,one tain,foreachrobot,areservationofitswaitingplace
cannotguaranteethatobjectsfromdifferentordersare forthedurationoftheplanninghorizonandnoother
notmixedattheworkstation. Toavoidthisissue,we information. Eachrobotcanhencewaitforanunlim-
propose an extension of PP, that we call Interleaved itedtimeatitsstartingpositionwithoutblockingthe
PrioritizedPlanning(IPP),wheretheprioritiesaredy- wayoftheotherrobots. Considerthefirsttaskùëú 1,1 of
namically assigned throughout the planning process, the first order ùëú assigned to robot ùëü, that is released
1
asfollows. at time ùúèùëú. Its assigned workstation ùë§ is either avail-
1
able for order ùëú or will be available at a given time
1
4Multi-AgentPathFindingwithRealRobotDynamicsandInterdependentTasksforAutomatedWarehouses
Algorithm 1 Interleaved Priority Planning based on ùúèùë§. Wecancompute,givenùëü‚Äôsavailabilitytimeùúèùëü,the
VP‚àó (Section4.5) earliest instant ùúè at which it can start to perform the
1: Data: Neighborhoods ùê¥(¬∑) task to respect the availability constraints, assuming
2: Data: Precomputeddurationofedgesùúè(¬∑,¬∑,¬∑) theagentdoesnotwaitonceithasleftitswaitingplace,
3: Data: Pathlowerboundfunction‚Ñé¬Ø(¬∑,¬∑,¬∑) using a classical shortest path algorithm or via-point
4: Data: Penaltyfunction ùëù(¬∑) search. Algorithm1planstherobottowaituntilùúèand
5: Data: OrderlistùëÇsortedbypriority then computes a path starting at ùúè for the via-points
6: Data: Tasklistùëá(ùëú) foreachorderùëú‚ààùëÇ for the task plus a return for the robot to its waiting
7: ‚ä≤Sortedbyplanningpriority place. Asthereisnootherrobotforwhichweplanned
8: Data: Assignmentoforderstoworkstationsùëéùë§(¬∑) amove,apaththatrespectsconstraint(i)alwaysexists,
9: Data: Assignmentoftaskstorobotsùëé(¬∑) assumingthegraphisconnected. Bydefinitionofùúè,it
10: Data: Initialconfigurationoftherobotsùëô(¬∑) also respects constraint (ii). We update the available
11: Data: Waitingplaceoftherobotsùë§ùëô(¬∑) time ùúèùëü of the robot with the task‚Äôs end time, so that
12: Data: ùëÖ(¬∑) Reservationtable ‚ä≤Canbeempty it can restart from its last position. If the order has
13: ùúèùëü(ùëü) ‚Üê0 ‚àÄùëü ‚ä≤Nextavailabletimeforeachrobot other tasks, we use the same availability time ùúèùë§ for
14: ùëùùëéùë°‚Ñéùë†(ùëü) ‚Üê‚àÖ ‚àÄùëü ‚ä≤Pathforeachrobot theworkstationwhendeterminingwhentostartfrom
15: foreachùëü inagivenorderdo thewaitingplace. Thetimeùúècomputedisnowanopti-
16: ùë§_ùëùùëéùë°‚Ñé‚ÜêpathtothewaitingplacewithVP* misticestimatebasedontraveltimeswithoutcollision
17: ‚ä≤Mayfaildependingonùëô fromtherobot‚Äôscurrentlocation. Itensures(ii)asthe
18: Update ùëÖwithùë§_ùëùùëéùë°‚Ñé robotcanonlyarrivelaterthanùúèùë§ attheworkstation
19: ùë§ùëéùëñùë°ùëñùëõùëî_ùëùùëéùë°‚Ñé(ùëü) ‚Üêùë§_ùëùùëéùë°‚Ñé if it needs to avoid other robots. If the robot needs
20: endfor towait,wesendittowaitatitswaitingplace: ifitis
21: forùëúùëüùëëùëíùëü ‚ààùëÇdo differentfromitscurrentposition,wereservedapath
22: ùë§ùë†‚Üêùëéùë§(ùëú) togothereduringtheplanningoftherobot‚Äôsprevious
23: ùëá ‚Üêùëá(ùëú) task. Constraint(i)isthenensuredbytheexistenceof
24: Sortùëá bydecreasingpriority a feasible path: the robot can always wait for all the
25: whileùëá ‚â†‚àÖdo plannedtrajectoriestobefinishedtomove. Whenall
26: ùë°ùëéùë†ùëò‚Üêùëá.ùëùùëúùëù(0) tasks of an order have been planned, the availability
27: ùëü ‚Üêùëé(ùë°ùëéùë†ùëò) timeoftheworkstationisupdatedwiththeendtime
28: if ùë°ùëéùë†ùëòorùë§ùë†isnotavailableatùúèùëü(ùëü) then ofthelastactionoftheorder,ensuringthatnotaskof
29: ‚ä≤Robotmustwait another order is able to start before that time. Tasks
30: ùëùùëéùë°‚Ñéùë†(ùëü) ‚Üê ùëùùëéùë°‚Ñéùë†(ùëü)‚à™ùë§ùëéùëñùë°ùëñùëõùëî_ùëùùëéùë°‚Ñé(ùëü) ofthenextordercanhencebeplannedfollowingthe
31:
Updateùúèùëü(ùëü) samelogicandrespectingtheconstraints. ‚ñ°
32: Estimatethenecessarywaitingtimeùë§ùë°
33: Update ùëÖ and ùëùùëéùë°‚Ñéùë†(ùëü) with staying at NotethatTheorem1alsoholdswhentherobotsstart
ùë§ùëô(ùëü) forùë§ùë° startingatùúèùëü(ùëü)
atlocationsotherthanthewaitingplacesandeithera
34:
ùúèùëü(ùëü) ‚Üêùúèùëü(ùëü)+ùë§ùë°
pathisreservedintheplannedtrajectoriesfromtheir
35: endif currentpositiontotheirwaitingplaces,orsuchapath
36: ùëâùëÉ ‚ÜêùëâùëñùëéùëÉùëúùëñùëõùë°ùë†(ùëô(ùëü),ùë°ùëéùë†ùëò,ùë§ùëô(ùëü)) canbecomputedforeachagentinapriorityordergiven
37:
ùëùùëéùë°‚Ñé,ùë§_ùëùùëéùë°‚Ñé‚ÜêVP‚àó(ùê¥,ùúè,ùëâùëÉ,‚Ñé¬Ø,ùëù,ùëÖ,ùúèùëü(ùëü))
tothealgorithmforinitializingtheplannedtrajectories.
38: if path‚â†‚àÖthen
39: Updateùúèùëü(ùëü) ‚ä≤Timeattask‚Äôsendlocation 4.3. Routing Multi-Graph
40: ùëùùëéùë°‚Ñéùë†(ùëü) ‚Üê ùëùùëéùë°‚Ñéùë†(ùëü)‚à™ ùëùùëéùë°‚Ñé In many other works, routing is performed directly
41: ùë§ùëéùëñùë°ùëñùëõùëî_ùëùùëéùë°‚Ñé(ùëü) ‚Üêùë§_ùëùùëéùë°‚Ñé in the warehouse graph ùê∫ ùë§ as defined in Section 3.
42: Reserve ùëùùëéùë°‚Ñé‚à™ùë§_ùëùùëéùë°‚Ñéin ùëÖ However,asarobotmayoccupyseveralnodesinour
43: else context,cannotturneverywhereandhasmorecomplex
44: return‚àÖ dynamics,wedesignaspecificroutinggraphthatcan
45: endif integratethoseelementsinitsstructure. Todoso,we
46: Updateùëá‚Äôsorder convertthewarehousegraphùê∫ ùë§,toadirectedrouting
47: endwhile multi-graph in which each vertex (say node C in the
48: Updateùë§ùë†‚Äôsavailabletime Figure2)ofùê∫ ùë§ isrepresentedwithseveralverticesof
49: ‚ä≤Endtimeofthelastactionofùëúonùë§ùë† differenttypesandtheirassociatedarcs: (i)astartand
50: endfor astopnode,tostartplanningfromthatpositionorend
51: returnpaths
5Multi-AgentPathFindingwithRealRobotDynamicsandInterdependentTasksforAutomatedWarehouses
an itinerary at that position (only shown for node A 4.4. Collision Checking
below);(ii)foreachadjacentnodeinthewarehouse Inclassicalsettings,stronghypothesesontherouting
graph (like node D), we create two nodes: one for grapharetakentoavoidrobotcollision. Robotsinad-
arrivingfromthatnodeandoneforgoingtothatnode. jacentnodescannotcollide,andmanyrulesonrobot
Theyarelinkedbyanadditionalarcallowingforgoing movementensurethatcollisionsareavoided[22]. In
backwardwithoutchangingdirection;(iii)whereitis our setting, adjacent nodes can be so close that two
possibletoturn,weaddturningarcsfortherobotto robots occupying them would collide, or so far away
reverseitsorientation(i.e.,aU-turn);(iv)atthenodes thattworobotstravelingthesameedgewouldnotcol-
(like C) where two nonparallel edges meet, we add lide. Wehencedefineamorespatiallyexplicitcollision
twoturningarcspernode-triplet(twoforB-C-D,and checkingmethod,adaptedtothissettingandreminis-
twoforD-C-B),oneforturningclockwiseandonefor centtosweptAABB[7].
turningcounter-clockwise. Oneofthesearcsalsoturns
Theposition ùë•ùë¶ ‚àà‚Ñù2 ofeachrobotanditsorientation
thetravelingorientationoftherobot.
(yaw)ùúÉ‚àà [‚àíùúã,ùúã]isuniquelydeterminedateachtimeùúè.
Intheroutingalgorithm,theconfigurationoftherobot
is defined as a tuple (ùúè,ùë•ùë¶,ùúÉ,ùë†,ùë† ùúÉ,ùëô), where ùë† ‚àà ‚Ñù is
thelinearvelocityindirectionùúÉ,ùë†
ùúÉ
‚àà‚Ñùistheangular
velocity,andùëô =1ifagentisloadedandùëô =0otherwise.
Forcollisiondetection,thespaceoccupiedbytherobot
ismodeledasaconnectedtwo-dimensionalset(suchas
apolygon)centeredatitsùë•ùë¶-positionandrotatedbyits
orientation. Suchasetmayincludeadditionalpadding.
Wecheckifthespacesoccupiedbytwodifferentrobots
intersectatanygiventimeùúè. Forapracticalimplemen-
Figure2: Exampleofgraphconversion. Originalware- tation,onemay,forexample,cutcontinuoustimeinto
housenodesareinblue,newroutinggraphnodesare intervals,andmodelthespaceoccupiedbytherobot
in orange, dashed lines are straight arcs, while solid during an interval as (a convenient superset of) the
lines are turning arcs. The solid turning lines within unionofthesetstherobotoccupiesduringthisinterval.
nodeCrepresenttwoarcseach: forturningclockwise Checking if a robot would collide with other robots
andcounter-clockwise. attimeùúècanthenbeconservativelyapproximatedby
checkingifthespaceoccupiedbytherobotintersects
withthespacesoftheotherrobotsoccupiedduringthe
interval containing ùúè. One may also add some time
Therobotneedstostopinordertoturn,toavoidsliding,
safetymarginbyreservingsomeneighboringintervals.
tilting and dropping its potentially heavy load. How-
ever,iftherobotisgoingstraight,wewanttotraverse
4.5. VP‚àó Algorithm
longpathswithoutstopping,possiblypassingthrough
Toplanthedisplacementsoftherobotforagiventask,
severalnodes. Tothis effect we augment therouting
classicalshortestpathalgorithmsareinappropriateas
graph with additional shortcut edges between nodes
weneedtocomputepathsthattakeintoaccountnot
thatareonastraightline. Withshortcutsinplace,we
onlythepositionofstaticobstacles(modeledintothe
cansettheinitialandfinallinearandangularvelocities
graphwithnon-existingedges)butthepositionofthe
atallthenodestozero. Weusetherobot‚Äôsdynamics
otherrobots,whicharemovinginthewarehouseatthe
to associate two travel times with each arc: one for
sametimeasweplantherobot‚Äôspath.
an empty robot and one for a loaded one. The times
foreacharctraversalcannowbeprecomputedbased
onacceleratingtherobottomaximumlinear/angular
Viapoints. Foreachtask,wemustplanseveralcon-
velocity within the edge-specific speed limits and de-
secutivedisplacementsoftherobot(e.g.,goingtoan
celerating back to speed zero. As the speed at each
aisletopickupanobject,goingtotheworkstationto
node is zero, and arc travel times are fixed, comput-
delivertheobject,movingtoawaitingareatowaitfor
ing the shortest path without moving obstacles for a
thenexttask). Wecallviapointsthelocationsthatwe
singlerobotispolynomial(asopposedtothegeneral
have to visit sequentially. If we were to use classical
caseofshortestpathwithkinematics[2]). Weusethis
shortestpathwithcollisionavoidancesequentiallyfor
propertytorapidlycomputethelowerboundsonthe
eachpairofconsecutiveviapoints,wewouldhaveno
durationofpathsthatavoidcollisions.
guarantee of finding a path for all the displacements
6Multi-AgentPathFindingwithRealRobotDynamicsandInterdependentTasksforAutomatedWarehouses
ofthesequence(seeSection5.1.2). Indeed,takingthe movingobstacleswhoseconfigurationisknownateach
shortestpathforthefirstpairofthesequencemaypre- time instant from the reservation table. Although, in
venttherobotfindinganyfeasiblepathtotheremaining ourwarehouse,theonlymovingobstaclesaretheother
viapoints. robots,thecollisioncheckingcouldbeperformedsimi-
larlyforanykindofmovingobstaclewhoseoccupied
Lietal.[15]proposeacompleteheuristicalgorithmfor
spaces have been stored in the reservation table. In
asimplerversionoftheshortestpathwithviapoints
ourcontext,traveltimemustbeeithercontinuousor
problem. Thisheuristichoweverdoesnotaccountfor
discretewithhighprecisiontoavoidcumulativeerrors
robotdynamics,actualrobotload,positionandorien-
overmultiplepathscomputedsequentiallyduringthe
tationinspace,anditscollisioncheckingisbasedon
planning. However, to reduce the computation time,
vertexandswappingconflictsonly. Weexplainbelow
whentherobotiswaitingatagivenpoint,thewaiting
howtohandletheseadditionalconstraintsandpropose
time is discretized to the second in our experiments.
animprovementthatguidesthesearchfastertowarda
Whenwaitingatanodeispossible,thegraphcontains
firstfeasiblesolution.
anadditionalarcfromthenodetoitselfwithaduration
equaltothechosenminimumwaitingtime.
RobotdynamicsinVP‚àó. Evenifthearcweightsare
precomputed,basedontherobot‚Äôsdynamics,weneed
precisedisplacementinformationwhencheckingcol- Notation Wedenotebyùê∫ = (ùëâ,ùê¥) theroutinggraph
lision for the current robot against already planned (asexplainedinSection4.3)whereùëâ isthesetofnodes
robotpaths(ourmovingobstacles),whichimpactsthe and ùê¥thesetofarcsbetweenthosenodes. Foragiven
speedofthealgorithm. Fromapracticalpointofview, node ùë£, ùê¥(ùë£) denotestheoutputarcsof ùë£,i.e.,theset
thespaceoccupiedbytherobotsalongtheirplanned ofarcs {(ùë£,ùë£‚Ä≤) ‚àà ùê¥|ùë£‚Ä≤ ‚ààùëâ}. Theweightùúè(ùë£,ùë£‚Ä≤,ùëô) ofan
paths are computed and stored in a reservation table arc (ùë£,ùë£‚Ä≤) isthedurationtotraversethearc (ùë£,ùë£‚Ä≤) with
forlatercollisioncheckingwhenotherrobotscompute ùëô =1iftherobotisloadedand0otherwise. Theangle
theirpaths. ùúÉ(ùë£,ùë£‚Ä≤)istherotationangleoftheedge,whentheedge
allows to turn in a given direction, and 0 otherwise.
Robotconfiguration. Inourcontext,theorientation A path is a succession (ùë£ 0,ùë£ 1),(ùë£ 1,ùë£ 2),...(ùë£ ùëñ‚àí1,ùë£ ùëñ) of
oftherobotisimportant:inordertopickupordropoff arcsof ùê¥. Thedurationofapath ùëùis(cid:205) ùúè(ùë£,ùë£‚Ä≤,ùëô).
(ùë£,ùë£‚Ä≤)‚ààùëù
objectsattheshelvesandworkstations,therobotmust Toobtainalowerbound ‚Ñé(ùë£,ùë£‚Ä≤,ùëô) forthedurationof
beinanspecificorientationtoexecutethe(pickupor a path between node ùë£ and node ùë£‚Ä≤, we precompute
drop-off)action. However,duetospaceconstraints,it thedurationoftheshortestpathundertheassumption
maynotbepossiblefortherobottorotateintheaisle, that there are no moving obstacles (one duration for
soitmustbeintherightorientationwhenenteringthe a loaded robot and one for an unloaded robot), and
aisle.Orientationishencetakenintoaccountinthecon- withoutanyrequirementonorientationatnode ùë£‚Ä≤,us-
figurationoftherobot,andalsointhedescriptionofthe inganyclassicalshortestpathalgorithm,liketheone
viapointsandintheroutingmulti-graph. Inaddition, used by Li et al. [15]. As stated before, this shortest
thespeedoftherobotisdifferentwhenloaded,sothe pathcanbeobtainedinpolynomialtimebasedonour
loadisalsoaddedtothevia-pointinformation. Each routinggraph. Wedenoteviapointswithnodes ùë£with
viapointisdefinedbyanodeinthegraph(andphysi- additionalattributessothat ùë£.ùëô istheout-configuration
calposition), apartialin-configurationindicatingthe loadofviapoint ùë£and ùë£.ùëë isthedurationtoperform
requiredorientation(yaw)andtheloadwhenarriving an action at via point ùë£. When passing by ùëò + 1 se-
atthenode,andapartialout-configurationindicating quential via points ùë£¬Ø = (ùë£ 0,ùë£ 1,...,ùë£ ùëò), we define the
therequiredorientationandtheloadwhenleavingthe estimate of the duration of the path to reach the last
node,andthetimerequiredattheviapointtoperform viapointasasthesumoftheestimatesofthesubpaths,
theassociatedaction. Theviapointsaretheonlypoints i.e.,‚Ñé¬Ø(ùë£¬Ø) =(cid:205) 0‚â§ùëñ<ùëò(‚Ñé(ùë£ ùëñ,ùë£ ùëñ+1,ùë£ ùëñ.ùëô)+ùë£ ùëñ.ùëë) (itdoesnotin-
wheretherobotcanperformanaction. cludethetimeoftheactionatthelastviapoint). With
somemodificationstochecktherequiredorientation
Shortest path with via points. The objective is to at nodes, configurations at start point and via points
findanearliestarrivalpathstartingfromthefirstvia canbetakenintoaccounttoobtainabetterestimate.
pointandthenpassingbyeachviapointintheorder Forapartialsolutionwhereviapoints (ùë£ 0,ùë£ 1,...,ùë£ ùë£ùëù),
ofthesequence,andarrivingatthelastviapointwhile ùë£ùëù< ùëò,havealreadybeenpassedsequentially,wecan
respectingtheconstraintsimposedbythepartialcon- thenestimatethepathdurationfromitslastnode ùë£in
figurationsofeachviapoint,stoppingateachviapoint configurationùëêtoviapoint ùë£ ùëò similarly. Thisduration
fortherequiredtime,andavoidingcollisionwiththe isdenoted‚Ñé¬Ø(ùë£,ùëê,ùë£ùëù,ùë£¬Ø) or‚Ñé¬Ø(ùë£,ùëê,ùë£ùëù) forshort.
7Multi-AgentPathFindingwithRealRobotDynamicsandInterdependentTasksforAutomatedWarehouses
VP‚àó algorithm. The VP* algorithm plans the path beforefindingafirstfeasiblesolutionwhenoneexists.
from node ùë£ 0 to ùë£ ùëò sequentially visiting via points ùë£¬Ø Algorithm2givesthepseudo-codeofthealgorithm.
andavoidingcollisionswithpreviouslyplannedpaths
Note that in our experiments, we stop the search as
savedinthereservationtable. Thealgorithmiterates
soonasafirstsolutionisfound. Inpractice,itismuch
on a priority queue, which directs the search toward
faster (as the algorithm does not need to empty the
themostpromisingelements. Thisqueuecontainstu-
queuecompletelybeforereturningasolution)andwe
ples (ùë£,ùëê,ùë£ùëù,‚Ñéùë†), where ùë£isanode, ùëê aconfiguration
observed on our setting good results at the level of
atthisnode, ùë£ùëùtheindexofthelastviapointreached
theMAPFalgorithm,sometimesevenbetterthanwith
and‚Ñéùë†theheapscoreofthetuple.
optimal paths, suggesting that optimizing locally the
Atthebeginningofthesearch,weinitializethisqueue pathofagivenrobotmightinsomecasesmakeitmore
withatuple(ùë£ ,ùëê ,ùë£ùëù ,‚Ñéùë† )containingtheoriginnode difficultforotheragentstoplantheirownpaths.
0 0 0 0
ùë£ (thefirstviapoint),theinitialconfigurationùëê (ob-
0 0
tainedfromthepartialout-configurationofthefirstvia Heapscore. Theheapscoreof (ùë£,ùëê,ùë£ùëù),where ùë£isa
point and the path start time), ùë£ùëù = 0 and the heap node,ùëêaconfigurationandùë£ùëùaviapointindex,iscom-
0
score‚Ñéùë† oftheelement. puted as the sum of an optimistic estimate ‚Ñé¬Ø(ùë£,ùëê,ùë£ùëù)
0
of the shortest path duration to the destination after
Duringasearchstep,thealgorithmpopsaheapelement
passingthroughallviapointsandapenalty ùëù(ùë£ùëù) that
(ùë£,ùëê,ùë£ùëù,‚Ñéùë†) withthelowestheapscoreandexploresits
ishigherwhenthenumberofremainingviapointsto
neighborhood ùê¥(ùë£) intheroutinggraph. Wefirstcheck
passishigher,andequalto0whenonlyoneviapoint
the lower bound ‚Ñé¬Ø(ùë£,ùëê,ùë£ùëù) on the duration of a path
remainstobereached. Thispenaltyaimstofavorfind-
tothedestination ùë£ ùëò from (ùë£,ùëê,ùë£ùëù). Ifitislargerthan
ingafirstfeasiblepathbetweenoriginanddestination
thedurationofthebestpathfoundsofar,thesearchis
passingthroughallviapointsbymakingadepth-first
prunedbygoingtothenextstep. Ifnot,wecheckifwe
like search. It is hence different from the heap score
havereachedthenextviapointintherightorientation,
usedby Lietal.[15]andoftheclassicalA‚àó algorithm
i.e. ifnode ùë£isthenextviapointandifconfigurationùëê
as the score is not necessarily a lower bound on the
hasthesameorientationasthein-configurationofthe
durationofapathtodestinationfromthecurrentheap
nextviapoint.
element. However, as we use the travel-time lower
If we are at the next via point, we need to be able to bounds to prune the search and not the heap scores,
stayatnode ùë£withoutcollisionforthedurationofthe the algorithm remains optimal if run until the queue
actiontoperformatthisviapoint. Ifwecan,andwe is empty. Section 5.1.2 compares our heap score to
areatdestinationùë£ ùëò,wecanupdatetheearliestknown theonewith ùëù(ùë£ùëù) = 0,andshowsthattheproposed
arrivaltimeatnode ùë£ ùëò andgotothenextstep. Ifwe penaltyisindeedanefficientwaytoreducethesearch
arenotyetatfinaldestination ùë£ ùëò,weincreasebyone space.
theindex ùë£ùëùofthelastreachedviapointandupdate
theconfigurationtimeùúèwiththetimespentatthevia Further improvements of VP* As the robots must
pointbeforeexploringtheneighborhoodof ùë£,aswell regularlywaittoavoidcollisioninoursetting,theVP*
astheloadfromtheout-configurationoftheviapoint. algorithm,implementedasdescribedabove,mightlead
Foreachneighbor ùë£‚Ä≤ ofnode ùë£,weverifyifwecanuse to solutions that are optimal in terms of path dura-
arc (ùë£,ùë£‚Ä≤) starting at time ùúè without collision, using tion,butnotsatisfactoryforahumanobserver. Indeed,
spendingthewaitingtimeimmobileormovingisequiv-
the dynamics of the robot to compute its position in
alentaccordingtothepathdurationcriterion,andwe
timeandspacewhiletravelingtheedge. Ifthereisno
collision,wecheckthattheobtainedconfiguration ùëê‚Ä≤ observeinourexperimentssolutionswithunnecessary
at ùë£‚Ä≤ hasnotalreadybeenaddedtothequeueforvia- moveshappeningduringthosewaitingtimes. Because
pointindex ùë£ùëù. Ifnot,wecomputetheheapscore‚Ñéùë†‚Ä≤ wediscretizewaitingtimes(bysettingthedurationof
andaddthenewelement (ùë£‚Ä≤,ùëê‚Ä≤,ùë£ùëù,‚Ñéùë†‚Ä≤) tothequeue. thelooparcsofthegraph),itcanalsohappenthatthose
movesimprovetheminimumpathdurationbyallowing
Thealgorithmfinisheswhenthequeueisempty. Note to return at a node slightly before what would have
thatadditionalstoppingcriteriacouldbeadded,such beenpossiblestayingimmobile. Toavoidthisproblem,
as having found a first feasible path, having popped weintroduceasecondarycriterion,theminimumtotal
amaximumnumberofelementsoutofthequeue,or timeinmovementoftherobot,thatweusetobreakties
havingspentacertainamountoftime. Thefirstdrops betweenequivalentsolutions,andwediscretizearrival
the optimality of the algorithm, the last two leads to timesinsuchwaythatsolutionsthatareveryclosein
dropthecompletenessofthealgorithmasitcanreturn termsofarrivaltimesaredeemedequalaccordingto
8Multi-AgentPathFindingwithRealRobotDynamicsandInterdependentTasksforAutomatedWarehouses
thiscriterion. Then,amongequivalentsolutionsforthis
Algorithm 2 Shortest path with via points and time first criterion, only the solution with the lowest total
dependentobstaclecollisionavoidanceVP‚àó
movingtimeiskept.
1: Data: Neighbourhoods ùê¥(¬∑)
Moredetailsonhowtoimplementthisversionofthe
2: Data: Precomputeddurationoftheedgesùúè(¬∑,¬∑,¬∑)
algorithm and associated experiments can be found
3: Data: ViapointsùëâùëÉ=(ùë£ ùëñ,ùëê ùëñùëñùëõ,ùëê ùëñùëúùë¢ùë°,ùëë ùëñ) 0‚â§ùëñ<ùëò inAppendix. Duetothediscretizationandtotheties
4: Data: Pathlowerboundfunction‚Ñé¬Ø(¬∑,¬∑,¬∑)
breakingpropertiesofthesecondarycriterion,weob-
5: Data: Penaltyfunction ùëù(¬∑)
tainsolutionsofequivalentqualitywithlowerexecution
6: Data: Reservationtable ùëÖ
times.
7: Data: Starttimeùúè 0
8: ùëÉùëüùëíùë£_ùëê‚Üê ùê∑ùëñùëêùë°() ‚ä≤Previousconfigsinthepath 5. Validation
9: ùëöùëñùëõ_ùëéùëüùëü ‚Üê‚àû ‚ä≤Minpathdurationfoundsofar
5.1. In Simulation
10: ùëöùëñùëõ_ùëê‚Üê‚àÖ ‚ä≤Arrivalconfigofbestpathsofar
11: ùëê 0 ‚Üê (ùúè 0,ùë•ùë¶(ùë£ 0),ùëê 0ùëúùë¢ùë°.ùúÉ,0,0,ùëê 0ùëúùë¢ùë°.ùëô) Weimplementasimulatorofthewarehouseenviron-
12: ‚Ñéùë†‚Üê‚Ñé¬Ø(ùë£ 0,ùëê 0,0)+ ùëù(0) mentwhererobotmovementsaremodeledwithsim-
13: ùëÑ ‚Üê {(ùë£ 0,ùëê 0,0,‚Ñéùë†)} pledynamics. Therobot‚Äôslinearacceleration ùê¥iscon-
14: whileùëÑ ‚â†‚àÖdo strainedtotheinterval [ùê¥ ùëëùëíùëê,ùê¥ ùëéùëêùëê]. Thevalueof ùê¥may
15: (ùë£,ùëê,ùë£ùëù,‚Ñéùë†) ‚ÜêùëÑ.ùëùùëúùëù() ‚ä≤Minscoreelement dependontheloadingstateoftherobotsinceaheavy
16: if ùëê.ùúè+‚Ñé¬Ø(ùë£,ùëê,ùë£ùëù) > ùëöùëñùëõ_ùëéùëüùëü then robotcannotaccelerateasfastasalighterone. Ifwe
17: ‚ä≤Cannotimproveoncurrentbestsolution supposethattherobotisalwaysacceleratingordecel-
eratingasfastasitcantowardthedesiredspeed,we
18: continue
19: endif can compute the shortest time ùë° ùë† it takes to travel a
20: if at_destinationthen linesegmentoflengthùëë whenstartingwithvelocity ùë£ ùëñ
21: if robotcanstayat ùë£ ùëò‚àí1 forùëë ùëò‚àí1 then andobeyingaccelerationconstraints,segment-specific
22: ‚ä≤Checking ùëÖ speed limit ùëâ and the maximum speed at the end of
23: Updateùëöùëñùëõ_ùëéùëüùëü,ùëöùëñùëõ_ùëê thesegmentùëâ ùëì. Identicalcomputationscanbemade
forpureturningarcsinwhichonlytherobot‚Äôsorienta-
24: continue
tionùúÉchanges. Inthiscasethesamecomputationare
25: endif
26: else
performedwithaccelerationlimits[ùê¥ ùúÉùëëùëíùëê,ùê¥ ùúÉùëéùëêùëê],angular
27: if at_next_via_pointthen
distance ùëë ùúÉ, and maximum angular speedùëâ ùúÉ. For all
28: if robotcanstayat ùë£ ùë£ùëù forùëë ùë£ùëù then thearcsintheroutinggraph,theinitialandmaximum
29: ‚ä≤Checking ùëÖ finalvelocitiesequalzero. Underthosehypotheses,we
30: ùëê.ùúè‚Üêùëê.ùúè+ùëë ùë£ùëù ‚ä≤Stayingat ùë£ ùë£ùëù gethighlyaccuratetraveltimes,comparedtotheactual
31:
Updateùëêwithùëêùëú ùë£ùë¢ ùëùùë° measurementsinthewarehouse(seeSection5.5).
32: ùë£ùëù‚Üê ùë£ùëù+1 In the simulation experiments, the maximum lin-
33: endif ear/angular velocities are 0.2[m/s; rad/s], and the
34: endif constant(ac/de)celerationsis0.25[m/s2;rad/s2]when
35: endif therobotisloaded,0.5otherwise.
36: for (ùë£,ùë§) ‚àà ùê¥(ùë£) do
37: if taking(ùë£,ùë£‚Ä≤)atùëê.ùúèinconfigurationùëêdoes Weconsiderthreegenericwarehouselayouts,withone
tothreerowsofshelves,asillustratedinFig.1. Foreach
notcollidewithanyplannedpathof ùëÖthen
38:
ùëê‚Ä≤ ‚ÜêUpdateùëêwithùúè(ùë£,ùë£‚Ä≤,ùëôùë£ùëù)andùúÉ(ùë£,ùë£‚Ä≤) layoutgraph,wegenerate100instanceswith5orders
39: if (ùë£‚Ä≤,ùëê‚Ä≤,ùë£ùëù,‚Ñéùë†) not added to ùëÑ before each. Foreachorder,thenumberoftasksissampled
fromamax-inflatedtruncatedgeometricdistribution
then
40: ‚Ñéùë†‚Üêùëê‚Ä≤.ùúè+‚Ñé¬Ø(ùë£‚Ä≤,ùëê‚Ä≤,ùë£ùëù)+ ùëù(ùë£ùëù) withmean=2.5andmax=4. Theorderbeingadelivery
41: Add {(ùë£‚Ä≤,ùëê,ùë£ùëù,‚Ñéùë†)} toùëÑ orapickupischosenuniformlybetweenthetwooptions
andthelocationofeachtaskissampleduniformlyfrom
42: Update ùëÉùëüùëíùë£_ùëê
allthepossiblepositionsonthegraph(inourlayouts,
43: endif
atthenodesoftheshelves).
44: endif
45: endfor ExperimentsuseanIntel(R)Xeon(R)CPUE5-2680v4
46: endwhile 2.40GHz x86_64 server with 56 cores, 2 threads per
47: returnReconstructPath(ùëÉùëüùëíùë£_ùëê,ùëöùëñùëõ_ùëê) core,and1.0TBofRAM.
9Multi-AgentPathFindingwithRealRobotDynamicsandInterdependentTasksforAutomatedWarehouses
5.1.1 TheNeedforDynamics 2robots 3robots 4robots
Heapscore std penalty std penalty std penalty
Tostudytheneedfortakingdynamicsintoaccount,we
Visited Q1 13 5 58 21 137 46
compareourproposedmethodtotwodifferentbase- states Q2 30 10 109 75 303 74
lines. The first baseline, admittedly naive given our (√ó103) Q3 76 22 184 122 485 130
graphwithedgesofdifferentlength,assumesthatwe Run Q1 24 9 110 38 276 90
can move to any neighboring node in constant time. time Q2 55 17 212 75 611 137
(s) Q3 131 39 355 122 1009 289
Followingthepathsplannedbasedunderthishypothe-
Make- Q1 18 18 15 15 13 13
siscausescollisionsinourstandardwarehousesafter
span Q2 22 22 17 17 15 15
followingtwoedges.
(min) Q3 25 25 19 19 15 15
Thesecondbaseline,likesuggestedbyMaetal.[18]
Table1: Quartilesofnumberofstatesvisited,run-time
ignores inertial dynamics and allows instantaneous
and makespan when using standard vs penalty aug-
switchingbetweenstoppingandconstant-speedmove-
mentedheapscore
ment. Thisassumption, doesnot actuallysimplifyor
speed-upouralgorithm(sincethespatiallyexplicitcol-
lisioncheckingisstillneeded). Wesimulated100differ-
reserved, but only computed when a robot needs to
entscenariosandthepathsplannedwiththisassump-
go and wait there, with Layout 0, Algorithm 1 fails
tionusing4robots. Allofthemresultedinacollision
to find a feasible solution in 18 instances out of 100
within5minutes,halfofthemfailedwithin1minute,
for 2 robots, for 48 instances for 3 robots and for 62
somewithinthefirst10seconds. Duetotheincreased
instancesfor4robots. Asforsequentialplanning,the
needforreplanningandnosignificantspeed-upbenefit,
increaseofthenumberoffailureswiththenumberof
it is clear that dynamics should be considered in the
robotsisexpected. Althoughtherobotsdonotalways
planningprocess.
needtousethewaitingpaths,reservingthemensures
thattherobotscanactuallyleavetheirlastlocation,and
5.1.2 AblationStudy
possiblyuseapartofthereservedpathtoreachtheir
Inthisstudy,weuseasimplelayoutgraphsimilarto nextdestination. Withoutplanningandreservingpaths
theleftlayoutinFig.1,with100nodesand106arcs to the next via point(s), a robot can easily find itself
inthewarehousegraphand596nodesand1908arcs blockedoroverrunbyotherrobotswhocanplantheir
intheroutingmulti-graph. WecallitLayout0. routestakingadvantageofthefirstrobotnotmaking
anyreservationsforitsfuture.
Sequentialplanningvsviapoints. Toevaluatethe
needfortheproposedvia-pointalgorithmVP‚àó inour
ImpactofthepenaltyfunctioninVP‚àó. Asexplained
IPPMAPFsolver,wereplaceitbyamorenaiveapproach
inSection4.5,wechangethestandardheapscoreof
thatsequentiallyplanstheshortestpathsbetweenthe
statesinourVP‚àó algorithmbyaddingtothepath‚Äôsdu-
differentvia-pointspairsofatask,whileavoidingcolli-
rationestimateapenaltybasedonthenumberofvia
sions. Forthissequentialapproach,whencomputinga
pointsthathavenotbeenvisitedyet. Inourimplemen-
pathbetweentwoviapoints,theheapscorecontains
tation,thispenaltyissimplythenumberofremaining
onlyanoptimisticestimateoftheshortestpathdura-
viapointsminus1times1000seconds.
tiontothesecondviapoint,asintheA*algorithm. We
tested the resulting IPP with sequential planning on Table1showsthatthisadditionisfulfillingitsobjective:
Layout0,using100scenariosand2to4robots. Itfails thenumberofstatesvisitedissignificantlyreducedand
to find a feasible solution for 3 instances out of 100 the algorithm run time decreases accordingly, while
with 2 robots, for 6/100 instances with 3 robots and the impact on the plan quality is very low. The run
for 11/100 instances with 4 robots. The increase in time of the plans is improved by a median factor of
thenumberoffailureswiththenumberofrobotsisex- 3.2(minimumis0.73,maximumis25.39onoursetof
pectedasmorerobotsinthetightenvironmentmeans instances).
moreconstraintsoncollisionavoidance. Thisconfirms
thenecessityofourvia-pointplanningstrategy. 5.2. Impact of the Layout
Inourconstrainedenvironmentwhererobotscannot
Withoutreservingapathtothewaitingplace. An- turntoreversetheirorientationorpassanotherrobot,
other important factor ensuring completeness is the thelayoutmayimpacttheefficiencyoftheplanning. To
reservationofpathstothewaitingplacesoftherobots measurehowitinfluencesthedifferentmetrics,werun
in the reservation table. If those paths are no longer experimentson3differentlayoutsofapproximatelythe
10Multi-AgentPathFindingwithRealRobotDynamicsandInterdependentTasksforAutomatedWarehouses
2robots 3robots 4robots 2robots 3robots 4robots
Layout 1 2 3 1 2 3 1 2 3 Œî(s) 0 2 4 0 2 4 0 2 4
Make- Q1 23 22 23 19 17 19 16 16 16 Timeto Q1 3 5 6 2 3 5 2 3 4
span Q2 28 29 30 21 21 22 19 19 19 failure Q2 6 7 9 3 5 7 2 4 6
(min) Q3 32 32 33 25 24 25 23 23 24 (min) Q3 10 10 14 4 8 9 3 5 8
Q1 4.2 3.1 2.9 7.6 6.4 6.1 10.7 8.2 7.4 Make- Q1 18 19 19 15 15 15 13 13 13
Regret
Q2 5.7 5.0 4.0 9.9 7.7 7.6 12.5 10.1 9.3 span Q2 22 22 22 17 17 18 15 15 15
(%)
Q3 8.1 6.3 5.5 13.8 9.9 9.1 15.4 12.1 10.8 (min) Q3 25 25 26 19 20 20 17 18 17
Run Q1 51 54 25 154 129 165 596 534 524 Q1 9 13 18 38 67 106 90 173 314
Run
time Q2 101 95 76 326 343 403 1163 1051 1264 Q2 17 26 38 75 140 228 137 366 592
time(s)
(s) Q3 249 250 257 815 742 799 1679 1876 2226 Q3 39 56 85 122 226 367 289 791 1330
Table2: Quartilesofthemakespan(inminutes),regret Table 3: Quartiles of time to collision when applying
(inpercent)andruntime(inseconds)oftheIPPalgo- theplansinastochasticenvironment,makespanofthe
rithmforLayouts1,2and3. plansandruntimeoftheIPP.
samesize(220to232nodesand226to248arcsinthe Makespan Regret Runtime
warehousegraph),withthesamenumberofpickupand Q1 38min 9.9% 1266s
deliverylocationsbutdifferentnumberofcorridorsthat Q2 45min 11.2% 2377s
arerepresentedonFig.1. Layout1,ontheleft,isthe Q3 50min 12.7% 4939s
moreconstrainedenvironment,wherelongaislesdonot
Table4: Quartilesofmakespan(inminutes),regret(in
offeranypossibilityfortworobotstopasswhileLayout
percent)andruntime(inseconds)oftheIPPalgorithm
3(ontherightside)hastwointermediatecorridorsthat
for10robotsintheLayout4.
allowsfortherobotstoavoidoneanothermoreeasily
whenmovinginoppositedirections. Thetotalnumber
ofshelfnodesinthewarehousegraphis180forthe3
graphs. Forthisexperiment,weuse50scenarioswhere planscomputedinLayout0withdifferentvaluesofŒî
thepositionsofthepickupsanddrop-offsattheshelves in a stochastic environment where edge travel times
areidentical(ifcorridorssplittingtheshelvesarenot arescaledbyafactorthatisPERT-distributedwiththe
taken into account) on the 3 layouts. Table 2 shows support of [1.0, 1.1] and with mode at 1.01. For all
that the layout does not impact much the makespan. numbersofrobots,addingmoretimemargininplan-
Tostudytheimpactonindividualorders,ratherthan ningincreasesthetimetocollision(seeTable3). Unlike
maximum completion time, we add a regret metric makespanthatislargelyunaffectedbythedifferentlev-
measuringthedifferencebetweentheactualprocessing elsofmargin,theplanningtimeclearlyincreaseswith
time of the tasks and the estimated processing time biggermargins. Thesupplementarymaterialcontains
computedwithoutcollision. Itmeasureshowmuchthe avideofeaturing3stimemarginsforfourrobots.
robotsneedtodivergefromanidealpathinorderto
avoid one another. The layouts that allow for easier 5.4. Scaling to larger instances
collisionavoidancehavereducedregretforallnumber Inthissection,weevaluatetheperformanceofthealgo-
ofrobots,Layout3improvingonLayout2andLayout rithmonlargerinstanceswith10robots. Weconsider
2 improving on Layout 1. As for the run time, it is thefollowingsetup(Layout4): a3-rowslayout(similar
muchmoreimpactedbythenumberofrobotsthanby to Fig. 1 right) with 10 shelves instead of 5, 5 work-
thelayout,whichisexpectedasthegraphshavevery stationsinsteadof2and10waitingplaces. Wesolve
similarsizes. 100instancesof10orderseachfor10robots. Having
5.3. Dealing with Uncertainty
twicethenumberofshelvesofLayout3,thegraphis
With a large robot, actuation noise is likely to make abouttwiceasbig,thenumberofrobotsismorethan
themovementdifferfromtheidealtrajectory. Thismay doubledandthenumberofticketsisdoubledaswell
leadtocollisionsespeciallyiftheactualmovementis ineachinstancecomparedtopreviousexperiments.
often slower or faster than the ideal movement. To
TheresultsaresummarizedinTable4. Comparedwith
reduce the problem created by such noise, we study
the results for 4 robots, we observe that the median
the efficiency of reserving neighboring time intervals
regretisonlyslightlyincreased(from9.3to11.2per-
aroundtheactualtimeforeachpositionoftherobots
cent)andthemedianrunningtimeislessthandoubled,
inthereservationtable. Whenwereserveanareafor
whichshowsareasonablesub-linearscalabilityofour
therobotforagiveninstantùúè,wealsoreserveitforŒî
approachforlargerinstances.
secondsbeforeandafterùúè. Wetesttherobustnessof
11Multi-AgentPathFindingwithRealRobotDynamicsandInterdependentTasksforAutomatedWarehouses
5.5. In Real Environment mentofanautomatedwarehouse,deviationfromthe
Tovalidatetheproposedalgorithminrealisticuse-cases, planisunavoidable,andtheintroducedtimemargins
we performed two experiments in a real warehouse maynotbesufficienttodealwithunexpecteddelays.
environment whose layout is similar to the left-most Hence,afutureworkincludestheabilitytoreplanreg-
layoutinFig.1. Itsroutinggraphhas668nodesand ularly based on the latest information, which would
2103edges. Eachexperimentinvolvedtworobots. requirespeeding-upourplanningalgorithm. Finally,it
wouldbeinterestingtoconsiderthejointoptimization
Thefirstexperimentwasconductedwithmaximumlin-
ofthetaskassignmentandtrajectoryplanning,extend-
earspeedandmaximumangularspeedof0.2m/sand
ingideasfrompreviousliterature[1,19]toourmore
0.2rad/s,andconstant(ac/de)celerationsof0.25[m/s2;
challengingsetting.
rad/s2]forloadedandunloadedrobots. Itinvolved4
pickupsand4drop-offsover10minutes. Fromtheex-
periment,anotablediscrepancywasobservedbetween
theplanandtherealtrajectories. Discrepancieswere
mainlyinfluencedbythestochasticityintheduration
that the robots spent picking up or dropping off an
object.
Forthesecondexperiment,theestimatedpickupand
drop-off times were increased by a constant. The
robotmotionlimitswereincreasedto0.8m/sforlinear
speed and 0.8rad/s for angular speed, with constant
(ac/de)celerationsof0.45[m/s2;rad/s2]. Thetotalset
of tasks involved 10 pickups and 10 drop-offs, which
wereperformedcontinuouslyover13minutes. Inthe
secondexperiment,therealrobottrajectoriesshowed
significantlyreduceddiscrepancyfromtheplanscom-
paredtothefirstexperiment. Thesupplementarymate-
rialcontainsvideosofthetwoexperiments,wherewe
displaythetherealtrajectorydata(darkcolor)aswell
astheplannedtrajectory(lightercolor)ofeachrobot.
6. Conclusion and Future Work
Inthispaper,westudyalifelongMAPFproblemwith
interdependenttasks,tomodelarealisticonlinemulti-
robotpickupanddeliveryserviceinawarehouse. We
proposetheInterleavedPrioritizedPlanningwithVP‚àó
algorithmthattakesintoaccountpreciserobotdynam-
icstocomputecollision-freetrajectories. Weshowthe
completenessofIPP-VP‚àó undersimpleassumptionsand
empirically evaluate its feasibility. In particular, we
compareittoanadaptationofexistingmethodsthat
do not account for the dynamics and show that they
failtoprovidefeasibleplansinourcontext. Weconduct
apreciseablationstudytodemonstratethenecessity
of the different components of our approach. Finally,
wesuccessfullyapplyIPP-VP‚àó toasimplescenarioina
realwarehouse. Webelievethatourapproachmakes
animportantsteptowardbridgingthegapbetweenthe
extensiveliteratureonMAPFwithsimplifyingassump-
tionsandmorecomplexreal-lifescenarios.
Therealwarehouseexperimentsrevealthatdespitethe
highfidelityofourrobotsandthecontrolledenviron-
12Multi-AgentPathFindingwithRealRobotDynamicsandInterdependentTasksforAutomatedWarehouses
References Multi-Agent Path Finding with Kinematic Con-
[1] ZainAlabedeenAliandKonstantinYakovlev. Im- straints. ProceedingsoftheInternationalConfer-
provedAnonymousMulti-AgentPathFindingAl- enceonAutomatedPlanningandScheduling,26:
gorithm. Proceedings of the AAAI Conference on 477‚Äì485,2016. 2
ArtificialIntelligence,38(16):17291‚Äì17298,2024. [12] Wolfgang H√∂nig, Scott Kiesel, Andrew Tinka,
12 Joseph W. Durham, and Nora Ayanian. Persis-
[2] Stefano Ardizzoni, Luca Consolini, Mattia Lau- tentandRobustExecutionofMAPFSchedulesin
rini,andMarcoLocatelli. SolutionAlgorithmsfor Warehouses.IEEERoboticsandAutomationLetters,
theBoundedAccelerationShortestPathProblem. 4(2):1125‚Äì1131,2019. 2
IEEE Transactions on Automatic Control, 68(3): [13] JiaoyangLi,PavelSurynek,ArielFelner,HangMa,
1910‚Äì1917,2023. 2,6 T.K.SatishKumar,andSvenKoenig. Multi-Agent
[3] DorAtzmon,RoniStern,ArielFelner,GlennWag- PathFindingforLargeAgents. Proceedingsofthe
ner, Roman Bartak, and Neng-Fa Zhou. Robust AAAIConferenceonArtificialIntelligence,33(01):
Multi-AgentPathFinding. ProceedingsoftheIn- 7627‚Äì7634,2019. 2
ternationalSymposiumonCombinatorialSearch, [14] JiaoyangLi,KexuanSun,HangMa,ArielFelner,
9(1):2‚Äì9,2018. 2 T.K.Kumar,andSvenKoenig. MovingAgentsin
[4] FrancescoBorrelli,AlbertoBemporad,andMan- FormationinCongestedEnvironments. Proceed-
fredMorari. PredictiveControlforLinearandHy- ingsoftheInternationalSymposiumonCombina-
bridSystems. HigherEducationfromCambridge torialSearch,11(1):131‚Äì132,2020. 1
UniversityPress,2017. 3 [15] Jiaoyang Li, Andrew Tinka, Scott Kiesel,
[5] K.DresnerandP.Stone. AMultiagentApproach Joseph W. Durham, T. K. Satish Kumar, and
toAutonomousIntersectionManagement. Jour- Sven Koenig. Lifelong Multi-Agent Path Find-
nalofArtificialIntelligenceResearch,31:591‚Äì656, ing in Large-Scale Warehouses. In Proceedings
2008. 1 oftheAAAIConferenceonArtificialIntelligence,35,
[6] Ariel Felner, Roni Stern, Solomon Shimony, Eli pages11272‚Äì11281,2021. 1,2,7,8
Boyarski,MeirGoldenberg,GuniSharon,Nathan [16] JiaoyangLi,TheAnhHoang,EugeneLin,HaiL.
Sturtevant, Glenn Wagner, and Pavel Surynek. Vu,andSvenKoenig. IntersectionCoordination
Search-BasedOptimalSolversfortheMulti-Agent with Priority-Based Search for Autonomous Ve-
PathfindingProblem: SummaryandChallenges. hicles. ProceedingsoftheAAAIConferenceonAr-
Proceedings of the International Symposium on tificialIntelligence,37(10):11578‚Äì11585,2023.
CombinatorialSearch,8(1):29‚Äì37,2017. 2 1
[7] S. Gottschalk and M. Lin. Collision Detection [17] Hang Ma, Jiaoyang Li, T. K. Satish Kumar, and
betweenGeometricModels: ASurvey. InProceed- SvenKoenig. LifelongMulti-AgentPathFinding
ingsofIMAconferenceonmathematicsofsurfaces, for Online Pickup and Delivery Tasks. In Pro-
1998. 6 ceedings of the 16th Conference on Autonomous
[8] Peter E. Hart, Nils J. Nilsson, and Bertram AgentsandMultiAgentSystems,AAMAS‚Äô17,page
Raphael.AFormalBasisfortheHeuristicDetermi- 837‚Äì845,Richland,SC,2017.InternationalFoun-
nationofMinimumCostPaths. IEEETransactions dation for Autonomous Agents and Multiagent
onSystemsScienceandCybernetics,4(2):100‚Äì107, Systems. 2
1968. 2 [18] Hang Ma, Wolfgang H√∂nig, T. K. Satish Kumar,
[9] R.Haupt. Asurveyofpriorityrule-basedschedul- Nora Ayanian, and Sven Koenig. Lifelong Path
ing. Operations-Research-Spektrum,11(1):3‚Äì16, Planning with Kinematic Constraints for Multi-
1989. 4 AgentPickupandDelivery. InProceedingsofthe
[10] Florence Ho, Ana Salta, Ruben Geraldes, Artur Thirty-ThirdAAAIConferenceonArtificialIntelli-
Goncalves,MarcCavazza,andHelmutPrendinger. gence and Thirty-First Innovative Applications of
Multi-AgentPathFindingforUAVTrafficManage- Artificial Intelligence Conference and Ninth AAAI
ment. In Proceedings of the 18th International SymposiumonEducationalAdvancesinArtificial
ConferenceonAutonomousAgentsandMultiAgent Intelligence.AAAIPress,2019. 2,10
Systems,pages131‚Äì139,Richland,SC,2019.In- [19] Keisuke Okumura and Xavier D√©fago. Solving
ternational Foundation for Autonomous Agents simultaneous target assignment and path plan-
andMultiagentSystems. 1 ningefficientlywithtime-independentexecution.
[11] WolfgangHoenig,T.K.Kumar,LironCohen,Hang ArtificialIntelligence,321:103946,2023. 12
Ma, Hong Xu, Nora Ayanian, and Sven Koenig. [20] DavidSilver.CooperativePathfinding.Proceedings
13Multi-AgentPathFindingwithRealRobotDynamicsandInterdependentTasksforAutomatedWarehouses
oftheAAAIConferenceonArtificialIntelligenceand
InteractiveDigitalEntertainment,1(1):117‚Äì122,
2005. 1,2,4
[21] Trevor Standley. Finding Optimal Solutions to
CooperativePathfindingProblems. Proceedingsof
theAAAIConferenceon Artificial Intelligence, 24
(1):173‚Äì178,2010. 2
[22] RoniStern,NathanSturtevant,ArielFelner,Sven
Koenig, Hang Ma, Thayne Walker, Jiaoyang Li,
Dor Atzmon, Liron Cohen, T. Kumar, Roman
Bart√°k,andEliBoyarski.Multi-AgentPathfinding:
Definitions,Variants,andBenchmarks. Proceed-
ingsoftheInternationalSymposiumonCombina-
torialSearch,10:151‚Äì158,2021. 1,2,6
[23] Sumanth Varambally, Jiaoyang Li, and Sven
Koenig. WhichMAPFModelWorksBestforAu-
tomatedWarehousing? ProceedingsoftheInter-
nationalSymposiumonCombinatorialSearch,15
(1):190‚Äì198,2022. 2
[24] PeterR.Wurman,RaffaelloD‚ÄôAndrea,andMick
Mountz. CoordinatingHundredsofCooperative,
AutonomousVehiclesinWarehouses.AIMagazine,
29(1):9‚Äì9,2008. 1,2
[25] JingjinYuandStevenM.LaValle. PlanningOp-
timal Paths for Multiple Robots on Graphs. In
Proceedings-2013IEEEInternationalConference
on Robotics and Automation, pages 3612‚Äì3617,
2012. 1
[26] YueZhang,DanielHarabor,PierreLeBodic,and
PeterJ.Stuckey. EfficientMultiAgentPathFind-
ing with Turn Actions. Proceedings of the Inter-
nationalSymposiumonCombinatorialSearch,16
(1):119‚Äì127,2023. 2
14Multi-AgentPathFindingwithRealRobotDynamicsandInterdependentTasksforAutomatedWarehouses
Appendix 2robots 3robots 4robots
Criteria 2 1 2 1 2 1
Implementing move time as a secondary crite-
Visited Q1 3 5 7 21 12 46
rion
states Q2 5 10 12 75 18 74
Toimplementtimediscretization,weneedtodefinethe (√ó103) Q3 7 22 16 122 28 130
equivalencebetweentwosolutionsintermsofarrival
Run Q1 4 9 11 38 27 90
time. Forthis,weproposetosplitthetimehorizonin
time Q2 7 17 18 75 47 137
consecutiveintervalsofidenticallengthandconsider
(s) Q3 10 39 24 122 79 289
twovalueslyinginthesameintervalasequivalent. In
Make- Q1 19 18 15 15 13 13
ourimplementationeachintervalistwosecondslong.
span Q2 22 22 18 17 15 15
Given this definition, we modify the VP* algorithm (min) Q3 26 25 19 19 17 15
as follows. First, we add move time to the weights
Table5: Quartilesofnumberofstatesvisited,run-time
ofthedifferentgrapharcsoftheroutinggraph. This
andmakespanwhenusingmovingtimeasasecondary
allows for fast computation of the total move time of
criterionvs. pathtimeminimizationonly
partialsolutionsbyupdatingitincrementallyasisdone
for the arrival time. The total move time is stored in
2robots 3robots 4robots
queueelementsandisusedtocompareatentativenew
Layout 1 2 3 1 2 3 1 2 3
element to all the elements previously added to the
Make- Q1 23 23 24 18 18 19 16 15 16
queue. Insteadofcheckingifithasalreadybeenadded
span Q2 29 29 29 22 22 22 19 19 19
in the queue with the exact same values, we check, (min) Q3 32 32 34 25 24 24 23 22 23
whenallothervaluesareequivalent,ifanelementwith Q1 3.9 3.0 2.9 7.0 5.6 5.5 10.7 8.3 7.6
Regret
lowerorequalmovetimehasalreadybeenaddedtothe Q2 5.9 4.5 3.8 10.0 7.7 7.1 13.3 10.8 9.5
(%)
Q3 8.2 6.1 5.1 12.5 9.6 8.6 15.1 12.8 11.2
queue. Whenatdestination,weupdatetheminimum
Run Q1 23 18 16 68 51 56 127 131 149
arrivaltimeandtheminimummovetimeifthecurrent
time Q2 51 37 38 120 107 112 216 223 242
solutionisbetterthanthecurrentbestpathintermsof
(s) Q3 76 67 68 207 165 193 322 343 379
arrivaltimeorifitisequivalentandbetterintermsof
movetime. Forpruning,whencheckingifcurrentheap Table6: Quartilesofthemakespan(inminutes),regret
elementcanimproveoncurrentbestpath,weensure (inpercent)andruntime(inseconds)oftheIPPalgo-
thatthearrivaltimeisloweror,ifthearrivaltimesare rithmforLayouts1,2and3.
equivalent,thattotalmovetimeislower.
out0,wehavelowerrunningtimesandsimilarregret
Experiments with move time as a secondary
andmakespanmetrics,whichconfirmssimilarscalabil-
criterion
ityforthetwo-criteriaimplementation.
Toassesstheimpactofusingdiscretizedarrivaltime
combined to move time as a secondary criterion, we
redosomeoftheexperimentsofSection5inthissetting.
Table5comparesthenumberofstates,runningtime
and makespan between the previous mono-criterion
implementationandtheonewithmovetimeasasec-
ondarycriteriononLayout0.
Duetothediscretization,thenumberofstatesvisited
isreducedinthetwo-criteriaimplementation,which
reducestherunningtimeofthealgorithm. Asforthe
makespan, we can see that it is hardly impacted. Of
course, having different paths implies different solu-
tionsattheleveloftheprioritizedplanningalgorithm
whichcomputespathsrepeatedly. However,inourex-
periments, those solutions remain close in terms of
makespan.
Table 6 shows the same results as for Table 2 for the
largergraphsofFigure1. Wecanseethat,asforLay-
15