Different Facets for Different Experts: A
Framework for Streamlining The Integration of
Qualitative Insights into ABM Development⋆
Vivek Nallur[0000−0003−0447−4150], Pedram Aghaei[0009−0008−6316−5335], and
Graham Finlay[0000−0002−4798−2393]
University College Dublin, Dublin, Ireland
{vivek.nallur, pedram.aghaei, graham.finlay}@ucd.ie
Abstract. Akeyprobleminagent-basedsimulationisthatintegrating
qualitativeinsightsfrommultipledisciplineexpertsisextremelyhard.In
most simulations, agent capabilities and corresponding behaviour needs
to be programmed into the agent. We report on the architecture of a
tool that disconnects the programmed functions of the agent, from the
acquisition of capability and displayed behaviour. This allows multiple
different domain experts to represent qualitative insights, without the
need for code to be changed. It also allows a continuous integration (or
even change) of qualitative behaviour processes, as more insights are
gained. The consequent behaviour observed in the model is both, more
faithful to the expert’s insight as well as able to be contrasted against
other models representing other insights.
Keywords: BehaviourGraph·QualitativeExperts·DomainExpertise.
1 Introduction
The ideal that agent-based modelling (ABM) strives to achieve, in many cases,
is a true representation of the ‘society-of-agents’ under study, so that we may
gain insight into (or even generate) surprising interactions, emergent behaviour,
and some level of explainability in an otherwise complex scenario. This promise
has led ABM to be used in many and varied domains, e.g., GIS and socio-
ecological modelling [4][3], migration networks [16][7], epidemiological and crisis
simulation[13][8],computergames[9],pedestriandynamics [1][6],self-adaptive
software [11][17], modelling emergence[12], emotion modelling [5][10].
For any domain that relies on the agents in the ABM to exhibit realistic
behaviour for making predictions (or explanations) about the agents themselves
(as opposed to, say, flocking models that seek to explain emergent behaviour),
the trueness of representation is extremely critical. However, making true rep-
resentations of human beings requires expertise from multiple fields, cognitive
science, sociology, psychology, etc. Unfortunately, agent-based modelling mech-
anisms are rarely built to accommodate multiple different experts. To add an
⋆ Supported by the Irish Research Council via Grant COALESCE/2021/42 V. Nallur et al.
additional wrinkle, the output of the model sometimes needs to be interpreted
or evaluated by a completely different expert. This is especially true in the field
of social simulation, where the human needs to be modelled by (say) sociol-
ogists, or transportation experts or health experts, while experimental output
needs to be ingested by policy experts. However, this process of ‘bringing to-
gether’ of multiple research methods (often called "mixed methods") can be an
involvedendeavour,withdifferentdisciplinescontributingdifferentproblemper-
ceptions.TheprogrammerinvolvedincreatingtheABMeitherneedstoacquire
expertise in multiple domains, or seeking advice from multiple experts during
the lifecycle of the ABM development and usage. A common obstacle faced by
agent-modellers is that many aspects of the subject being modelled are often
described qualitatively. Depending on the discipline, the translation of qualita-
tive concepts into model parameters or rules may be extremely difficult. Even
if somehow translated, there could be loss of nuance due to simplifying assump-
tions that fail to fully capture the richness and complexity of the subject under
study.Thisisdisheartening,sincecapturingthesenuancesinsimulationareone
of the key purported advantages of agent-based modelling.
This paper reports on an attempt to allow different experts to influence and
use the ABM, without the programmer intervening. Specifically, we present the
architecture of an ABM that looks at economic migrants into Ireland, and al-
lowsethnographerstousetheirqualitativeknowledgeinshapinghowtheagents
(migrants) behave in the model, and also allows policy experts to compare and
contrast multiple policy interventions side by side, without being aware of the
programmerortheethnographer.Afollow-onadvantageofthisdisconnectisthat
this architecture allows qualitative insights to evolve as more data or more ex-
pertsbecomeavailable.Note,wedonottalkaboutthespecificusecase(economic
migration),apartfromitsuseasexemplarsforvariouspartsofthearchitecture.
In the sections that follow, we first (very briefly) describe the problem of
integrating qualitative insights, describe the architecture, and the process by
which different experts can influence the model. Finally, we describe how do-
main experts can add nuanced behavioural rules for sidestepping or reinforcing
behaviour that has been ‘coded-in’ by the programmer.
2 Integrating Qualitative Information Into ABMs
There are many problems that render adding qualitative information as a first-
classknowledgesourceinagent-basedmodelling,difficultifnotimpossible.Here,
we provide a (very) brief listing of these problems.
2.1 Common Problems
– Translating Qualitative Concepts into Quantifiable Model Param-
eters and Rules: Qualitative concepts are often context-dependent and
therefore challenging to be summarized in variables. Increasing the number
of variables often makes the model confusing, while decreasing the number
of variables can make it too simplistic.Title Suppressed Due to Excessive Length 3
– Loss of Nuance during Translation: Existing data may not be directly
applicable to the specific context of the model; converting concepts into
variables may require transformations that result in a loss of information.
– Subjectivity and Interpretation: Almost by definition, there are a mul-
tiplicity of cognitive biases and social influences that impact agent decision-
making. Distilling these into rules requires making a decision on which per-
spective to prioritize and which ones to ignore. Once codified, these are
implicitly present in all simulation runs.
– Lack of Validation Data: When dealing with social, psychological, or
otherprocessesthatarenotfullycapturedbydata,itisdifficulttocalibrate
models to ensure that they reflect reality
– Overfitting Risk: In the presence of uncertainty and incomplete informa-
tion, there is a temptation to lean towards completeness in datasets which
may induce the risk of overfitting to a specific set of data points.
– Disconnect from Empirical Evidence: Qualitative data alone does not
provide information about the relative importance, frequency, or impact of
different factors. This can make calibration difficult.
– Moving Target: Qualitative insights evolve as new information appears
and the society-under-study also reacts to the world around it. At best, this
may require certain concepts/variables to be updated, and at worst it may
require the model to be completely re-built. We focus on this issue in the
current paper.
– Computational Intractability: Depending on the model, certain aspects
of the agent may be critical (e.g.,emotion) to a high-fidelity simulation, but
these may be computationally intractable to model
2.2 Typical Integration Approaches
Depending on the problem, the community has evolved several techniques that
allow multiple domain experts to help the developer create a richer agent-based
model. Some of these techniques (barbarically summarized for conciseness) are:
– Participatory Modelling [18]: Involving stakeholders, domain experts,
and end-users in the model development process to incorporate their knowl-
edge and perspectives. Using techniques like focus groups, interviews, and
workshops to elicit qualitative data and translate it into model inputs and
assumptions. Hopefully, these result in nuance being captured.
– Qualitative Data Analysis [14][15]: Qualitative data, such as interview
transcripts, field notes, and documents, can be analyzed using techniques
like thematic analysis or grounded theory to identify key concepts, relation-
ships, and patterns. These insights can then inform the agent-based model
development. This technique attempts to account for subjectivity.
– Narrative-BasedModelling[2]:Incorporatingqualitativenarratives,sto-
ries, and case studies into the agent-based model development process.4 V. Nallur et al.
– Hybrid Modelling [19]:Combiningagent-basedmodelswithothermodel-
ing techniques like system dynamics, discrete event simulation, or equation-
basedmodelstoleveragethestrengthsofdifferentmodelingparadigms.Inte-
gratingqualitativedataandexpertknowledgeintothedesignandparameter-
izationoftheagent-basedmodel,attemptstoaddresstheproblemofadding
qualitative insights along with the problem of computational tractability.
2.3 Separated Experts
A common theme to note among the approaches listed earlier, is that they re-
quire multiple experts to come together, and achieve a common understanding
oftheagent-basedmodelbeingbuilt.Thisisagoodthing,astheinvolvementof
multiplestakeholdersandperspectives,notonlybringsrichnesstothemodelbut
canalsoincreasethebeliefintheutility(andacceptance)oftheABM.Unfortu-
nately, this idealized confluence of experts does not always occur. This could be
due to multiple reasons. It could be infeasible (financially or schedule-wise) to
bring stakeholders from different geographical locations to a single place. There
may be organizational constraints which preclude such teaming up. Yet another
obstacle is temporal distance. As the real world changes with time, the qual-
itative insights applicable to the model will change as well. An ethnographer
may want to include the latest insights into the simulation run. The end-user
of the ABM, perhaps a policy-maker, might want to try out different interven-
tions depending on various options available at the time. This kink-in-time is a
characteristic of ABM creation and usage in many domains. It is this particu-
lar problem of Moving Target, that we attempt to address via our facet-based
architecture and BehaviourFlow.
3 Architecture
Thearchitectureisdesignedinordertoallowdifferentrolestoparticipateinthe
ABMcreation,modificationandusageatdifferenttimes.Thatis,differentroles
have the ability to influence different aspects of the ABM without necessarily
needing the ABM developer to give effect to this influence. In the pursuit of
this role separation, we propose a facet-framework that enables the dynamic
restructuringofdistinctaspectsofthemodel.Although,theconceptsweoutline
would work for any agent-based model, the examples we use henceforth in this
paper are derived from our own economic migration model.
3.1 Facets (Role: ABM Programmer)
The programmer first creates a Model (This is the way that most ABM pro-
grammingtools,suchasNetLogoorJasonorMesa,function).This‘basemodel’
can be run as-is. However, the programmer is able to create facets. A facet
introduces a novel set of features or behavioural characteristics to the model.
This can be in the form of additional state variables, additional behaviours orTitle Suppressed Due to Excessive Length 5
evenadditionalagenttypes.Thisarrangementofagentcapabilities(ordecision-
making, or communication, or types — whatever the facet is used for) differs
fromatypical‘layering’mechanisminABMs.Layerstypicallyaddfunctionality
but are all ‘baked in’ during the development process. Facets are available to be
included/excluded by a different expert, even after model development is com-
plete,orevendeployed.Facetsaretypicallyindependentdomainsofaction,that
maysignificantlyaffectagent-behaviour.Thatis,anexpertonthehousingmar-
ket could create a real-estate market facet to reflect their insights of how house
availabilitychangeswithrespecttosummertouristdemand,oranethnographer
couldusethejob-seekingfacettocreateafunctionalityspecificallyforeconomic
migrants from South Asia or Africa. As seen in Figure 1, the Base Model (de-
notedwithacontinuousline),isaugmentedwithaMigrantFacet(denotedbya
dashed line). This adds a new AgentType, additional state variables, as well as
behaviour. The AdministrationProcessFacet does not add a new AgentType,
but only adds state variables and new behaviour. The JobMarketFacet adds an
interactionbetweentwoAgentTypes,EmployerAgentandMigrantAgent.These
are combined into a Composite Model, which can then be added to a simula-
tion run. Depending on user needs, some facets may not be needed at all for a
particular run. The facet-based mechanism allows different combinations to be
chosen to compare-and-contrast.
Fig.1. How new facets restructure the model6 V. Nallur et al.
3.2 BehaviourFlow (Role: Domain Expert)
Thecreationofabehaviourflowaffectshowtheagentsinteractduringasimula-
tionrun.ABehaviourFlowishowdomainexpertscaninsertqualitativeinsights
into agent behaviour. Each AgentType must have a BehaviourFlow. By default,
all functions (behaviours) available in an AgentType are available to create a
BehaviourFlow. To allow a non-programmer domain expert to design an Be-
haviourFlow, each function is created as a node in a graph file. This can be
manipulated visually, using drag-and-drop editors (such as yED) to create links
between the various nodes. The most basic BehaviourFlow would simply link
one node to another in a sequence, as seen in Figure 2. This sequential exe-
cution would reflect the mechanisms that are typically available in NetLogo or
Mesa, where an agent executes behaviour in a step-by-step manner. However,
theintentionofBehaviourFlowistoallowthedomainexperttovisuallyexpress
decision-makingbyagents(orsubsetsofagents),takingtheirparticularcontexts
into account. This decision-making is explained in more detail in Section 4
Fig.2. A sample BehaviourFlow for a MigrantAgent procuring documents, with the
sequence showing the dependency between documents
3.3 Policy (Role: Policy Maker / End-User)
During deployment, when the programmer and domain experts are no longer
available, it may be desirable for a policy maker to run experiments with differ-
ent intervention options, i.e., ask counterfactual questions — if a certain con-
dition were changed, what would happen to the simulation’s end result? UnlikeTitle Suppressed Due to Excessive Length 7
typicalmodelparameters,whichhavetobeconceivedofinadvance,policiesare
alterations/interventions that can be conceived of by the End-User. For exam-
ple, in our particular use case, a policy maker could decide to investigate the
difference in outcomes if female migrants from a particular region are provided
withfreepublictransportvis-a-vis migrantsfromeconomicallydepressedregions
provided with subsidized medical insurance. As can immediately be surmised,
a policy could be highly arbitrary depending on the options available to the
policy-maker. Figure 3 shows the web-based interface for creating policies. This
particularfigureshowsthecreationofapolicythatimpactslow-incomefamilies
byprovidingthemwithasubsidyontheircostofmedicalinsurance.ThePolicy
Maker is able to create multiple policies and apply them in any combination, as
a part of Scenario Design.
Fig.3. Creating new policy by defining conditions and actions
3.4 Scenario Design (Role: End-User)
As seen in Figure 4, a simulation run consists of a Scenario, that may consist
of multiple combinations of Facets, BehaviourFlows, and Policies. These combi-
nations, along with globally affecting variables such as number of iterations,
data collection intervals,UI parameters,etc.aregroupedintoaScenario.
AScenariocansaved,alongwithitsresults,soastoenableacomparativere-run.
This can be useful if external datasets that feed into a particular AgentType’s
variablesorbehaviour(e.g.,availabilityofrentalsaffectingaHousingAgent)are
refreshed, and more current information becomes available.
Current Implementation
Our proposed framework is built using Python programming language that en-
ablesustoexploitthepopularityandversatilityofPythonanditsrichpackages.8 V. Nallur et al.
Fig.4. Components of the Facet Framework
The ABM implementation is built on top of the Mesa and Mesa-Geo packages1.
So, all core components of these packages like the scheduler and data collector
are available in this framework. Facets (created by the programmer) are python
files, and hence require some programming knowledge. The BehaviourFlow is
an XML file that can be visualized using any graph/network diagram editor
(such as the freely available yED2). The Scenario Design which consists of poli-
cies and global variables, is a JSON file, which can be edited using Web-based
UI.TheWeb-basedUIfunctionsasadrop-inreplacementfortheMesavisualisa-
tion server. This tailored user interface enables policymakers to define different
models with various combinations of Facets, Policies and BehaviourFlows and
provides visualisation to compare the results, both using charts and choropleth
maps. The Web-UI is built using DASH Plotly.
4 Domain Expert Influencing Agent Behaviour
Now we present a more in-depth discussion of how BehaviourFlow allows an
expert to express qualitative insights. Each AgentType has a BehaviourFlow,
whichdecideshowinstances(agents)ofthatAgentTypebehave.Ataveryrudi-
mentarylevel,thisissimilartothegofunctioninNetLogoorstepmethodthat
Mesa provides. The difference being that different experts can re-arrange which
aspectsoftheAgentType’sbehaviourareaffectedbywhatconditions.Asanex-
ample, consider a housing expert’s insights into demand for new-build housing
by economic migrants with small families (i.e., no children) vis-a-vis channeling
of financial resources into buying cars by migrants with multiple children. This
ethnographicinsightemerged,inourcase,fromvariousface-to-facesurveyscom-
bined with statistics of car purchase behaviour in certain areas. However, since
these insights change intensity depending on economic region of the country,
they cannot be generalized and ‘coded-in‘. Rather, the particular oddities of
decision-making are expressed inside a BehaviourFlow. The simple sequential
BehaviourFlow with links, as shown in Figure 2 is quite unrealistic to the man-
ner in which agents actually behave. While the technical aspect of ‘performing
1 https://pypi.org/project/Mesa/
2 https://www.yworks.com/products/yed/downloadTitle Suppressed Due to Excessive Length 9
a behaviour’ might remain the same, ethnographers’ insights into how context
is evaluated, whether it rises or drops in priority, what other options are consid-
ered,areallimportant.Werealizedthatevenforrelativelysimplerflowssuchas
deciding when/whether to apply for a new job, or choosing a particular means
oftransporttoreachtheircurrentworkplace,therearenuancesthatcontinually
change as more data is gathered. These nuances in decision-making can be ex-
pressed by the domain experts, by visually modifying the (previously simpler)
BehaviourFlow. Recall that a node in the BehaviourFlow corresponds to a be-
haviour that can be executed. A domain expert is able to set BehaviourTriggers
on each node. A BehaviourTrigger represents a possibility of the agent enacting
the behaviour named by the node. From an implementation perspective, this is
a real number between zero and one.
There are three ways to express how this BehaviourTrigger is calculated:
1. Constant
2. Agent’s State
3. Arbitrary function
The constant is used to express behaviours that would (or should) definitely
occur for all agents, like updating time. A constant value of 1 would result in
the BehaviourTrigger choosing to execute the behaviour in the node, at every
step of the simulation.
Insomecases,anagentwouldonlyexecuteabehaviourdependingonitsownin-
ternalstate.Forexample,agentsthatareclassifiedasrequired-to-submit-biometrics
would execute behaviours that result in seeking an appointment, and then at-
tendinganappointment.Inthissituation,theBehaviourTriggerwouldbesetto
the Agent’s internal state (variable).
Themostinterestingcasesoccur,wherethepossibilityofexecutionofbehaviour
would depend on the evaluation of context. Since context can be arbitrary, the
BehaviourTrigger can be set to a function. The function could evaluate multiple
variables, examine the agent’s own internal state, and then result in a proba-
bility, which decides whether a particular agent-behaviour (e.g., eating-out or
save-money is executed).
While the three mechanisms can express different levels of complexity, some-
timesitmightbedesirabletoaddmultiplecriteria.Therefore,aBehaviourTrig-
gercanconsistofoneormoreexpressions,involvingtheabovemechanisms.This
allows different subsets of agents to select different criteria to decide whether a
particular behaviour should be executed or not. Each expression consists of one
ormorecriterion(constant,agent’s internal state,arbitrary function).
If all the criteria of an expression are met, the corresponding value (returned by
thecriteria) isthe value ofthe BehaviourTriggeranddetermineswhether apar-
ticular behaviour is executed. To ensure that the simulation runs consistently, a
BehaviourTrigger can also set a default value, that is used in case none of the
expressions’ criteria are met.10 V. Nallur et al.
Fig.5showsanexampleofaBehaviourTriggercalleddesire-to-apply-new-job
that adjusts the agents’ goal-setting behaviour. In this case, some agents, de-
pending on their visa work category, are not allowed to seek new employment,
unless they have spent a particular amount of time in the country. Whereas
others that are not similarly constrained, have their goal-setting determined by
whether they already are in possession of a job or not. As can be seen from
the figure, the behaviour of goal-setting (and further consequent actions) can
be manipulated by quite complex criteria that may be known to sociologists or
ethnographers or employment-law specialists, but not necessarily the program-
mer.
Fig.5. A trigger function to define the possibility or desire to apply for a new job
4.1 Understanding the BehaviourFlow
For each time step of the model, each agent will begin at the start node of the
BehaviourFlow,andproceedthroughchildnodesuntilitreachesanodewithout
any children, i.e., a leaf node. Traversing from one node, there could be two
conditions. If there is only one child node, the BehaviourTrigger of that node
determineswhethertoexecuteitsbehaviourorskipitandproceedtoitschild.If
therearemultiplechildnodes,theagentchoosesoneusingtournament-selection,
i.e.,theproportionofthetriggersofthechildnodesaretheweightsdetermining
the selection.
This structure allows the implementation of multiple kinds of simulation
models.Forexample,wecouldcreatemodelsthatcontainrulesandconstraints,
entailing certain behaviours as prerequisites for others. For instance, driving aTitle Suppressed Due to Excessive Length 11
carisconditionaluponhavingadrivinglicense.Theremaybeotherprerequisites
forapplyingforadrivinglicense,suchashavingaresidentpermitforforeigners,
or holding a public services card.
Another kind of simulation that can be easily modelled is a needs-based
model,asdescribedin[8],thatmodelspopulation(mis)behaviourduringalock-
down.ThedomainexpertcoulddesigntheBehaviourFlowandsetthetriggersof
nodes to reflect the urgency of each behaviour, based on the perceived cognitive
needs of the agents.
4.2 User Roles and Activities
Fig. 6 shows the workflow that the user would follow to set up a simulation
run. Specifically, the figure shows the three roles, the programmer, the domain
expert, and the policy maker, being able to modify and influence the simula-
tion.Thearrowsshowthepotentialforcollaborativeeffort,wheredifferentroles
can (should) work together to create a richer model. In this particular paper,
due to lack of space, we omit discussion of the process of Policy creation and
manipulation. However, in principle, the process remains largely the same. The
Policy Maker is provided with a Web-based UI that allows them to create pol-
icy interventions at the start of a simulation run, and apply them to particular
Composite Models. The combination of policy interventions, that affect subsets
ofagents,alongwithparticularCompositeModelsaresavedasaScenariosthat
can be recalled for considered evaluations.
Fig.6. A User Workflow12 V. Nallur et al.
4.3 Known Weaknesses
The architecture is flexible enough to accommodate a large range of agent-
behaviour modification, targetted interventions to be created without the need
for a ‘God’s eye view’ from the ABM programmer. However, this flexibility
creates its own weaknesses. For example, allowing the End-User to create Sce-
narios requires them to pick facets they would like to include in their sim-
ulation. The current implementation, however, cannot detect whether a par-
ticular facet has dependencies with other facets. That is, if a complex facet
(say, HousingFacet)requires otherAgentTypessuchas SchoolFacetaswellas
PublicTransportFacet to function properly, they must be chosen by the End-
User. The implementation is unable to warn the End-User of this dependency
automatically.
Currently, the BehaviourFlow can be edited visually only by external editors.
That is, the web application creates a raw BehaviourFlow for each AgentType
and saves it as a standard graph format (GraphML - a specialization of XML).
The domain expert is required utilize third-party software (such as yED - which
is freely available) to drag-and-drop to achieve the correct behaviour required.
These are implementation weaknesses, and not architectural. We could envi-
sion alternative implementations that are able to account for the weaknesses
mentioned above.
5 Conclusion
The most important contribution of this work is the separation-in-time that is
enabled by the Facet framework. Qualitative experts need not be restricted to
explaining finer nuances of their domain to programmers. They are also not
restricted to keeping behaviours static, i.e., the BehaviourFlow graphs can be
createdatanytimeaftertheFacetshavebeencreated,evenduringdeployment.
This flexibility is also available to Policy Makers, who do not need either qual-
itative experts or programmers to experiment with different options for their
simulations. The code for the simulation tool built using this architecture is
available, as open-source3.
Wewishtobeclearthatwedonotclaimthatthisarchitectureremovestheneed
fordifferentstakeholderstotalktoeachother.Thisisnotamethodologicalsub-
stituteforthelargerproblemofintegratingqualitativenuancesintoanABM.In
fact, we think that multi-stakeholder involvement is an important characteristic
and strength of agent-based modelling in social simulations. However, the abil-
ity for some kinds of decision-making and policy interventions to be modelled,
withouttheneedfortheprogrammerbeingdeeplyinvolved,bringsbenefits.The
abilityfordomainexpertstoadd/modifyqualitativeinsightswithoutdepending
3 git-url-blinded-for-anonymizationTitle Suppressed Due to Excessive Length 13
on a programmer, provides agency, and increases stakeholder involvement. In
our particular economic migration modelling usecase, where stakeholders were
distributed in space and time, this ability proved to be quite useful.
References
1. Alqurashi, R., Altman, T.: Multi-class agent-based model of crowd dynamics. In:
2017InternationalConferenceonComputationalScienceandComputationalIntel-
ligence(CSCI).pp.1801–1802.IEEE.https://doi.org/10.1109/CSCI.2017.317,
https://ieeexplore.ieee.org/document/8561082/
2. Elsawah,S.,Guillaume,J.H.,Filatova,T.,Rook,J.,Jakeman,A.J.:Amethodology
foreliciting,representing,andanalysingstakeholderknowledgefordecisionmaking
on complex socio-ecological systems: From cognitive maps to agent-based models.
Journal of environmental management 151, 500–516 (2015)
3. Filatova, T., Verburg, P.H., Parker, D.C., Stannard, C.A.: Spatial agent-based
models for socio-ecological systems: Challenges and prospects 45, 1–7, publisher:
Elsevier
4. Heppenstall, A.J., Crooks, A.T., See, L.M., Batty, M.: Agent-based models of ge-
ographical systems. Springer Science & Business Media
5. Horned, A., Vanhée, L.: Models of anxiety for agent deliberation: The benefits
of anxiety-sensitive agents. In: Proceedings of the 2023 International Conference
on Autonomous Agents and Multiagent Systems. pp. 1761–1767. AAMAS ’23,
International Foundation for Autonomous Agents and Multiagent Systems
6. Karbovskii, V., Voloshin, D., Karsakov, A., Bezgodov, A., Gershenson, C.: Multi-
modelagent-basedsimulationenvironmentformass-gatheringsandpedestriandy-
namics 79, 155–165. https://doi.org/10.1016/j.future.2016.10.002, https:
//linkinghub.elsevier.com/retrieve/pii/S0167739X16303739
7. Klabunde,A.:Computationaleconomicmodelingofmigration.https://doi.org/
10.1093/oxfordhb/9780199844371.013.41, ISBN: 9780199844371
8. Kruelen, K., De Bruin, B., Ghorbani, A., Mellema, R., Kammler, C., Vanhée, L.,
Dignum,V.,Dignum,F.:Howcultureinfluencesthemanagementofapandemic:A
simulation of the COVID-19 crisis 25(3), 6. https://doi.org/10.18564/jasss.
4877, https://www.jasss.org/25/3/6.html
9. Mac Namee, B.: Computer graphics and games, agent based modeling in.
In: Meyers, R.A. (ed.) Computational Complexity, pp. 604–621. Springer
New York. https://doi.org/10.1007/978-1-4614-1800-9_39, http://link.
springer.com/10.1007/978-1-4614-1800-9_39
10. Nallur, V.: Anxiety among migrants - questions for agent simulation. In:
Amigoni, F., Sinha, A. (eds.) Autonomous Agents and Multiagent Sys-
tems. Best and Visionary Papers, vol. 14456, pp. 141–150. Springer Nature
Switzerland. https://doi.org/10.1007/978-3-031-56255-6_8, https://link.
springer.com/10.1007/978-3-031-56255-6_8
11. Nallur, V., Cardozo, N., Clarke, S.: Clonal plasticity: a method for decentral-
ized adaptation in multi-agent systems. In: Proceedings of the 11th Interna-
tional Symposium on Software Engineering for Adaptive and Self-Managing Sys-
tems. pp. 122–128. ACM. https://doi.org/10.1145/2897053.2897067, https:
//dl.acm.org/doi/10.1145/2897053.2897067
12. Nallur, V., O’Toole, E., Cardozo, N., Clarke, S.: Algorithm diversity: A mecha-
nism for distributive justice in a socio-technical mas. In: Proceedings of the 2016
internationalconferenceonautonomousagents&multiagentsystems.pp.420–42814 V. Nallur et al.
13. Roche, B., Drake, J.M., Rohani, P.: An agent-based model to study
the epidemiological and evolutionary dynamics of influenza viruses 12(1),
87. https://doi.org/10.1186/1471-2105-12-87, https://bmcbioinformatics.
biomedcentral.com/articles/10.1186/1471-2105-12-87
14. Schlüter,M.,Baeza,A.,Dressler,G.,Frank,K.,Groeneveld,J.,Jager,W.,Janssen,
M.A.,McAllister,R.R.,Müller,B.,Orach,K.,etal.:Aframeworkformappingand
comparing behavioural theories in models of social-ecological systems. Ecological
economics 131, 21–35 (2017)
15. Schlüter, M., Orach, K., Lindkvist, E., Martin, R., Wijermans, N., Bodin, Ö.,
Boonstra, W.J.: Toward a methodology for explnalluaining and theorizing about
social-ecologicalphenomena.CurrentOpinioninEnvironmentalSustainability39,
44–53 (2019)
16. Smith, C.D.: Modelling migration futures: development and testing of the rain-
falls agent-based migration model – tanzania 6(1), 77–91. https://doi.org/10.
1080/17565529.2013.872593, http://www.tandfonline.com/doi/abs/10.1080/
17565529.2013.872593
17. Song, H., Elgammal, A., Nallur, V., Chauvel, F., Fleurey, F., Clarke, S.: On
architectural diversity of dynamic adaptive systems. In: 2015 IEEE/ACM 37th
IEEEinternationalconferenceonsoftwareengineering.vol.2,pp.595–598.https:
//doi.org/10.1109/ICSE.2015.201, https://doi.org/10.1109/ICSE.2015.201,
tex.organization: IEEE
18. Voinov, A., Kolagani, N., McCall, M.K., Glynn, P.D., Kragt, M.E., Ostermann,
F.O., Pierce, S.A., Ramu, P.: Modelling with stakeholders–next generation. Envi-
ronmental Modelling & Software 77, 196–220 (2016)
19. Wijermans, N., Schill, C., Lindahl, T., Schlüter, M.: Combining ap-
proaches: Looking behind the scenes of integrating multiple types of evi-
dence from controlled behavioural experiments through agent-based modelling
25(4), 569–581. https://doi.org/10.1080/13645579.2022.2050120, https://
www.tandfonline.com/doi/full/10.1080/13645579.2022.2050120