1
Multi-Agent Team Access Monitoring: Environments that Benefit
from Target Information Sharing
Andrew Dudash1, Scott James2, and Ryan Rubel3
Abstract—Robotic access monitoring of multiple target areas
has applications including checkpoint enforcement, surveillance
and containment of fire and flood hazards. Monitoring access
for a single target region has been successfully modeled as a
minimum-cut problem. We generalize this model to support
multiple target areas using two approaches: iterating on indi-
vidual targets and examining the collections of targets holisti-
cally. Through simulation we measure the performance of each
approach on different scenarios.
I. INTRODUCTION (a) The individual approach (b) The holistic approach ex-
blocksaccesstotargetregions. ploitstheenvironment,requiring
onelessrobotthantheindividual
Consider the obstacle-filled environment in Figure 1a and
approach.
Figure1b.Threenon-contiguoustargetregionsaresurrounded
sothatnothingcanenterfromtheedgeoftheenvironmentand
reach them without being detected by a robot. Attempting to
minimize the amount of robots required for each target region
individually requires three robots (Figure 1a), one for each
target. Conversely, by treating the target regions holistically,
theamountofagentsrequiredtosurveyanareacanbereduced
to two (Figure 1b), the size of the common opening to the
targets.Insomescenarios,theindividualandholisticapproach
resultinidenticalsolutions.(Figure1c).Inthispaper,wewill (c) The individual and holistic
algorithmsproducethesameso-
examine the characteristics of scenarios that benefit from a
lution.
holistic approach versus an individualized approach and vice
versa. Fig.1:Sharingtargetregioninformationcanimprovesolution
quality for some environments.
We will address the following question: given an obstacle-
filled environment, how many robots n, with limited sensor
range, must be placed to protect m target regions from agents
our paper explores, the remaining robots could be freed for
entering from the edges of the environment?
other operations.
Theaccessmonitoringproblemhasapplicationsinmultiple
Gupta’s solution has already shown that a method that
areas. The counter-insurgent checkpoints described by Galula
exploits environment obstacles can reduce the number of
are used to temporarily isolate insecure regions until they
required robots.
can be combined with existing safe zones [1]. If this were
In this paper, we will:
automated, an efficient solution to our access monitoring
• Extend an existing access-monitoring technique to mon-
problem could ease dynamic checkpoint changes. Otte built
itor access to multiple non-contiguous target regions
a robotic swarm that assumes a formation when exposed to
(Section III-A).
environmentalconditions[2]andsuggestsitsuseforhandling
• Prove the new holistic approach provides valid solutions
fires, floods, tornadoes, and earthquakes; one of the response
(Section III-B).
formations could be access monitoring. For surveillance, the
• Comparetheholisticapproachtotheindividualapproach
Leschi Town combined arms collective training facility [3]
in simulations for different scenarios. (Section IV).
was used to test the ability of drone swarms to isolate areas
containing items of interest. Once the individual areas are
II. RELATEDWORK
secured, the drones could transition to monitoring all areas
Prior research suggests an efficient access-monitoring al-
collectively. If collective monitoring requires less robots, as
gorithm must exploit environmental obstacles. This is similar
1Noblis Autonomous Systems Research Center Reston, Virginia to how humans monitor access to a room: they only watch
Andrew.Dudash@noblis.org entryways. A solution to the access monitoring problem,
2Noblis Simulation and Visualization Research Center Reston, Virginia presentedbyGupta etal.in2019[4], ispossiblebymodeling
Scott.James@noblis.org
the problem as a minimum-cut problem [5]. This method
3Noblis Autonomous Systems Research Center Reston, Virginia
Ryan.Rubel@noblis.org is effective but was only implemented for single contiguous
4202
raM
82
]OR.sc[
1v57391.3042:viXra2
target areas. We are interested in applications that include ourenvironmentasagraphwhereverticescorrespondtoareas
multiple, non-contiguous target regions, for instance, multiple and edges correspond to directly traversable paths between
fires to be contained or multiple buildings to be surveilled. them [16], [6]. We simulate our approaches on random envi-
Prior work in robotic surveillance solves variations of the ronments, similar to other studies in distributed robotics [4],
art gallery problem: how to minimize the amount of robots [8].
requiredtowatcharegion.Katsilierisetal.developasolution Our simulation can correspond to several physical systems.
where robots with infinite sensor range secure and search an In the first system, described by Gupta [4], unmanned aerial
obstacle-filledenvironment[6].Similartoourwork,Kazazakis vehicles aim cameras down at a 2D space. Other interpreta-
and Argyos use robots with limited range sensors, but instead tions could include terrestrial robots in an office environment
of pursuing, securing, or monitoring an area, the robots are withlimitedreactiontimeorsensorrange[7].Beyondsurveil-
tasked to sweep an obstacle-filled environment [7]. Isler et al. lance,robotscouldcordonoffanareaandalerthumansintheir
recognizeaclassofenvironmentswhereasinglepursuerwith range, blocking access to a flood zone.
a random search strategy will always locate an invader, even
if the invader is arbitrarily fast and knows the position of the
A. Algorithm Description
pursuer[8].KollingandCarpinmodelmulti-robotsurveillance
as a graph problem, introducing the terms contaminate and Therearetwomethodsweusetocalculatewheretoposition
clear todescribethemulti-robotsecuringprocess.Ourcontri- accessmonitoringrobots:anindividualsolutionandaholistic
bution is closely based on an existing solution to the isolation solution. The individual method finds a solution for each
region surveillance problem and the minimum robot isolation target area individually. The total solution is the union of
region surveillance problem introduced by Gupta et al. [4]. all individual solutions. The holistic method finds a solution
Allrelatedworkdescribedincludessimulatedexperimentsthat for all target areas simultaneously. The individual approach
demonstrate the viability of one or more approaches, measure extends the existing access-monitoring solution[4] without
the performance of one or more approaches, or both. information sharing.
Prior research in distributed robotics uses a variety of The individual approach takes Gupta’s existing algorithm
network models. In some models, communication is syn- and applies it to each target region individually. Sink points
chronous; latency is bounded. In others, communication is correspond to target regions. For each target region, a planar
asynchronous:latencyisunbounded[9].Optimizersareeasier graph is created that corresponds to the access-monitoring
to write for synchronous networks, because all information problem for that single region. One of the advantages of
stored in the network is guaranteed to be available, but the individual approach is that it is easily parallelizable. We
these networks are too fragile to handle network partitions accountforthisadvantagewhenwecomparecalculationtimes
[10], latency [11], or the failure of individual robots. Mar- in Section V.
colino and Chaimowicz built a successful swarm avoidance
algorithm, but assume peer-to-peer messages with bounded Listing 1: Individual Algorithm
latency—no explicit time-out logic is included—and they positions = set()
limit their physical experiments to a laboratory environment for target in targets:
[12]. Otte’s distributed neural network converges, but the new_positions = minimum_cut(source, target)
positions = union(positions, new_positions)
proof explicitly requires bounded delays [2]. In contrast,
return positions
Jones’ foraging swarms are explicitly asynchronous and are
designed to continue working, at reduced performance, when
The holistic approach considers all targets simultaneously.
no network information is available [13]. A system capable
Asinglepossiblynon-planargraphiscreatedthatcorresponds
of opportunistic cooperation, exploiting available information
to the holistic access-monitoring problem. The graph may be
without relying on bounded latency, like Jones’ foragers,
non-planar because non-contiguous target regions are joined
is ideal. This opportunistic cooperation is difficult enough
together. Figure 2 shows the target regions are adjacent to a
that we do not attempt to incorporate it within this paper.
common target region node.
However, similar to how Bajcsy et al. [14] suggest adapting
For multiple non-contiguous targets, the graph generated
their synchronous centralized system to use the asynchronous
by the holistic approach is almost always non-planar. If, for
decentralized Drona system, provided by Desai, Saha, Yang
example,thereisonlyonetarget,thenthegraphwillbeplanar,
et al. [15], our access monitoring work could also be made
but the problem is a single target problem. If all targets form
asynchronous.
a contiguous region, then the graph will be planar, but the
problem is now a continguous target problem. It is, however,
III. METHODOLOGY
possibletoconstructamultiplenon-contiguoustargetproblem
We compare the results of our holistic and iterative algo-
where the holistic approach generates a planar graph.
rithms on simulated environments within a discretized grid.
Each square of an environment can be free, a target region,
Listing 2: Holistic Algorithm
or blocked by an obstacle. Each robot can block a single free
add_node(sink)
square.
for target in targets:
Our simulator presents our map as an occupancy grid. for neighbor in neighbors(target):
Similartootherworkinroboticsurveillance,wealsorepresent add_edge(neighbor, sink)3
Theorem 1. Let there be a graph dual G of the given
environment.LettherebentargetregionsXi andletδX be
int
theborder regionsubgraph. Let therebe anextranode S that
all Xi are adjacent to. Let there be a partition separating
int
δX fromX .IfthepartitionseparatesδX fromX ,itwill
int int
still separate δX from X with S cut out.
int
Proof. 1) Suppose that the graph G is cut to partition the
X and δX nodes, then the graph has been split into
int
two graphs: A, containing X , and B, containing δX;
int
(a) (b) A and B are disconnected.
Fig. 2: Each node in 2a corresponds to a discretized space of 2) Disconnectionismonotone;itappliestoeverysubgraph.
2b. All border regions are contracted to a common node. This If A is disconnected from B, then all subgraphs of A
is the holistic approach and the graph is non-planar; the three are disconnected from all subgraphs of B.
target nodes are all adjacent to one common target node. 3) Therefore, no X ii nt, a subgraph of A, is connected to
any subgraph of B, including δX.
4) Removinganodeoredgescannotintroduceanewpath.
remove_edge(neighbor, target) With or without the S node, there is no path from δX to
positions = min_cut(source, sink) any Xi . If the partition separates δX from X , it will still
int int
return positions separate δX from X with S cut out.
int
Both approaches use the same minimum-cut algorithm, a
C. Simulator Design
preflow-push algorithm[17], to place robots. In contrast to
We will simulate random environments and measure which
Gupta, we use a minimum-node cut rather than a minimum-
environments are preferred by the two approaches.
edge cut; to partition our graphs, we remove nodes instead of
Rather than use continuous space, like in [4], we restrict
edges.Onceatraversabilitygraphisdefined,thepreflow-push
our simulation to a discrete grid. The width of a grid space is
algorithm finds a minimum-cut partitioning the target regions
the range—sensor, alarm distance, block range—of a robot.
fromtheborderregion.Thecutnodescorrespondtotherobot
Ourmodelcouldbeextendedtocontinuousspace,butbased
positions; all paths from the border region to a target region
onpriorresults,thisseemsunnecessary.Guptatestedanaccess
must pass through a robot position.
monitoring approach on continuous space and used two dif-
The main difference between the two approaches is
ferentwaystodiscretizecontinuousspace,apredefinedlattice
how they combine information. In the holistic approach,
and Delaunay triangulation. Despite a gap in performance
informationiscombinedearly;alltargetareasarejoinedatthe
betweenthetwomethods,theyfollowedeachotherclosely[4].
beginning; there is one traversability graph. In the individual
For this reason, we doubt that a mapping to continuous space
approach, information is combined late; robot positions are
would impact our experiments and instead use a discrete grid.
combined after they consider each individual target; there is a
Wewillexperimentwithtwotypesofenvironments:anopen
different traversability graph for each target.
environment with random obstacles and a closed environment
The collection of robot positions is a set so the same grid
where a grid of intersections are randomly blocked. The
cell is never watched by more than one robot. Robots are not
open environment might correspond to an outdoor area dotted
double counted for either approach.
with large irregular obstacles. The closed environment might
correspond to an urban environment with regular obstacles,
B. Algorithm Analysis like roads in a dense city.
The holistic algorithm may provide better solutions, but it In the simulation, we aim to protect the target areas of
only works if partitioning the combined target regions and interest.Weassumeanyunobstructedbordercanbeasourceof
source has the same effect as partitioning each target region contaminants. In both experiments, a graph of the traversable
from the source individually. We prove this below. areas is generated [17] to represent the minimum robot iso-
For our analysis, we reuse the nomenclature of Gupta [4], lation problem. The program builds a random environment.
summarized in Table I, with an alteration: we have multiple The program is configured by environment size, obstacle
areas of interest and each target region is a single node. count,targetregioncount,andrandomnumbergeneratorseed.
After environment obstacles are generated, target regions are
TABLE I: The different variables in our model. randomlyplacedinunobstructedareas.Foreachenvironment,
the problem is solved using both approaches: holistic and
Symbol Meaning
X obs Theregionsblockedbyobstacles. individual.Theparametersofeachtest,includingaseedvalue,
Xi Targetregionofinteresti. are saved with the results.
int
X free Thefreeregion. In the open environment, the map is initially empty, then
δX Theborderregion.
random obstacles are generated. In the closed environment,
Bi Theregionssurveilledbymachines.
δXiso Thecombinedregionofallblockedandsurveilledregions. themapisinitiallysettoagrid,thenrandomintersectionsare
blocked.4
The output of the simulation includes the calculation time Experiment 4 - Open-Environment Target Area Count Sweep
for the solution and the list of positions to place robots.
In the fourth experiment, we measure how the performance
Note that the obstacles in closed environments are smaller of the holistic method changes as the number of target areas
than the obstacles generated in open environments. For this varies. We create 100 random environment for 12 different
reason, our experiments with closed environments, in Section target area counts: 1 to 551 by increments of 50. The targets
IV, use a higher obstacle count. arerandomlyplaced.Eachenvironmenthasaheightandwidth
of 100 units. For each environment, there are 100 obstacles—
an obstacle count that the holistic method was discovered, in
IV. EXPERIMENTS
Experiment 3, to work well on. There are 1200 environments
in total. Both approaches are run on every environment.
We design five simulator experiments. In the first exper-
iment, we compare our solutions on a single hand-picked
environment. In the second experiment, we generate open Experiment 5 - Closed-Environment Environment Size Sweep
environments and vary the number of random obstacles. In In the fifth experiment, we measure how the performance
the third experiment, we generate closed environments and of the holistic method changes as the size of environments
vary the number of randomly blocked intersections. In the varies. We create 1000 random environments for 9 different
fourth experiment, we generate open environments and vary environment widths: 50 to 370 by increments of 40. The
thenumberoftargetareas.Inthefifthexperiment,wegenerate environments are square; the width and height are the same.
a closed environment and vary the size of the environment. For each environment, there is a random number of targets
between 15-20. The targets are randomly placed. The block
count is 950 intersections. There are 9000 environments in
Experiment 1 - Pathologic total. Both approaches are run on every environment.
Our environment corresponds to Figure 1, generated by our
V. RESULTS
simulator.
To compare the performance of different access monitoring
approaches, we generate solutions with each method and
Experiment 2 - Open-Environment Obstacle Sweep record the amount of robots required and time taken to
calculate the solutions.
In the second experiment, the performance of the two
methods on an open environment with varying obstacles is
Experiment 1 Results - Pathologic
determined. We create 1000 random environments for 16
different obstacle counts: 10 to 235 by increments of 15. This Theindividualsolutionandoursolution,asexpected,gener-
range of obstacle counts goes from a near empty map, similar atesolutionsthatcorrespondtoFigure1.Theholisticsolution
to an open or empty parking lot, to a near completely filled protects all target regions but requires one less robot than the
map, similar to a cave system or debris covered area. Each individual solution.
environment has a height and width of 100 units. For each
environment, there is a random number of targets between
Experiment 2 Results - Open-Environment Obstacle Sweep
15-20. The targets are randomly placed. There are 16000
environments in total. Both approaches are run on every In Experiment 2, for each algorithm we compare the calcu-
environment. lation time and number of robots required against the number
of obstacles generated. We include sample environments of
our sweep in Figure 3.
In Figure 4, we plot the median and percentiles of per-
Experiment 3 - Closed-Environment Obstacle Sweep
formance. For all trials in Experiment 2, the holistic method
Inthethirdexperiment,theperformanceofthetwomethods performs as good as or better than the individual method with
onaclosedenvironmentwithvaryingobstaclesisdetermined. regards to the number of machines required.
Wecreate1000randomenvironmentsfor31differentobstacle We measured performance as obstacle density increased.
counts:10to1510byincrementsof50.Thisrangeofobstacle When there are few obstacles, the two methods perform
counts goes from a near empty map, similar to an open city similarly. Because the environments are almost completely
grid, to a near completely filled map, similar to a city with empty, there are no environment obstacles for the holistic
closed or obstructed streets. Each environment has a height approach to exploit. As the number of obstacles increases,
and width of 100 units. For each environment, there is a the holistic method shows significant improvement over the
random number of targets between 15-20. The targets are iterativeapproach.Thiseffectweakensastheamountofobsta-
randomlyplaced.Thereare31000environmentsintotal.Both clesincreasesandtheperformanceofthetwomethodsslowly
approaches are run on every environment. converges. We attribute the convergence to overcrowding. As
The obstacle count is higher in Experiment 3 than Experi- the map fills up, obstacles isolate robots from each other
ment2becausetheobstaclesinExperiment3aresmallerthan and the holistic method’s information sharing becomes less
the obstacles in Experiment 2. useful. We label these three sections in Figure 4. The holistic5
Fig. 5: In open environments with high obstacle count, the
holistic approach shows a computational advantage compared
to the parallelized, individual approach. Conversely, the it-
erative approach shows a computational advantage for low
obstacle count.
algorithm shows greatest improvement when the environment
has a medium obstacle density.
For all obstacle densities, including the holistic method’s
preferred medium obstacle density, there are environments
where the holistic and individual solutions require the same
number of machines. In Figure 4, we plot the median and
percentile, rather than the mean and standard deviation, to
better show the outliers; the performance of the holistic
method is sensitive to the specific environment.
In open environments, the holistic method calculates an
order of magnitude faster than the individual method, because
the individual method must run the preflow-push algorithm
once for each target region. However, this does not consider
Fig. 3: Experiment 2 compared the performance of the indi-
theabilityoftheindividualmethodtobeparallelized:allruns
vidualandholisticapproachonopenenvironmentswithvaried
ofthepreflow-pushalgorithmcanberunatthesametime.To
obstacle counts.
estimate the speed of the parallelized iterative algorithm, we
divide the individual method calculation time by the number
of target regions.
Wecomparethecalculationtimeofthedifferentapproaches
in Figure 5. The holistic method calculates slowest when
the map is sparse. As the obstacle count increases, however,
the holistic method eventually outperforms the parallelized
individual method.
Experiment 3 Results - Closed-Environment Obstacle Sweep
We contrast the performance of the two approaches on
closed environments. We plot our results as two graphs. In
thefirstgraph,Figure7,weplotthedifferenceinrobotcounts
between the two approaches. In the second graph, Figure 8,
we compare the calculation time of each approach. Figure 6
shows sample environments from the experiment.
SimilartotheresultsofExperiment2,theholisticalgorithm
Fig.4:Forallopenenvironmentstested,theholisticapproach
performsbetterwhentheenvironmentisslightlycrowded,but
allocates fewer robots than the individual approach. Medium
notwhentheenvironmentissparseorextremelycrowded.This
density environments show the greatest improvement.
can be seen in Figure 7.6
Fig. 8: In closed environments with high obstacle count, the
holistic approach shows a computational advantage compared
to the parallelized, individual approach. Conversely, the it-
erative approach shows a computational advantage for low
obstacle count.
Therelationbetweenmachinecountandobstacledensityin
Experiment 3 is more pronounced than in Experiment 2. We
suspect this is because the obstacles in open environments,
Experiment 2, can overlap, but the obstacles in closed envi-
ronments,Experiment3,neveroverlap.Eachobstacleaddedto
an open environment is increasingly likely to block space that
an existing obstacle already blocked. In contrast, the amount
of obstacles in Experiment 3 is proportional to the amount of
space blocked.
The calculation time results are similar to the results of
Experiment2.Whentheenvironmentissparse,theparallelized
individual approach is faster; when the environment is dense,
theholisticapproachoutperformstheindividualapproach.See
Fig.6:Experiment3comparedtheperformanceoftheindivid-
Figure 8.
ual and holistic approach on closed environments with varied
obstacle counts.
Experiment 4 - Open-Environment Target Area Count Sweep
We contrast the performance of two approaches on a
moderately crowded environment, 100 obstacles, as the target
area count changes. The results in Figure 9 show that the
holistic method saves more machines as the number of target
areas increases. As an environment fills with randomly placed
machines, surrounding the entirety of the space becomes
more efficient. The individual samples, shown in Figure 10,
demonstrate this effect.
The figure shows a direct improvement, but we doubt that
the performance can increase without bound. We anticipate a
saturationpointwhereeithermethod,holisticoriterative,must
block the border of the environment to monitor all machines.
However, in our current results the holistic method performs
better as the number of target areas increases.
Fig.7:Forallclosedenvironmentstested,theholisticapproach Experiment 5 - Closed-Environment Environment Size Sweep
allocates fewer robots than the individual approach. Medium
We contrast the performance of two approaches on a grid
density environments show the greatest improvement.
environment with varying size. The results in Figure 117
Fig. 9: As the target count increases, the holistic algorithm Fig. 11: As the environment size increases, the holistic algo-
performs better. rithm struggles to exploit the environment.
show that the holistic method saves more machines while
the environment is small, but rapidly loses its effectiveness
as the environment size increases. With a fixed obstacle and
target area count but larger environment size, the environment
becomes very sparse. This is similar to an environment with
a low obstacle count. The holistic algorithm shows little
improvement as the environment size increases.
VI. CONCLUSION
We studied if and when monitoring access to a group of
target areas can be more efficient than monitoring access to
eachtargetareaindividually.Weexaminedenvironmentswith
irregularlylocatedobstaclesandenvironmentswhereobstacles
were arranged in a regular grid.
Our results revealed that in medium density environments,
robots can monitor access to a group of target areas more
efficiently than monitoring access to each target area individ-
ually. The holistic approach showed fewer improvements in
sparse environments and in environments with a high density
ofobstacles.Inaddition,increasingthesizeoftheenvironment
decreased the effectiveness of the holistic approach but in-
creasingthenumberoftargetareasincreasedtheeffectiveness.
Finally, we proved that the holistic algorithm provides valid
solutions.
A more thorough study of different environment types,
based on the properties of the corresponding traversability
graph, could reveal when environments benefit from informa-
tion sharing.
REFERENCES
[1] D. Galula, Counterinsurgency Warfare: Theory and Practice. Praeger
SecurityInternational,2006.
[2] M. W. Otte, “An emergent group mind across a swarm of robots:
Collectivecognitionanddistributedsensingviaasharedwirelessneural
Fig. 10: As the number of targets increases, the robot place-
network,” The International Journal of Robotics Research, vol. 37,
ments suggested by the holistic approach begin to outline the pp.1017–1061,2018.
border of the environment. [3] SwarmTex, “Teams demonstrate swarm tactics in fourth major offset
fieldexperiment,”2018.8
[4] M. Gupta, M. C. Lin, D. Manocha, H. Xu, and M. Otte, “Monitoring (ICNS),(Herndon,VA,USA),pp.2G3–1–2G3–12,IEEE,Sep2020.
access to user defined areas with multi-agent team in urban environ- [12] L. S. Marcolino and L. Chaimowicz, “Traffic control for a swarm
ments,” in 2019 International Symposium on Multi-Robot and Multi- of robots: Avoiding group conflicts,” in 2009 IEEE/RSJ International
Agent Systems (MRS), (New Brunswick, NJ, USA), pp. 56–62, IEEE, Conference on Intelligent Robots and Systems, (St. Louis, MO, USA),
Aug2019. pp.1949–1954,IEEE,Oct2009.
[5] O. Goldschmidt and D. Hochbaum, “Polynomial algorithm for the [13] S. Jones, M. Studley, S. Hauert, and A. Winfield, Evolving Behaviour
k-cut problem,” in [Proceedings 1988] 29th Annual Symposium on TreesforSwarmRobotics,vol.6ofSpringerProceedingsinAdvanced
FoundationsofComputerScience,pp.444–451,1988. Robotics,pp.487–501. Cham:SpringerInternationalPublishing,2018.
[6] F. Katsilieris, M. Lindhe, and D. V. Dimarogonas, “Demonstration of [14] A.Bajcsy,S.Herbert,D.Fridovich-Keil,J.Fisac,S.Deglurkar,A.Dra-
multi-robotsearchandsecure,”(Anchorage,AK,USA),IEEE,2010. gan, and C. Tomlin, “A scalable framework for real-time multi-robot,
[7] G. Kazazakis and A. Argyros, “Fast positioning of limited-visibility multi-humancollisionavoidance,”in2019InternationalConferenceon
guardsfortheinspectionof2Dworkspaces,”inIEEE/RSJInternational RoboticsandAutomation,ICRA2019,Proceedings-IEEEInternational
ConferenceonIntelligentRobotsandSystem,vol.3,(Lausanne,Switzer- ConferenceonRoboticsandAutomation,(UnitedStates),pp.936–943,
land),p.2843–2848,IEEE,2002. InstituteofElectricalandElectronicsEngineersInc.,May2019.
[8] V. Isler, S. Kannan, and S. Khanna, “Randomized pursuit-evasion in [15] A. Desai, I. Saha, J. Yang, S. Qadeer, and S. Seshia, “Drona: A
a polygonal environment,” IEEE Transactions on Robotics, vol. 21, framework for safe distributed mobile robotics,” in Proceedings of the
p.875–884,Oct2005. 8thInternationalConferenceonCyber-PhysicalSystems,ACM,2017.
[9] C. Cachin, R. Guerraoui, and L. Rodrigues, “Introduction to reliable [16] A. Kolling and S. Carpin, “The graph-clear problem: definition, theo-
and secure distributed programming,” pp. 44–47, Springer Publishing reticalpropertiesanditsconnectionstomultirobotaidedsurveillance,”
Company,Incorporated,2011. in 2007 IEEE/RSJ International Conference on Intelligent Robots and
[10] S. Gilbert and N. Lynch, “Brewer’s conjecture and the feasibility of Systems,(SanDiego,CA,USA),p.1003–1008,IEEE,Oct2007.
consistent, available, partition-tolerant web services,” SIGACT News, [17] A. A. Hagberg, D. A. Schult, and P. J. Swart, “Exploring network
vol.33,p.51–59,jun2002. structure, dynamics, and function using networkx,” in Proceedings of
[11] S.James,R.Raheb,andA.Hudak,“UAVswarmpathplanning,”in2020 the 7th Python in Science Conference (G. Varoquaux, T. Vaught, and
Integrated Communications Navigation and Surveillance Conference J.Millman,eds.),(Pasadena,CAUSA),pp.11–15,2008.