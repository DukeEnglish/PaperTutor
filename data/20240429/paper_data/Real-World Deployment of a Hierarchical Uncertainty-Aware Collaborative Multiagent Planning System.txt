Real-World Deployment of a Hierarchical Uncertainty-Aware
Collaborative Multiagent Planning System
Martina Stadler Kurtz∗1, Samuel Prentice∗1, Yasmin Veys1, Long Quang2, Carlos Nieto-Granda2,
Michael Novitzky3, Ethan Stump2, and Nicholas Roy1
Abstract—Wewouldliketoenableacollaborativemultiagent
team to navigate at long length scales and under uncertainty
in real-world environments. In practice, planning complexity
scales with the number of agents in the team, with the length SJ GH
scale of the environment, and with environmental uncertainty. SH
Enablingtractableplanningrequiresdevelopingabstractmod-
GJ
els that can represent complex, high-quality plans. However,
suchmodelsoftenabstractawayinformationneededtogenerate
directly-executable plans for real-world agents in real-world
a) Deployment environment and team b) Task and abstract planning graph
environments, as planning in such detail, especially in the
presence of real-world uncertainty, would be computationally
intractable. In this paper, we describe the deployment of a
planning system that used a hierarchy of planners to exe-
cute collaborative multiagent navigation tasks in real-world, SJ GH SJ GH
unknown environments. By developing a planning system that SH SH
was robust to failures at every level of the planning hierarchy, GJ GJ
we enabled the team to complete collaborative navigation
tasks, even in the presence of imperfect planning abstractions
and real-world uncertainty. We deployed our approach on a c) Non-collaborative trajectories d) Collaborative trajectories
Clearpath Husky-Jackal team navigating in a structured out-
door environment, and demonstrated that the system enabled
Fig. 1. a) In this work, we discuss the deployment of a collaborative
the agents to successfully execute collaborative plans.
multiagent planner for a two agent team consisting of a Clearpath Jackal
andaClearpathHuskyinareal-worldstructuredoutdoorenvironment.b)
I. INTRODUCTION
Consider the Jackal and Husky navigating from starts SJ and SH to goals
We would like to enable a team of robots to carry GJandGH,respectively,givenanavigationgraph(green),whereoneedge
has unknown traversability (red). c) When the agents plan independently,
out collaborative missions autonomously in an unknown
the Husky attempts to navigate to the goal via the unknown edge, senses
environment. For example, consider the team of agents that the edge is untraversable, and then backtracks to the goal via a long,
navigating in the structured outdoor environment in Fig. 1- traversablepath(trajectoryshowninyellow-orange);meanwhile,theJackal
navigatesdirectlytoitsgoal(trajectoryshowninblue-green).d)Whenthe
a, modeled as the graph in Fig. 1-b. When the agents plan
agentsplantocollaborativelyminimizeteammakespan,thequickerJackal
collaboratively, they can take advantage of agent locations diverts from the shortest path to its goal to sense the traversability of the
and traits to reduce the time to complete the whole mission unknownedgefortheHusky,whiletheHuskywaitsinplaceforadditional
information. After sensing that the edge is untraversable, both the Jackal
as a team. In this example, the quicker Jackal robot senses
andtheHuskynavigatetotheirrespectivegoals.
the traversability of an unknown edge for the slower Husky
robot. The observations from the Jackal enable the Husky
to avoid slow, expensive backtracking when the edge is
plans under uncertainty requires answering three questions:
discoveredtobeuntraversable,reducingtheHuskyplancost
whatisusefultoexploregiventheteamobjective(s),bywhen
and the overall team traversal time as compared to a non-
does the team need the explored information to improve
collaborative baseline.
planning performance, and who should explore. Answering
Unfortunately, generating good collaborative team plans
these questions directly requires a collaborative team to
canbecomputationallyintractableasthesizeoftheenviron-
reason over a Partially Observable Markov Decision Process
ment and team increases, since generating high-quality team
(POMDP) with large action and observation spaces, long
*Equalcontribution. time horizons, and delayed rewards, which is unlikely to
1M.S. Kurtz, S. Prentice, Y. Veys, and N. Roy are with MIT CSAIL,
be computationally tractable in real-world environments. To
{mskurtz, prentice, vyeys, nickroy}@mit.edu.
2L. Quang, C. Nieto-Granda, and E. Stump are with the enabletractable,onlineplanningfordeploymentsincomplex
DEVCOM Army Research Laboratory (ARL), Adelphi, MD, environments, we need to develop abstract models of the
{long.p.quang.civ, carlos.p.nieto2.civ,
planning problem that reduce planning complexity.
ethan.a.stump2.civ}@army.mil.
3 M. Novitzky is with the United States Military Academy, In prior work, we developed a method for collaborative
michael.novitzky@westpoint.edu. multiagentplanningonabstractroadmaps,ormotiongraphs,
ThisresearchwassponsoredbytheArmyResearchLaboratoryandwas
wheresomegraphedgeswereassumedtobeprobabilistically
accomplished under Cooperative Agreement Number W911NF-17-2-0181.
Theirsupportisgratefullyacknowledged. traversable [1]; the representation was selected to capture
AcceptedtotheIEEEICRAWorkshoponFieldRobotics2024
4202
rpA
62
]OR.sc[
1v83471.4042:viXratraversability uncertainty in unknown environments. First, an approach for generating high-quality multiagent policies
wedevelopedmultiagentmacro-actionsthatefficientlyrepre- for CTPs which minimize team makespans for one ground
sented good collaborative team behaviors under uncertainty. vehicle/n air vehicle teams [1].
Second, we developed a macro-action pruning scheme that Concurrently, other approaches have been developed for
relied on an optimistic, Monte Carlo (MC) rollout-based graph-based, risk-aware single-agent navigation under edge
value function approximator to estimate the effects of can- cost uncertainty. For example, Murphy and Newman [7] de-
didate future beliefs on team planning performance. Using veloped an approach for generating stochastic graphs, given
the approach, we demonstrated the ability to find low-cost overhead imagery, and for generating plans in the graphs
team policies that actively balanced between reducing task- with bounded risk. Other approaches developed methods for
relevantenvironmentaluncertaintyandefficientlynavigating online planning with uncertain edge costs and online edge
to goals. However, there is a trade-off to make between cost sensing. Dey et. al. [8] used a Monte Carlo based
planningmodelcomplexityandreal-worldplanexecutability. approach to generate agent policies given Gaussian process-
Asourmodelsbecomemoreabstracttoenablemoreefficient basededgecostassignments,andChunget.al.[9]developed
high-level planning, model properties that are needed to a risk-aware search technique for planning with uncertain
represent plan execution can become abstracted away. The edge costs and sensing.
challenges of executing abstract plans are exacerbated in Finally, this work relies on core robot autonomy capa-
real-worlddeployments,wherereal-worlduncertainty,timing bilities, including GPS-based state estimation, GPS-enabled
delays, and robot failures stress the relationship between the Omnimapper-based mapping [10], EASL-based global plan-
planningabstractionandreal-worldrobotactions.Forexam- ning [11], and MPPI-based local planning [12]. While our
ple, while the abstract motion graph model enabled efficient technique is not limited to the use of these specific tech-
team planning, the output of the planner was graph-based niques, the importance of a capable, reliable base autonomy
macro-actions (i.e., sequences of motion, observation, and system for field experiments cannot be overstated.
wait actions in the graph) that were not directly executable
in a real-world environment.
III. APPROACH
To enable the real-world deployment of our collaborative In this section, we briefly discuss the collaborative multi-
multiagent planner, we developed a hierarchical planning agent planning approach developed in [1]. Then, we discuss
system capable of generating abstract high-level plans and the hierarchical planner developed for online, collaborative
converting them into executable motor commands for real- teamplanninginthereal-world,andhighlightchallengesand
world agents. The planner generated abstract, collabora- opportunities from deploying the system.
tive team plans, single-agent macro-action-based plans, and
A. Collaborative Multiagent Planning Under Uncertainty
primitive action plans that could be directly executed on
robots,allwhilemaintainingplanconsistencythroughoutthe Inpriorwork,weformulatedtheproblemofcollaborative
hierarchyandbeingrobusttoreal-worlduncertaintyanddis- multiagent planning under uncertainty as a POMDP. We
turbances.Our system was designed to handle both the theo- modeled the environment as a stochastic navigation graph
reticalandpracticalchallengesoffieldroboticsdeployments. withunknownedgetraversabilities.Inthegraph,nodesindi-
These challenges included grounding an abstract navigation catedlocations,edgesindicatedpossiblepaths,andeachedge
graph and a graph-based team in a real-world environment, wasassignedatraversabilityprobability,oraprobabilitythat
robustly executing abstract macro-actions in the presence of the edge was traversable during a given planning trial1. The
real-world disturbances, and coordinating teammates during true traversability of each edge in the graph was assumed to
theexecutionofvariable-durationactionscausedbyboththe bestaticthroughouttheplanningtrial,andcouldbeobserved
planningabstractionandreal-worlduncertainty.Wedeployed bynavigatingtoanodeadjacenttotheedge.Historically,the
our approach on a Clearpath Husky-Jackal team navigating problem of planning on stochastic graphs was studied for
in a structured outdoor environment, and showed that our single-agent navigation, and state-of-the-art techniques used
system resulted in real-world collaborative team behaviors. MonteCarlomethodstogeneratehigh-qualityagentpolicies
by approximating expected future plan costs and trading off
II. RELATEDWORK
between exploring unknown, potentially low cost paths to
The Canadian Traveller’s Problem (CTP) has been used the goal, and exploiting the current best known path to the
as a tool to study the complexity of navigation on graphs goal [13].
with stochastic edges [2]. Various extensions to the original The goal of our prior work was to generate collaborative
problem have been made, including to agents with remote plansforteamsnavigatingonstochasticgraphs.Formally,the
sensing [3], and to graphs with specific structures that admit planning objective was to minimize the expected makespan
simple optimal policies [4]. Other approaches use approxi- for a team of agents navigating from individual starts to
mationstrategiestogeneratehigh-qualitypoliciesforgeneral goals in the graph. In this problem, agents not only had
CTP graphs [5]. Additionally, policies have been developed
for multi-trial CTPs [6] and multiagent CTPs [3] for limited 1ThisgraphissimilartothestochasticgraphdevelopedintheCanadian
Traveller’s Problem (CTP), which was designed to model route finding in
teams(i.e.,teamswheresensingagentshavelimiteddynam-
Canada; roads were assumed to be snowed in and impassable with some
ics and no independent tasks). Most recently, we developed probability.
AcceptedtotheIEEEICRAWorkshoponFieldRobotics2024Base Station
Agent SJ GH GH
goals SH SH
Multiagent collaborative planner GJ
CTP
graph
Agent Agent a) The planer diverts the Jackal to b) When the edge is traversable, c) When the edge is untraversable,
macro-action macro-action sense the unknown edge. t Hh ue s p kl ya n pn ae thr ts oe l te hc et s g oth ae l. short t ph ae t hp l ta on tn he er g s oe ale l.cts the long Husky
Agent goals results
Core Autonomy Fig.3. Anexamplecollaborativeteamplan.TheJackalandHuskywere
Macro-action planner ● GPS-based state tasked with navigating from SJ and SH to GJ and GH, respectively, by
estimation executing actions on a pre-defined abstract motion graph (green) where
Primitive Primitive ● GPS-enabled local someedgeshadunknowntraversabilities(red).Incollaborativeplans,agents
action goal action result ● m Loa wp -p lein vg el controller tookactionsthatwereindividuallysuboptimaltoreducetheexpectedteam
makespan. Here, the Jackal diverted from its optimal path to the goal to
PP rimrim itii vti ev e a ca tc ioti no n p lc ali ne nn ets rs Agent state, senseandsharethetraversabilityoftheunknownedge(a),whiletheHusky
x x # # p rp imrim itii vti ev e a ca tc ioti no sns local maps waited for the edge traversability information. Then, the Husky used the
Motor commands
x # agents informationtoselectthebesttraversablepathtoitsgoal,whichreducedits
expectedplancost(b-c).
Fig. 2. Overview of of the hierarchical planning system. Multiagent
planning, which occurred at a centralized base station, generated macro-
additional details about the approach, please refer to [1].
actionsforeachagentintheteam.Themacro-actionswerethensenttothe
individual agents, where they were processed and executed as sequences
B. Real-World Planning System Overview
of primitive actions, using information from each agent’s individual core
autonomypipeline. To deploy the system in the real-world, we developed a
hierarchical planning system; an overview of the system is
shown in Fig. 2. A stochastic navigation graph and agent
to trade off exploring and exploiting paths to reach their
goals were provided as inputs to the collaborative planner,
own goals, but they also had to reason about whether or
whichwasrunatacentralizedbasestation.Ateachplanning
not they could sense information that would be helpful to a
step, the centralized planner generated a macro-action for
teammate. To increase the tractability of solving this com-
each agent to execute and communicated the macro-actions
plex multiagent POMDP, we designed collaborative macro-
to the agents. Then, the agents executed the macro-actions
actions, or sequences of primitive actions, that were capable
onboard using a bi-level planner. At the higher planning
of representing good single-agent and collaborative plans in
level,theagentsequencedprimitiveactiongoalsbasedonthe
theunknownenvironment.Themacro-actionsweredesigned
macro-action, monitored primitive action outcomes, and had
to capture intuitively useful agent behaviors in a single
some limited ability to adjust primitive action goals based
planning step; for example, we developed a macro-action
on primitive planning outcomes; for additional details, see
that consisted of the actions an agent would take to navigate
SectionIII-F.Atthelowerplanninglevel,agentsplannedfor
to and sense an unknown edge in the environment (see Fig.
and executed primitive actions, which included navigating
4). By representing the collaborative sensing behavior as a
along an edge, sensing the traversability of an edge, and
single macro-action, we enabled the planner to reason about
waiting in place for a specific amount of time. Each agent
the benefit of sensing in a single planning step. Without
also used a core autonomy pipeline, which included GPS-
macro-actions, the planner would have had to reason about
based state estimation, GPS-enabled local mapping, and a
thecollaborativevalueofanagentnavigatingonestepinthe
low-level controller capable of executing motor commands,
directionoftheunknownedge,whichischallengingbecause
for primitive action execution. In the following sections,
the benefit of the action is only obvious after a number of
we discuss each of the system components and associated
timesteps, when the agent reaches and senses the unknown
challenges in more detail.
edge. Along with the macro-action that modeled an agent
navigating to sense the traversability of an edge, we also C. Multiagent Collaborative Planning on Abstract Graphs
developed macro-actions that modeled an agent navigating The first level of the hierarchical planning system was
via one or more known traversable edges to the goal, and collaborative team planning, based on an abstract motion
an agent waiting in place for information to be sensed by a graph of the environment and pre-specified agent starts and
teammate. goals; an example collaborative plan is shown in Fig. 3.
While the macro-actions described reduced the depth of Unfortunately,generatinghigh-qualityabstractgraphs,which
collaborative multiagent planning, there were still a large must efficiently (i.e., sparsely) represent high-quality, real-
number of macro-actions to consider at every planning step. world agent traversals, but must also generate plans that
Most of the macro-actions, like those that sensed edges that can be grounded by real-world agents, is an active area of
were not on low cost paths to the goal, were unlikely to research [14]. In this work, we hand-generated an initial
improve team planning performance. We developed macro- graphoftheenvironmentbasedonoverheadimagery,where
action-based value functions that enabled the planner to each node was associated with a GPS coordinate, and we
quickly prune macro-actions that were unlikely to lead to fine-tuned the graph in the field to account for offsets and
high-quality collaborative plans from the plan space. For errors resulting from stale, low-fidelity overhead imagery.
AcceptedtotheIEEEICRAWorkshoponFieldRobotics2024C along graph edges, sense the traversabilities of edges, and
wait in place for a specific amount of time.
1) Navigation Actions: First, we developed a planner for
B D
navigating along a graph edge. Given the GPS coordinates
A corresponding to the source and target nodes of the edge,
we set the agent navigation goal to be a region around the
C0 GPS coordinate of the target node; in the field trials, we
C3 C C1 used a circular region with a 3 meter radius. Then, we used
a global planner, the EASL planner [11], to generate a 2D
C2
NTS planbetweentheagent’scurrentlocationandthegoal,where
the planner used the agent’s local occupancy map to avoid
Fig. 4. An example macro-action (orange) that represents an agent first
obstacles.Finally,weusedanMPPIplanner[12]togenerate
navigatingfromnodeAtoBtoC,andthensensingthetraversabilityofthe
unknown edge C-D (gold star). The inlay depicts goal adjustment, which agentmotorcommandstofollowtheEASLplantothegoal.
enablesanagenttonavigatetoalocationclosetotheoriginalGPSlocation Theprimitivenavigationplannerwasdesignedtoberobust
associatedwiththetargetnode,ifnavigationtothetargetGPSlocationis
to various forms of real-world environmental uncertainty.
deemedinfeasible.Thisadjustmentenablestheagenttoberobusttovarious
typesofuncertaintyduringplanning,includingminorposedrift,minormap By not constraining the agent to directly navigate along
noise,andsmallchangesintheenvironmentstructure. the graph edge (i.e., using a Euclidean path), we enabled
the agent to react to local environment changes that did
not impact global planning. For example, during field trials,
Additionally, we added deterministic edges between nodes
an agent was able to navigate around an overgrown bush
where we expected that a valid, real-world traversal existed
on the Euclidean path to its next node without impacting
(e.g., when nodes were connected via roads), and we also
other levels of the planner. Additionally, the hierarchical
addedprobabilisticallytraversableedges(withprobabilityof
approach enabled us to tune low-level planner parameters
being untraversable ρ) where we expected that a valid, real-
for individual agents without impacting the higher levels of
world traversal may exist (e.g., when nodes were connected
the planning pipeline. This was especially useful for the
via a forested area). While edges and traversability proba-
MPPI planner, which used various parameters related to
bilities were hand-defined in this work, we are interested in
agent dynamics that varied across our vehicles.
auto-generating graphs from remotely available information,
2) Observation Actions: Second, we developed an ob-
like overhead imagery, in future work.
servation action that enabled an agent to sense the local
WealsousedGPSthroughoutthedeploymenttocorrelate
traversability of an adjacent edge. We used the current agent
real-worldagentlocationswithnodesinthegraph.Thiswas
occupancymapandtheEASLplannertogeneratea2Dplan
especially useful on startup, as we used GPS coordinates
from the current agent location to a point 20 meters along
to define an initial alignment between team members in a
the unknown edge. Then, we the compared the EASL plan
global reference frame. While using GPS was effective in
cost to the Euclidean distance between the two points. If the
ourGPS-enabledenvironment,weareinterestedinexploring
EASL plan cost exceeded 120% of the Euclidean distance
GPS-denied planning in the future. For example, it may be
cost,theedgewasmarkeduntraversable;otherwise,theedge
possible to generate a common team reference frame based
was marked traversable. Intuitively, this method tested if an
on co-observed features on startup, or during planning using
agent could navigate along a graph edge without taking a
a distributed multiagent SLAM pipeline (e.g., [15]).
significant detour, based on its local occupancy map. While
theedgeobservationfunctionusedinourtestswasprimitive,
D. Executing Macro-actions for Collaborative Planning
otherfunctionsthatreportbinaryedgetraversabilitybasedon
The second level of the hierarchical planner was the local observations could be used in our pipeline. In future
macro-action planner, which translated agent macro-actions work, we are interested in generating binary observations
into subgoals that could be executed in the real world. based on other local traversability observation functions
The planner processed macro-actions into sequences of exe- (e.g. [16]). We are also interested in exploring semantically
cutable primitive actions, monitored primitive action results, informedobservationfunctions(e.g.,afunctionwhichmarks
and combined the results of primitive action sequences into an edge as traversable unless a suspicious barrel is present
macro-action results (i.e., success or failure) that could in the local map or agent camera images).
be processed by the high-level collaborative planner. An 3) Wait Actions: Finally, we developed a wait action,
examplemacro-actionisshowninFig.4;theagentnavigates which caused an agent to wait in place for a specified
fromitscurrentlocation,nodeA,tonodesBandC,andthen duration. This enabled an agent to wait in place to receive
to observe the traversability of the edge, C-D. traversability observations from a teammate before making
a decision about its next action. The wait action prevented
E. Primitive Actions
costly backtracking when an agent did not have sufficient
Finally, the lowest level of the planner consisted of prim- information to immediately make a high-quality planning
itive action planners that generated executable robot com- decision, but a teammate was able to inexpensively sense
mands. Specifically, the planners enabled robots to navigate the relevant information.
AcceptedtotheIEEEICRAWorkshoponFieldRobotics2024C C obvious how the team should plan when one agent success-
fully completes a macro-action, but another teammate is in
B D B D the process of executing a macro-action.
A A
We developed a planning approach that enabled the team
toexecutevariable-lengthmacro-actionsonline.Specifically,
when any agent completed a macro-action, it sent the result
of the macro-action (navigation success or failure, current
a) Interrupt while b) Interrupt while
state, and any traversability observations) to the centralized
executing edge A-B executing edge B-C
planner at the base station. Then, all other agents received
an interrupt, or a message indicating that the agent should
Fig.5. Examplesofmacro-actioninterrupts(receivedwhentheagentsare
at the red Xs) and their impacts on planning. When an agent received an terminate its current action as soon as possible, send action
interruptmessageduringprimitiveactionexecution,itcompleteditscurrent results to the base station, and wait to receive a new plan.
primitivenavigationactionandanydirectlysucceedingsensingactions,then
If an agent received an interrupt message at the terminal
terminated the current macro-action, communicated with the base station,
andwaitedtoreceiveanupdatedplan. state of a primitive action, then the macro-action terminated
immediately,andtheagentsentthemacro-actionresulttothe
planner.Otherwise,theagentcompleteditscurrentprimitive
F. Robust Macro-action Execution navigation action and any observation actions that directly
succeededthenavigationaction,andthenterminatedthecur-
Unfortunately, planning abstractions are often imperfect,
rentmacro-actionandsenttheactionresulttothecentralized
and discrepancies in planning abstractions at various levels
planner. For example, consider the agent in Fig. 5 executing
oftheplanninghierarchycanleadtovarioustypesofplanner
the macro-action of navigating from node A to node C,
failures. For example, a low-level planning failure could be
with the goal of sensing edge C-D. If the agent received
caused by the low-level planner, or it could be a result of
an interrupt message when navigating between nodes A and
a poor abstraction, like a poorly chosen GPS coordinate for
B, the agent completed the primitive navigation action to
a node (e.g., a coordinate that is in a bush). Hierarchical
node B, then terminated the macro-action, communicated
planners that are not robust to failures at various levels of of
with the base station, and waited for a replan. However,
the planning system are likely to fail catastrophically.
if the agent received an interrupt message when navigating
In this work, after observing a number of primitive
between nodes B and C, the agent completed the primitive
waypoint-based navigation failures, we updated the macro-
navigationactiontonodeC,sensedthetraversabilityofedge
action planner to be robust to such failures. Specifically,
C-D, and then terminated the macro-action, communicated
we modified the macro-action planner to re-attempt similar
withthebasestation(includingthetraversabilityobservation
primitive navigation actions upon primitive action failure,
of edge C-D), and waited for a replan. Finally, once all
rather than directly marking the macro-action as failed and
agentsterminatedtheircurrentmacro-actions,thecentralized
reporting the failure to the abstract planner. The macro-
planner replanned for the entire team and sent new macro-
action planner defined four alternative navigation goals for
actions to each agent.
each node (x,y): (x+δ,y),(x−δ,y),(x,y+δ), and (x,y−
δ). If the agent failed to navigate to the original and all
alternativegoals,weassumedtheprimitivenavigationaction The interrupt scheme enabled the team to quickly react
was unsuccessful, and the macro-action failed. However, to new information while ensuring that each agent remained
if the agent successfully navigated to the original goal or in a valid configuration in the abstract graph. If an agent
any of the alternative goals, then the primitive action was terminated its current action immediately after receiving an
considered successful, and the macro-action continued2. In interrupt,itsstatemaynotbevalidinthegraph,anditwould
the experiments, we let δ =0.5m. While this macro-action not be obvious how to generate a new graph-based plan for
planner modification was simple, it reduced the number of the agent. In future work, we are interested in developing
catastrophic failures experienced by the system, and demon- methods that modify the abstract graph representation based
strated the importance of robustness across planning layers on agent locations during interrupts. For example, if an
in hierarchical planning systems. agent is interrupted while navigating along a graph edge
to a waypoint, it may be possible to add a node to the
G. Variable-Duration Macro-Actions abstractgraphattheagentinterruptlocation,andtosplitthe
currentgraphedgeintotwoedgesthatrepresentthetraversed
Finally, we developed a method for coordinating team-
and untraversed portions of the current edge, respectively.
mates executing variable-duration macro-actions, like when
Finally, while this work does not directly aim to address
agents execute macro-actions that represent traversals of
the research problem of intermittent communications, the
graph edges with different weights. Unfortunately, it is not
interrupt-based planner is robust to minor communication
delays, and its lightweight messaging is tolerant of non-
2While this modification is similar to increasing the radius of the
navigationgoalregion,wefoundthatitresultedinmorestableMPPIplans. catastrophic outages.
AcceptedtotheIEEEICRAWorkshoponFieldRobotics2024a) Non-collaborative planning
SJ SJ
GJ GJ
i) Jackal navigated directly to its goal. ii) Final Jackal trajectory.
GH GH GH
SH
SH SH
iii) Husky navigated to and sensed iv) After sensing the untraversable v) Final Husky trajectory.
the unknown edge. edge, the Husky backtracked and
navigated to its goal via the long,
traversable path.
b) Collaborative planning
SJ SJ SJ
GJ GJ GJ
i) Jackal diverted to sense the ii) Jackal sensed and shared iii) Final Jackal trajectory.
unknown edge. untraversable edge observation,
then navigated to its goal.
GH GH GH
SH
SH SH
iv) Husky waited for the unknown v) Husky navigated directly to its vi) Final Husky trajectory.
edge observation. goal via the long, traversable path.
Fig.6. a)Graph-basedplansselectedbythenon-collaborativebaselineplanner,visualizedovertheabstractnavigationgraph.TheJackal(blue)withstart
SJ and goal GJ navigated directly to its goal, while the Husky (orange) with start SH and goal GH navigated to the unknown edge, sensed that it was
untraversable,andthenbacktrackedtothegoalviathelong,traversablepath.b)Graph-basedplansselectedbythecollaborativeplanner,visualizedover
theabstractnavigationgraph.TheJackal(blue)withstartSJandgoalGJdivertedtothegoldstartosensetheunknownedge,andsharedtheuntraversable
edge observation with the Husky. Then, the Jackal navigated to its goal. The Husky (orange) with start SH and goal GH waited to receive the edge
observationfromtheJackal,thennavigateddirectlytoitsgoalviathelong,traversablepath.Notethatsometrajectorieswerehand-annotatedfromraw
agentoutputsforclarityandduetoagent/groundstationcommunicationdrops.
AcceptedtotheIEEEICRAWorkshoponFieldRobotics2024
nalP
lakcaJ
nalP
yksuH
nalP
lakcaJ
nalP
yksuHGraph Graph Husky Jackal
Distance Distance Wait Wait
traveled, traveled, Time Time
Husky (m) Jackal (m) (s) (s)
SJ GH SJ GH Collaborative 156.71 100.04 10.0 0.0
SH SH Planner
GJ GJ Non- 257.97 25.83 0.0 0.0
Collaborative
Planner
a) Non-collaborative trajectories b) Collaborative trajectories
TABLEI. AGENTWAITTIMESINSECONDSANDPLANCOSTSIN
Fig.7. TrajectoriestraversedbytheJackal(blue-green)andHusky(yellow- METERSINTHEABSTRACTGRAPHWHENPLANNINGUSINGTHE
orange) while executing the graph-based plans described in Fig. 6. Real- COLLABORATIVEANDNON-COLLABORATIVEPLANNERS.
worldtrajectoriesaresimilartothegraph-basedplans.Trajectories,starts,
andgoalsareapproximatelyscaledandhand-alignedontheoverheadimage.
Quantity Type
4 Low-level (EASL/MPPI) navi-
IV. RESULTSANDEXPERIMENTS gation failure
1 Incorrect observation function
We evaluated the system in real-world deployments in a output
structured outdoor environment; an overhead image of the TABLEII. SUMMARYOFFAILEDTRIALS.
environmentisshowninFig.1-a.Weevaluatedourapproach
onaheterogeneous,twoagentteamconsistingofaClearpath
Jackal and a Clearpath Husky. Both agents were equipped
withanIntelNUC11PHcomputer,aMicrostrain3DM-GX5- obstacle (e.g. car, bush), and an operator briefly teleoperated
AHRS IMU, and a u-blox M8U GPS module, which pro- the robot to enable the robot to continue to make progress
vided GPS-based agent position estimates during the trials. towards completing the primitive action. For this reason, we
Additionally,theJackalwasequippedwithanOusterOS1-32 do not report the total execution time or distance traveled
LIDARsensor,andtheHuskywasequippedwithaVelodyne for the agents. However, it is possible to compare the plan
VLP-16 LIDAR sensor. Both agents were equipped with a costs for the agents in the abstract graph; we report the
core autonomy pipeline, which included GPS-based state graph distance of each agent’s planned trajectory, as well
estimation and an Omnimapper-based [10], GPS-enabled as the durations of planned wait actions, in Table I. In the
local mapping pipeline. All multiagent planning occurred collaborative trial, the Jackal travels further to sense the
on a centralized base station laptop, and the base station edgefortheHusky,significantlyreducingthegraphdistance
and agents communicated using a ROS multimaster system traveled by the Husky. In the non-collaborative trials, the
over a Silvus radio network. Finally, it was assumed that the Jackalgraphdistancetraveledisverylow,butattheexpense
Jackal speed was 8x faster than the Husky speed. of a longer Husky trajectory. The results are consistent with
the understanding that optimizing a team makespan requires
We evaluated the qualitative planning performance of
a planner to trade off between the performances of the
the agents in various trials. In Fig. 6, we compare the
different agents.
graph-based macro-actions selected by the collaborative and
While we were able to demonstrate successful collabora-
baseline planners during two successful planning trials. In
tive multiagent planning, we also observed various failures
the baseline, non-collaborative planning trial, the Jackal
duringtesting.InTableII,wesummarizefailuretypeswhich
navigated directly to its goal, while the Husky attempted
resulted in trial termination and their frequencies.
to navigate to its goal via the unknown edge (red). After
the Husky arrived at the edge and sensed that it was un-
V. DISCUSSION
traversable, the Husky backtracked and navigated to its goal
via a long, traversable path. In the collaborative planning While abstract planning representations are often neces-
trial, the Jackal diverted from the shortest path to the goal sary for efficiently solving complex planning problems, like
to sense the traversability of the unknown edge (red) at the problems in large or uncertain environments, or problems
gold star and relay the information to the Husky, while the that involve teams of agents, significant challenges arise
Huskywaitedforinformationabouttheedge.Afterreceiving when executing abstract plans on real agents in real-world
the Jackal observation that the edge was not traversable, the environments. First, building a representative abstraction of
Husky navigated directly to its goal via the long, traversable a real-world environment that is efficient for high-level
path.InFig.7,weplotthetrajectoriestraversedbytheagents planning, but that produces plans that can be translated into
while executing the macro-action plans; trajectories, starts, real-world executions, is an open research question. We are
andgoalsareapproximatelyscaledandhand-alignedoverthe exploringmethodsforautomaticallygeneratingabstractnav-
overhead image. Note that in the baseline trial, the Husky igation graphs from polygonal environment models [14] and
became stuck navigating up a steep hill while attempting overheadimages.Whilethiswillreduceoperatorburden,itis
to execute the final two edges to the goal. Also, in some unlikely that the auto-generated graphs, like our hand-drawn
trials,MPPIbecamestuckwhiletryingtonavigatearoundan graphs,willbefullyrepresentativeofplanningenvironments
AcceptedtotheIEEEICRAWorkshoponFieldRobotics2024unless they have access to additional environment informa- [4] E. Nikolova and D. R. Karger, “Route planning under
tion, some of which may only be available during planning. uncertainty:Thecanadiantravellerproblem.,”inAAAI
We are exploring techniques to modify the navigation graph Conference on Artificial Intelligence, 2008, pp. 969–
abstraction online based on local sensor data. 974.
Thisworkalsodemonstratedthatrobusthierarchicalplan- [5] P. Eyerich, T. Keller, and M. Helmert, “High-quality
ning systems can overcome some of the challenges that policies for the canadian traveler’s problem,” in AAAI
arise from imperfect planning abstractions. Specifically, by Conference on Artificial Intelligence, vol. 24, 2010,
increasing the robustness of planners at different levels of pp. 51–58.
the planning hierarchy, we were able to overcome small [6] Z. Bnaya, A. Felner, D. Fried, O. Maksin, and S. E.
discrepancies in the planning abstraction (like having a Shimony, “Repeated-task canadian traveler problem,”
navigation waypoint in a bush next to a road, instead of AICommunications,vol.28,no.3,pp.453–477,2015.
on the road itself) without causing catastrophic planning [7] L. Murphy and P. Newman, “Risky planning on prob-
failures. In future work, we are interested in exploring other abilistic costmaps for path planning in outdoor envi-
ways to make our hierarchical planning system more robust, ronments,” IEEE Transactions on Robotics, vol. 29,
including reconsidering traditional definitions of plan failure no. 2, pp. 445–457, 2012.
at each level in the planning hierarchy. [8] D. Dey, A. Kolobov, R. Caruana, E. Kamar, E.
Finally, the proposed approach was developed for a cen- Horvitz, and A. Kapoor, “Gauss meets canadian trav-
tralized team with full communication. While our macro- eler: Shortest-path problems with correlated natu-
action message passing scheme was lightweight, and our ral dynamics,” in International Conference on Au-
interrupt planner was capable of handling minor communi- tonomous Agents and Multi-agent Systems, 2014,
cation delays, in future work, we would like to modify the pp. 1101–1108.
approach to explicitly handle more challenging communica- [9] J. J. Chung, A. J. Smith, R. Skeele, and G. A.
tion environments. Hollinger, “Risk-aware graph search with dynamic
edge cost discovery,” The International Journal of
VI. CONCLUSION
Robotics Research, vol. 38, no. 2-3, pp. 182–195,
As roboticists move towards deployments of bigger teams 2019.
in larger, more complex environments, it will be necessary [10] A. J. B. Trevor, J. G. Rogers, and H. I. Chris-
to develop abstract representations for complex planning tensen, “Omnimapper: A modular multimodal map-
problems that are still amenable to robust plan execution ping framework,” in IEEE International Conference
in real-world environments. In this work, we demonstrated on Robotics and Automation, 2014, pp. 1983–1990.
the ability of hierarchical planning systems to bridge the [11] B. Hedegaard, E. Fahnestock, J. Arkin, A. Menon,
gap between abstract planning and real-world execution. andT.M.Howard,“Discreteoptimizationofadaptive
We deployed a collaborative multiagent planner on a Jackal state lattices for iterative motion planning on un-
and Husky team using a hierarchical planning system, and manned ground vehicles,” in IEEE/RSJ International
demonstrated collaborative planning performance in a real- Conference on Intelligent Robots and Systems, 2021,
world structured outdoor environment. In future work, we pp. 5764–5771.
are interested in improving methods for offline and online [12] G. Williams, P. Drews, B. Goldfain, J. M. Rehg, and
abstract planning representation generation, exploring meth- E. A. Theodorou, “Aggressive driving with model
ods for generating hierarchical planners that are robust at predictive path integral control,” in IEEE Interna-
every planning level, and expanding our technique to more tional Conference on Robotics and Automation, 2016,
complex communication environments. pp. 1433–1440.
[13] P. Eyerich, T. Keller, and M. Helmert, “High-quality
REFERENCES
policies for the canadian traveler’s problem,” in AAAI
[1] M. Stadler, J. Banfi, and N. Roy, “Approximating the
Conference on Artificial Intelligence, 2010.
valueofcollaborativeteamactionsforefficientmultia-
[14] Y. Veys, M. S. Kurtz, and N. Roy, “Generating sparse
gent navigation in uncertain graphs,” in International
probabilistic graphs for efficient planning in uncertain
Conference on Automated Planning and Scheduling,
environments,” in IEEE International Conference on
vol. 33, 2023, pp. 677–685.
Robotics and Automation, 2024.
[2] C. H. Papadimitriou and M. Yannakakis, “Shortest
[15] Y. Tian, Y. Chang, F. Herrera Arias, C. Nieto-Granda,
paths without a map,” Theoretical Computer Science,
J.P.How,andL.Carlone,“Kimera-multi:Robust,dis-
vol. 84, no. 1, pp. 127–150, 1991.
tributed, dense metric-semantic slam for multi-robot
[3] Z. Bnaya, A. Felner, and S. E. Shimony, “Cana-
systems,” IEEE Transactions on Robotics, vol. 38,
dian traveler problem with remote sensing.,” in In-
no. 4, pp. 2022–2038, 2022.
ternationalJointConferenceonArtificialIntelligence,
[16] T. Guan, Z. He, R. Song, D. Manocha, and L. Zhang,
2009, pp. 437–442.
“Tns: Terrain traversability mapping and navigation
system for autonomous excavators,” in Robotics: Sci-
ence and Systems XVIII, 2022.
AcceptedtotheIEEEICRAWorkshoponFieldRobotics2024